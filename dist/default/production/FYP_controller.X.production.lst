

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Oct 13 22:18:53 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F85J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           ; Version 1.43
    63                           ; Generated 25/07/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F85J94 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataCOMRAM
    98  00195C                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for _tapOnTime
   102  00195C  0005               	dw	5
   103                           
   104                           ;initializer for _swX
   105  00195E  0001               	dw	1
   106                           
   107                           	psect	idataBANK0
   108  001828                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _presetParams
   112  001828  0000               	dw	0
   113  00182A  00FF               	dw	255
   114  00182C  007F               	dw	127
   115  00182E  007F               	dw	127
   116  001830  0000               	dw	0
   117  001832  0000               	dw	0
   118  001834  0000               	dw	0
   119  001836  0000               	dw	0
   120  001838  0000               	dw	0
   121  00183A  0000               	dw	0
   122  00183C  0000               	dw	0
   123  00183E  0000               	dw	0
   124                           
   125                           ;initializer for _presetAdd
   126  001840  0000               	dw	0
   127  001842  0010               	dw	16
   128  001844  0020               	dw	32
   129  001846  0030               	dw	48
   130  001848  0040               	dw	64
   131                           
   132                           ;initializer for _currentTapTime
   133  00184A  01F4               	dw	500
   134                           
   135                           ;initializer for _bypMode
   136  00184C  0001               	dw	1
   137                           
   138                           	psect	idataBANK1
   139  0018B8                     __pidataBANK1:
   140                           	opt stack 0
   141                           
   142                           ;initializer for _paramAddress
   143  0018B8  00A1               	dw	161
   144  0018BA  00A3               	dw	163
   145  0018BC  00A5               	dw	165
   146  0018BE  00A7               	dw	167
   147  0018C0  00A9               	dw	169
   148  0018C2  00AB               	dw	171
   149  0018C4  00AD               	dw	173
   150  0018C6  00AF               	dw	175
   151  0018C8  00B1               	dw	177
   152  0018CA  00B3               	dw	179
   153  0018CC  00B5               	dw	181
   154  0018CE  00B7               	dw	183
   155  0018D0  00BF               	dw	191
   156  0000                     _ADCBUF9	set	3672
   157  0000                     _ADCBUF8	set	3670
   158  0000                     _ADCBUF14	set	3682
   159  0000                     _ADCBUF6	set	3666
   160  0000                     _ADCBUF5	set	3664
   161  0000                     _ADCBUF4	set	3662
   162  0000                     _ADCBUF3	set	3660
   163  0000                     _ADCBUF2	set	3658
   164  0000                     _ADCBUF1	set	3656
   165  0000                     _MEMCONbits	set	3811
   166  0000                     _LCDSE7	set	3797
   167  0000                     _LCDSE6	set	3796
   168  0000                     _LCDSE5	set	3795
   169  0000                     _LCDSE4	set	3794
   170  0000                     _LCDSE3	set	3793
   171  0000                     _LCDSE2	set	3792
   172  0000                     _LCDSE1	set	3791
   173  0000                     _LCDSE0	set	3790
   174  0000                     _LCDCONbits	set	3801
   175  0000                     _RPINR22_23bits	set	3637
   176  0000                     _RPINR18_19bits	set	3635
   177  0000                     _RPINR24_25bits	set	3638
   178  0000                     _RPINR20_21bits	set	3636
   179  0000                     _ANCON3bits	set	3653
   180  0000                     _ANCON2bits	set	3654
   181  0000                     _ANCON1bits	set	3655
   182  0000                     _ADCHS0Lbits	set	3718
   183  0000                     _ADCON5Hbits	set	3721
   184  0000                     _ADCON3Lbits	set	3722
   185  0000                     _ADCON3Hbits	set	3723
   186  0000                     _ADCON2Hbits	set	3725
   187  0000                     _IOCPbits	set	3926
   188  0000                     _IOCNbits	set	3925
   189  0000                     _PADCFG1bits	set	3924
   190  0000                     _T5CONbits	set	3860
   191  0000                     _CM3CONbits	set	3895
   192  0000                     _CM2CONbits	set	3896
   193  0000                     _CM1CONbits	set	3923
   194  0000                     _SSP2BUF	set	3843
   195  0000                     _SSP2CON3bits	set	3897
   196  0000                     _SSP2CON2bits	set	3864
   197  0000                     _SSP2MSK	set	3863
   198  0000                     _SSP2ADD	set	3842
   199  0000                     _SSP2CON1bits	set	3865
   200  0000                     _CCPR4H	set	3858
   201  0000                     _CCPTMRS1bits	set	3893
   202  0000                     _CCP4CONbits	set	3856
   203  0000                     _CCPR4L	set	3857
   204  0000                     _T4CONbits	set	3844
   205  0000                     _ADCBUF0	set	4034
   206  0000                     _SSP1STATbits	set	4039
   207  0000                     _PIR1bits	set	3998
   208  0000                     _SSP1CON2bits	set	4037
   209  0000                     _IOCFbits	set	4049
   210  0000                     _PIE5bits	set	4023
   211  0000                     _PIE2bits	set	4000
   212  0000                     _PIE1bits	set	3997
   213  0000                     _INTCONbits	set	4082
   214  0000                     _TRISBbits	set	3987
   215  0000                     _TRISJbits	set	3994
   216  0000                     _TRISEbits	set	3990
   217  0000                     _T3CONbits	set	4017
   218  0000                     _UCONbits	set	3957
   219  0000                     _OSCCON	set	4051
   220  0000                     _TRISGbits	set	3992
   221  0000                     _TRISHbits	set	3993
   222  0000                     _TRISFbits	set	3991
   223  0000                     _TRISAbits	set	3986
   224  0000                     _ADCON1Lbits	set	4032
   225  0000                     _ADCON1Hbits	set	4033
   226  0000                     _TRISDbits	set	3989
   227  0000                     _SSP1BUF	set	4041
   228  0000                     _SSP1ADD	set	4040
   229  0000                     _SSP1CON1bits	set	4038
   230  0000                     _T2CON	set	4042
   231  0000                     _TRISCbits	set	3988
   232  0000                     _PR2	set	4043
   233  0000                     _OSCCONbits	set	4051
   234  0000                     _OSCCON2bits	set	3942
   235  0000                     _OSCCON3bits	set	3941
   236  0000                     _OSCCON4bits	set	3940
   237  0000                     _T1CONbits	set	4045
   238  0000                     _T0CONbits	set	4053
   239  0000                     _T2CONbits	set	4042
   240  0000                     _PIR2bits	set	4001
   241  0000                     _RD7	set	31775
   242  0000                     _RJ0	set	31808
   243  0000                     _RJ1	set	31809
   244  0000                     _RH4	set	31804
   245  0000                     _RH5	set	31805
   246  0000                     _RF3	set	31787
   247  0000                     _RC6	set	31766
   248  0000                     _RC0	set	31760
   249  0000                     _RC1	set	31761
   250  0000                     _RJ5	set	31813
   251  0000                     _RJ4	set	31812
   252  0000                     _RC7	set	31767
   253  0000                     _RG3	set	31795
   254  0000                     _RD1	set	31769
   255  0000                     _RE6	set	31782
   256  0000                     _RG2	set	31794
   257  0000                     _RG1	set	31793
   258  0000                     _RE3	set	31779
   259  0000                     _RD4	set	31772
   260  0000                     _IOCF7	set	32399
   261  0000                     _IOCF6	set	32398
   262  0000                     _IOCF5	set	32397
   263  0000                     _IOCF4	set	32396
   264  0000                     _IOCF3	set	32395
   265  0000                     _IOCF2	set	32394
   266  0000                     _IOCF1	set	32393
   267  0000                     _LATE0	set	31848
   268  0000                     _LATD2	set	31842
   269  0000                     _LATH1	set	31873
   270  0000                     _LATE1	set	31849
   271  0000                     _LATH2	set	31874
   272  0000                     _LATE4	set	31852
   273  0000                     _LATE5	set	31853
   274  0000                     _LATE7	set	31855
   275  0000                     _LATD0	set	31840
   276  0000                     _LATH0	set	31872
   277  0000                     _LATG4	set	31868
   278  0000                     _LATF6	set	31862
   279  0000                     _LATF5	set	31861
   280  0000                     _LATF2	set	31858
   281  0000                     _LATH7	set	31879
   282  0000                     _LATD3	set	31843
   283  0000                     _LATB5	set	31829
   284  0000                     _TMR2ON	set	32338
   285  0000                     _TMR0IF	set	32658
   286  0000                     _TMR2IF	set	31985
   287  0000                     _TMR4IF	set	32192
   288  0000                     _SSP2IF	set	32014
   289                           
   290                           ; #config settings
   291  0000                     
   292                           	psect	cinit
   293  001368                     __pcinit:
   294                           	opt stack 0
   295  001368                     start_initialization:
   296                           	opt stack 0
   297  001368                     __initialization:
   298                           	opt stack 0
   299                           
   300                           ; Initialize objects allocated to BANK1 (26 bytes)
   301                           ; load TBLPTR registers with __pidataBANK1
   302  001368  0EB8               	movlw	low __pidataBANK1
   303  00136A  6EF6               	movwf	tblptrl,c
   304  00136C  0E18               	movlw	high __pidataBANK1
   305  00136E  6EF7               	movwf	tblptrh,c
   306  001370  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   307  001372  6EF8               	movwf	tblptru,c
   308  001374  EE01  F094         	lfsr	0,__pdataBANK1
   309  001378  EE10 F01A          	lfsr	1,26
   310  00137C                     copy_data0:
   311  00137C  0009               	tblrd		*+
   312  00137E  CFF5 FFEE          	movff	tablat,postinc0
   313  001382  50E5               	movf	postdec1,w,c
   314  001384  50E1               	movf	fsr1l,w,c
   315  001386  E1FA               	bnz	copy_data0
   316                           
   317                           ; Initialize objects allocated to BANK0 (38 bytes)
   318                           ; load TBLPTR registers with __pidataBANK0
   319  001388  0E28               	movlw	low __pidataBANK0
   320  00138A  6EF6               	movwf	tblptrl,c
   321  00138C  0E18               	movlw	high __pidataBANK0
   322  00138E  6EF7               	movwf	tblptrh,c
   323  001390  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   324  001392  6EF8               	movwf	tblptru,c
   325  001394  EE00  F0BE         	lfsr	0,__pdataBANK0
   326  001398  EE10 F026          	lfsr	1,38
   327  00139C                     copy_data1:
   328  00139C  0009               	tblrd		*+
   329  00139E  CFF5 FFEE          	movff	tablat,postinc0
   330  0013A2  50E5               	movf	postdec1,w,c
   331  0013A4  50E1               	movf	fsr1l,w,c
   332  0013A6  E1FA               	bnz	copy_data1
   333                           
   334                           ; Initialize objects allocated to COMRAM (4 bytes)
   335                           ; load TBLPTR registers with __pidataCOMRAM
   336  0013A8  0E5C               	movlw	low __pidataCOMRAM
   337  0013AA  6EF6               	movwf	tblptrl,c
   338  0013AC  0E19               	movlw	high __pidataCOMRAM
   339  0013AE  6EF7               	movwf	tblptrh,c
   340  0013B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   341  0013B2  6EF8               	movwf	tblptru,c
   342  0013B4  EE00  F043         	lfsr	0,__pdataCOMRAM
   343  0013B8  EE10 F004          	lfsr	1,4
   344  0013BC                     copy_data2:
   345  0013BC  0009               	tblrd		*+
   346  0013BE  CFF5 FFEE          	movff	tablat,postinc0
   347  0013C2  50E5               	movf	postdec1,w,c
   348  0013C4  50E1               	movf	fsr1l,w,c
   349  0013C6  E1FA               	bnz	copy_data2
   350                           
   351                           ; Clear objects allocated to BANK1 (120 bytes)
   352  0013C8  EE01  F000         	lfsr	0,__pbssBANK1
   353  0013CC  0E78               	movlw	120
   354  0013CE                     clear_0:
   355  0013CE  6AEE               	clrf	postinc0,c
   356  0013D0  06E8               	decf	wreg,f,c
   357  0013D2  E1FD               	bnz	clear_0
   358                           
   359                           ; Clear objects allocated to BANK0 (94 bytes)
   360  0013D4  EE00  F060         	lfsr	0,__pbssBANK0
   361  0013D8  0E5E               	movlw	94
   362  0013DA                     clear_1:
   363  0013DA  6AEE               	clrf	postinc0,c
   364  0013DC  06E8               	decf	wreg,f,c
   365  0013DE  E1FD               	bnz	clear_1
   366                           
   367                           ; Clear objects allocated to COMRAM (34 bytes)
   368  0013E0  EE00  F001         	lfsr	0,__pbssCOMRAM
   369  0013E4  0E22               	movlw	34
   370  0013E6                     clear_2:
   371  0013E6  6AEE               	clrf	postinc0,c
   372  0013E8  06E8               	decf	wreg,f,c
   373  0013EA  E1FD               	bnz	clear_2
   374  0013EC                     end_of_initialization:
   375                           	opt stack 0
   376  0013EC                     __end_of__initialization:
   377                           	opt stack 0
   378  0013EC  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  0013EE  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  0013F0  0100               	movlb	0
   381  0013F2  EF3A  F004         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bssCOMRAM
   392  000001                     __pbssCOMRAM:
   393                           	opt stack 0
   394  000001                     _tapPrev:
   395                           	opt stack 0
   396  000001                     	ds	2
   397  000003                     _tapTimeCount:
   398                           	opt stack 0
   399  000003                     	ds	2
   400  000005                     _timeC:
   401                           	opt stack 0
   402  000005                     	ds	2
   403  000007                     _timeB:
   404                           	opt stack 0
   405  000007                     	ds	2
   406  000009                     _timeA:
   407                           	opt stack 0
   408  000009                     	ds	2
   409  00000B                     _armC:
   410                           	opt stack 0
   411  00000B                     	ds	2
   412  00000D                     _armB:
   413                           	opt stack 0
   414  00000D                     	ds	2
   415  00000F                     _armA:
   416                           	opt stack 0
   417  00000F                     	ds	2
   418  000011                     _shift:
   419                           	opt stack 0
   420  000011                     	ds	2
   421  000013                     _tapDispCount:
   422                           	opt stack 0
   423  000013                     	ds	2
   424  000015                     _presetPend:
   425                           	opt stack 0
   426  000015                     	ds	2
   427  000017                     _targPreset:
   428                           	opt stack 0
   429  000017                     	ds	2
   430  000019                     _preset:
   431                           	opt stack 0
   432  000019                     	ds	2
   433  00001B                     _bypass:
   434                           	opt stack 0
   435  00001B                     	ds	2
   436  00001D                     _intC:
   437                           	opt stack 0
   438  00001D                     	ds	2
   439  00001F                     _intB:
   440                           	opt stack 0
   441  00001F                     	ds	2
   442  000021                     _intA:
   443                           	opt stack 0
   444  000021                     	ds	2
   445                           tblptru	equ	0xFF8
   446                           tblptrh	equ	0xFF7
   447                           tblptrl	equ	0xFF6
   448                           tablat	equ	0xFF5
   449                           postinc0	equ	0xFEE
   450                           wreg	equ	0xFE8
   451                           postdec1	equ	0xFE5
   452                           fsr1l	equ	0xFE1
   453                           
   454                           	psect	dataCOMRAM
   455  000043                     __pdataCOMRAM:
   456                           	opt stack 0
   457  000043                     _tapOnTime:
   458                           	opt stack 0
   459  000043                     	ds	2
   460  000045                     _swX:
   461                           	opt stack 0
   462  000045                     	ds	2
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	bssBANK0
   473  000060                     __pbssBANK0:
   474                           	opt stack 0
   475  000060                     _tapAccum:
   476                           	opt stack 0
   477  000060                     	ds	4
   478  000064                     _sync:
   479                           	opt stack 0
   480  000064                     	ds	2
   481  000066                     _setupComplete:
   482                           	opt stack 0
   483  000066                     	ds	2
   484  000068                     _timeoutCount:
   485                           	opt stack 0
   486  000068                     	ds	2
   487  00006A                     _newTempo:
   488                           	opt stack 0
   489  00006A                     	ds	2
   490  00006C                     _tapTime:
   491                           	opt stack 0
   492  00006C                     	ds	2
   493  00006E                     _tap:
   494                           	opt stack 0
   495  00006E                     	ds	2
   496  000070                     _lvlC:
   497                           	opt stack 0
   498  000070                     	ds	2
   499  000072                     _fbkC:
   500                           	opt stack 0
   501  000072                     	ds	2
   502  000074                     _lvlB:
   503                           	opt stack 0
   504  000074                     	ds	2
   505  000076                     _fbkB:
   506                           	opt stack 0
   507  000076                     	ds	2
   508  000078                     _lvlA:
   509                           	opt stack 0
   510  000078                     	ds	2
   511  00007A                     _fbkA:
   512                           	opt stack 0
   513  00007A                     	ds	2
   514  00007C                     _dataPtr:
   515                           	opt stack 0
   516  00007C                     	ds	2
   517  00007E                     _dataTarget:
   518                           	opt stack 0
   519  00007E                     	ds	2
   520  000080                     _linesArmed:
   521                           	opt stack 0
   522  000080                     	ds	2
   523  000082                     _armFlashToggle:
   524                           	opt stack 0
   525  000082                     	ds	2
   526  000084                     _armFlash:
   527                           	opt stack 0
   528  000084                     	ds	2
   529  000086                     _armFlashCount:
   530                           	opt stack 0
   531  000086                     	ds	2
   532  000088                     _tapFlash:
   533                           	opt stack 0
   534  000088                     	ds	2
   535  00008A                     _pFlash:
   536                           	opt stack 0
   537  00008A                     	ds	2
   538  00008C                     _pFlashCount:
   539                           	opt stack 0
   540  00008C                     	ds	2
   541  00008E                     _slotUsed:
   542                           	opt stack 0
   543  00008E                     	ds	2
   544  000090                     _savePend:
   545                           	opt stack 0
   546  000090                     	ds	2
   547  000092                     _muxADC:
   548                           	opt stack 0
   549  000092                     	ds	2
   550  000094                     _bounceCount:
   551                           	opt stack 0
   552  000094                     	ds	2
   553  000096                     _fsw2:
   554                           	opt stack 0
   555  000096                     	ds	2
   556  000098                     _fsw1:
   557                           	opt stack 0
   558  000098                     	ds	2
   559  00009A                     _switch5:
   560                           	opt stack 0
   561  00009A                     	ds	2
   562  00009C                     _switch4:
   563                           	opt stack 0
   564  00009C                     	ds	2
   565  00009E                     _switch3:
   566                           	opt stack 0
   567  00009E                     	ds	2
   568  0000A0                     _switch2:
   569                           	opt stack 0
   570  0000A0                     	ds	2
   571  0000A2                     _switch1:
   572                           	opt stack 0
   573  0000A2                     	ds	2
   574  0000A4                     _shiftAction:
   575                           	opt stack 0
   576  0000A4                     	ds	2
   577  0000A6                     _parameter:
   578                           	opt stack 0
   579  0000A6                     	ds	24
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           postinc0	equ	0xFEE
   585                           wreg	equ	0xFE8
   586                           postdec1	equ	0xFE5
   587                           fsr1l	equ	0xFE1
   588                           
   589                           	psect	dataBANK0
   590  0000BE                     __pdataBANK0:
   591                           	opt stack 0
   592  0000BE                     _presetParams:
   593                           	opt stack 0
   594  0000BE                     	ds	24
   595  0000D6                     _presetAdd:
   596                           	opt stack 0
   597  0000D6                     	ds	10
   598  0000E0                     _currentTapTime:
   599                           	opt stack 0
   600  0000E0                     	ds	2
   601  0000E2                     _bypMode:
   602                           	opt stack 0
   603  0000E2                     	ds	2
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           postdec1	equ	0xFE5
   611                           fsr1l	equ	0xFE1
   612                           
   613                           	psect	bssBANK1
   614  000100                     __pbssBANK1:
   615                           	opt stack 0
   616  000100                     _userParams:
   617                           	opt stack 0
   618  000100                     	ds	120
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           
   628                           	psect	dataBANK1
   629  000194                     __pdataBANK1:
   630                           	opt stack 0
   631  000194                     _paramAddress:
   632                           	opt stack 0
   633  000194                     	ds	26
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           postdec1	equ	0xFE5
   641                           fsr1l	equ	0xFE1
   642                           
   643                           	psect	cstackBANK1
   644  000178                     __pcstackBANK1:
   645                           	opt stack 0
   646  000178                     fetchPreset@values:
   647                           	opt stack 0
   648                           
   649                           ; 24 bytes @ 0x0
   650  000178                     	ds	24
   651  000190                     fetchPreset@test:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000190                     	ds	2
   656  000192                     fetchPreset@i:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x1A
   660  000192                     	ds	2
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670                           	psect	cstackBANK0
   671  0000E4                     __pcstackBANK0:
   672                           	opt stack 0
   673  0000E4                     ??_startupSequence:
   674  0000E4                     ?_ADC_Read:
   675                           	opt stack 0
   676  0000E4                     ?_absVal:
   677                           	opt stack 0
   678  0000E4                     ?___wmul:
   679                           	opt stack 0
   680  0000E4                     I2C1_Write_DigiPot@value:
   681                           	opt stack 0
   682  0000E4                     absVal@val:
   683                           	opt stack 0
   684  0000E4                     ADC_Read@channel:
   685                           	opt stack 0
   686  0000E4                     I2C1_Page_Write_EEPROM@slot:
   687                           	opt stack 0
   688  0000E4                     I2C1_Block_Read_EERPOM@slot:
   689                           	opt stack 0
   690  0000E4                     ___wmul@multiplier:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x0
   694  0000E4                     	ds	1
   695  0000E5                     I2C1_Write_DigiPot@wrCommand:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x1
   699  0000E5                     	ds	1
   700  0000E6                     ??_absVal:
   701  0000E6                     ADC_Read@value:
   702                           	opt stack 0
   703  0000E6                     I2C1_Page_Write_EEPROM@data:
   704                           	opt stack 0
   705  0000E6                     I2C1_Block_Read_EERPOM@data:
   706                           	opt stack 0
   707  0000E6                     ___wmul@multiplicand:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  0000E6                     	ds	2
   712  0000E8                     ??_readControls:
   713  0000E8                     I2C1_Page_Write_EEPROM@bytes:
   714                           	opt stack 0
   715  0000E8                     I2C1_Block_Read_EERPOM@bytes:
   716                           	opt stack 0
   717  0000E8                     ___wmul@product:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x4
   721  0000E8                     	ds	2
   722  0000EA                     ??_I2C1_Block_Read_EERPOM:
   723  0000EA                     ??_I2C1_Page_Write_EEPROM:
   724  0000EA                     updatePreset@slot:
   725                           	opt stack 0
   726  0000EA                     updateParams@slot:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x6
   730  0000EA                     	ds	1
   731  0000EB                     I2C1_Page_Write_EEPROM@wrDevAddr:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x7
   735  0000EB                     	ds	1
   736  0000EC                     ??_updateParams:
   737  0000EC                     I2C1_Page_Write_EEPROM@memValue:
   738                           	opt stack 0
   739  0000EC                     I2C1_Block_Read_EERPOM@rdAddr:
   740                           	opt stack 0
   741  0000EC                     updatePreset@values:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x8
   745  0000EC                     	ds	1
   746  0000ED                     I2C1_Block_Read_EERPOM@memValue:
   747                           	opt stack 0
   748  0000ED                     I2C1_Page_Write_EEPROM@n:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x9
   752  0000ED                     	ds	1
   753  0000EE                     ??_updatePreset:
   754  0000EE                     I2C1_Block_Read_EERPOM@dummyWrite:
   755                           	opt stack 0
   756  0000EE                     updateParams@i:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0xA
   760  0000EE                     	ds	1
   761  0000EF                     I2C1_Block_Read_EERPOM@n:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0xB
   765  0000EF                     	ds	1
   766  0000F0                     updatePreset@i:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0xC
   770  0000F0                     	ds	2
   771  0000F2                     ??_main:
   772                           
   773                           ; 1 bytes @ 0xE
   774  0000F2                     	ds	3
   775  0000F5                     main@prevDry:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x11
   779  0000F5                     	ds	2
   780  0000F7                     main@diff:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x13
   784  0000F7                     	ds	2
   785  0000F9                     main@dryLevel:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x15
   789  0000F9                     	ds	2
   790                           tblptru	equ	0xFF8
   791                           tblptrh	equ	0xFF7
   792                           tblptrl	equ	0xFF6
   793                           tablat	equ	0xFF5
   794                           postinc0	equ	0xFEE
   795                           wreg	equ	0xFE8
   796                           postdec1	equ	0xFE5
   797                           fsr1l	equ	0xFE1
   798                           
   799                           	psect	cstackCOMRAM
   800  000023                     __pcstackCOMRAM:
   801                           	opt stack 0
   802  000023                     ??_tapLED:
   803  000023                     ?___awdiv:
   804                           	opt stack 0
   805  000023                     ?i2_absVal:
   806                           	opt stack 0
   807  000023                     ?i2___wmul:
   808                           	opt stack 0
   809  000023                     checkSwitches@flag:
   810                           	opt stack 0
   811  000023                     updatePresetLEDs@psNum:
   812                           	opt stack 0
   813  000023                     ___awdiv@dividend:
   814                           	opt stack 0
   815  000023                     i2absVal@val:
   816                           	opt stack 0
   817  000023                     i2___wmul@multiplier:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x0
   821  000023                     	ds	2
   822  000025                     ??i2_absVal:
   823  000025                     sendParam@n:
   824                           	opt stack 0
   825  000025                     ___awdiv@divisor:
   826                           	opt stack 0
   827  000025                     i2___wmul@multiplicand:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x2
   831  000025                     	ds	2
   832  000027                     ___awdiv@counter:
   833                           	opt stack 0
   834  000027                     i2___wmul@product:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x4
   838  000027                     	ds	1
   839  000028                     ___awdiv@sign:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x5
   843  000028                     	ds	1
   844  000029                     updateLineLEDs@lineA:
   845                           	opt stack 0
   846  000029                     ___awdiv@quotient:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x6
   850  000029                     	ds	2
   851  00002B                     ??_processTaps:
   852  00002B                     updateLineLEDs@lineB:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x8
   856  00002B                     	ds	2
   857  00002D                     processTaps@tapDiff:
   858                           	opt stack 0
   859  00002D                     updateLineLEDs@lineC:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0xA
   863  00002D                     	ds	2
   864  00002F                     ??_flashLED:
   865  00002F                     
   866                           ; 1 bytes @ 0xC
   867  00002F                     	ds	2
   868  000031                     ??_highPriorityISR:
   869                           
   870                           ; 1 bytes @ 0xE
   871  000031                     	ds	18
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           postdec1	equ	0xFE5
   879                           fsr1l	equ	0xFE1
   880                           
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 251 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  dryLevel        2   21[BANK0 ] int 
   891 ;;  diff            2   19[BANK0 ] int 
   892 ;;  prevDry         2   17[BANK0 ] int 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   905 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   906 ;;Total ram usage:        9 bytes
   907 ;; Hardware stack levels required when called:    7
   908 ;; This function calls:
   909 ;;		_ADC_Read
   910 ;;		_I2C1_Page_Write_EEPROM
   911 ;;		_I2C1_Write_DigiPot
   912 ;;		_absVal
   913 ;;		_fetchPreset
   914 ;;		_readControls
   915 ;;		_systemInit
   916 ;;		_updateParams
   917 ;;		_updatePreset
   918 ;; This function is called by:
   919 ;;		Startup code after reset
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text0
   924  000874                     __ptext0:
   925                           	opt stack 0
   926  000874                     _main:
   927                           	opt stack 24
   928                           
   929                           ;main.c: 254: int dryLevel = 0;
   930                           
   931                           ;incstack = 0
   932  000874  0E00               	movlw	0
   933  000876  0100               	movlb	0	; () banked
   934  000878  6FFA               	movwf	(main@dryLevel+1)& (0+255),b
   935  00087A  0E00               	movlw	0
   936  00087C  6FF9               	movwf	main@dryLevel& (0+255),b
   937                           
   938                           ;main.c: 255: int prevDry = 0;
   939  00087E  0E00               	movlw	0
   940  000880  0100               	movlb	0	; () banked
   941  000882  6FF6               	movwf	(main@prevDry+1)& (0+255),b
   942  000884  0E00               	movlw	0
   943  000886  6FF5               	movwf	main@prevDry& (0+255),b
   944                           
   945                           ;main.c: 256: int diff = 0;
   946  000888  0E00               	movlw	0
   947  00088A  0100               	movlb	0	; () banked
   948  00088C  6FF8               	movwf	(main@diff+1)& (0+255),b
   949  00088E  0E00               	movlw	0
   950  000890  6FF7               	movwf	main@diff& (0+255),b
   951                           
   952                           ; BSR set to: 0
   953                           ;main.c: 258: systemInit();
   954  000892  EC51  F00B         	call	_systemInit	;wreg free
   955                           
   956                           ;main.c: 260: fetchPreset();
   957  000896  ECFB  F009         	call	_fetchPreset	;wreg free
   958                           
   959                           ;main.c: 262: T4CONbits.TMR4ON = 1;
   960  00089A  010F               	movlb	15	; () banked
   961  00089C  8504               	bsf	4,2,b	;volatile
   962                           
   963                           ; BSR set to: 15
   964                           ;main.c: 264: I2C1_Write_DigiPot(0);
   965  00089E  0E00               	movlw	0
   966  0008A0  EC96  F00B         	call	_I2C1_Write_DigiPot
   967  0008A4                     
   968                           ;main.c: 267: {
   969                           ;main.c: 268: if (savePend)
   970  0008A4  0100               	movlb	0	; () banked
   971  0008A6  5190               	movf	_savePend& (0+255),w,b
   972  0008A8  0100               	movlb	0	; () banked
   973  0008AA  1191               	iorwf	(_savePend+1)& (0+255),w,b
   974  0008AC  B4D8               	btfsc	status,2,c
   975  0008AE  D026               	goto	l194
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 269: {
   979                           ;main.c: 270: I2C1_Page_Write_EEPROM((preset-1), parameter, 12);
   980  0008B0  0EFF               	movlw	255
   981  0008B2  2419               	addwf	_preset,w,c
   982  0008B4  0100               	movlb	0	; () banked
   983  0008B6  6FE4               	movwf	I2C1_Page_Write_EEPROM@slot& (0+255),b
   984  0008B8  0EFF               	movlw	255
   985  0008BA  201A               	addwfc	_preset+1,w,c
   986  0008BC  0100               	movlb	0	; () banked
   987  0008BE  6FE5               	movwf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),b
   988  0008C0  0EA6               	movlw	low _parameter
   989  0008C2  0100               	movlb	0	; () banked
   990  0008C4  6FE6               	movwf	I2C1_Page_Write_EEPROM@data& (0+255),b
   991  0008C6  0E00               	movlw	high _parameter
   992  0008C8  0100               	movlb	0	; () banked
   993  0008CA  6FE7               	movwf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),b
   994  0008CC  0E00               	movlw	0
   995  0008CE  0100               	movlb	0	; () banked
   996  0008D0  6FE9               	movwf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),b
   997  0008D2  0E0C               	movlw	12
   998  0008D4  6FE8               	movwf	I2C1_Page_Write_EEPROM@bytes& (0+255),b
   999  0008D6  EC48  F007         	call	_I2C1_Page_Write_EEPROM	;wreg free
  1000                           
  1001                           ;main.c: 271: updatePreset(preset, parameter);
  1002  0008DA  C019  F0EA         	movff	_preset,updatePreset@slot
  1003  0008DE  C01A  F0EB         	movff	_preset+1,updatePreset@slot+1
  1004  0008E2  0EA6               	movlw	low _parameter
  1005  0008E4  0100               	movlb	0	; () banked
  1006  0008E6  6FEC               	movwf	updatePreset@values& (0+255),b
  1007  0008E8  0E00               	movlw	high _parameter
  1008  0008EA  0100               	movlb	0	; () banked
  1009  0008EC  6FED               	movwf	(updatePreset@values+1)& (0+255),b
  1010  0008EE  EC43  F008         	call	_updatePreset	;wreg free
  1011                           
  1012                           ;main.c: 272: savePend = 0;
  1013  0008F2  0E00               	movlw	0
  1014  0008F4  0100               	movlb	0	; () banked
  1015  0008F6  6F91               	movwf	(_savePend+1)& (0+255),b
  1016  0008F8  0E00               	movlw	0
  1017  0008FA  6F90               	movwf	_savePend& (0+255),b
  1018  0008FC                     l194:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 273: }
  1022                           ;main.c: 275: if (preset > 0)
  1023                           
  1024                           ; BSR set to: 0
  1025  0008FC  BE1A               	btfsc	_preset+1,7,c
  1026  0008FE  D00C               	goto	l195
  1027  000900  501A               	movf	_preset+1,w,c
  1028  000902  E103               	bnz	u4480
  1029  000904  0419               	decf	_preset,w,c
  1030  000906  A0D8               	btfss	status,0,c
  1031  000908  D007               	goto	l195
  1032  00090A                     u4480:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;main.c: 276: {
  1036                           ;main.c: 277: updateParams(preset);
  1037  00090A  C019  F0EA         	movff	_preset,updateParams@slot
  1038  00090E  C01A  F0EB         	movff	_preset+1,updateParams@slot+1
  1039  000912  ECDA  F008         	call	_updateParams	;wreg free
  1040                           
  1041                           ;main.c: 278: }
  1042  000916  D051               	goto	l197
  1043  000918                     l195:
  1044                           
  1045                           ;main.c: 279: else
  1046                           ;main.c: 280: {
  1047                           ;main.c: 281: readControls();
  1048  000918  EC40  F003         	call	_readControls	;wreg free
  1049                           
  1050                           ;main.c: 282: dryLevel = ADC_Read(8);
  1051  00091C  0E00               	movlw	0
  1052  00091E  0100               	movlb	0	; () banked
  1053  000920  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  1054  000922  0E08               	movlw	8
  1055  000924  6FE4               	movwf	ADC_Read@channel& (0+255),b
  1056  000926  EC2B  F006         	call	_ADC_Read	;wreg free
  1057  00092A  C0E4  F0F9         	movff	?_ADC_Read,main@dryLevel
  1058  00092E  C0E5  F0FA         	movff	?_ADC_Read+1,main@dryLevel+1
  1059                           
  1060                           ;main.c: 283: dryLevel = dryLevel>>5;
  1061  000932  C0F9  F0F2         	movff	main@dryLevel,??_main
  1062  000936  C0FA  F0F3         	movff	main@dryLevel+1,??_main+1
  1063  00093A  0E05               	movlw	5
  1064  00093C  0100               	movlb	0	; () banked
  1065  00093E  6FF4               	movwf	(??_main+2)& (0+255),b
  1066  000940                     u4495:
  1067  000940  0100               	movlb	0	; () banked
  1068  000942  35F3               	rlcf	(??_main+1)& (0+255),w,b
  1069  000944  33F3               	rrcf	(??_main+1)& (0+255),f,b
  1070  000946  33F2               	rrcf	??_main& (0+255),f,b
  1071  000948  0100               	movlb	0	; () banked
  1072  00094A  2FF4               	decfsz	(??_main+2)& (0+255),f,b
  1073  00094C  D7F9               	goto	u4495
  1074  00094E  C0F2  F0F9         	movff	??_main,main@dryLevel
  1075  000952  C0F3  F0FA         	movff	??_main+1,main@dryLevel+1
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 284: diff = dryLevel - prevDry;
  1079  000956  C0F5  F0F2         	movff	main@prevDry,??_main
  1080  00095A  C0F6  F0F3         	movff	main@prevDry+1,??_main+1
  1081  00095E  0100               	movlb	0	; () banked
  1082  000960  1FF2               	comf	??_main& (0+255),f,b
  1083  000962  1FF3               	comf	(??_main+1)& (0+255),f,b
  1084  000964  4BF2               	infsnz	??_main& (0+255),f,b
  1085  000966  2BF3               	incf	(??_main+1)& (0+255),f,b
  1086  000968  0100               	movlb	0	; () banked
  1087  00096A  51F9               	movf	main@dryLevel& (0+255),w,b
  1088  00096C  0100               	movlb	0	; () banked
  1089  00096E  25F2               	addwf	??_main& (0+255),w,b
  1090  000970  0100               	movlb	0	; () banked
  1091  000972  6FF7               	movwf	main@diff& (0+255),b
  1092  000974  0100               	movlb	0	; () banked
  1093  000976  51FA               	movf	(main@dryLevel+1)& (0+255),w,b
  1094  000978  0100               	movlb	0	; () banked
  1095  00097A  21F3               	addwfc	(??_main+1)& (0+255),w,b
  1096  00097C  0100               	movlb	0	; () banked
  1097  00097E  6FF8               	movwf	(main@diff+1)& (0+255),b
  1098                           
  1099                           ;main.c: 285: diff = absVal(diff);
  1100  000980  C0F7  F0E4         	movff	main@diff,absVal@val
  1101  000984  C0F8  F0E5         	movff	main@diff+1,absVal@val+1
  1102  000988  ECEA  F00B         	call	_absVal	;wreg free
  1103  00098C  C0E4  F0F7         	movff	?_absVal,main@diff
  1104  000990  C0E5  F0F8         	movff	?_absVal+1,main@diff+1
  1105                           
  1106                           ;main.c: 287: if (diff >= 2)
  1107  000994  0100               	movlb	0	; () banked
  1108  000996  BFF8               	btfsc	(main@diff+1)& (0+255),7,b
  1109  000998  D010               	goto	l197
  1110  00099A  0100               	movlb	0	; () banked
  1111  00099C  51F8               	movf	(main@diff+1)& (0+255),w,b
  1112  00099E  E105               	bnz	u4500
  1113  0009A0  0E02               	movlw	2
  1114  0009A2  0100               	movlb	0	; () banked
  1115  0009A4  5DF7               	subwf	main@diff& (0+255),w,b
  1116  0009A6  A0D8               	btfss	status,0,c
  1117  0009A8  D008               	goto	l197
  1118  0009AA                     u4500:
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 288: {
  1122                           ;main.c: 289: I2C1_Write_DigiPot(dryLevel);
  1123  0009AA  0100               	movlb	0	; () banked
  1124  0009AC  51F9               	movf	main@dryLevel& (0+255),w,b
  1125  0009AE  EC96  F00B         	call	_I2C1_Write_DigiPot
  1126                           
  1127                           ;main.c: 290: prevDry = dryLevel;
  1128  0009B2  C0F9  F0F5         	movff	main@dryLevel,main@prevDry
  1129  0009B6  C0FA  F0F6         	movff	main@dryLevel+1,main@prevDry+1
  1130  0009BA                     l197:
  1131                           
  1132                           ;main.c: 291: }
  1133                           ;main.c: 292: }
  1134                           ;main.c: 295: if (!setupComplete)
  1135  0009BA  0100               	movlb	0	; () banked
  1136  0009BC  5166               	movf	_setupComplete& (0+255),w,b
  1137  0009BE  0100               	movlb	0	; () banked
  1138  0009C0  1167               	iorwf	(_setupComplete+1)& (0+255),w,b
  1139  0009C2  A4D8               	btfss	status,2,c
  1140  0009C4  D76F               	goto	l193
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 296: {
  1144                           ;main.c: 297: setupComplete = 1;
  1145  0009C6  0E00               	movlw	0
  1146  0009C8  0100               	movlb	0	; () banked
  1147  0009CA  6F67               	movwf	(_setupComplete+1)& (0+255),b
  1148  0009CC  0E01               	movlw	1
  1149  0009CE  6F66               	movwf	_setupComplete& (0+255),b
  1150                           
  1151                           ; BSR set to: 0
  1152                           
  1153                           ; BSR set to: 0
  1154  0009D0  D769               	goto	l193
  1155  0009D2                     __end_of_main:
  1156                           	opt stack 0
  1157                           tblptru	equ	0xFF8
  1158                           tblptrh	equ	0xFF7
  1159                           tblptrl	equ	0xFF6
  1160                           tablat	equ	0xFF5
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           status	equ	0xFD8
  1166                           
  1167 ;; *************** function _updateParams *****************
  1168 ;; Defined at:
  1169 ;;		line 228 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  slot            2    6[BANK0 ] int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  i               2   10[BANK0 ] int 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;Total ram usage:        6 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    5
  1190 ;; This function calls:
  1191 ;;		___wmul
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text1
  1198  0011B4                     __ptext1:
  1199                           	opt stack 0
  1200  0011B4                     _updateParams:
  1201                           	opt stack 25
  1202                           
  1203                           ;main.c: 230: int i;
  1204                           ;main.c: 232: for (i = 0; i < 12; i++)
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;incstack = 0
  1208  0011B4  0E00               	movlw	0
  1209  0011B6  0100               	movlb	0	; () banked
  1210  0011B8  6FEF               	movwf	(updateParams@i+1)& (0+255),b
  1211  0011BA  0E00               	movlw	0
  1212  0011BC  6FEE               	movwf	updateParams@i& (0+255),b
  1213  0011BE                     l4175:
  1214                           
  1215                           ; BSR set to: 0
  1216  0011BE  0100               	movlb	0	; () banked
  1217  0011C0  BFEF               	btfsc	(updateParams@i+1)& (0+255),7,b
  1218  0011C2  D008               	goto	l181
  1219  0011C4  0100               	movlb	0	; () banked
  1220  0011C6  51EF               	movf	(updateParams@i+1)& (0+255),w,b
  1221  0011C8  E13E               	bnz	l183
  1222  0011CA  0E0C               	movlw	12
  1223  0011CC  0100               	movlb	0	; () banked
  1224  0011CE  5DEE               	subwf	updateParams@i& (0+255),w,b
  1225  0011D0  B0D8               	btfsc	status,0,c
  1226  0011D2  0012               	return	
  1227  0011D4                     l181:
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 233: {
  1231                           ;main.c: 234: parameter[i] = userParams[slot][i];
  1232                           
  1233                           ; BSR set to: 0
  1234  0011D4  C0EA  F0E4         	movff	updateParams@slot,___wmul@multiplier
  1235  0011D8  C0EB  F0E5         	movff	updateParams@slot+1,___wmul@multiplier+1
  1236  0011DC  0E00               	movlw	0
  1237  0011DE  0100               	movlb	0	; () banked
  1238  0011E0  6FE7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1239  0011E2  0E18               	movlw	24
  1240  0011E4  6FE6               	movwf	___wmul@multiplicand& (0+255),b
  1241  0011E6  ECB7  F00B         	call	___wmul	;wreg free
  1242  0011EA  0E00               	movlw	low _userParams
  1243  0011EC  0100               	movlb	0	; () banked
  1244  0011EE  6FEC               	movwf	??_updateParams& (0+255),b
  1245  0011F0  0E01               	movlw	high _userParams
  1246  0011F2  0100               	movlb	0	; () banked
  1247  0011F4  6FED               	movwf	(??_updateParams+1)& (0+255),b
  1248  0011F6  0100               	movlb	0	; () banked
  1249  0011F8  51E4               	movf	?___wmul& (0+255),w,b
  1250  0011FA  0100               	movlb	0	; () banked
  1251  0011FC  27EC               	addwf	??_updateParams& (0+255),f,b
  1252  0011FE  0100               	movlb	0	; () banked
  1253  001200  51E5               	movf	(?___wmul+1)& (0+255),w,b
  1254  001202  0100               	movlb	0	; () banked
  1255  001204  23ED               	addwfc	(??_updateParams+1)& (0+255),f,b
  1256  001206  90D8               	bcf	status,0,c
  1257  001208  0100               	movlb	0	; () banked
  1258  00120A  35EE               	rlcf	updateParams@i& (0+255),w,b
  1259  00120C  6ED9               	movwf	fsr2l,c
  1260  00120E  0100               	movlb	0	; () banked
  1261  001210  35EF               	rlcf	(updateParams@i+1)& (0+255),w,b
  1262  001212  6EDA               	movwf	fsr2h,c
  1263  001214  0100               	movlb	0	; () banked
  1264  001216  51EC               	movf	??_updateParams& (0+255),w,b
  1265  001218  26D9               	addwf	fsr2l,f,c
  1266  00121A  0100               	movlb	0	; () banked
  1267  00121C  51ED               	movf	(??_updateParams+1)& (0+255),w,b
  1268  00121E  22DA               	addwfc	fsr2h,f,c
  1269  001220  90D8               	bcf	status,0,c
  1270  001222  0100               	movlb	0	; () banked
  1271  001224  35EE               	rlcf	updateParams@i& (0+255),w,b
  1272  001226  6EE1               	movwf	fsr1l,c
  1273  001228  0100               	movlb	0	; () banked
  1274  00122A  35EF               	rlcf	(updateParams@i+1)& (0+255),w,b
  1275  00122C  6EE2               	movwf	fsr1h,c
  1276  00122E  0EA6               	movlw	low _parameter
  1277  001230  26E1               	addwf	fsr1l,f,c
  1278  001232  0E00               	movlw	high _parameter
  1279  001234  22E2               	addwfc	fsr1h,f,c
  1280  001236  CFDE FFE6          	movff	postinc2,postinc1
  1281  00123A  CFDD FFE5          	movff	postdec2,postdec1
  1282                           
  1283                           ; BSR set to: 0
  1284  00123E  0100               	movlb	0	; () banked
  1285  001240  4BEE               	infsnz	updateParams@i& (0+255),f,b
  1286  001242  2BEF               	incf	(updateParams@i+1)& (0+255),f,b
  1287  001244  D7BC               	goto	l4175
  1288  001246                     l183:
  1289                           
  1290                           ; BSR set to: 0
  1291  001246  0012               	return		;funcret
  1292  001248                     __end_of_updateParams:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           postinc0	equ	0xFEE
  1299                           wreg	equ	0xFE8
  1300                           postinc1	equ	0xFE6
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           postinc2	equ	0xFDE
  1305                           postdec2	equ	0xFDD
  1306                           fsr2h	equ	0xFDA
  1307                           fsr2l	equ	0xFD9
  1308                           status	equ	0xFD8
  1309                           
  1310 ;; *************** function _systemInit *****************
  1311 ;; Defined at:
  1312 ;;		line 338 in file "systemConfig.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    5
  1333 ;; This function calls:
  1334 ;;		_bypassSetup
  1335 ;;		_clockSwitch
  1336 ;;		_defaultLED
  1337 ;;		_interfaceInit
  1338 ;;		_interruptInit
  1339 ;;		_killLEDs
  1340 ;;		_mapPeripheralPins
  1341 ;;		_setupADC
  1342 ;;		_setupI2C1
  1343 ;;		_setupI2C2
  1344 ;;		_setupTMR0
  1345 ;;		_setupTMR1
  1346 ;;		_setupTMR2
  1347 ;;		_setupTMR4
  1348 ;;		_startupSequence
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text2
  1355  0016A2                     __ptext2:
  1356                           	opt stack 0
  1357  0016A2                     _systemInit:
  1358                           	opt stack 25
  1359                           
  1360                           ;systemConfig.c: 340: clockSwitch();
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;incstack = 0
  1364  0016A2  EC3A  F00C         	call	_clockSwitch	;wreg free
  1365                           
  1366                           ;systemConfig.c: 342: setupTMR0();
  1367  0016A6  EC76  F00C         	call	_setupTMR0	;wreg free
  1368                           
  1369                           ;systemConfig.c: 343: setupTMR1();
  1370  0016AA  ECA1  F00C         	call	_setupTMR1	;wreg free
  1371                           
  1372                           ;systemConfig.c: 344: setupTMR2();
  1373  0016AE  EC99  F00C         	call	_setupTMR2	;wreg free
  1374                           
  1375                           ;systemConfig.c: 345: setupTMR4();
  1376  0016B2  EC8E  F00C         	call	_setupTMR4	;wreg free
  1377                           
  1378                           ;systemConfig.c: 347: setupI2C1();
  1379  0016B6  EC69  F00C         	call	_setupI2C1	;wreg free
  1380                           
  1381                           ;systemConfig.c: 348: setupI2C2();
  1382  0016BA  EC74  F00B         	call	_setupI2C2	;wreg free
  1383                           
  1384                           ;systemConfig.c: 350: setupADC();
  1385  0016BE  EC24  F009         	call	_setupADC	;wreg free
  1386                           
  1387                           ;systemConfig.c: 353: mapPeripheralPins();
  1388  0016C2  ECFD  F00A         	call	_mapPeripheralPins	;wreg free
  1389                           
  1390                           ;systemConfig.c: 354: interfaceInit();
  1391  0016C6  ECA7  F007         	call	_interfaceInit	;wreg free
  1392                           
  1393                           ;systemConfig.c: 355: bypassSetup();
  1394  0016CA  ECA8  F00C         	call	_bypassSetup	;wreg free
  1395                           
  1396                           ;systemConfig.c: 356: killLEDs();
  1397  0016CE  EC4C  F00C         	call	_killLEDs	;wreg free
  1398                           
  1399                           ;systemConfig.c: 357: startupSequence();
  1400  0016D2  ECF5  F001         	call	_startupSequence	;wreg free
  1401                           
  1402                           ;systemConfig.c: 358: defaultLED();
  1403  0016D6  EC82  F00C         	call	_defaultLED	;wreg free
  1404                           
  1405                           ;systemConfig.c: 359: killLEDs();
  1406  0016DA  EC4C  F00C         	call	_killLEDs	;wreg free
  1407                           
  1408                           ;systemConfig.c: 360: bypassSetup();
  1409  0016DE  ECA8  F00C         	call	_bypassSetup	;wreg free
  1410                           
  1411                           ;systemConfig.c: 361: interruptInit();
  1412  0016E2  ECD2  F00B         	call	_interruptInit	;wreg free
  1413  0016E6  0012               	return		;funcret
  1414  0016E8                     __end_of_systemInit:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postinc1	equ	0xFE6
  1423                           postdec1	equ	0xFE5
  1424                           fsr1h	equ	0xFE2
  1425                           fsr1l	equ	0xFE1
  1426                           postinc2	equ	0xFDE
  1427                           postdec2	equ	0xFDD
  1428                           fsr2h	equ	0xFDA
  1429                           fsr2l	equ	0xFD9
  1430                           status	equ	0xFD8
  1431                           
  1432 ;; *************** function _startupSequence *****************
  1433 ;; Defined at:
  1434 ;;		line 450 in file "hardware.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    4
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_systemInit
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text3
  1463  0003EA                     __ptext3:
  1464                           	opt stack 0
  1465  0003EA                     _startupSequence:
  1466                           	opt stack 25
  1467                           
  1468                           ;hardware.c: 455: LATD0 = 1;
  1469                           
  1470                           ;incstack = 0
  1471  0003EA  808C               	bsf	3980,0,c	;volatile
  1472                           
  1473                           ;hardware.c: 456: _delay((unsigned long)((75)*(32000000/4000.0)));
  1474  0003EC  0E04               	movlw	4
  1475  0003EE  0100               	movlb	0	; () banked
  1476  0003F0  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1477  0003F2  0E0C               	movlw	12
  1478  0003F4  0100               	movlb	0	; () banked
  1479  0003F6  6FE4               	movwf	??_startupSequence& (0+255),b
  1480  0003F8  0E33               	movlw	51
  1481  0003FA                     u4527:
  1482  0003FA  2EE8               	decfsz	wreg,f,c
  1483  0003FC  D7FE               	bra	u4527
  1484  0003FE  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1485  000400  D7FC               	bra	u4527
  1486  000402  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1487  000404  D7FA               	bra	u4527
  1488  000406  D000               	nop2	
  1489                           
  1490                           ;hardware.c: 457: LATE7 = 1;
  1491  000408  8E8D               	bsf	3981,7,c	;volatile
  1492                           
  1493                           ;hardware.c: 458: _delay((unsigned long)((75)*(32000000/4000.0)));
  1494  00040A  0E04               	movlw	4
  1495  00040C  0100               	movlb	0	; () banked
  1496  00040E  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1497  000410  0E0C               	movlw	12
  1498  000412  0100               	movlb	0	; () banked
  1499  000414  6FE4               	movwf	??_startupSequence& (0+255),b
  1500  000416  0E33               	movlw	51
  1501  000418                     u4537:
  1502  000418  2EE8               	decfsz	wreg,f,c
  1503  00041A  D7FE               	bra	u4537
  1504  00041C  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1505  00041E  D7FC               	bra	u4537
  1506  000420  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1507  000422  D7FA               	bra	u4537
  1508  000424  D000               	nop2	
  1509                           
  1510                           ;hardware.c: 459: LATE5 = 1;
  1511  000426  8A8D               	bsf	3981,5,c	;volatile
  1512                           
  1513                           ;hardware.c: 460: _delay((unsigned long)((75)*(32000000/4000.0)));
  1514  000428  0E04               	movlw	4
  1515  00042A  0100               	movlb	0	; () banked
  1516  00042C  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1517  00042E  0E0C               	movlw	12
  1518  000430  0100               	movlb	0	; () banked
  1519  000432  6FE4               	movwf	??_startupSequence& (0+255),b
  1520  000434  0E33               	movlw	51
  1521  000436                     u4547:
  1522  000436  2EE8               	decfsz	wreg,f,c
  1523  000438  D7FE               	bra	u4547
  1524  00043A  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1525  00043C  D7FC               	bra	u4547
  1526  00043E  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1527  000440  D7FA               	bra	u4547
  1528  000442  D000               	nop2	
  1529                           
  1530                           ;hardware.c: 461: LATE4 = 1;
  1531  000444  888D               	bsf	3981,4,c	;volatile
  1532                           
  1533                           ;hardware.c: 462: _delay((unsigned long)((75)*(32000000/4000.0)));
  1534  000446  0E04               	movlw	4
  1535  000448  0100               	movlb	0	; () banked
  1536  00044A  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1537  00044C  0E0C               	movlw	12
  1538  00044E  0100               	movlb	0	; () banked
  1539  000450  6FE4               	movwf	??_startupSequence& (0+255),b
  1540  000452  0E33               	movlw	51
  1541  000454                     u4557:
  1542  000454  2EE8               	decfsz	wreg,f,c
  1543  000456  D7FE               	bra	u4557
  1544  000458  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1545  00045A  D7FC               	bra	u4557
  1546  00045C  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1547  00045E  D7FA               	bra	u4557
  1548  000460  D000               	nop2	
  1549                           
  1550                           ;hardware.c: 463: LATH2 = 1;
  1551  000462  8490               	bsf	3984,2,c	;volatile
  1552                           
  1553                           ;hardware.c: 464: _delay((unsigned long)((75)*(32000000/4000.0)));
  1554  000464  0E04               	movlw	4
  1555  000466  0100               	movlb	0	; () banked
  1556  000468  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1557  00046A  0E0C               	movlw	12
  1558  00046C  0100               	movlb	0	; () banked
  1559  00046E  6FE4               	movwf	??_startupSequence& (0+255),b
  1560  000470  0E33               	movlw	51
  1561  000472                     u4567:
  1562  000472  2EE8               	decfsz	wreg,f,c
  1563  000474  D7FE               	bra	u4567
  1564  000476  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1565  000478  D7FC               	bra	u4567
  1566  00047A  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1567  00047C  D7FA               	bra	u4567
  1568  00047E  D000               	nop2	
  1569                           
  1570                           ;hardware.c: 465: LATH2 = 0;
  1571  000480  9490               	bcf	3984,2,c	;volatile
  1572                           
  1573                           ;hardware.c: 466: _delay((unsigned long)((75)*(32000000/4000.0)));
  1574  000482  0E04               	movlw	4
  1575  000484  0100               	movlb	0	; () banked
  1576  000486  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1577  000488  0E0C               	movlw	12
  1578  00048A  0100               	movlb	0	; () banked
  1579  00048C  6FE4               	movwf	??_startupSequence& (0+255),b
  1580  00048E  0E33               	movlw	51
  1581  000490                     u4577:
  1582  000490  2EE8               	decfsz	wreg,f,c
  1583  000492  D7FE               	bra	u4577
  1584  000494  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1585  000496  D7FC               	bra	u4577
  1586  000498  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1587  00049A  D7FA               	bra	u4577
  1588  00049C  D000               	nop2	
  1589                           
  1590                           ;hardware.c: 467: LATE4 = 0;
  1591  00049E  988D               	bcf	3981,4,c	;volatile
  1592                           
  1593                           ;hardware.c: 468: _delay((unsigned long)((75)*(32000000/4000.0)));
  1594  0004A0  0E04               	movlw	4
  1595  0004A2  0100               	movlb	0	; () banked
  1596  0004A4  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1597  0004A6  0E0C               	movlw	12
  1598  0004A8  0100               	movlb	0	; () banked
  1599  0004AA  6FE4               	movwf	??_startupSequence& (0+255),b
  1600  0004AC  0E33               	movlw	51
  1601  0004AE                     u4587:
  1602  0004AE  2EE8               	decfsz	wreg,f,c
  1603  0004B0  D7FE               	bra	u4587
  1604  0004B2  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1605  0004B4  D7FC               	bra	u4587
  1606  0004B6  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1607  0004B8  D7FA               	bra	u4587
  1608  0004BA  D000               	nop2	
  1609                           
  1610                           ;hardware.c: 469: LATE5 = 0;
  1611  0004BC  9A8D               	bcf	3981,5,c	;volatile
  1612                           
  1613                           ;hardware.c: 470: _delay((unsigned long)((75)*(32000000/4000.0)));
  1614  0004BE  0E04               	movlw	4
  1615  0004C0  0100               	movlb	0	; () banked
  1616  0004C2  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1617  0004C4  0E0C               	movlw	12
  1618  0004C6  0100               	movlb	0	; () banked
  1619  0004C8  6FE4               	movwf	??_startupSequence& (0+255),b
  1620  0004CA  0E33               	movlw	51
  1621  0004CC                     u4597:
  1622  0004CC  2EE8               	decfsz	wreg,f,c
  1623  0004CE  D7FE               	bra	u4597
  1624  0004D0  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1625  0004D2  D7FC               	bra	u4597
  1626  0004D4  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1627  0004D6  D7FA               	bra	u4597
  1628  0004D8  D000               	nop2	
  1629                           
  1630                           ;hardware.c: 471: LATE7 = 0;
  1631  0004DA  9E8D               	bcf	3981,7,c	;volatile
  1632                           
  1633                           ;hardware.c: 472: _delay((unsigned long)((75)*(32000000/4000.0)));
  1634  0004DC  0E04               	movlw	4
  1635  0004DE  0100               	movlb	0	; () banked
  1636  0004E0  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1637  0004E2  0E0C               	movlw	12
  1638  0004E4  0100               	movlb	0	; () banked
  1639  0004E6  6FE4               	movwf	??_startupSequence& (0+255),b
  1640  0004E8  0E33               	movlw	51
  1641  0004EA                     u4607:
  1642  0004EA  2EE8               	decfsz	wreg,f,c
  1643  0004EC  D7FE               	bra	u4607
  1644  0004EE  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1645  0004F0  D7FC               	bra	u4607
  1646  0004F2  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1647  0004F4  D7FA               	bra	u4607
  1648  0004F6  D000               	nop2	
  1649                           
  1650                           ;hardware.c: 473: LATD0 = 0;
  1651  0004F8  908C               	bcf	3980,0,c	;volatile
  1652                           
  1653                           ;hardware.c: 474: _delay((unsigned long)((75)*(32000000/4000.0)));
  1654  0004FA  0E04               	movlw	4
  1655  0004FC  0100               	movlb	0	; () banked
  1656  0004FE  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1657  000500  0E0C               	movlw	12
  1658  000502  0100               	movlb	0	; () banked
  1659  000504  6FE4               	movwf	??_startupSequence& (0+255),b
  1660  000506  0E33               	movlw	51
  1661  000508                     u4617:
  1662  000508  2EE8               	decfsz	wreg,f,c
  1663  00050A  D7FE               	bra	u4617
  1664  00050C  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1665  00050E  D7FC               	bra	u4617
  1666  000510  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1667  000512  D7FA               	bra	u4617
  1668  000514  D000               	nop2	
  1669                           
  1670                           ;hardware.c: 477: LATH7 = 1;
  1671  000516  8E90               	bsf	3984,7,c	;volatile
  1672                           
  1673                           ;hardware.c: 478: _delay((unsigned long)((75)*(32000000/4000.0)));
  1674  000518  0E04               	movlw	4
  1675  00051A  0100               	movlb	0	; () banked
  1676  00051C  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1677  00051E  0E0C               	movlw	12
  1678  000520  0100               	movlb	0	; () banked
  1679  000522  6FE4               	movwf	??_startupSequence& (0+255),b
  1680  000524  0E33               	movlw	51
  1681  000526                     u4627:
  1682  000526  2EE8               	decfsz	wreg,f,c
  1683  000528  D7FE               	bra	u4627
  1684  00052A  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1685  00052C  D7FC               	bra	u4627
  1686  00052E  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1687  000530  D7FA               	bra	u4627
  1688  000532  D000               	nop2	
  1689                           
  1690                           ;hardware.c: 479: LATF2 = 1;
  1691  000534  848E               	bsf	3982,2,c	;volatile
  1692                           
  1693                           ;hardware.c: 480: _delay((unsigned long)((75)*(32000000/4000.0)));
  1694  000536  0E04               	movlw	4
  1695  000538  0100               	movlb	0	; () banked
  1696  00053A  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1697  00053C  0E0C               	movlw	12
  1698  00053E  0100               	movlb	0	; () banked
  1699  000540  6FE4               	movwf	??_startupSequence& (0+255),b
  1700  000542  0E33               	movlw	51
  1701  000544                     u4637:
  1702  000544  2EE8               	decfsz	wreg,f,c
  1703  000546  D7FE               	bra	u4637
  1704  000548  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1705  00054A  D7FC               	bra	u4637
  1706  00054C  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1707  00054E  D7FA               	bra	u4637
  1708  000550  D000               	nop2	
  1709                           
  1710                           ;hardware.c: 481: LATF5 = 1;
  1711  000552  8A8E               	bsf	3982,5,c	;volatile
  1712                           
  1713                           ;hardware.c: 482: _delay((unsigned long)((75)*(32000000/4000.0)));
  1714  000554  0E04               	movlw	4
  1715  000556  0100               	movlb	0	; () banked
  1716  000558  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1717  00055A  0E0C               	movlw	12
  1718  00055C  0100               	movlb	0	; () banked
  1719  00055E  6FE4               	movwf	??_startupSequence& (0+255),b
  1720  000560  0E33               	movlw	51
  1721  000562                     u4647:
  1722  000562  2EE8               	decfsz	wreg,f,c
  1723  000564  D7FE               	bra	u4647
  1724  000566  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1725  000568  D7FC               	bra	u4647
  1726  00056A  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1727  00056C  D7FA               	bra	u4647
  1728  00056E  D000               	nop2	
  1729                           
  1730                           ;hardware.c: 483: LATF6 = 1;
  1731  000570  8C8E               	bsf	3982,6,c	;volatile
  1732                           
  1733                           ;hardware.c: 484: _delay((unsigned long)((75)*(32000000/4000.0)));
  1734  000572  0E04               	movlw	4
  1735  000574  0100               	movlb	0	; () banked
  1736  000576  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1737  000578  0E0C               	movlw	12
  1738  00057A  0100               	movlb	0	; () banked
  1739  00057C  6FE4               	movwf	??_startupSequence& (0+255),b
  1740  00057E  0E33               	movlw	51
  1741  000580                     u4657:
  1742  000580  2EE8               	decfsz	wreg,f,c
  1743  000582  D7FE               	bra	u4657
  1744  000584  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1745  000586  D7FC               	bra	u4657
  1746  000588  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1747  00058A  D7FA               	bra	u4657
  1748  00058C  D000               	nop2	
  1749                           
  1750                           ;hardware.c: 485: LATG4 = 1;
  1751  00058E  888F               	bsf	3983,4,c	;volatile
  1752                           
  1753                           ;hardware.c: 486: _delay((unsigned long)((75)*(32000000/4000.0)));
  1754  000590  0E04               	movlw	4
  1755  000592  0100               	movlb	0	; () banked
  1756  000594  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1757  000596  0E0C               	movlw	12
  1758  000598  0100               	movlb	0	; () banked
  1759  00059A  6FE4               	movwf	??_startupSequence& (0+255),b
  1760  00059C  0E33               	movlw	51
  1761  00059E                     u4667:
  1762  00059E  2EE8               	decfsz	wreg,f,c
  1763  0005A0  D7FE               	bra	u4667
  1764  0005A2  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1765  0005A4  D7FC               	bra	u4667
  1766  0005A6  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1767  0005A8  D7FA               	bra	u4667
  1768  0005AA  D000               	nop2	
  1769                           
  1770                           ;hardware.c: 487: LATH0 = 1;
  1771  0005AC  8090               	bsf	3984,0,c	;volatile
  1772                           
  1773                           ;hardware.c: 488: _delay((unsigned long)((75)*(32000000/4000.0)));
  1774  0005AE  0E04               	movlw	4
  1775  0005B0  0100               	movlb	0	; () banked
  1776  0005B2  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1777  0005B4  0E0C               	movlw	12
  1778  0005B6  0100               	movlb	0	; () banked
  1779  0005B8  6FE4               	movwf	??_startupSequence& (0+255),b
  1780  0005BA  0E33               	movlw	51
  1781  0005BC                     u4677:
  1782  0005BC  2EE8               	decfsz	wreg,f,c
  1783  0005BE  D7FE               	bra	u4677
  1784  0005C0  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1785  0005C2  D7FC               	bra	u4677
  1786  0005C4  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1787  0005C6  D7FA               	bra	u4677
  1788  0005C8  D000               	nop2	
  1789                           
  1790                           ;hardware.c: 489: LATH7 = 0;
  1791  0005CA  9E90               	bcf	3984,7,c	;volatile
  1792                           
  1793                           ;hardware.c: 490: _delay((unsigned long)((75)*(32000000/4000.0)));
  1794  0005CC  0E04               	movlw	4
  1795  0005CE  0100               	movlb	0	; () banked
  1796  0005D0  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1797  0005D2  0E0C               	movlw	12
  1798  0005D4  0100               	movlb	0	; () banked
  1799  0005D6  6FE4               	movwf	??_startupSequence& (0+255),b
  1800  0005D8  0E33               	movlw	51
  1801  0005DA                     u4687:
  1802  0005DA  2EE8               	decfsz	wreg,f,c
  1803  0005DC  D7FE               	bra	u4687
  1804  0005DE  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1805  0005E0  D7FC               	bra	u4687
  1806  0005E2  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1807  0005E4  D7FA               	bra	u4687
  1808  0005E6  D000               	nop2	
  1809                           
  1810                           ;hardware.c: 491: LATF2 = 0;
  1811  0005E8  948E               	bcf	3982,2,c	;volatile
  1812                           
  1813                           ;hardware.c: 492: _delay((unsigned long)((75)*(32000000/4000.0)));
  1814  0005EA  0E04               	movlw	4
  1815  0005EC  0100               	movlb	0	; () banked
  1816  0005EE  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1817  0005F0  0E0C               	movlw	12
  1818  0005F2  0100               	movlb	0	; () banked
  1819  0005F4  6FE4               	movwf	??_startupSequence& (0+255),b
  1820  0005F6  0E33               	movlw	51
  1821  0005F8                     u4697:
  1822  0005F8  2EE8               	decfsz	wreg,f,c
  1823  0005FA  D7FE               	bra	u4697
  1824  0005FC  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1825  0005FE  D7FC               	bra	u4697
  1826  000600  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1827  000602  D7FA               	bra	u4697
  1828  000604  D000               	nop2	
  1829                           
  1830                           ;hardware.c: 493: LATF5 = 0;
  1831  000606  9A8E               	bcf	3982,5,c	;volatile
  1832                           
  1833                           ;hardware.c: 494: _delay((unsigned long)((75)*(32000000/4000.0)));
  1834  000608  0E04               	movlw	4
  1835  00060A  0100               	movlb	0	; () banked
  1836  00060C  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1837  00060E  0E0C               	movlw	12
  1838  000610  0100               	movlb	0	; () banked
  1839  000612  6FE4               	movwf	??_startupSequence& (0+255),b
  1840  000614  0E33               	movlw	51
  1841  000616                     u4707:
  1842  000616  2EE8               	decfsz	wreg,f,c
  1843  000618  D7FE               	bra	u4707
  1844  00061A  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1845  00061C  D7FC               	bra	u4707
  1846  00061E  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1847  000620  D7FA               	bra	u4707
  1848  000622  D000               	nop2	
  1849                           
  1850                           ;hardware.c: 495: LATF6 = 0;
  1851  000624  9C8E               	bcf	3982,6,c	;volatile
  1852                           
  1853                           ;hardware.c: 496: _delay((unsigned long)((75)*(32000000/4000.0)));
  1854  000626  0E04               	movlw	4
  1855  000628  0100               	movlb	0	; () banked
  1856  00062A  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1857  00062C  0E0C               	movlw	12
  1858  00062E  0100               	movlb	0	; () banked
  1859  000630  6FE4               	movwf	??_startupSequence& (0+255),b
  1860  000632  0E33               	movlw	51
  1861  000634                     u4717:
  1862  000634  2EE8               	decfsz	wreg,f,c
  1863  000636  D7FE               	bra	u4717
  1864  000638  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1865  00063A  D7FC               	bra	u4717
  1866  00063C  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1867  00063E  D7FA               	bra	u4717
  1868  000640  D000               	nop2	
  1869                           
  1870                           ;hardware.c: 497: LATG4 = 0;
  1871  000642  988F               	bcf	3983,4,c	;volatile
  1872                           
  1873                           ;hardware.c: 498: _delay((unsigned long)((75)*(32000000/4000.0)));
  1874  000644  0E04               	movlw	4
  1875  000646  0100               	movlb	0	; () banked
  1876  000648  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1877  00064A  0E0C               	movlw	12
  1878  00064C  0100               	movlb	0	; () banked
  1879  00064E  6FE4               	movwf	??_startupSequence& (0+255),b
  1880  000650  0E33               	movlw	51
  1881  000652                     u4727:
  1882  000652  2EE8               	decfsz	wreg,f,c
  1883  000654  D7FE               	bra	u4727
  1884  000656  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1885  000658  D7FC               	bra	u4727
  1886  00065A  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1887  00065C  D7FA               	bra	u4727
  1888  00065E  D000               	nop2	
  1889                           
  1890                           ;hardware.c: 499: LATH0 = 0;
  1891  000660  9090               	bcf	3984,0,c	;volatile
  1892                           
  1893                           ;hardware.c: 500: _delay((unsigned long)((75)*(32000000/4000.0)));
  1894  000662  0E04               	movlw	4
  1895  000664  0100               	movlb	0	; () banked
  1896  000666  6FE5               	movwf	(??_startupSequence+1)& (0+255),b
  1897  000668  0E0C               	movlw	12
  1898  00066A  0100               	movlb	0	; () banked
  1899  00066C  6FE4               	movwf	??_startupSequence& (0+255),b
  1900  00066E  0E33               	movlw	51
  1901  000670                     u4737:
  1902  000670  2EE8               	decfsz	wreg,f,c
  1903  000672  D7FE               	bra	u4737
  1904  000674  2FE4               	decfsz	??_startupSequence& (0+255),f,b
  1905  000676  D7FC               	bra	u4737
  1906  000678  2FE5               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1907  00067A  D7FA               	bra	u4737
  1908  00067C  D000               	nop2	
  1909  00067E  0012               	return		;funcret
  1910  000680                     __end_of_startupSequence:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postinc1	equ	0xFE6
  1919                           postdec1	equ	0xFE5
  1920                           fsr1h	equ	0xFE2
  1921                           fsr1l	equ	0xFE1
  1922                           postinc2	equ	0xFDE
  1923                           postdec2	equ	0xFDD
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _setupTMR4 *****************
  1929 ;; Defined at:
  1930 ;;		line 43 in file "systemConfig.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    4
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_systemInit
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text4
  1959  00191C                     __ptext4:
  1960                           	opt stack 0
  1961  00191C                     _setupTMR4:
  1962                           	opt stack 25
  1963                           
  1964                           ;systemConfig.c: 46: T4CONbits.TMR4ON = 0x0;
  1965                           
  1966                           ;incstack = 0
  1967  00191C  010F               	movlb	15	; () banked
  1968  00191E  9504               	bcf	4,2,b	;volatile
  1969                           
  1970                           ; BSR set to: 15
  1971                           ;systemConfig.c: 47: T4CONbits.T4CKPS = 0x3;
  1972  001920  0E03               	movlw	3
  1973  001922  010F               	movlb	15	; () banked
  1974  001924  1304               	iorwf	4,f,b	;volatile
  1975                           
  1976                           ;systemConfig.c: 48: T4CONbits.T4OUTPS = 0x1;
  1977  001926  010F               	movlb	15	; () banked
  1978  001928  5104               	movf	4,w,b	;volatile
  1979  00192A  0B87               	andlw	-121
  1980  00192C  0908               	iorlw	8
  1981  00192E  6F04               	movwf	4,b	;volatile
  1982                           
  1983                           ; BSR set to: 15
  1984  001930  0012               	return		;funcret
  1985  001932                     __end_of_setupTMR4:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postinc1	equ	0xFE6
  1994                           postdec1	equ	0xFE5
  1995                           fsr1h	equ	0xFE2
  1996                           fsr1l	equ	0xFE1
  1997                           postinc2	equ	0xFDE
  1998                           postdec2	equ	0xFDD
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003 ;; *************** function _setupTMR2 *****************
  2004 ;; Defined at:
  2005 ;;		line 34 in file "systemConfig.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    4
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_systemInit
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text5
  2034  001932                     __ptext5:
  2035                           	opt stack 0
  2036  001932                     _setupTMR2:
  2037                           	opt stack 25
  2038                           
  2039                           ;systemConfig.c: 37: T2CONbits.TMR2ON = 0x0;
  2040                           
  2041                           ; BSR set to: 15
  2042                           ;incstack = 0
  2043  001932  94CA               	bcf	4042,2,c	;volatile
  2044                           
  2045                           ;systemConfig.c: 38: T2CONbits.T2CKPS = 0x3;
  2046  001934  0E03               	movlw	3
  2047  001936  12CA               	iorwf	4042,f,c	;volatile
  2048                           
  2049                           ;systemConfig.c: 39: T2CONbits.T2OUTPS = 0x1;
  2050  001938  50CA               	movf	4042,w,c	;volatile
  2051  00193A  0B87               	andlw	-121
  2052  00193C  0908               	iorlw	8
  2053  00193E  6ECA               	movwf	4042,c	;volatile
  2054  001940  0012               	return		;funcret
  2055  001942                     __end_of_setupTMR2:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           postinc1	equ	0xFE6
  2064                           postdec1	equ	0xFE5
  2065                           fsr1h	equ	0xFE2
  2066                           fsr1l	equ	0xFE1
  2067                           postinc2	equ	0xFDE
  2068                           postdec2	equ	0xFDD
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8
  2072                           
  2073 ;; *************** function _setupTMR1 *****************
  2074 ;; Defined at:
  2075 ;;		line 25 in file "systemConfig.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;Total ram usage:        0 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    4
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_systemInit
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text6
  2104  001942                     __ptext6:
  2105                           	opt stack 0
  2106  001942                     _setupTMR1:
  2107                           	opt stack 25
  2108                           
  2109                           ;systemConfig.c: 27: T1CONbits.TMR1ON = 0x0;
  2110                           
  2111                           ;incstack = 0
  2112  001942  90CD               	bcf	4045,0,c	;volatile
  2113                           
  2114                           ;systemConfig.c: 28: T1CONbits.TMR1CS = 0x0;
  2115  001944  0E3F               	movlw	-193
  2116  001946  16CD               	andwf	4045,f,c	;volatile
  2117                           
  2118                           ;systemConfig.c: 29: T1CONbits.TCKPS = 0x3;
  2119  001948  0E30               	movlw	48
  2120  00194A  12CD               	iorwf	4045,f,c	;volatile
  2121                           
  2122                           ;systemConfig.c: 30: T1CONbits.RD16 = 0x1;
  2123  00194C  82CD               	bsf	4045,1,c	;volatile
  2124  00194E  0012               	return		;funcret
  2125  001950                     __end_of_setupTMR1:
  2126                           	opt stack 0
  2127                           tblptru	equ	0xFF8
  2128                           tblptrh	equ	0xFF7
  2129                           tblptrl	equ	0xFF6
  2130                           tablat	equ	0xFF5
  2131                           postinc0	equ	0xFEE
  2132                           wreg	equ	0xFE8
  2133                           postinc1	equ	0xFE6
  2134                           postdec1	equ	0xFE5
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _setupTMR0 *****************
  2144 ;; Defined at:
  2145 ;;		line 16 in file "systemConfig.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    4
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_systemInit
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text7
  2174  0018EC                     __ptext7:
  2175                           	opt stack 0
  2176  0018EC                     _setupTMR0:
  2177                           	opt stack 25
  2178                           
  2179                           ;systemConfig.c: 18: T0CONbits.TMR0ON = 0x0;
  2180                           
  2181                           ;incstack = 0
  2182  0018EC  9ED5               	bcf	4053,7,c	;volatile
  2183                           
  2184                           ;systemConfig.c: 19: T0CONbits.T08BIT = 0x1;
  2185  0018EE  8CD5               	bsf	4053,6,c	;volatile
  2186                           
  2187                           ;systemConfig.c: 20: T0CONbits.T0CS = 0x1;
  2188  0018F0  50D5               	movf	4053,w,c	;volatile
  2189  0018F2  0BCF               	andlw	-49
  2190  0018F4  0910               	iorlw	16
  2191  0018F6  6ED5               	movwf	4053,c	;volatile
  2192                           
  2193                           ;systemConfig.c: 21: T0CONbits.PSA = 0x0;
  2194  0018F8  96D5               	bcf	4053,3,c	;volatile
  2195                           
  2196                           ;systemConfig.c: 22: T0CONbits.T0PS = 0x6;
  2197  0018FA  50D5               	movf	4053,w,c	;volatile
  2198  0018FC  0BF8               	andlw	-8
  2199  0018FE  0906               	iorlw	6
  2200  001900  6ED5               	movwf	4053,c	;volatile
  2201  001902  0012               	return		;funcret
  2202  001904                     __end_of_setupTMR0:
  2203                           	opt stack 0
  2204                           tblptru	equ	0xFF8
  2205                           tblptrh	equ	0xFF7
  2206                           tblptrl	equ	0xFF6
  2207                           tablat	equ	0xFF5
  2208                           postinc0	equ	0xFEE
  2209                           wreg	equ	0xFE8
  2210                           postinc1	equ	0xFE6
  2211                           postdec1	equ	0xFE5
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _setupI2C2 *****************
  2221 ;; Defined at:
  2222 ;;		line 92 in file "systemConfig.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    4
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_systemInit
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text8
  2251  0016E8                     __ptext8:
  2252                           	opt stack 0
  2253  0016E8                     _setupI2C2:
  2254                           	opt stack 25
  2255                           
  2256                           ;systemConfig.c: 94: SSP2CON1bits.SSPEN = 0x0;
  2257                           
  2258                           ;incstack = 0
  2259  0016E8  010F               	movlb	15	; () banked
  2260  0016EA  9B19               	bcf	25,5,b	;volatile
  2261                           
  2262                           ;systemConfig.c: 96: TRISDbits.TRISD5 = 0x1;
  2263  0016EC  8A95               	bsf	3989,5,c	;volatile
  2264                           
  2265                           ;systemConfig.c: 97: TRISDbits.TRISD6 = 0x1;
  2266  0016EE  8C95               	bsf	3989,6,c	;volatile
  2267                           
  2268                           ; BSR set to: 15
  2269                           ;systemConfig.c: 100: SSP2CON1bits.SSPM = 0x9;
  2270  0016F0  010F               	movlb	15	; () banked
  2271  0016F2  5119               	movf	25,w,b	;volatile
  2272  0016F4  0BF0               	andlw	-16
  2273  0016F6  0909               	iorlw	9
  2274  0016F8  6F19               	movwf	25,b	;volatile
  2275                           
  2276                           ;systemConfig.c: 103: SSP2ADD = 0b10100000;
  2277  0016FA  0EA0               	movlw	160
  2278  0016FC  010F               	movlb	15	; () banked
  2279  0016FE  6F02               	movwf	2,b	;volatile
  2280                           
  2281                           ;systemConfig.c: 104: SSP2MSK = 0b11000000;
  2282  001700  0EC0               	movlw	192
  2283  001702  010F               	movlb	15	; () banked
  2284  001704  6F17               	movwf	23,b	;volatile
  2285                           
  2286                           ;systemConfig.c: 105: SSP2CON1bits.SSPM = 0x6;
  2287  001706  010F               	movlb	15	; () banked
  2288  001708  5119               	movf	25,w,b	;volatile
  2289  00170A  0BF0               	andlw	-16
  2290  00170C  0906               	iorlw	6
  2291  00170E  6F19               	movwf	25,b	;volatile
  2292                           
  2293                           ; BSR set to: 15
  2294                           ;systemConfig.c: 107: SSP2CON1bits.CKP = 0x1;
  2295  001710  010F               	movlb	15	; () banked
  2296  001712  8919               	bsf	25,4,b	;volatile
  2297                           
  2298                           ; BSR set to: 15
  2299                           ;systemConfig.c: 108: SSP2CON2bits.SEN = 0x1;
  2300  001714  010F               	movlb	15	; () banked
  2301  001716  8118               	bsf	24,0,b	;volatile
  2302                           
  2303                           ; BSR set to: 15
  2304                           ;systemConfig.c: 109: SSP2CON2bits.GCEN = 0x0;
  2305  001718  010F               	movlb	15	; () banked
  2306  00171A  9F18               	bcf	24,7,b	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;systemConfig.c: 110: SSP2CON3bits.SCIE = 0x0;
  2310  00171C  010F               	movlb	15	; () banked
  2311  00171E  9B39               	bcf	57,5,b	;volatile
  2312                           
  2313                           ;systemConfig.c: 112: SSP2BUF = 0x00;
  2314  001720  0E00               	movlw	0
  2315  001722  010F               	movlb	15	; () banked
  2316  001724  6F03               	movwf	3,b	;volatile
  2317                           
  2318                           ; BSR set to: 15
  2319                           ;systemConfig.c: 113: SSP2CON1bits.SSPEN = 0x1;
  2320  001726  010F               	movlb	15	; () banked
  2321  001728  8B19               	bsf	25,5,b	;volatile
  2322                           
  2323                           ; BSR set to: 15
  2324  00172A  0012               	return		;funcret
  2325  00172C                     __end_of_setupI2C2:
  2326                           	opt stack 0
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           postinc0	equ	0xFEE
  2332                           wreg	equ	0xFE8
  2333                           postinc1	equ	0xFE6
  2334                           postdec1	equ	0xFE5
  2335                           fsr1h	equ	0xFE2
  2336                           fsr1l	equ	0xFE1
  2337                           postinc2	equ	0xFDE
  2338                           postdec2	equ	0xFDD
  2339                           fsr2h	equ	0xFDA
  2340                           fsr2l	equ	0xFD9
  2341                           status	equ	0xFD8
  2342                           
  2343 ;; *************** function _setupI2C1 *****************
  2344 ;; Defined at:
  2345 ;;		line 76 in file "systemConfig.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;Total ram usage:        0 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    4
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_systemInit
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text9
  2374  0018D2                     __ptext9:
  2375                           	opt stack 0
  2376  0018D2                     _setupI2C1:
  2377                           	opt stack 25
  2378                           
  2379                           ;systemConfig.c: 78: SSP1CON1bits.SSPEN = 0x0;
  2380                           
  2381                           ; BSR set to: 15
  2382                           ;incstack = 0
  2383  0018D2  9AC6               	bcf	4038,5,c	;volatile
  2384                           
  2385                           ;systemConfig.c: 80: TRISCbits.TRISC3 = 0x1;
  2386  0018D4  8694               	bsf	3988,3,c	;volatile
  2387                           
  2388                           ;systemConfig.c: 81: TRISCbits.TRISC4 = 0x1;
  2389  0018D6  8894               	bsf	3988,4,c	;volatile
  2390                           
  2391                           ;systemConfig.c: 84: SSP1ADD = 0x13;
  2392  0018D8  0E13               	movlw	19
  2393  0018DA  6EC8               	movwf	4040,c	;volatile
  2394                           
  2395                           ;systemConfig.c: 85: SSP1CON1bits.SSPM = 0x8;
  2396  0018DC  50C6               	movf	4038,w,c	;volatile
  2397  0018DE  0BF0               	andlw	-16
  2398  0018E0  0908               	iorlw	8
  2399  0018E2  6EC6               	movwf	4038,c	;volatile
  2400                           
  2401                           ;systemConfig.c: 87: SSP1BUF = 0x00;
  2402  0018E4  0E00               	movlw	0
  2403  0018E6  6EC9               	movwf	4041,c	;volatile
  2404                           
  2405                           ;systemConfig.c: 89: SSP1CON1bits.SSPEN = 0x1;
  2406  0018E8  8AC6               	bsf	4038,5,c	;volatile
  2407  0018EA  0012               	return		;funcret
  2408  0018EC                     __end_of_setupI2C1:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postinc1	equ	0xFE6
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _setupADC *****************
  2427 ;; Defined at:
  2428 ;;		line 116 in file "systemConfig.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    4
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_systemInit
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text10
  2457  001248                     __ptext10:
  2458                           	opt stack 0
  2459  001248                     _setupADC:
  2460                           	opt stack 25
  2461                           
  2462                           ;systemConfig.c: 118: ADCON1Hbits.ADON = 0;
  2463                           
  2464                           ;incstack = 0
  2465  001248  9EC1               	bcf	4033,7,c	;volatile
  2466                           
  2467                           ;systemConfig.c: 119: ADCON1Hbits.MODE12 = 1;
  2468  00124A  84C1               	bsf	4033,2,c	;volatile
  2469                           
  2470                           ;systemConfig.c: 120: ADCON1Hbits.FORM = 0;
  2471  00124C  0EFC               	movlw	-4
  2472  00124E  16C1               	andwf	4033,f,c	;volatile
  2473                           
  2474                           ;systemConfig.c: 121: ADCON1Lbits.SSRC = 0;
  2475  001250  98C0               	bcf	4032,4,c	;volatile
  2476  001252  9AC0               	bcf	4032,5,c	;volatile
  2477  001254  9CC0               	bcf	4032,6,c	;volatile
  2478  001256  9EC0               	bcf	4032,7,c	;volatile
  2479                           
  2480                           ;systemConfig.c: 122: ADCON1Lbits.ASAM = 0;
  2481  001258  94C0               	bcf	4032,2,c	;volatile
  2482                           
  2483                           ;systemConfig.c: 124: ADCON2Hbits.PVCFG = 0;
  2484  00125A  0E3F               	movlw	-193
  2485  00125C  010E               	movlb	14	; () banked
  2486  00125E  178D               	andwf	141,f,b	;volatile
  2487                           
  2488                           ; BSR set to: 14
  2489                           ;systemConfig.c: 125: ADCON2Hbits.NVCFG0 = 0;
  2490  001260  010E               	movlb	14	; () banked
  2491  001262  9B8D               	bcf	141,5,b	;volatile
  2492                           
  2493                           ; BSR set to: 14
  2494                           ;systemConfig.c: 126: ADCON2Hbits.BUFREGEN = 1;
  2495  001264  010E               	movlb	14	; () banked
  2496  001266  878D               	bsf	141,3,b	;volatile
  2497                           
  2498                           ; BSR set to: 14
  2499                           ;systemConfig.c: 128: ADCON3Hbits.ADRC = 0;
  2500  001268  010E               	movlb	14	; () banked
  2501  00126A  9F8B               	bcf	139,7,b	;volatile
  2502                           
  2503                           ; BSR set to: 14
  2504                           ;systemConfig.c: 129: ADCON3Hbits.PUMPEN = 0;
  2505  00126C  010E               	movlb	14	; () banked
  2506  00126E  9B8B               	bcf	139,5,b	;volatile
  2507                           
  2508                           ;systemConfig.c: 130: ADCON3Lbits.ADCS = 0x20;
  2509  001270  0E20               	movlw	32
  2510  001272  010E               	movlb	14	; () banked
  2511  001274  6F8A               	movwf	138,b	;volatile
  2512                           
  2513                           ; BSR set to: 14
  2514                           ;systemConfig.c: 132: ADCON5Hbits.ASENA = 0;
  2515  001276  010E               	movlb	14	; () banked
  2516  001278  9F89               	bcf	137,7,b	;volatile
  2517                           
  2518                           ; BSR set to: 14
  2519                           ;systemConfig.c: 133: ADCHS0Lbits.CH0SA = 0;
  2520  00127A  010E               	movlb	14	; () banked
  2521  00127C  9186               	bcf	134,0,b	;volatile
  2522  00127E  9386               	bcf	134,1,b	;volatile
  2523  001280  9586               	bcf	134,2,b	;volatile
  2524  001282  9786               	bcf	134,3,b	;volatile
  2525  001284  9986               	bcf	134,4,b	;volatile
  2526                           
  2527                           ; BSR set to: 14
  2528                           ;systemConfig.c: 134: ADCHS0Lbits.CH0NA = 0;
  2529  001286  010E               	movlb	14	; () banked
  2530  001288  9B86               	bcf	134,5,b	;volatile
  2531  00128A  9D86               	bcf	134,6,b	;volatile
  2532  00128C  9F86               	bcf	134,7,b	;volatile
  2533                           
  2534                           ; BSR set to: 14
  2535                           ;systemConfig.c: 137: CM1CONbits.CON = 0;
  2536  00128E  010F               	movlb	15	; () banked
  2537  001290  9F53               	bcf	83,7,b	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;systemConfig.c: 138: CM2CONbits.CON = 0;
  2541  001292  010F               	movlb	15	; () banked
  2542  001294  9F38               	bcf	56,7,b	;volatile
  2543                           
  2544                           ; BSR set to: 15
  2545                           ;systemConfig.c: 139: CM3CONbits.CON = 0;
  2546  001296  010F               	movlb	15	; () banked
  2547  001298  9F37               	bcf	55,7,b	;volatile
  2548                           
  2549                           ; BSR set to: 15
  2550                           ;systemConfig.c: 141: ANCON1bits.ANSEL0 = 1;
  2551  00129A  010E               	movlb	14	; () banked
  2552  00129C  8147               	bsf	71,0,b	;volatile
  2553                           
  2554                           ; BSR set to: 14
  2555                           ;systemConfig.c: 142: ANCON1bits.ANSEL1 = 1;
  2556  00129E  010E               	movlb	14	; () banked
  2557  0012A0  8347               	bsf	71,1,b	;volatile
  2558                           
  2559                           ; BSR set to: 14
  2560                           ;systemConfig.c: 143: ANCON1bits.ANSEL2 = 1;
  2561  0012A2  010E               	movlb	14	; () banked
  2562  0012A4  8547               	bsf	71,2,b	;volatile
  2563                           
  2564                           ; BSR set to: 14
  2565                           ;systemConfig.c: 144: ANCON1bits.ANSEL3 = 1;
  2566  0012A6  010E               	movlb	14	; () banked
  2567  0012A8  8747               	bsf	71,3,b	;volatile
  2568                           
  2569                           ; BSR set to: 14
  2570                           ;systemConfig.c: 145: ANCON1bits.ANSEL4 = 1;
  2571  0012AA  010E               	movlb	14	; () banked
  2572  0012AC  8947               	bsf	71,4,b	;volatile
  2573                           
  2574                           ; BSR set to: 14
  2575                           ;systemConfig.c: 146: ANCON1bits.ANSEL5 = 1;
  2576  0012AE  010E               	movlb	14	; () banked
  2577  0012B0  8B47               	bsf	71,5,b	;volatile
  2578                           
  2579                           ; BSR set to: 14
  2580                           ;systemConfig.c: 147: ANCON2bits.ANSEL11 = 1;
  2581  0012B2  010E               	movlb	14	; () banked
  2582  0012B4  8746               	bsf	70,3,b	;volatile
  2583                           
  2584                           ; BSR set to: 14
  2585                           ;systemConfig.c: 148: ANCON1bits.ANSEL7 = 1;
  2586  0012B6  010E               	movlb	14	; () banked
  2587  0012B8  8F47               	bsf	71,7,b	;volatile
  2588                           
  2589                           ; BSR set to: 14
  2590                           ;systemConfig.c: 149: ANCON2bits.ANSEL8 = 1;
  2591  0012BA  010E               	movlb	14	; () banked
  2592  0012BC  8146               	bsf	70,0,b	;volatile
  2593                           
  2594                           ; BSR set to: 14
  2595                           ;systemConfig.c: 150: ANCON3bits.ANSEL22 = 1;
  2596  0012BE  010E               	movlb	14	; () banked
  2597  0012C0  8D45               	bsf	69,6,b	;volatile
  2598                           
  2599                           ; BSR set to: 14
  2600                           ;systemConfig.c: 152: TRISAbits.TRISA0 = 1;
  2601  0012C2  8092               	bsf	3986,0,c	;volatile
  2602                           
  2603                           ; BSR set to: 14
  2604                           ;systemConfig.c: 153: TRISAbits.TRISA1 = 1;
  2605  0012C4  8292               	bsf	3986,1,c	;volatile
  2606                           
  2607                           ; BSR set to: 14
  2608                           ;systemConfig.c: 154: TRISAbits.TRISA2 = 1;
  2609  0012C6  8492               	bsf	3986,2,c	;volatile
  2610                           
  2611                           ; BSR set to: 14
  2612                           ;systemConfig.c: 155: TRISAbits.TRISA3 = 1;
  2613  0012C8  8692               	bsf	3986,3,c	;volatile
  2614                           
  2615                           ; BSR set to: 14
  2616                           ;systemConfig.c: 156: TRISAbits.TRISA5 = 1;
  2617  0012CA  8A92               	bsf	3986,5,c	;volatile
  2618                           
  2619                           ; BSR set to: 14
  2620                           ;systemConfig.c: 157: TRISFbits.TRISF7 = 1;
  2621  0012CC  8E97               	bsf	3991,7,c	;volatile
  2622                           
  2623                           ; BSR set to: 14
  2624                           ;systemConfig.c: 158: TRISAbits.TRISA4 = 1;
  2625  0012CE  8892               	bsf	3986,4,c	;volatile
  2626                           
  2627                           ; BSR set to: 14
  2628                           ;systemConfig.c: 159: TRISHbits.TRISH6 = 1;
  2629  0012D0  8C99               	bsf	3993,6,c	;volatile
  2630                           
  2631                           ; BSR set to: 14
  2632                           ;systemConfig.c: 160: TRISGbits.TRISG0 = 1;
  2633  0012D2  8098               	bsf	3992,0,c	;volatile
  2634                           
  2635                           ; BSR set to: 14
  2636                           ;systemConfig.c: 161: TRISCbits.TRISC2 = 1;
  2637  0012D4  8494               	bsf	3988,2,c	;volatile
  2638                           
  2639                           ; BSR set to: 14
  2640  0012D6  0012               	return		;funcret
  2641  0012D8                     __end_of_setupADC:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           postinc1	equ	0xFE6
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           postinc2	equ	0xFDE
  2654                           postdec2	equ	0xFDD
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _mapPeripheralPins *****************
  2660 ;; Defined at:
  2661 ;;		line 164 in file "systemConfig.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    4
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_systemInit
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text11
  2690  0015FA                     __ptext11:
  2691                           	opt stack 0
  2692  0015FA                     _mapPeripheralPins:
  2693                           	opt stack 25
  2694                           
  2695                           ;systemConfig.c: 167: OSCCON = (OSCCON & 0x5F);
  2696                           
  2697                           ; BSR set to: 14
  2698                           ;incstack = 0
  2699  0015FA  50D3               	movf	4051,w,c	;volatile
  2700  0015FC  0B5F               	andlw	95
  2701  0015FE  6ED3               	movwf	4051,c	;volatile
  2702                           
  2703                           ;systemConfig.c: 168: RPINR20_21bits.IOC3R = 0x9;
  2704  001600  010E               	movlb	14	; () banked
  2705  001602  5134               	movf	52,w,b	;volatile
  2706  001604  0B0F               	andlw	-241
  2707  001606  0990               	iorlw	144
  2708  001608  6F34               	movwf	52,b	;volatile
  2709                           
  2710                           ; BSR set to: 14
  2711                           ;systemConfig.c: 169: RPINR20_21bits.IOC2R = 0xA;
  2712  00160A  010E               	movlb	14	; () banked
  2713  00160C  5134               	movf	52,w,b	;volatile
  2714  00160E  0BF0               	andlw	-16
  2715  001610  090A               	iorlw	10
  2716  001612  6F34               	movwf	52,b	;volatile
  2717                           
  2718                           ; BSR set to: 14
  2719                           ;systemConfig.c: 170: RPINR24_25bits.IOC6R = 0x8;
  2720  001614  010E               	movlb	14	; () banked
  2721  001616  5136               	movf	54,w,b	;volatile
  2722  001618  0BF0               	andlw	-16
  2723  00161A  0908               	iorlw	8
  2724  00161C  6F36               	movwf	54,b	;volatile
  2725                           
  2726                           ; BSR set to: 14
  2727                           ;systemConfig.c: 171: RPINR18_19bits.IOC1R = 0x5;
  2728  00161E  010E               	movlb	14	; () banked
  2729  001620  5133               	movf	51,w,b	;volatile
  2730  001622  0B0F               	andlw	-241
  2731  001624  0950               	iorlw	80
  2732  001626  6F33               	movwf	51,b	;volatile
  2733                           
  2734                           ; BSR set to: 14
  2735                           ;systemConfig.c: 172: RPINR24_25bits.IOC7R = 0xA;
  2736  001628  010E               	movlb	14	; () banked
  2737  00162A  5136               	movf	54,w,b	;volatile
  2738  00162C  0B0F               	andlw	-241
  2739  00162E  09A0               	iorlw	160
  2740  001630  6F36               	movwf	54,b	;volatile
  2741                           
  2742                           ; BSR set to: 14
  2743                           ;systemConfig.c: 173: RPINR22_23bits.IOC4R = 0x6;
  2744  001632  010E               	movlb	14	; () banked
  2745  001634  5135               	movf	53,w,b	;volatile
  2746  001636  0BF0               	andlw	-16
  2747  001638  0906               	iorlw	6
  2748  00163A  6F35               	movwf	53,b	;volatile
  2749                           
  2750                           ; BSR set to: 14
  2751                           ;systemConfig.c: 174: RPINR22_23bits.IOC5R = 0x8;
  2752  00163C  010E               	movlb	14	; () banked
  2753  00163E  5135               	movf	53,w,b	;volatile
  2754  001640  0B0F               	andlw	-241
  2755  001642  0980               	iorlw	128
  2756  001644  6F35               	movwf	53,b	;volatile
  2757                           
  2758                           ; BSR set to: 14
  2759                           ;systemConfig.c: 175: OSCCON = (OSCCON | 0x40);
  2760  001646  50D3               	movf	4051,w,c	;volatile
  2761  001648  0940               	iorlw	64
  2762  00164A  6ED3               	movwf	4051,c	;volatile
  2763                           
  2764                           ; BSR set to: 14
  2765  00164C  0012               	return		;funcret
  2766  00164E                     __end_of_mapPeripheralPins:
  2767                           	opt stack 0
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postinc1	equ	0xFE6
  2775                           postdec1	equ	0xFE5
  2776                           fsr1h	equ	0xFE2
  2777                           fsr1l	equ	0xFE1
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _killLEDs *****************
  2785 ;; Defined at:
  2786 ;;		line 665 in file "hardware.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		None
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    4
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_systemInit
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text12
  2815  001898                     __ptext12:
  2816                           	opt stack 0
  2817  001898                     _killLEDs:
  2818                           	opt stack 25
  2819                           
  2820                           ;hardware.c: 667: LATE0 = 0;
  2821                           
  2822                           ; BSR set to: 14
  2823                           ;incstack = 0
  2824  001898  908D               	bcf	3981,0,c	;volatile
  2825                           
  2826                           ;hardware.c: 668: LATD2 = 0;
  2827  00189A  948C               	bcf	3980,2,c	;volatile
  2828                           
  2829                           ;hardware.c: 669: LATH7 = 0;
  2830  00189C  9E90               	bcf	3984,7,c	;volatile
  2831                           
  2832                           ;hardware.c: 670: LATF2 = 0;
  2833  00189E  948E               	bcf	3982,2,c	;volatile
  2834                           
  2835                           ;hardware.c: 671: LATF5 = 0;
  2836  0018A0  9A8E               	bcf	3982,5,c	;volatile
  2837                           
  2838                           ;hardware.c: 672: LATF6 = 0;
  2839  0018A2  9C8E               	bcf	3982,6,c	;volatile
  2840                           
  2841                           ;hardware.c: 673: LATG4 = 0;
  2842  0018A4  988F               	bcf	3983,4,c	;volatile
  2843                           
  2844                           ;hardware.c: 674: LATH0 = 0;
  2845  0018A6  9090               	bcf	3984,0,c	;volatile
  2846                           
  2847                           ;hardware.c: 675: LATE1 = 0;
  2848  0018A8  928D               	bcf	3981,1,c	;volatile
  2849                           
  2850                           ;hardware.c: 676: LATH1 = 0;
  2851  0018AA  9290               	bcf	3984,1,c	;volatile
  2852                           
  2853                           ;hardware.c: 677: LATD0 = 0;
  2854  0018AC  908C               	bcf	3980,0,c	;volatile
  2855                           
  2856                           ;hardware.c: 678: LATE7 = 0;
  2857  0018AE  9E8D               	bcf	3981,7,c	;volatile
  2858                           
  2859                           ;hardware.c: 679: LATE5 = 0;
  2860  0018B0  9A8D               	bcf	3981,5,c	;volatile
  2861                           
  2862                           ;hardware.c: 680: LATE4 = 0;
  2863  0018B2  988D               	bcf	3981,4,c	;volatile
  2864                           
  2865                           ;hardware.c: 681: LATH2 = 0;
  2866  0018B4  9490               	bcf	3984,2,c	;volatile
  2867  0018B6  0012               	return		;funcret
  2868  0018B8                     __end_of_killLEDs:
  2869                           	opt stack 0
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           postinc0	equ	0xFEE
  2875                           wreg	equ	0xFE8
  2876                           postinc1	equ	0xFE6
  2877                           postdec1	equ	0xFE5
  2878                           fsr1h	equ	0xFE2
  2879                           fsr1l	equ	0xFE1
  2880                           postinc2	equ	0xFDE
  2881                           postdec2	equ	0xFDD
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8
  2885                           
  2886 ;; *************** function _interruptInit *****************
  2887 ;; Defined at:
  2888 ;;		line 291 in file "systemConfig.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		None
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    4
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_systemInit
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text13
  2917  0017A4                     __ptext13:
  2918                           	opt stack 0
  2919  0017A4                     _interruptInit:
  2920                           	opt stack 25
  2921                           
  2922                           ;systemConfig.c: 293: INTCONbits.T0IE = 0x1;
  2923                           
  2924                           ;incstack = 0
  2925  0017A4  8AF2               	bsf	intcon,5,c	;volatile
  2926                           
  2927                           ;systemConfig.c: 294: PIE1bits.TMR1IE = 0x1;
  2928  0017A6  809D               	bsf	3997,0,c	;volatile
  2929                           
  2930                           ;systemConfig.c: 295: PIE1bits.TMR2IE = 0x1;
  2931  0017A8  829D               	bsf	3997,1,c	;volatile
  2932                           
  2933                           ;systemConfig.c: 296: PIE2bits.TMR3IE = 0x1;
  2934  0017AA  82A0               	bsf	4000,1,c	;volatile
  2935                           
  2936                           ;systemConfig.c: 297: PIE5bits.TMR4IE = 0x1;
  2937  0017AC  80B7               	bsf	4023,0,c	;volatile
  2938                           
  2939                           ;systemConfig.c: 299: PIE2bits.SSP2IE = 0x1;
  2940  0017AE  8CA0               	bsf	4000,6,c	;volatile
  2941                           
  2942                           ;systemConfig.c: 301: INTCONbits.IOCIE = 0x1;
  2943  0017B0  86F2               	bsf	intcon,3,c	;volatile
  2944                           
  2945                           ;systemConfig.c: 302: IOCNbits.IOCN1 = 0x1;
  2946  0017B2  010F               	movlb	15	; () banked
  2947  0017B4  8355               	bsf	85,1,b	;volatile
  2948                           
  2949                           ;systemConfig.c: 303: IOCNbits.IOCN2 = 0x1;
  2950  0017B6  010F               	movlb	15	; () banked
  2951  0017B8  8555               	bsf	85,2,b	;volatile
  2952                           
  2953                           ;systemConfig.c: 304: IOCNbits.IOCN3 = 0x1;
  2954  0017BA  010F               	movlb	15	; () banked
  2955  0017BC  8755               	bsf	85,3,b	;volatile
  2956                           
  2957                           ;systemConfig.c: 305: IOCNbits.IOCN4 = 0x1;
  2958  0017BE  010F               	movlb	15	; () banked
  2959  0017C0  8955               	bsf	85,4,b	;volatile
  2960                           
  2961                           ;systemConfig.c: 306: IOCNbits.IOCN5 = 0x1;
  2962  0017C2  010F               	movlb	15	; () banked
  2963  0017C4  8B55               	bsf	85,5,b	;volatile
  2964                           
  2965                           ;systemConfig.c: 307: IOCNbits.IOCN6 = 0x1;
  2966  0017C6  010F               	movlb	15	; () banked
  2967  0017C8  8D55               	bsf	85,6,b	;volatile
  2968                           
  2969                           ;systemConfig.c: 308: IOCNbits.IOCN7 = 0x1;
  2970  0017CA  010F               	movlb	15	; () banked
  2971  0017CC  8F55               	bsf	85,7,b	;volatile
  2972                           
  2973                           ;systemConfig.c: 310: INTCONbits.PEIE = 0x1;
  2974  0017CE  8CF2               	bsf	intcon,6,c	;volatile
  2975                           
  2976                           ;systemConfig.c: 311: INTCONbits.GIE = 0x1;
  2977  0017D0  8EF2               	bsf	intcon,7,c	;volatile
  2978                           
  2979                           ; BSR set to: 15
  2980  0017D2  0012               	return		;funcret
  2981  0017D4                     __end_of_interruptInit:
  2982                           	opt stack 0
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           intcon	equ	0xFF2
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           postinc1	equ	0xFE6
  2991                           postdec1	equ	0xFE5
  2992                           fsr1h	equ	0xFE2
  2993                           fsr1l	equ	0xFE1
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function _interfaceInit *****************
  3001 ;; Defined at:
  3002 ;;		line 193 in file "systemConfig.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		None
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    4
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_systemInit
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text14
  3031  000F4E                     __ptext14:
  3032                           	opt stack 0
  3033  000F4E                     _interfaceInit:
  3034                           	opt stack 25
  3035                           
  3036                           ;systemConfig.c: 196: MEMCONbits.EBDIS = 1;
  3037                           
  3038                           ; BSR set to: 15
  3039                           ;incstack = 0
  3040  000F4E  010E               	movlb	14	; () banked
  3041  000F50  8FE3               	bsf	227,7,b	;volatile
  3042                           
  3043                           ;systemConfig.c: 197: UCONbits.USBEN = 0;
  3044  000F52  9675               	bcf	3957,3,c	;volatile
  3045                           
  3046                           ;systemConfig.c: 200: OSCCON2bits.SOSCGO = 0;
  3047  000F54  9266               	bcf	3942,1,c	;volatile
  3048                           
  3049                           ;systemConfig.c: 201: T1CONbits.SOSCEN = 0;
  3050  000F56  96CD               	bcf	4045,3,c	;volatile
  3051                           
  3052                           ;systemConfig.c: 202: T3CONbits.SOSCEN = 0;
  3053  000F58  96B1               	bcf	4017,3,c	;volatile
  3054                           
  3055                           ;systemConfig.c: 203: T5CONbits.SOSCEN = 0;
  3056  000F5A  010F               	movlb	15	; () banked
  3057  000F5C  9714               	bcf	20,3,b	;volatile
  3058                           
  3059                           ;systemConfig.c: 208: ANCON2bits.ANSEL12 = 0;
  3060  000F5E  010E               	movlb	14	; () banked
  3061  000F60  9946               	bcf	70,4,b	;volatile
  3062                           
  3063                           ;systemConfig.c: 209: TRISGbits.TRISG1 = 1;
  3064  000F62  8298               	bsf	3992,1,c	;volatile
  3065                           
  3066                           ;systemConfig.c: 210: PADCFG1bits.RGPU = 1;
  3067  000F64  010F               	movlb	15	; () banked
  3068  000F66  8954               	bsf	84,4,b	;volatile
  3069                           
  3070                           ;systemConfig.c: 212: ANCON2bits.ANSEL13 = 0;
  3071  000F68  010E               	movlb	14	; () banked
  3072  000F6A  9B46               	bcf	70,5,b	;volatile
  3073                           
  3074                           ;systemConfig.c: 213: TRISGbits.TRISG2 = 1;
  3075  000F6C  8498               	bsf	3992,2,c	;volatile
  3076                           
  3077                           ;systemConfig.c: 215: TRISEbits.TRISE6 = 1;
  3078  000F6E  8C96               	bsf	3990,6,c	;volatile
  3079                           
  3080                           ;systemConfig.c: 217: TRISDbits.TRISD1 = 1;
  3081  000F70  8295               	bsf	3989,1,c	;volatile
  3082                           
  3083                           ;systemConfig.c: 218: PADCFG1bits.RDPU = 1;
  3084  000F72  010F               	movlb	15	; () banked
  3085  000F74  8F54               	bsf	84,7,b	;volatile
  3086                           
  3087                           ;systemConfig.c: 220: ANCON2bits.ANSEL14 = 0;
  3088  000F76  010E               	movlb	14	; () banked
  3089  000F78  9D46               	bcf	70,6,b	;volatile
  3090                           
  3091                           ;systemConfig.c: 221: TRISGbits.TRISG3 = 1;
  3092  000F7A  8698               	bsf	3992,3,c	;volatile
  3093                           
  3094                           ;systemConfig.c: 223: PADCFG1bits.REPU = 1;
  3095  000F7C  010F               	movlb	15	; () banked
  3096  000F7E  8D54               	bsf	84,6,b	;volatile
  3097                           
  3098                           ;systemConfig.c: 224: TRISDbits.TRISD4 = 1;
  3099  000F80  8895               	bsf	3989,4,c	;volatile
  3100                           
  3101                           ;systemConfig.c: 225: TRISEbits.TRISE3 = 1;
  3102  000F82  8696               	bsf	3990,3,c	;volatile
  3103                           
  3104                           ;systemConfig.c: 228: TRISEbits.TRISE0 = 0;
  3105  000F84  9096               	bcf	3990,0,c	;volatile
  3106                           
  3107                           ;systemConfig.c: 229: TRISDbits.TRISD2 = 0;
  3108  000F86  9495               	bcf	3989,2,c	;volatile
  3109                           
  3110                           ;systemConfig.c: 232: TRISEbits.TRISE1 = 0;
  3111  000F88  9296               	bcf	3990,1,c	;volatile
  3112                           
  3113                           ;systemConfig.c: 233: ANCON3bits.ANSEL17 = 0;
  3114  000F8A  010E               	movlb	14	; () banked
  3115  000F8C  9345               	bcf	69,1,b	;volatile
  3116                           
  3117                           ;systemConfig.c: 234: TRISHbits.TRISH1 = 0;
  3118  000F8E  9299               	bcf	3993,1,c	;volatile
  3119                           
  3120                           ;systemConfig.c: 237: TRISDbits.TRISD0 = 0;
  3121  000F90  9095               	bcf	3989,0,c	;volatile
  3122                           
  3123                           ;systemConfig.c: 238: TRISEbits.TRISE7 = 0;
  3124  000F92  9E96               	bcf	3990,7,c	;volatile
  3125                           
  3126                           ;systemConfig.c: 239: TRISEbits.TRISE5 = 0;
  3127  000F94  9A96               	bcf	3990,5,c	;volatile
  3128                           
  3129                           ;systemConfig.c: 240: TRISEbits.TRISE4 = 0;
  3130  000F96  9896               	bcf	3990,4,c	;volatile
  3131                           
  3132                           ;systemConfig.c: 241: ANCON3bits.ANSEL18 = 0;
  3133  000F98  010E               	movlb	14	; () banked
  3134  000F9A  9545               	bcf	69,2,b	;volatile
  3135                           
  3136                           ;systemConfig.c: 242: TRISHbits.TRISH2 = 0;
  3137  000F9C  9499               	bcf	3993,2,c	;volatile
  3138                           
  3139                           ;systemConfig.c: 245: ANCON1bits.ANSEL6 = 0;
  3140  000F9E  010E               	movlb	14	; () banked
  3141  000FA0  9D47               	bcf	71,6,b	;volatile
  3142                           
  3143                           ;systemConfig.c: 246: TRISFbits.TRISF2 = 0;
  3144  000FA2  9497               	bcf	3991,2,c	;volatile
  3145                           
  3146                           ;systemConfig.c: 247: ANCON3bits.ANSEL23 = 0;
  3147  000FA4  010E               	movlb	14	; () banked
  3148  000FA6  9F45               	bcf	69,7,b	;volatile
  3149                           
  3150                           ;systemConfig.c: 248: TRISHbits.TRISH7 = 0;
  3151  000FA8  9E99               	bcf	3993,7,c	;volatile
  3152                           
  3153                           ;systemConfig.c: 251: ANCON2bits.ANSEL10 = 0;
  3154  000FAA  010E               	movlb	14	; () banked
  3155  000FAC  9546               	bcf	70,2,b	;volatile
  3156                           
  3157                           ;systemConfig.c: 252: TRISFbits.TRISF6 = 0;
  3158  000FAE  9C97               	bcf	3991,6,c	;volatile
  3159                           
  3160                           ;systemConfig.c: 253: ANCON2bits.ANSEL9 = 0;
  3161  000FB0  010E               	movlb	14	; () banked
  3162  000FB2  9346               	bcf	70,1,b	;volatile
  3163                           
  3164                           ;systemConfig.c: 254: TRISFbits.TRISF5 = 0;
  3165  000FB4  9A97               	bcf	3991,5,c	;volatile
  3166                           
  3167                           ;systemConfig.c: 257: ANCON3bits.ANSEL16 = 0;
  3168  000FB6  010E               	movlb	14	; () banked
  3169  000FB8  9145               	bcf	69,0,b	;volatile
  3170                           
  3171                           ;systemConfig.c: 258: TRISHbits.TRISH0 = 0;
  3172  000FBA  9099               	bcf	3993,0,c	;volatile
  3173                           
  3174                           ;systemConfig.c: 259: TRISGbits.TRISG4 = 0;
  3175  000FBC  9898               	bcf	3992,4,c	;volatile
  3176                           
  3177                           ;systemConfig.c: 260: ANCON2bits.ANSEL15 = 0;
  3178  000FBE  010E               	movlb	14	; () banked
  3179  000FC0  9F46               	bcf	70,7,b	;volatile
  3180                           
  3181                           ;systemConfig.c: 263: TRISCbits.TRISC7 = 1;
  3182  000FC2  8E94               	bsf	3988,7,c	;volatile
  3183                           
  3184                           ;systemConfig.c: 264: TRISJbits.TRISJ4 = 1;
  3185  000FC4  889A               	bsf	3994,4,c	;volatile
  3186                           
  3187                           ;systemConfig.c: 265: TRISJbits.TRISJ5 = 1;
  3188  000FC6  8A9A               	bsf	3994,5,c	;volatile
  3189                           
  3190                           ;systemConfig.c: 268: TRISCbits.TRISC1 = 1;
  3191  000FC8  8294               	bsf	3988,1,c	;volatile
  3192                           
  3193                           ;systemConfig.c: 269: TRISCbits.TRISC0 = 1;
  3194  000FCA  8094               	bsf	3988,0,c	;volatile
  3195                           
  3196                           ;systemConfig.c: 270: TRISCbits.TRISC6 = 1;
  3197  000FCC  8C94               	bsf	3988,6,c	;volatile
  3198                           
  3199                           ;systemConfig.c: 273: ANCON3bits.ANSEL21 = 0;
  3200  000FCE  010E               	movlb	14	; () banked
  3201  000FD0  9B45               	bcf	69,5,b	;volatile
  3202                           
  3203                           ;systemConfig.c: 274: ANCON3bits.ANSEL20 = 0;
  3204  000FD2  010E               	movlb	14	; () banked
  3205  000FD4  9945               	bcf	69,4,b	;volatile
  3206                           
  3207                           ;systemConfig.c: 275: TRISFbits.TRISF3 = 1;
  3208  000FD6  8697               	bsf	3991,3,c	;volatile
  3209                           
  3210                           ;systemConfig.c: 276: TRISHbits.TRISH5 = 1;
  3211  000FD8  8A99               	bsf	3993,5,c	;volatile
  3212                           
  3213                           ;systemConfig.c: 277: TRISHbits.TRISH4 = 1;
  3214  000FDA  8899               	bsf	3993,4,c	;volatile
  3215                           
  3216                           ;systemConfig.c: 280: TRISBbits.TRISB5 = 0;
  3217  000FDC  9A93               	bcf	3987,5,c	;volatile
  3218                           
  3219                           ;systemConfig.c: 281: TRISDbits.TRISD3 = 0;
  3220  000FDE  9695               	bcf	3989,3,c	;volatile
  3221                           
  3222                           ;systemConfig.c: 282: LATB5 = 1;
  3223  000FE0  8A8A               	bsf	3978,5,c	;volatile
  3224                           
  3225                           ;systemConfig.c: 283: LATD3 = 0;
  3226  000FE2  968C               	bcf	3980,3,c	;volatile
  3227                           
  3228                           ;systemConfig.c: 286: TRISJbits.TRISJ0 = 1;
  3229  000FE4  809A               	bsf	3994,0,c	;volatile
  3230                           
  3231                           ;systemConfig.c: 287: TRISJbits.TRISJ1 = 1;
  3232  000FE6  829A               	bsf	3994,1,c	;volatile
  3233                           
  3234                           ;systemConfig.c: 288: TRISDbits.TRISD7 = 1;
  3235  000FE8  8E95               	bsf	3989,7,c	;volatile
  3236                           
  3237                           ; BSR set to: 14
  3238  000FEA  0012               	return		;funcret
  3239  000FEC                     __end_of_interfaceInit:
  3240                           	opt stack 0
  3241                           tblptru	equ	0xFF8
  3242                           tblptrh	equ	0xFF7
  3243                           tblptrl	equ	0xFF6
  3244                           tablat	equ	0xFF5
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           wreg	equ	0xFE8
  3248                           postinc1	equ	0xFE6
  3249                           postdec1	equ	0xFE5
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           postinc2	equ	0xFDE
  3253                           postdec2	equ	0xFDD
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _defaultLED *****************
  3259 ;; Defined at:
  3260 ;;		line 314 in file "systemConfig.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		None
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    4
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_systemInit
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text15
  3289  001904                     __ptext15:
  3290                           	opt stack 0
  3291  001904                     _defaultLED:
  3292                           	opt stack 25
  3293                           
  3294                           ;systemConfig.c: 316: LATH7 = 1;
  3295                           
  3296                           ; BSR set to: 14
  3297                           ;incstack = 0
  3298  001904  8E90               	bsf	3984,7,c	;volatile
  3299                           
  3300                           ;systemConfig.c: 317: LATF2 = 1;
  3301  001906  848E               	bsf	3982,2,c	;volatile
  3302                           
  3303                           ;systemConfig.c: 318: LATF5 = 1;
  3304  001908  8A8E               	bsf	3982,5,c	;volatile
  3305                           
  3306                           ;systemConfig.c: 319: LATF6 = 1;
  3307  00190A  8C8E               	bsf	3982,6,c	;volatile
  3308                           
  3309                           ;systemConfig.c: 320: LATG4 = 1;
  3310  00190C  888F               	bsf	3983,4,c	;volatile
  3311                           
  3312                           ;systemConfig.c: 321: LATH0 = 1;
  3313  00190E  8090               	bsf	3984,0,c	;volatile
  3314                           
  3315                           ;systemConfig.c: 322: LATD0 = 1;
  3316  001910  808C               	bsf	3980,0,c	;volatile
  3317                           
  3318                           ;systemConfig.c: 323: LATE7 = 1;
  3319  001912  8E8D               	bsf	3981,7,c	;volatile
  3320                           
  3321                           ;systemConfig.c: 324: LATE5 = 1;
  3322  001914  8A8D               	bsf	3981,5,c	;volatile
  3323                           
  3324                           ;systemConfig.c: 325: LATE4 = 1;
  3325  001916  888D               	bsf	3981,4,c	;volatile
  3326                           
  3327                           ;systemConfig.c: 326: LATH2 = 1;
  3328  001918  8490               	bsf	3984,2,c	;volatile
  3329  00191A  0012               	return		;funcret
  3330  00191C                     __end_of_defaultLED:
  3331                           	opt stack 0
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           intcon	equ	0xFF2
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           postinc1	equ	0xFE6
  3340                           postdec1	equ	0xFE5
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           postinc2	equ	0xFDE
  3344                           postdec2	equ	0xFDD
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function _clockSwitch *****************
  3350 ;; Defined at:
  3351 ;;		line 52 in file "systemConfig.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    4
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_systemInit
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text16
  3380  001874                     __ptext16:
  3381                           	opt stack 0
  3382  001874                     _clockSwitch:
  3383                           	opt stack 25
  3384                           
  3385                           ;systemConfig.c: 54: OSCCON4bits.PLLEN = 0x1;
  3386                           
  3387                           ;incstack = 0
  3388  001874  8A64               	bsf	3940,5,c	;volatile
  3389                           
  3390                           ;systemConfig.c: 55: OSCCON3bits.IRCF = 0x1;
  3391  001876  5065               	movf	3941,w,c	;volatile
  3392  001878  0BF8               	andlw	-8
  3393  00187A  0901               	iorlw	1
  3394  00187C  6E65               	movwf	3941,c	;volatile
  3395                           
  3396                           ;systemConfig.c: 56: OSCCON2bits.CLKLOCK = 0x0;
  3397  00187E  9E66               	bcf	3942,7,c	;volatile
  3398                           
  3399                           ;systemConfig.c: 57: OSCCONbits.NOSC = 0x1;
  3400  001880  50D3               	movf	4051,w,c	;volatile
  3401  001882  0BF8               	andlw	-8
  3402  001884  0901               	iorlw	1
  3403  001886  6ED3               	movwf	4051,c	;volatile
  3404  001888  38D3               	swapf	4051,w,c	;volatile
  3405  00188A  0B07               	andlw	7
  3406  00188C  06E8               	decf	wreg,f,c
  3407  00188E  A4D8               	btfss	status,2,c
  3408  001890  D7FB               	goto	l505
  3409  001892                     u4190:
  3410                           
  3411                           ;systemConfig.c: 60: while (!OSCCON2bits.LOCK);
  3412  001892  BA66               	btfsc	3942,5,c	;volatile
  3413  001894  0012               	return	
  3414  001896  D7FD               	goto	u4190
  3415  001898                     __end_of_clockSwitch:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           intcon	equ	0xFF2
  3422                           postinc0	equ	0xFEE
  3423                           wreg	equ	0xFE8
  3424                           postinc1	equ	0xFE6
  3425                           postdec1	equ	0xFE5
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _bypassSetup *****************
  3435 ;; Defined at:
  3436 ;;		line 329 in file "systemConfig.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		None
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    4
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_systemInit
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text17
  3465  001950                     __ptext17:
  3466                           	opt stack 0
  3467  001950                     _bypassSetup:
  3468                           	opt stack 25
  3469                           
  3470                           ;systemConfig.c: 331: LATB5 = 1;
  3471                           
  3472                           ;incstack = 0
  3473  001950  8A8A               	bsf	3978,5,c	;volatile
  3474                           
  3475                           ;systemConfig.c: 332: LATD3 = 1;
  3476  001952  868C               	bsf	3980,3,c	;volatile
  3477                           
  3478                           ;systemConfig.c: 333: LATE1 = 1;
  3479  001954  828D               	bsf	3981,1,c	;volatile
  3480                           
  3481                           ;systemConfig.c: 334: LATH1 = 0;
  3482  001956  9290               	bcf	3984,1,c	;volatile
  3483                           
  3484                           ;systemConfig.c: 335: LATD2 = 0;
  3485  001958  948C               	bcf	3980,2,c	;volatile
  3486  00195A  0012               	return		;funcret
  3487  00195C                     __end_of_bypassSetup:
  3488                           	opt stack 0
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           intcon	equ	0xFF2
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postinc1	equ	0xFE6
  3497                           postdec1	equ	0xFE5
  3498                           fsr1h	equ	0xFE2
  3499                           fsr1l	equ	0xFE1
  3500                           postinc2	equ	0xFDE
  3501                           postdec2	equ	0xFDD
  3502                           fsr2h	equ	0xFDA
  3503                           fsr2l	equ	0xFD9
  3504                           status	equ	0xFD8
  3505                           
  3506 ;; *************** function _readControls *****************
  3507 ;; Defined at:
  3508 ;;		line 182 in file "main.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3524 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;Total ram usage:        3 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    5
  3529 ;; This function calls:
  3530 ;;		_ADC_Read
  3531 ;; This function is called by:
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text18
  3537  000680                     __ptext18:
  3538                           	opt stack 0
  3539  000680                     _readControls:
  3540                           	opt stack 25
  3541                           
  3542                           ;main.c: 185: timeA = ADC_Read(14);
  3543                           
  3544                           ;incstack = 0
  3545  000680  0E00               	movlw	0
  3546  000682  0100               	movlb	0	; () banked
  3547  000684  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3548  000686  0E0E               	movlw	14
  3549  000688  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3550  00068A  EC2B  F006         	call	_ADC_Read	;wreg free
  3551  00068E  C0E4  F009         	movff	?_ADC_Read,_timeA
  3552  000692  C0E5  F00A         	movff	?_ADC_Read+1,_timeA+1
  3553                           
  3554                           ;main.c: 186: parameter[0] = timeA >> 8;
  3555  000696  C00A  F0E8         	movff	_timeA+1,??_readControls
  3556  00069A  0100               	movlb	0	; () banked
  3557  00069C  6BE9               	clrf	(??_readControls+1)& (0+255),b
  3558  00069E  BFE8               	btfsc	??_readControls& (0+255),7,b
  3559  0006A0  69E9               	setf	(??_readControls+1)& (0+255),b
  3560  0006A2  C0E8  F0A6         	movff	??_readControls,_parameter
  3561  0006A6  C0E9  F0A7         	movff	??_readControls+1,_parameter+1
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 187: parameter[1] = (timeA & 0xFF);
  3565  0006AA  5009               	movf	_timeA,w,c
  3566  0006AC  0100               	movlb	0	; () banked
  3567  0006AE  6FA8               	movwf	(_parameter+2)& (0+255),b
  3568  0006B0  6BA9               	clrf	(_parameter+3)& (0+255),b
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;main.c: 189: fbkA = ADC_Read(4);
  3572  0006B2  0E00               	movlw	0
  3573  0006B4  0100               	movlb	0	; () banked
  3574  0006B6  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3575  0006B8  0E04               	movlw	4
  3576  0006BA  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3577  0006BC  EC2B  F006         	call	_ADC_Read	;wreg free
  3578  0006C0  C0E4  F07A         	movff	?_ADC_Read,_fbkA
  3579  0006C4  C0E5  F07B         	movff	?_ADC_Read+1,_fbkA+1
  3580                           
  3581                           ;main.c: 190: parameter[2] = fbkA>>4;
  3582  0006C8  C07A  F0E8         	movff	_fbkA,??_readControls
  3583  0006CC  C07B  F0E9         	movff	_fbkA+1,??_readControls+1
  3584  0006D0  0E04               	movlw	4
  3585  0006D2  0100               	movlb	0	; () banked
  3586  0006D4  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3587  0006D6                     u4225:
  3588  0006D6  0100               	movlb	0	; () banked
  3589  0006D8  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3590  0006DA  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3591  0006DC  33E8               	rrcf	??_readControls& (0+255),f,b
  3592  0006DE  0100               	movlb	0	; () banked
  3593  0006E0  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3594  0006E2  D7F9               	goto	u4225
  3595  0006E4  C0E8  F0AA         	movff	??_readControls,_parameter+4
  3596  0006E8  C0E9  F0AB         	movff	??_readControls+1,_parameter+5
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;main.c: 192: lvlA = ADC_Read(3);
  3600  0006EC  0E00               	movlw	0
  3601  0006EE  0100               	movlb	0	; () banked
  3602  0006F0  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3603  0006F2  0E03               	movlw	3
  3604  0006F4  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3605  0006F6  EC2B  F006         	call	_ADC_Read	;wreg free
  3606  0006FA  C0E4  F078         	movff	?_ADC_Read,_lvlA
  3607  0006FE  C0E5  F079         	movff	?_ADC_Read+1,_lvlA+1
  3608                           
  3609                           ;main.c: 193: parameter[3] = lvlA>>4;
  3610  000702  C078  F0E8         	movff	_lvlA,??_readControls
  3611  000706  C079  F0E9         	movff	_lvlA+1,??_readControls+1
  3612  00070A  0E04               	movlw	4
  3613  00070C  0100               	movlb	0	; () banked
  3614  00070E  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3615  000710                     u4235:
  3616  000710  0100               	movlb	0	; () banked
  3617  000712  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3618  000714  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3619  000716  33E8               	rrcf	??_readControls& (0+255),f,b
  3620  000718  0100               	movlb	0	; () banked
  3621  00071A  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3622  00071C  D7F9               	goto	u4235
  3623  00071E  C0E8  F0AC         	movff	??_readControls,_parameter+6
  3624  000722  C0E9  F0AD         	movff	??_readControls+1,_parameter+7
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;main.c: 196: timeB = ADC_Read(6);
  3628  000726  0E00               	movlw	0
  3629  000728  0100               	movlb	0	; () banked
  3630  00072A  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3631  00072C  0E06               	movlw	6
  3632  00072E  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3633  000730  EC2B  F006         	call	_ADC_Read	;wreg free
  3634  000734  C0E4  F007         	movff	?_ADC_Read,_timeB
  3635  000738  C0E5  F008         	movff	?_ADC_Read+1,_timeB+1
  3636                           
  3637                           ;main.c: 197: parameter[4] = timeB >> 8;
  3638  00073C  C008  F0E8         	movff	_timeB+1,??_readControls
  3639  000740  0100               	movlb	0	; () banked
  3640  000742  6BE9               	clrf	(??_readControls+1)& (0+255),b
  3641  000744  BFE8               	btfsc	??_readControls& (0+255),7,b
  3642  000746  69E9               	setf	(??_readControls+1)& (0+255),b
  3643  000748  C0E8  F0AE         	movff	??_readControls,_parameter+8
  3644  00074C  C0E9  F0AF         	movff	??_readControls+1,_parameter+9
  3645                           
  3646                           ;main.c: 198: parameter[5] = (timeB & 0xFF);
  3647  000750  5007               	movf	_timeB,w,c
  3648  000752  0100               	movlb	0	; () banked
  3649  000754  6FB0               	movwf	(_parameter+10)& (0+255),b
  3650  000756  6BB1               	clrf	(_parameter+11)& (0+255),b
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;main.c: 200: fbkB = ADC_Read(2);
  3654  000758  0E00               	movlw	0
  3655  00075A  0100               	movlb	0	; () banked
  3656  00075C  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3657  00075E  0E02               	movlw	2
  3658  000760  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3659  000762  EC2B  F006         	call	_ADC_Read	;wreg free
  3660  000766  C0E4  F076         	movff	?_ADC_Read,_fbkB
  3661  00076A  C0E5  F077         	movff	?_ADC_Read+1,_fbkB+1
  3662                           
  3663                           ;main.c: 201: parameter[6] = fbkB>>4;
  3664  00076E  C076  F0E8         	movff	_fbkB,??_readControls
  3665  000772  C077  F0E9         	movff	_fbkB+1,??_readControls+1
  3666  000776  0E04               	movlw	4
  3667  000778  0100               	movlb	0	; () banked
  3668  00077A  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3669  00077C                     u4245:
  3670  00077C  0100               	movlb	0	; () banked
  3671  00077E  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3672  000780  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3673  000782  33E8               	rrcf	??_readControls& (0+255),f,b
  3674  000784  0100               	movlb	0	; () banked
  3675  000786  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3676  000788  D7F9               	goto	u4245
  3677  00078A  C0E8  F0B2         	movff	??_readControls,_parameter+12
  3678  00078E  C0E9  F0B3         	movff	??_readControls+1,_parameter+13
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;main.c: 203: lvlB = ADC_Read(9);
  3682  000792  0E00               	movlw	0
  3683  000794  0100               	movlb	0	; () banked
  3684  000796  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3685  000798  0E09               	movlw	9
  3686  00079A  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3687  00079C  EC2B  F006         	call	_ADC_Read	;wreg free
  3688  0007A0  C0E4  F074         	movff	?_ADC_Read,_lvlB
  3689  0007A4  C0E5  F075         	movff	?_ADC_Read+1,_lvlB+1
  3690                           
  3691                           ;main.c: 204: parameter[7] = lvlB>>4;
  3692  0007A8  C074  F0E8         	movff	_lvlB,??_readControls
  3693  0007AC  C075  F0E9         	movff	_lvlB+1,??_readControls+1
  3694  0007B0  0E04               	movlw	4
  3695  0007B2  0100               	movlb	0	; () banked
  3696  0007B4  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3697  0007B6                     u4255:
  3698  0007B6  0100               	movlb	0	; () banked
  3699  0007B8  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3700  0007BA  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3701  0007BC  33E8               	rrcf	??_readControls& (0+255),f,b
  3702  0007BE  0100               	movlb	0	; () banked
  3703  0007C0  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3704  0007C2  D7F9               	goto	u4255
  3705  0007C4  C0E8  F0B4         	movff	??_readControls,_parameter+14
  3706  0007C8  C0E9  F0B5         	movff	??_readControls+1,_parameter+15
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 207: timeC = ADC_Read(1);
  3710  0007CC  0E00               	movlw	0
  3711  0007CE  0100               	movlb	0	; () banked
  3712  0007D0  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3713  0007D2  0E01               	movlw	1
  3714  0007D4  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3715  0007D6  EC2B  F006         	call	_ADC_Read	;wreg free
  3716  0007DA  C0E4  F005         	movff	?_ADC_Read,_timeC
  3717  0007DE  C0E5  F006         	movff	?_ADC_Read+1,_timeC+1
  3718                           
  3719                           ;main.c: 208: parameter[8] = timeC >> 8;
  3720  0007E2  C006  F0E8         	movff	_timeC+1,??_readControls
  3721  0007E6  0100               	movlb	0	; () banked
  3722  0007E8  6BE9               	clrf	(??_readControls+1)& (0+255),b
  3723  0007EA  BFE8               	btfsc	??_readControls& (0+255),7,b
  3724  0007EC  69E9               	setf	(??_readControls+1)& (0+255),b
  3725  0007EE  C0E8  F0B6         	movff	??_readControls,_parameter+16
  3726  0007F2  C0E9  F0B7         	movff	??_readControls+1,_parameter+17
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;main.c: 209: parameter[9] = (timeC & 0xFF);
  3730  0007F6  5005               	movf	_timeC,w,c
  3731  0007F8  0100               	movlb	0	; () banked
  3732  0007FA  6FB8               	movwf	(_parameter+18)& (0+255),b
  3733  0007FC  6BB9               	clrf	(_parameter+19)& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;main.c: 211: fbkC = ADC_Read(5);
  3737  0007FE  0E00               	movlw	0
  3738  000800  0100               	movlb	0	; () banked
  3739  000802  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3740  000804  0E05               	movlw	5
  3741  000806  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3742  000808  EC2B  F006         	call	_ADC_Read	;wreg free
  3743  00080C  C0E4  F072         	movff	?_ADC_Read,_fbkC
  3744  000810  C0E5  F073         	movff	?_ADC_Read+1,_fbkC+1
  3745                           
  3746                           ;main.c: 212: parameter[10] = fbkC>>4;
  3747  000814  C072  F0E8         	movff	_fbkC,??_readControls
  3748  000818  C073  F0E9         	movff	_fbkC+1,??_readControls+1
  3749  00081C  0E04               	movlw	4
  3750  00081E  0100               	movlb	0	; () banked
  3751  000820  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3752  000822                     u4265:
  3753  000822  0100               	movlb	0	; () banked
  3754  000824  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3755  000826  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3756  000828  33E8               	rrcf	??_readControls& (0+255),f,b
  3757  00082A  0100               	movlb	0	; () banked
  3758  00082C  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3759  00082E  D7F9               	goto	u4265
  3760  000830  C0E8  F0BA         	movff	??_readControls,_parameter+20
  3761  000834  C0E9  F0BB         	movff	??_readControls+1,_parameter+21
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;main.c: 214: lvlC = ADC_Read(0);
  3765  000838  0E00               	movlw	0
  3766  00083A  0100               	movlb	0	; () banked
  3767  00083C  6FE5               	movwf	(ADC_Read@channel+1)& (0+255),b
  3768  00083E  0E00               	movlw	0
  3769  000840  6FE4               	movwf	ADC_Read@channel& (0+255),b
  3770  000842  EC2B  F006         	call	_ADC_Read	;wreg free
  3771  000846  C0E4  F070         	movff	?_ADC_Read,_lvlC
  3772  00084A  C0E5  F071         	movff	?_ADC_Read+1,_lvlC+1
  3773                           
  3774                           ;main.c: 215: parameter[11] = lvlC>>4;
  3775  00084E  C070  F0E8         	movff	_lvlC,??_readControls
  3776  000852  C071  F0E9         	movff	_lvlC+1,??_readControls+1
  3777  000856  0E04               	movlw	4
  3778  000858  0100               	movlb	0	; () banked
  3779  00085A  6FEA               	movwf	(??_readControls+2)& (0+255),b
  3780  00085C                     u4275:
  3781  00085C  0100               	movlb	0	; () banked
  3782  00085E  35E9               	rlcf	(??_readControls+1)& (0+255),w,b
  3783  000860  33E9               	rrcf	(??_readControls+1)& (0+255),f,b
  3784  000862  33E8               	rrcf	??_readControls& (0+255),f,b
  3785  000864  0100               	movlb	0	; () banked
  3786  000866  2FEA               	decfsz	(??_readControls+2)& (0+255),f,b
  3787  000868  D7F9               	goto	u4275
  3788  00086A  C0E8  F0BC         	movff	??_readControls,_parameter+22
  3789  00086E  C0E9  F0BD         	movff	??_readControls+1,_parameter+23
  3790                           
  3791                           ; BSR set to: 0
  3792  000872  0012               	return		;funcret
  3793  000874                     __end_of_readControls:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           intcon	equ	0xFF2
  3800                           postinc0	equ	0xFEE
  3801                           wreg	equ	0xFE8
  3802                           postinc1	equ	0xFE6
  3803                           postdec1	equ	0xFE5
  3804                           fsr1h	equ	0xFE2
  3805                           fsr1l	equ	0xFE1
  3806                           postinc2	equ	0xFDE
  3807                           postdec2	equ	0xFDD
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           
  3812 ;; *************** function _ADC_Read *****************
  3813 ;; Defined at:
  3814 ;;		line 393 in file "hardware.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  channel         2    0[BANK0 ] int 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  value           2    2[BANK0 ] int 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  2    0[BANK0 ] int 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;Total ram usage:        4 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    4
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_readControls
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text19
  3844  000C56                     __ptext19:
  3845                           	opt stack 0
  3846  000C56                     _ADC_Read:
  3847                           	opt stack 25
  3848                           
  3849                           ;hardware.c: 395: int value;
  3850                           ;hardware.c: 396: ADCHS0Lbits.CH0SA = channel;
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;incstack = 0
  3854  000C56  010E               	movlb	14	; () banked
  3855  000C58  5186               	movf	134,w,b	;volatile
  3856  000C5A  0100               	movlb	0	; () banked
  3857  000C5C  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  3858  000C5E  0BE0               	andlw	-32
  3859  000C60  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  3860  000C62  010E               	movlb	14	; () banked
  3861  000C64  6F86               	movwf	134,b	;volatile
  3862                           
  3863                           ; BSR set to: 14
  3864                           ;hardware.c: 397: _delay((unsigned long)((100)*(32000000/4000000.0)));
  3865  000C66  0EA0               	movlw	160
  3866  000C68                     u4747:
  3867  000C68  D000               	nop2	
  3868  000C6A  2EE8               	decfsz	wreg,f,c
  3869  000C6C  D7FD               	bra	u4747
  3870                           
  3871                           ;hardware.c: 398: ADCON1Hbits.ADON = 1;
  3872  000C6E  8EC1               	bsf	4033,7,c	;volatile
  3873                           
  3874                           ;hardware.c: 399: ADCON1Lbits.SAMP = 1;
  3875  000C70  82C0               	bsf	4032,1,c	;volatile
  3876                           
  3877                           ;hardware.c: 400: _delay((unsigned long)((100)*(32000000/4000000.0)));
  3878  000C72  0EA0               	movlw	160
  3879  000C74                     u4757:
  3880  000C74  D000               	nop2	
  3881  000C76  2EE8               	decfsz	wreg,f,c
  3882  000C78  D7FD               	bra	u4757
  3883                           
  3884                           ;hardware.c: 401: ADCON1Lbits.SAMP = 0;
  3885  000C7A  92C0               	bcf	4032,1,c	;volatile
  3886  000C7C  A0C0               	btfss	4032,0,c	;volatile
  3887  000C7E  D7FE               	goto	l876
  3888                           
  3889                           ;hardware.c: 403: ADCON1Hbits.ADON = 0;
  3890  000C80  9EC1               	bcf	4033,7,c	;volatile
  3891                           
  3892                           ;hardware.c: 406: if (channel == 0)
  3893  000C82  0100               	movlb	0	; () banked
  3894  000C84  51E4               	movf	ADC_Read@channel& (0+255),w,b
  3895  000C86  0100               	movlb	0	; () banked
  3896  000C88  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3897  000C8A  A4D8               	btfss	status,2,c
  3898  000C8C  D005               	goto	l878
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;hardware.c: 407: {
  3902                           ;hardware.c: 408: value = ADCBUF0;
  3903  000C8E  CFC2 F0E6          	movff	4034,ADC_Read@value	;volatile
  3904  000C92  CFC3 F0E7          	movff	4035,ADC_Read@value+1	;volatile
  3905                           
  3906                           ;hardware.c: 409: }
  3907  000C96  D070               	goto	l897
  3908  000C98                     l878:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;hardware.c: 410: else if (channel == 1)
  3912                           
  3913                           ; BSR set to: 0
  3914  000C98  0100               	movlb	0	; () banked
  3915  000C9A  05E4               	decf	ADC_Read@channel& (0+255),w,b
  3916  000C9C  0100               	movlb	0	; () banked
  3917  000C9E  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3918  000CA0  A4D8               	btfss	status,2,c
  3919  000CA2  D005               	goto	l880
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;hardware.c: 411: {
  3923                           ;hardware.c: 412: value = ADCBUF1;
  3924  000CA4  CE48 F0E6          	movff	3656,ADC_Read@value	;volatile
  3925  000CA8  CE49 F0E7          	movff	3657,ADC_Read@value+1	;volatile
  3926                           
  3927                           ;hardware.c: 413: }
  3928  000CAC  D065               	goto	l897
  3929  000CAE                     l880:
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;hardware.c: 414: else if (channel == 2)
  3933                           
  3934                           ; BSR set to: 0
  3935  000CAE  0E02               	movlw	2
  3936  000CB0  0100               	movlb	0	; () banked
  3937  000CB2  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  3938  000CB4  0100               	movlb	0	; () banked
  3939  000CB6  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3940  000CB8  A4D8               	btfss	status,2,c
  3941  000CBA  D005               	goto	l882
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;hardware.c: 415: {
  3945                           ;hardware.c: 416: value = ADCBUF2;
  3946  000CBC  CE4A F0E6          	movff	3658,ADC_Read@value	;volatile
  3947  000CC0  CE4B F0E7          	movff	3659,ADC_Read@value+1	;volatile
  3948                           
  3949                           ;hardware.c: 417: }
  3950  000CC4  D059               	goto	l897
  3951  000CC6                     l882:
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;hardware.c: 418: else if (channel == 3)
  3955                           
  3956                           ; BSR set to: 0
  3957  000CC6  0E03               	movlw	3
  3958  000CC8  0100               	movlb	0	; () banked
  3959  000CCA  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  3960  000CCC  0100               	movlb	0	; () banked
  3961  000CCE  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3962  000CD0  A4D8               	btfss	status,2,c
  3963  000CD2  D005               	goto	l884
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;hardware.c: 419: {
  3967                           ;hardware.c: 420: value = ADCBUF3;
  3968  000CD4  CE4C F0E6          	movff	3660,ADC_Read@value	;volatile
  3969  000CD8  CE4D F0E7          	movff	3661,ADC_Read@value+1	;volatile
  3970                           
  3971                           ;hardware.c: 421: }
  3972  000CDC  D04D               	goto	l897
  3973  000CDE                     l884:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;hardware.c: 422: else if (channel == 4)
  3977                           
  3978                           ; BSR set to: 0
  3979  000CDE  0E04               	movlw	4
  3980  000CE0  0100               	movlb	0	; () banked
  3981  000CE2  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  3982  000CE4  0100               	movlb	0	; () banked
  3983  000CE6  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3984  000CE8  A4D8               	btfss	status,2,c
  3985  000CEA  D005               	goto	l886
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;hardware.c: 423: {
  3989                           ;hardware.c: 424: value = ADCBUF4;
  3990  000CEC  CE4E F0E6          	movff	3662,ADC_Read@value	;volatile
  3991  000CF0  CE4F F0E7          	movff	3663,ADC_Read@value+1	;volatile
  3992                           
  3993                           ;hardware.c: 425: }
  3994  000CF4  D041               	goto	l897
  3995  000CF6                     l886:
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;hardware.c: 426: else if (channel == 5)
  3999                           
  4000                           ; BSR set to: 0
  4001  000CF6  0E05               	movlw	5
  4002  000CF8  0100               	movlb	0	; () banked
  4003  000CFA  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  4004  000CFC  0100               	movlb	0	; () banked
  4005  000CFE  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4006  000D00  A4D8               	btfss	status,2,c
  4007  000D02  D005               	goto	l888
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;hardware.c: 427: {
  4011                           ;hardware.c: 428: value = ADCBUF5;
  4012  000D04  CE50 F0E6          	movff	3664,ADC_Read@value	;volatile
  4013  000D08  CE51 F0E7          	movff	3665,ADC_Read@value+1	;volatile
  4014                           
  4015                           ;hardware.c: 429: }
  4016  000D0C  D035               	goto	l897
  4017  000D0E                     l888:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;hardware.c: 430: else if (channel == 6)
  4021                           
  4022                           ; BSR set to: 0
  4023  000D0E  0E06               	movlw	6
  4024  000D10  0100               	movlb	0	; () banked
  4025  000D12  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  4026  000D14  0100               	movlb	0	; () banked
  4027  000D16  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4028  000D18  A4D8               	btfss	status,2,c
  4029  000D1A  D005               	goto	l890
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;hardware.c: 431: {
  4033                           ;hardware.c: 432: value = ADCBUF6;
  4034  000D1C  CE52 F0E6          	movff	3666,ADC_Read@value	;volatile
  4035  000D20  CE53 F0E7          	movff	3667,ADC_Read@value+1	;volatile
  4036                           
  4037                           ;hardware.c: 433: }
  4038  000D24  D029               	goto	l897
  4039  000D26                     l890:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;hardware.c: 434: else if (channel == 14)
  4043                           
  4044                           ; BSR set to: 0
  4045  000D26  0E0E               	movlw	14
  4046  000D28  0100               	movlb	0	; () banked
  4047  000D2A  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  4048  000D2C  0100               	movlb	0	; () banked
  4049  000D2E  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4050  000D30  A4D8               	btfss	status,2,c
  4051  000D32  D005               	goto	l892
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;hardware.c: 435: {
  4055                           ;hardware.c: 436: value = ADCBUF14;
  4056  000D34  CE62 F0E6          	movff	3682,ADC_Read@value	;volatile
  4057  000D38  CE63 F0E7          	movff	3683,ADC_Read@value+1	;volatile
  4058                           
  4059                           ;hardware.c: 437: }
  4060  000D3C  D01D               	goto	l897
  4061  000D3E                     l892:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;hardware.c: 438: else if (channel == 8)
  4065                           
  4066                           ; BSR set to: 0
  4067  000D3E  0E08               	movlw	8
  4068  000D40  0100               	movlb	0	; () banked
  4069  000D42  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  4070  000D44  0100               	movlb	0	; () banked
  4071  000D46  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4072  000D48  A4D8               	btfss	status,2,c
  4073  000D4A  D005               	goto	l894
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;hardware.c: 439: {
  4077                           ;hardware.c: 440: value = ADCBUF8;
  4078  000D4C  CE56 F0E6          	movff	3670,ADC_Read@value	;volatile
  4079  000D50  CE57 F0E7          	movff	3671,ADC_Read@value+1	;volatile
  4080                           
  4081                           ;hardware.c: 441: }
  4082  000D54  D011               	goto	l897
  4083  000D56                     l894:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;hardware.c: 442: else if (channel == 9)
  4087                           
  4088                           ; BSR set to: 0
  4089  000D56  0E09               	movlw	9
  4090  000D58  0100               	movlb	0	; () banked
  4091  000D5A  19E4               	xorwf	ADC_Read@channel& (0+255),w,b
  4092  000D5C  0100               	movlb	0	; () banked
  4093  000D5E  11E5               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4094  000D60  A4D8               	btfss	status,2,c
  4095  000D62  D005               	goto	l896
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;hardware.c: 443: {
  4099                           ;hardware.c: 444: value = ADCBUF9;
  4100  000D64  CE58 F0E6          	movff	3672,ADC_Read@value	;volatile
  4101  000D68  CE59 F0E7          	movff	3673,ADC_Read@value+1	;volatile
  4102                           
  4103                           ;hardware.c: 445: }
  4104  000D6C  D005               	goto	l897
  4105  000D6E                     l896:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;hardware.c: 446: else value = 0;
  4109                           
  4110                           ; BSR set to: 0
  4111  000D6E  0E00               	movlw	0
  4112  000D70  0100               	movlb	0	; () banked
  4113  000D72  6FE7               	movwf	(ADC_Read@value+1)& (0+255),b
  4114  000D74  0E00               	movlw	0
  4115  000D76  6FE6               	movwf	ADC_Read@value& (0+255),b
  4116  000D78                     l897:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;hardware.c: 447: return (value);
  4120                           
  4121                           ; BSR set to: 0
  4122                           
  4123                           ; BSR set to: 0
  4124                           
  4125                           ; BSR set to: 0
  4126                           
  4127                           ; BSR set to: 0
  4128                           
  4129                           ; BSR set to: 0
  4130                           
  4131                           ; BSR set to: 0
  4132                           
  4133                           ; BSR set to: 0
  4134                           
  4135                           ; BSR set to: 0
  4136                           
  4137                           ; BSR set to: 0
  4138                           
  4139                           ; BSR set to: 0
  4140  000D78  C0E6  F0E4         	movff	ADC_Read@value,?_ADC_Read
  4141  000D7C  C0E7  F0E5         	movff	ADC_Read@value+1,?_ADC_Read+1
  4142  000D80  0012               	return	
  4143  000D82                     __end_of_ADC_Read:
  4144                           	opt stack 0
  4145                           tblptru	equ	0xFF8
  4146                           tblptrh	equ	0xFF7
  4147                           tblptrl	equ	0xFF6
  4148                           tablat	equ	0xFF5
  4149                           intcon	equ	0xFF2
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           postinc1	equ	0xFE6
  4153                           postdec1	equ	0xFE5
  4154                           fsr1h	equ	0xFE2
  4155                           fsr1l	equ	0xFE1
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _fetchPreset *****************
  4163 ;; Defined at:
  4164 ;;		line 238 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  values         24    0[BANK1 ] int [12]
  4169 ;;  i               2   26[BANK1 ] int 
  4170 ;;  test            2   24[BANK1 ] int 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;Total ram usage:       28 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    6
  4187 ;; This function calls:
  4188 ;;		_I2C1_Block_Read_EERPOM
  4189 ;;		_updatePreset
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text20
  4196  0013F6                     __ptext20:
  4197                           	opt stack 0
  4198  0013F6                     _fetchPreset:
  4199                           	opt stack 24
  4200                           
  4201                           ;main.c: 240: int test = 0;
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;incstack = 0
  4205  0013F6  0E00               	movlw	0
  4206  0013F8  0101               	movlb	1	; () banked
  4207  0013FA  6F91               	movwf	(fetchPreset@test+1)& (0+255),b
  4208  0013FC  0E00               	movlw	0
  4209  0013FE  6F90               	movwf	fetchPreset@test& (0+255),b
  4210                           
  4211                           ;main.c: 241: int i = 0;
  4212  001400  0E00               	movlw	0
  4213  001402  0101               	movlb	1	; () banked
  4214  001404  6F93               	movwf	(fetchPreset@i+1)& (0+255),b
  4215  001406  0E00               	movlw	0
  4216  001408  6F92               	movwf	fetchPreset@i& (0+255),b
  4217                           
  4218                           ;main.c: 242: int values[12];
  4219                           ;main.c: 244: for (i = 0; i < 5; i++)
  4220  00140A  0E00               	movlw	0
  4221  00140C  0101               	movlb	1	; () banked
  4222  00140E  6F93               	movwf	(fetchPreset@i+1)& (0+255),b
  4223  001410  0E00               	movlw	0
  4224  001412  6F92               	movwf	fetchPreset@i& (0+255),b
  4225  001414                     l4187:
  4226                           
  4227                           ; BSR set to: 1
  4228  001414  0101               	movlb	1	; () banked
  4229  001416  BF93               	btfsc	(fetchPreset@i+1)& (0+255),7,b
  4230  001418  D008               	goto	l186
  4231  00141A  0101               	movlb	1	; () banked
  4232  00141C  5193               	movf	(fetchPreset@i+1)& (0+255),w,b
  4233  00141E  E12C               	bnz	l188
  4234  001420  0E05               	movlw	5
  4235  001422  0101               	movlb	1	; () banked
  4236  001424  5D92               	subwf	fetchPreset@i& (0+255),w,b
  4237  001426  B0D8               	btfsc	status,0,c
  4238  001428  0012               	return	
  4239  00142A                     l186:
  4240                           
  4241                           ; BSR set to: 1
  4242                           ;main.c: 245: {
  4243                           ;main.c: 246: I2C1_Block_Read_EERPOM(i, values, 12);
  4244                           
  4245                           ; BSR set to: 1
  4246  00142A  C192  F0E4         	movff	fetchPreset@i,I2C1_Block_Read_EERPOM@slot
  4247  00142E  C193  F0E5         	movff	fetchPreset@i+1,I2C1_Block_Read_EERPOM@slot+1
  4248  001432  0E78               	movlw	low fetchPreset@values
  4249  001434  0100               	movlb	0	; () banked
  4250  001436  6FE6               	movwf	I2C1_Block_Read_EERPOM@data& (0+255),b
  4251  001438  0E01               	movlw	high fetchPreset@values
  4252  00143A  0100               	movlb	0	; () banked
  4253  00143C  6FE7               	movwf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),b
  4254  00143E  0E00               	movlw	0
  4255  001440  0100               	movlb	0	; () banked
  4256  001442  6FE9               	movwf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),b
  4257  001444  0E0C               	movlw	12
  4258  001446  6FE8               	movwf	I2C1_Block_Read_EERPOM@bytes& (0+255),b
  4259  001448  EC8E  F005         	call	_I2C1_Block_Read_EERPOM	;wreg free
  4260                           
  4261                           ;main.c: 247: updatePreset(i+1, values);
  4262  00144C  0E01               	movlw	1
  4263  00144E  0101               	movlb	1	; () banked
  4264  001450  2592               	addwf	fetchPreset@i& (0+255),w,b
  4265  001452  0100               	movlb	0	; () banked
  4266  001454  6FEA               	movwf	updatePreset@slot& (0+255),b
  4267  001456  0E00               	movlw	0
  4268  001458  0101               	movlb	1	; () banked
  4269  00145A  2193               	addwfc	(fetchPreset@i+1)& (0+255),w,b
  4270  00145C  0100               	movlb	0	; () banked
  4271  00145E  6FEB               	movwf	(updatePreset@slot+1)& (0+255),b
  4272  001460  0E78               	movlw	low fetchPreset@values
  4273  001462  0100               	movlb	0	; () banked
  4274  001464  6FEC               	movwf	updatePreset@values& (0+255),b
  4275  001466  0E01               	movlw	high fetchPreset@values
  4276  001468  0100               	movlb	0	; () banked
  4277  00146A  6FED               	movwf	(updatePreset@values+1)& (0+255),b
  4278  00146C  EC43  F008         	call	_updatePreset	;wreg free
  4279  001470  0101               	movlb	1	; () banked
  4280  001472  4B92               	infsnz	fetchPreset@i& (0+255),f,b
  4281  001474  2B93               	incf	(fetchPreset@i+1)& (0+255),f,b
  4282  001476  D7CE               	goto	l4187
  4283  001478                     l188:
  4284                           
  4285                           ; BSR set to: 1
  4286  001478  0012               	return		;funcret
  4287  00147A                     __end_of_fetchPreset:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           intcon	equ	0xFF2
  4294                           postinc0	equ	0xFEE
  4295                           wreg	equ	0xFE8
  4296                           postinc1	equ	0xFE6
  4297                           postdec1	equ	0xFE5
  4298                           fsr1h	equ	0xFE2
  4299                           fsr1l	equ	0xFE1
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _updatePreset *****************
  4307 ;; Defined at:
  4308 ;;		line 218 in file "main.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  slot            2    6[BANK0 ] int 
  4311 ;;  values          2    8[BANK0 ] PTR int 
  4312 ;;		 -> fetchPreset@values(24), parameter(24), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  i               2   12[BANK0 ] int 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;Total ram usage:        8 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    5
  4331 ;; This function calls:
  4332 ;;		___wmul
  4333 ;; This function is called by:
  4334 ;;		_fetchPreset
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text21
  4340  001086                     __ptext21:
  4341                           	opt stack 0
  4342  001086                     _updatePreset:
  4343                           	opt stack 25
  4344                           
  4345                           ;main.c: 220: int i;
  4346                           ;main.c: 222: for (i = 0; i < 12; i++)
  4347                           
  4348                           ; BSR set to: 1
  4349                           ;incstack = 0
  4350  001086  0E00               	movlw	0
  4351  001088  0100               	movlb	0	; () banked
  4352  00108A  6FF1               	movwf	(updatePreset@i+1)& (0+255),b
  4353  00108C  0E00               	movlw	0
  4354  00108E  6FF0               	movwf	updatePreset@i& (0+255),b
  4355  001090                     l3903:
  4356                           
  4357                           ; BSR set to: 0
  4358  001090  0100               	movlb	0	; () banked
  4359  001092  BFF1               	btfsc	(updatePreset@i+1)& (0+255),7,b
  4360  001094  D008               	goto	l176
  4361  001096  0100               	movlb	0	; () banked
  4362  001098  51F1               	movf	(updatePreset@i+1)& (0+255),w,b
  4363  00109A  E140               	bnz	l178
  4364  00109C  0E0C               	movlw	12
  4365  00109E  0100               	movlb	0	; () banked
  4366  0010A0  5DF0               	subwf	updatePreset@i& (0+255),w,b
  4367  0010A2  B0D8               	btfsc	status,0,c
  4368  0010A4  0012               	return	
  4369  0010A6                     l176:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;main.c: 223: {
  4373                           ;main.c: 224: userParams[slot][i] = values[i];
  4374                           
  4375                           ; BSR set to: 0
  4376  0010A6  90D8               	bcf	status,0,c
  4377  0010A8  0100               	movlb	0	; () banked
  4378  0010AA  35F0               	rlcf	updatePreset@i& (0+255),w,b
  4379  0010AC  6ED9               	movwf	fsr2l,c
  4380  0010AE  0100               	movlb	0	; () banked
  4381  0010B0  35F1               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4382  0010B2  6EDA               	movwf	fsr2h,c
  4383  0010B4  0100               	movlb	0	; () banked
  4384  0010B6  51EC               	movf	updatePreset@values& (0+255),w,b
  4385  0010B8  26D9               	addwf	fsr2l,f,c
  4386  0010BA  0100               	movlb	0	; () banked
  4387  0010BC  51ED               	movf	(updatePreset@values+1)& (0+255),w,b
  4388  0010BE  22DA               	addwfc	fsr2h,f,c
  4389  0010C0  C0EA  F0E4         	movff	updatePreset@slot,___wmul@multiplier
  4390  0010C4  C0EB  F0E5         	movff	updatePreset@slot+1,___wmul@multiplier+1
  4391  0010C8  0E00               	movlw	0
  4392  0010CA  0100               	movlb	0	; () banked
  4393  0010CC  6FE7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4394  0010CE  0E18               	movlw	24
  4395  0010D0  6FE6               	movwf	___wmul@multiplicand& (0+255),b
  4396  0010D2  ECB7  F00B         	call	___wmul	;wreg free
  4397  0010D6  0E00               	movlw	low _userParams
  4398  0010D8  0100               	movlb	0	; () banked
  4399  0010DA  6FEE               	movwf	??_updatePreset& (0+255),b
  4400  0010DC  0E01               	movlw	high _userParams
  4401  0010DE  0100               	movlb	0	; () banked
  4402  0010E0  6FEF               	movwf	(??_updatePreset+1)& (0+255),b
  4403  0010E2  0100               	movlb	0	; () banked
  4404  0010E4  51E4               	movf	?___wmul& (0+255),w,b
  4405  0010E6  0100               	movlb	0	; () banked
  4406  0010E8  27EE               	addwf	??_updatePreset& (0+255),f,b
  4407  0010EA  0100               	movlb	0	; () banked
  4408  0010EC  51E5               	movf	(?___wmul+1)& (0+255),w,b
  4409  0010EE  0100               	movlb	0	; () banked
  4410  0010F0  23EF               	addwfc	(??_updatePreset+1)& (0+255),f,b
  4411  0010F2  90D8               	bcf	status,0,c
  4412  0010F4  0100               	movlb	0	; () banked
  4413  0010F6  35F0               	rlcf	updatePreset@i& (0+255),w,b
  4414  0010F8  6EE1               	movwf	fsr1l,c
  4415  0010FA  0100               	movlb	0	; () banked
  4416  0010FC  35F1               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4417  0010FE  6EE2               	movwf	fsr1h,c
  4418  001100  0100               	movlb	0	; () banked
  4419  001102  51EE               	movf	??_updatePreset& (0+255),w,b
  4420  001104  26E1               	addwf	fsr1l,f,c
  4421  001106  0100               	movlb	0	; () banked
  4422  001108  51EF               	movf	(??_updatePreset+1)& (0+255),w,b
  4423  00110A  22E2               	addwfc	fsr1h,f,c
  4424  00110C  CFDE FFE6          	movff	postinc2,postinc1
  4425  001110  CFDD FFE5          	movff	postdec2,postdec1
  4426                           
  4427                           ; BSR set to: 0
  4428  001114  0100               	movlb	0	; () banked
  4429  001116  4BF0               	infsnz	updatePreset@i& (0+255),f,b
  4430  001118  2BF1               	incf	(updatePreset@i+1)& (0+255),f,b
  4431  00111A  D7BA               	goto	l3903
  4432  00111C                     l178:
  4433                           
  4434                           ; BSR set to: 0
  4435  00111C  0012               	return		;funcret
  4436  00111E                     __end_of_updatePreset:
  4437                           	opt stack 0
  4438                           tblptru	equ	0xFF8
  4439                           tblptrh	equ	0xFF7
  4440                           tblptrl	equ	0xFF6
  4441                           tablat	equ	0xFF5
  4442                           intcon	equ	0xFF2
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           postinc1	equ	0xFE6
  4446                           postdec1	equ	0xFE5
  4447                           fsr1h	equ	0xFE2
  4448                           fsr1l	equ	0xFE1
  4449                           postinc2	equ	0xFDE
  4450                           postdec2	equ	0xFDD
  4451                           fsr2h	equ	0xFDA
  4452                           fsr2l	equ	0xFD9
  4453                           status	equ	0xFD8
  4454                           
  4455 ;; *************** function ___wmul *****************
  4456 ;; Defined at:
  4457 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4460 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  product         2    4[BANK0 ] unsigned int 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  2    0[BANK0 ] unsigned int 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0, prodl, prodh
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;Total ram usage:        6 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    4
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_updatePreset
  4483 ;;		_updateParams
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text22
  4488  00176E                     __ptext22:
  4489                           	opt stack 0
  4490  00176E                     ___wmul:
  4491                           	opt stack 25
  4492                           
  4493                           ; BSR set to: 0
  4494                           ;incstack = 0
  4495  00176E  0100               	movlb	0	; () banked
  4496  001770  51E4               	movf	___wmul@multiplier& (0+255),w,b
  4497  001772  0100               	movlb	0	; () banked
  4498  001774  03E6               	mulwf	___wmul@multiplicand& (0+255),b
  4499  001776  CFF3 F0E8          	movff	prodl,___wmul@product
  4500  00177A  CFF4 F0E9          	movff	prodh,___wmul@product+1
  4501  00177E  0100               	movlb	0	; () banked
  4502  001780  51E4               	movf	___wmul@multiplier& (0+255),w,b
  4503  001782  0100               	movlb	0	; () banked
  4504  001784  03E7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4505  001786  50F3               	movf	prodl,w,c
  4506  001788  0100               	movlb	0	; () banked
  4507  00178A  27E9               	addwf	(___wmul@product+1)& (0+255),f,b
  4508  00178C  0100               	movlb	0	; () banked
  4509  00178E  51E5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4510  001790  0100               	movlb	0	; () banked
  4511  001792  03E6               	mulwf	___wmul@multiplicand& (0+255),b
  4512  001794  50F3               	movf	prodl,w,c
  4513  001796  0100               	movlb	0	; () banked
  4514  001798  27E9               	addwf	(___wmul@product+1)& (0+255),f,b
  4515                           
  4516                           ; BSR set to: 0
  4517  00179A  C0E8  F0E4         	movff	___wmul@product,?___wmul
  4518  00179E  C0E9  F0E5         	movff	___wmul@product+1,?___wmul+1
  4519  0017A2  0012               	return	
  4520  0017A4                     __end_of___wmul:
  4521                           	opt stack 0
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           postinc1	equ	0xFE6
  4532                           postdec1	equ	0xFE5
  4533                           fsr1h	equ	0xFE2
  4534                           fsr1l	equ	0xFE1
  4535                           postinc2	equ	0xFDE
  4536                           postdec2	equ	0xFDD
  4537                           fsr2h	equ	0xFDA
  4538                           fsr2l	equ	0xFD9
  4539                           status	equ	0xFD8
  4540                           
  4541 ;; *************** function _I2C1_Block_Read_EERPOM *****************
  4542 ;; Defined at:
  4543 ;;		line 102 in file "serial.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  slot            2    0[BANK0 ] int 
  4546 ;;  data            2    2[BANK0 ] PTR PTR int 
  4547 ;;		 -> fetchPreset@values(24), 
  4548 ;;  bytes           2    4[BANK0 ] int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  n               2   11[BANK0 ] int 
  4551 ;;  dummyWrite      1   10[BANK0 ] unsigned char 
  4552 ;;  memValue        1    9[BANK0 ] unsigned char 
  4553 ;;  rdAddr          1    8[BANK0 ] unsigned char 
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4563 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;Total ram usage:       13 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; Hardware stack levels required when called:    4
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_fetchPreset
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text23
  4578  000B1C                     __ptext23:
  4579                           	opt stack 0
  4580  000B1C                     _I2C1_Block_Read_EERPOM:
  4581                           	opt stack 25
  4582                           
  4583                           ;serial.c: 104: char dummyWrite = 0b10100000;
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;incstack = 0
  4587  000B1C  0EA0               	movlw	160
  4588  000B1E  0100               	movlb	0	; () banked
  4589  000B20  6FEE               	movwf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),b
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;serial.c: 105: char rdAddr = (dummyWrite|0x01);
  4593  000B22  0100               	movlb	0	; () banked
  4594  000B24  51EE               	movf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),w,b
  4595  000B26  0901               	iorlw	1
  4596  000B28  0100               	movlb	0	; () banked
  4597  000B2A  6FEC               	movwf	I2C1_Block_Read_EERPOM@rdAddr& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;serial.c: 106: char memValue = presetAdd[slot];
  4601  000B2C  90D8               	bcf	status,0,c
  4602  000B2E  0100               	movlb	0	; () banked
  4603  000B30  35E4               	rlcf	I2C1_Block_Read_EERPOM@slot& (0+255),w,b
  4604  000B32  6ED9               	movwf	fsr2l,c
  4605  000B34  0100               	movlb	0	; () banked
  4606  000B36  35E5               	rlcf	(I2C1_Block_Read_EERPOM@slot+1)& (0+255),w,b
  4607  000B38  6EDA               	movwf	fsr2h,c
  4608  000B3A  0ED6               	movlw	low _presetAdd
  4609  000B3C  26D9               	addwf	fsr2l,f,c
  4610  000B3E  0E00               	movlw	high _presetAdd
  4611  000B40  22DA               	addwfc	fsr2h,f,c
  4612  000B42  50DF               	movf	indf2,w,c
  4613  000B44  0100               	movlb	0	; () banked
  4614  000B46  6FED               	movwf	I2C1_Block_Read_EERPOM@memValue& (0+255),b
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;serial.c: 107: int n = 0;
  4618  000B48  0E00               	movlw	0
  4619  000B4A  0100               	movlb	0	; () banked
  4620  000B4C  6FF0               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4621  000B4E  0E00               	movlw	0
  4622  000B50  6FEF               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;serial.c: 109: SSP1CON1bits.SSPEN = 0x1;
  4626  000B52  8AC6               	bsf	4038,5,c	;volatile
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;serial.c: 110: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4630  000B54  0E0D               	movlw	13
  4631  000B56                     u4767:
  4632  000B56  2EE8               	decfsz	wreg,f,c
  4633  000B58  D7FE               	bra	u4767
  4634  000B5A  F000               	nop	
  4635                           
  4636                           ;serial.c: 112: SSP1CON2bits.SEN = 0x1;
  4637  000B5C  80C5               	bsf	4037,0,c	;volatile
  4638  000B5E  B0C5               	btfsc	4037,0,c	;volatile
  4639  000B60  D7FE               	goto	l1145
  4640  000B62                     u4020:
  4641                           
  4642                           ;serial.c: 114: while(!PIR1bits.SSP1IF);
  4643  000B62  A69E               	btfss	3998,3,c	;volatile
  4644  000B64  D7FE               	goto	u4020
  4645                           
  4646                           ;serial.c: 115: PIR1bits.SSP1IF = 0x0;
  4647  000B66  969E               	bcf	3998,3,c	;volatile
  4648                           
  4649                           ;serial.c: 116: SSP1BUF = dummyWrite;
  4650  000B68  C0EE  FFC9         	movff	I2C1_Block_Read_EERPOM@dummyWrite,4041	;volatile
  4651                           
  4652                           ;serial.c: 118: if(SSP1CON2bits.ACKSTAT);
  4653  000B6C  50C5               	movf	4037,w,c	;volatile
  4654  000B6E                     
  4655                           ;serial.c: 119: while(!PIR1bits.SSP1IF);
  4656  000B6E  A69E               	btfss	3998,3,c	;volatile
  4657  000B70  D7FE               	goto	l1150
  4658                           
  4659                           ;serial.c: 120: PIR1bits.SSP1IF = 0x0;
  4660  000B72  969E               	bcf	3998,3,c	;volatile
  4661                           
  4662                           ;serial.c: 121: SSP1BUF = memValue;
  4663  000B74  C0ED  FFC9         	movff	I2C1_Block_Read_EERPOM@memValue,4041	;volatile
  4664  000B78  BCC5               	btfsc	4037,6,c	;volatile
  4665  000B7A  D7FE               	goto	l1155
  4666  000B7C                     u4050:
  4667                           
  4668                           ;serial.c: 124: while(!PIR1bits.SSP1IF);
  4669  000B7C  A69E               	btfss	3998,3,c	;volatile
  4670  000B7E  D7FE               	goto	u4050
  4671                           
  4672                           ;serial.c: 125: PIR1bits.SSP1IF = 0x0;
  4673  000B80  969E               	bcf	3998,3,c	;volatile
  4674                           
  4675                           ;serial.c: 126: SSP1CON2bits.RSEN = 0x1;
  4676  000B82  82C5               	bsf	4037,1,c	;volatile
  4677  000B84  B2C5               	btfsc	4037,1,c	;volatile
  4678  000B86  D7FE               	goto	l1161
  4679  000B88                     u4070:
  4680                           
  4681                           ;serial.c: 129: while(!PIR1bits.SSP1IF);
  4682  000B88  A69E               	btfss	3998,3,c	;volatile
  4683  000B8A  D7FE               	goto	u4070
  4684                           
  4685                           ;serial.c: 130: PIR1bits.SSP1IF = 0x0;
  4686  000B8C  969E               	bcf	3998,3,c	;volatile
  4687                           
  4688                           ;serial.c: 131: SSP1BUF = rdAddr;
  4689  000B8E  C0EC  FFC9         	movff	I2C1_Block_Read_EERPOM@rdAddr,4041	;volatile
  4690  000B92  BCC5               	btfsc	4037,6,c	;volatile
  4691  000B94  D7FE               	goto	l1167
  4692  000B96                     u4090:
  4693                           
  4694                           ;serial.c: 134: while(!PIR1bits.SSP1IF);
  4695  000B96  A69E               	btfss	3998,3,c	;volatile
  4696  000B98  D7FE               	goto	u4090
  4697                           
  4698                           ;serial.c: 135: PIR1bits.SSP1IF = 0x0;
  4699  000B9A  969E               	bcf	3998,3,c	;volatile
  4700                           
  4701                           ;serial.c: 137: SSP1CON2bits.RCEN = 0x1;
  4702  000B9C  86C5               	bsf	4037,3,c	;volatile
  4703  000B9E  A0C7               	btfss	4039,0,c	;volatile
  4704  000BA0  D7FE               	goto	l1173
  4705  000BA2                     u4110:
  4706                           
  4707                           ;serial.c: 140: while (!PIR1bits.SSP1IF);
  4708  000BA2  A69E               	btfss	3998,3,c	;volatile
  4709  000BA4  D7FE               	goto	u4110
  4710                           
  4711                           ;serial.c: 141: data[n] = SSP1BUF;
  4712  000BA6  50C9               	movf	4041,w,c	;volatile
  4713  000BA8  0100               	movlb	0	; () banked
  4714  000BAA  6FEA               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4715  000BAC  6BEB               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4716  000BAE  90D8               	bcf	status,0,c
  4717  000BB0  0100               	movlb	0	; () banked
  4718  000BB2  35EF               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4719  000BB4  6ED9               	movwf	fsr2l,c
  4720  000BB6  0100               	movlb	0	; () banked
  4721  000BB8  35F0               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4722  000BBA  6EDA               	movwf	fsr2h,c
  4723  000BBC  0100               	movlb	0	; () banked
  4724  000BBE  51E6               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4725  000BC0  26D9               	addwf	fsr2l,f,c
  4726  000BC2  0100               	movlb	0	; () banked
  4727  000BC4  51E7               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4728  000BC6  22DA               	addwfc	fsr2h,f,c
  4729  000BC8  C0EA  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4730  000BCC  C0EB  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;serial.c: 143: for (n = 1; n < bytes; n++)
  4734  000BD0  0E00               	movlw	0
  4735  000BD2  0100               	movlb	0	; () banked
  4736  000BD4  6FF0               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4737  000BD6  0E01               	movlw	1
  4738  000BD8  6FEF               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4739  000BDA  D022               	goto	l1178
  4740  000BDC                     l1179:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;serial.c: 144: {
  4744                           ;serial.c: 145: SSP1CON2bits.ACKDT = 0x0;
  4745  000BDC  9AC5               	bcf	4037,5,c	;volatile
  4746                           
  4747                           ;serial.c: 146: SSP1CON2bits.ACKEN = 0x1;
  4748  000BDE  88C5               	bsf	4037,4,c	;volatile
  4749  000BE0                     
  4750                           ; BSR set to: 0
  4751  000BE0  B8C5               	btfsc	4037,4,c	;volatile
  4752  000BE2  D7FE               	goto	l1181
  4753                           
  4754                           ;serial.c: 148: PIR1bits.SSP1IF = 0x0;
  4755  000BE4  969E               	bcf	3998,3,c	;volatile
  4756                           
  4757                           ;serial.c: 149: SSP1CON2bits.RCEN = 0x1;
  4758  000BE6  86C5               	bsf	4037,3,c	;volatile
  4759  000BE8  A0C7               	btfss	4039,0,c	;volatile
  4760  000BEA  D7FE               	goto	l1184
  4761  000BEC                     u4140:
  4762                           
  4763                           ;serial.c: 152: while (!PIR1bits.SSP1IF);
  4764  000BEC  A69E               	btfss	3998,3,c	;volatile
  4765  000BEE  D7FE               	goto	u4140
  4766                           
  4767                           ;serial.c: 153: data[n] = SSP1BUF;
  4768  000BF0  50C9               	movf	4041,w,c	;volatile
  4769  000BF2  0100               	movlb	0	; () banked
  4770  000BF4  6FEA               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4771  000BF6  6BEB               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4772  000BF8  90D8               	bcf	status,0,c
  4773  000BFA  0100               	movlb	0	; () banked
  4774  000BFC  35EF               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4775  000BFE  6ED9               	movwf	fsr2l,c
  4776  000C00  0100               	movlb	0	; () banked
  4777  000C02  35F0               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4778  000C04  6EDA               	movwf	fsr2h,c
  4779  000C06  0100               	movlb	0	; () banked
  4780  000C08  51E6               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4781  000C0A  26D9               	addwf	fsr2l,f,c
  4782  000C0C  0100               	movlb	0	; () banked
  4783  000C0E  51E7               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4784  000C10  22DA               	addwfc	fsr2h,f,c
  4785  000C12  C0EA  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4786  000C16  C0EB  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4787                           
  4788                           ; BSR set to: 0
  4789  000C1A  0100               	movlb	0	; () banked
  4790  000C1C  4BEF               	infsnz	I2C1_Block_Read_EERPOM@n& (0+255),f,b
  4791  000C1E  2BF0               	incf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),f,b
  4792  000C20                     l1178:
  4793                           
  4794                           ; BSR set to: 0
  4795                           
  4796                           ; BSR set to: 0
  4797  000C20  0100               	movlb	0	; () banked
  4798  000C22  51E8               	movf	I2C1_Block_Read_EERPOM@bytes& (0+255),w,b
  4799  000C24  0100               	movlb	0	; () banked
  4800  000C26  5DEF               	subwf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4801  000C28  0100               	movlb	0	; () banked
  4802  000C2A  51F0               	movf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4803  000C2C  0A80               	xorlw	128
  4804  000C2E  0100               	movlb	0	; () banked
  4805  000C30  6FEA               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4806  000C32  0100               	movlb	0	; () banked
  4807  000C34  51E9               	movf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),w,b
  4808  000C36  0A80               	xorlw	128
  4809  000C38  0100               	movlb	0	; () banked
  4810  000C3A  59EA               	subwfb	??_I2C1_Block_Read_EERPOM& (0+255),w,b
  4811  000C3C  A0D8               	btfss	status,0,c
  4812  000C3E  D7CE               	goto	l1179
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;serial.c: 154: }
  4816                           ;serial.c: 156: SSP1CON2bits.ACKDT = 0x1;
  4817  000C40  8AC5               	bsf	4037,5,c	;volatile
  4818                           
  4819                           ;serial.c: 157: SSP1CON2bits.ACKEN = 0x1;
  4820  000C42  88C5               	bsf	4037,4,c	;volatile
  4821  000C44                     
  4822                           ; BSR set to: 0
  4823  000C44  B8C5               	btfsc	4037,4,c	;volatile
  4824  000C46  D7FE               	goto	l1191
  4825                           
  4826                           ;serial.c: 160: PIR1bits.SSP1IF = 0x0;
  4827  000C48  969E               	bcf	3998,3,c	;volatile
  4828                           
  4829                           ;serial.c: 161: SSP1CON2bits.PEN = 0x1;
  4830  000C4A  84C5               	bsf	4037,2,c	;volatile
  4831  000C4C  B4C5               	btfsc	4037,2,c	;volatile
  4832  000C4E  D7FE               	goto	l1194
  4833                           
  4834                           ;serial.c: 165: PIR1bits.SSP1IF = 0x0;
  4835  000C50  969E               	bcf	3998,3,c	;volatile
  4836                           
  4837                           ;serial.c: 166: SSP1CON1bits.SSPEN = 0x1;
  4838  000C52  8AC6               	bsf	4038,5,c	;volatile
  4839  000C54  0012               	return		;funcret
  4840  000C56                     __end_of_I2C1_Block_Read_EERPOM:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           postinc1	equ	0xFE6
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _absVal *****************
  4863 ;; Defined at:
  4864 ;;		line 175 in file "main.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  val             2    0[BANK0 ] int 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2    0[BANK0 ] int 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;Total ram usage:        4 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    4
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text24
  4893  0017D4                     __ptext24:
  4894                           	opt stack 0
  4895  0017D4                     _absVal:
  4896                           	opt stack 26
  4897                           
  4898                           ;main.c: 177: if (val < 0)
  4899                           
  4900                           ;incstack = 0
  4901  0017D4  0100               	movlb	0	; () banked
  4902  0017D6  AFE5               	btfss	(absVal@val+1)& (0+255),7,b
  4903  0017D8  D00E               	goto	l168
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;main.c: 178: return -val;
  4907  0017DA  C0E4  F0E6         	movff	absVal@val,??_absVal
  4908  0017DE  C0E5  F0E7         	movff	absVal@val+1,??_absVal+1
  4909  0017E2  0100               	movlb	0	; () banked
  4910  0017E4  1FE6               	comf	??_absVal& (0+255),f,b
  4911  0017E6  1FE7               	comf	(??_absVal+1)& (0+255),f,b
  4912  0017E8  4BE6               	infsnz	??_absVal& (0+255),f,b
  4913  0017EA  2BE7               	incf	(??_absVal+1)& (0+255),f,b
  4914  0017EC  C0E6  F0E4         	movff	??_absVal,?_absVal
  4915  0017F0  C0E7  F0E5         	movff	??_absVal+1,?_absVal+1
  4916                           
  4917                           ; BSR set to: 0
  4918  0017F4  0012               	return	
  4919  0017F6                     l168:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;main.c: 179: else return val;
  4923  0017F6  C0E4  F0E4         	movff	absVal@val,?_absVal
  4924  0017FA  C0E5  F0E5         	movff	absVal@val+1,?_absVal+1
  4925  0017FE  0012               	return	
  4926  001800                     __end_of_absVal:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           postinc0	equ	0xFEE
  4936                           wreg	equ	0xFE8
  4937                           postinc1	equ	0xFE6
  4938                           postdec1	equ	0xFE5
  4939                           fsr1h	equ	0xFE2
  4940                           fsr1l	equ	0xFE1
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           postdec2	equ	0xFDD
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function _I2C1_Write_DigiPot *****************
  4949 ;; Defined at:
  4950 ;;		line 235 in file "serial.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  value           1    wreg     unsigned char 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  value           1    0[BANK0 ] unsigned char 
  4955 ;;  wrCommand       1    1[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;Total ram usage:        2 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    4
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_main
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text25
  4980  00172C                     __ptext25:
  4981                           	opt stack 0
  4982  00172C                     _I2C1_Write_DigiPot:
  4983                           	opt stack 26
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;incstack = 0
  4987                           ;I2C1_Write_DigiPot@value stored from wreg
  4988  00172C  0100               	movlb	0	; () banked
  4989  00172E  6FE4               	movwf	I2C1_Write_DigiPot@value& (0+255),b
  4990                           
  4991                           ;serial.c: 237: char wrCommand = (0b00101111 << 1);
  4992  001730  0E5E               	movlw	94
  4993  001732  0100               	movlb	0	; () banked
  4994  001734  6FE5               	movwf	I2C1_Write_DigiPot@wrCommand& (0+255),b
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;serial.c: 239: SSP1CON1bits.SSPEN = 0x1;
  4998  001736  8AC6               	bsf	4038,5,c	;volatile
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;serial.c: 240: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5002  001738  0E0D               	movlw	13
  5003  00173A                     u4777:
  5004  00173A  2EE8               	decfsz	wreg,f,c
  5005  00173C  D7FE               	bra	u4777
  5006  00173E  F000               	nop	
  5007                           
  5008                           ;serial.c: 242: SSP1CON2bits.SEN = 0x1;
  5009  001740  80C5               	bsf	4037,0,c	;volatile
  5010  001742  B0C5               	btfsc	4037,0,c	;volatile
  5011  001744  D7FE               	goto	l1246
  5012                           
  5013                           ;serial.c: 244: PIR1bits.SSP1IF = 0x0;
  5014  001746  969E               	bcf	3998,3,c	;volatile
  5015                           
  5016                           ;serial.c: 245: SSP1BUF = wrCommand;
  5017  001748  C0E5  FFC9         	movff	I2C1_Write_DigiPot@wrCommand,4041	;volatile
  5018  00174C  BCC5               	btfsc	4037,6,c	;volatile
  5019  00174E  D7FE               	goto	l1249
  5020  001750                     u4330:
  5021                           
  5022                           ;serial.c: 248: while(!PIR1bits.SSP1IF);
  5023  001750  A69E               	btfss	3998,3,c	;volatile
  5024  001752  D7FE               	goto	u4330
  5025                           
  5026                           ;serial.c: 249: PIR1bits.SSP1IF = 0x0;
  5027  001754  969E               	bcf	3998,3,c	;volatile
  5028                           
  5029                           ;serial.c: 250: SSP1BUF = value;
  5030  001756  C0E4  FFC9         	movff	I2C1_Write_DigiPot@value,4041	;volatile
  5031  00175A  BCC5               	btfsc	4037,6,c	;volatile
  5032  00175C  D7FE               	goto	l1255
  5033  00175E                     u4350:
  5034                           
  5035                           ;serial.c: 253: while(!PIR1bits.SSP1IF);
  5036  00175E  A69E               	btfss	3998,3,c	;volatile
  5037  001760  D7FE               	goto	u4350
  5038                           
  5039                           ;serial.c: 254: SSP1CON2bits.PEN = 0x1;
  5040  001762  84C5               	bsf	4037,2,c	;volatile
  5041  001764  B4C5               	btfsc	4037,2,c	;volatile
  5042  001766  D7FE               	goto	l1261
  5043                           
  5044                           ;serial.c: 257: PIR1bits.SSP1IF = 0x0;
  5045  001768  969E               	bcf	3998,3,c	;volatile
  5046                           
  5047                           ;serial.c: 258: SSP1CON1bits.SSPEN = 0x1;
  5048  00176A  8AC6               	bsf	4038,5,c	;volatile
  5049  00176C  0012               	return		;funcret
  5050  00176E                     __end_of_I2C1_Write_DigiPot:
  5051                           	opt stack 0
  5052                           tblptru	equ	0xFF8
  5053                           tblptrh	equ	0xFF7
  5054                           tblptrl	equ	0xFF6
  5055                           tablat	equ	0xFF5
  5056                           prodh	equ	0xFF4
  5057                           prodl	equ	0xFF3
  5058                           intcon	equ	0xFF2
  5059                           postinc0	equ	0xFEE
  5060                           wreg	equ	0xFE8
  5061                           postinc1	equ	0xFE6
  5062                           postdec1	equ	0xFE5
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           indf2	equ	0xFDF
  5066                           postinc2	equ	0xFDE
  5067                           postdec2	equ	0xFDD
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _I2C1_Page_Write_EEPROM *****************
  5073 ;; Defined at:
  5074 ;;		line 66 in file "serial.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  slot            2    0[BANK0 ] int 
  5077 ;;  data            2    2[BANK0 ] PTR PTR int 
  5078 ;;		 -> parameter(24), 
  5079 ;;  bytes           2    4[BANK0 ] int 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  n               2    9[BANK0 ] int 
  5082 ;;  memValue        1    8[BANK0 ] unsigned char 
  5083 ;;  wrDevAddr       1    7[BANK0 ] unsigned char 
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;Total ram usage:       11 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    4
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text26
  5108  000E90                     __ptext26:
  5109                           	opt stack 0
  5110  000E90                     _I2C1_Page_Write_EEPROM:
  5111                           	opt stack 26
  5112                           
  5113                           ;serial.c: 68: char wrDevAddr = 0b10100000;
  5114                           
  5115                           ;incstack = 0
  5116  000E90  0EA0               	movlw	160
  5117  000E92  0100               	movlb	0	; () banked
  5118  000E94  6FEB               	movwf	I2C1_Page_Write_EEPROM@wrDevAddr& (0+255),b
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;serial.c: 69: char memValue = presetAdd[slot];
  5122  000E96  90D8               	bcf	status,0,c
  5123  000E98  0100               	movlb	0	; () banked
  5124  000E9A  35E4               	rlcf	I2C1_Page_Write_EEPROM@slot& (0+255),w,b
  5125  000E9C  6ED9               	movwf	fsr2l,c
  5126  000E9E  0100               	movlb	0	; () banked
  5127  000EA0  35E5               	rlcf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),w,b
  5128  000EA2  6EDA               	movwf	fsr2h,c
  5129  000EA4  0ED6               	movlw	low _presetAdd
  5130  000EA6  26D9               	addwf	fsr2l,f,c
  5131  000EA8  0E00               	movlw	high _presetAdd
  5132  000EAA  22DA               	addwfc	fsr2h,f,c
  5133  000EAC  50DF               	movf	indf2,w,c
  5134  000EAE  0100               	movlb	0	; () banked
  5135  000EB0  6FEC               	movwf	I2C1_Page_Write_EEPROM@memValue& (0+255),b
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;serial.c: 70: int n = 0;
  5139  000EB2  0E00               	movlw	0
  5140  000EB4  0100               	movlb	0	; () banked
  5141  000EB6  6FEE               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5142  000EB8  0E00               	movlw	0
  5143  000EBA  6FED               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;serial.c: 72: SSP1CON1bits.SSPEN = 0x1;
  5147  000EBC  8AC6               	bsf	4038,5,c	;volatile
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;serial.c: 73: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5151  000EBE  0E0D               	movlw	13
  5152  000EC0                     u4787:
  5153  000EC0  2EE8               	decfsz	wreg,f,c
  5154  000EC2  D7FE               	bra	u4787
  5155  000EC4  F000               	nop	
  5156                           
  5157                           ;serial.c: 75: SSP1CON2bits.SEN = 0x1;
  5158  000EC6  80C5               	bsf	4037,0,c	;volatile
  5159  000EC8  B0C5               	btfsc	4037,0,c	;volatile
  5160  000ECA  D7FE               	goto	l1115
  5161                           
  5162                           ;serial.c: 77: PIR1bits.SSP1IF = 0x0;
  5163  000ECC  969E               	bcf	3998,3,c	;volatile
  5164                           
  5165                           ;serial.c: 78: SSP1BUF = wrDevAddr;
  5166  000ECE  C0EB  FFC9         	movff	I2C1_Page_Write_EEPROM@wrDevAddr,4041	;volatile
  5167  000ED2  BCC5               	btfsc	4037,6,c	;volatile
  5168  000ED4  D7FE               	goto	l1118
  5169  000ED6                     u4390:
  5170                           
  5171                           ;serial.c: 81: while(!PIR1bits.SSP1IF);
  5172  000ED6  A69E               	btfss	3998,3,c	;volatile
  5173  000ED8  D7FE               	goto	u4390
  5174                           
  5175                           ;serial.c: 82: PIR1bits.SSP1IF = 0x0;
  5176  000EDA  969E               	bcf	3998,3,c	;volatile
  5177                           
  5178                           ;serial.c: 83: SSP1BUF = memValue;
  5179  000EDC  C0EC  FFC9         	movff	I2C1_Page_Write_EEPROM@memValue,4041	;volatile
  5180                           
  5181                           ;serial.c: 85: for (n = 0; n < bytes; n++)
  5182  000EE0  0E00               	movlw	0
  5183  000EE2  0100               	movlb	0	; () banked
  5184  000EE4  6FEE               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5185  000EE6  0E00               	movlw	0
  5186  000EE8  6FED               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5187  000EEA  D017               	goto	l1123
  5188  000EEC                     
  5189                           ; BSR set to: 0
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;serial.c: 86: {
  5193                           ;serial.c: 87: while (SSP1CON2bits.ACKSTAT);
  5194  000EEC  BCC5               	btfsc	4037,6,c	;volatile
  5195  000EEE  D7FE               	goto	l1124
  5196  000EF0                     u4410:
  5197                           
  5198                           ;serial.c: 88: while(!PIR1bits.SSP1IF);
  5199  000EF0  A69E               	btfss	3998,3,c	;volatile
  5200  000EF2  D7FE               	goto	u4410
  5201                           
  5202                           ;serial.c: 89: PIR1bits.SSP1IF = 0x0;
  5203  000EF4  969E               	bcf	3998,3,c	;volatile
  5204                           
  5205                           ;serial.c: 90: SSP1BUF = data[n];
  5206  000EF6  90D8               	bcf	status,0,c
  5207  000EF8  0100               	movlb	0	; () banked
  5208  000EFA  35ED               	rlcf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5209  000EFC  6ED9               	movwf	fsr2l,c
  5210  000EFE  0100               	movlb	0	; () banked
  5211  000F00  35EE               	rlcf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5212  000F02  6EDA               	movwf	fsr2h,c
  5213  000F04  0100               	movlb	0	; () banked
  5214  000F06  51E6               	movf	I2C1_Page_Write_EEPROM@data& (0+255),w,b
  5215  000F08  26D9               	addwf	fsr2l,f,c
  5216  000F0A  0100               	movlb	0	; () banked
  5217  000F0C  51E7               	movf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),w,b
  5218  000F0E  22DA               	addwfc	fsr2h,f,c
  5219  000F10  50DF               	movf	indf2,w,c
  5220  000F12  6EC9               	movwf	4041,c	;volatile
  5221                           
  5222                           ; BSR set to: 0
  5223  000F14  0100               	movlb	0	; () banked
  5224  000F16  4BED               	infsnz	I2C1_Page_Write_EEPROM@n& (0+255),f,b
  5225  000F18  2BEE               	incf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),f,b
  5226  000F1A                     l1123:
  5227                           
  5228                           ; BSR set to: 0
  5229                           
  5230                           ; BSR set to: 0
  5231  000F1A  0100               	movlb	0	; () banked
  5232  000F1C  51E8               	movf	I2C1_Page_Write_EEPROM@bytes& (0+255),w,b
  5233  000F1E  0100               	movlb	0	; () banked
  5234  000F20  5DED               	subwf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5235  000F22  0100               	movlb	0	; () banked
  5236  000F24  51EE               	movf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5237  000F26  0A80               	xorlw	128
  5238  000F28  0100               	movlb	0	; () banked
  5239  000F2A  6FEA               	movwf	??_I2C1_Page_Write_EEPROM& (0+255),b
  5240  000F2C  0100               	movlb	0	; () banked
  5241  000F2E  51E9               	movf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),w,b
  5242  000F30  0A80               	xorlw	128
  5243  000F32  0100               	movlb	0	; () banked
  5244  000F34  59EA               	subwfb	??_I2C1_Page_Write_EEPROM& (0+255),w,b
  5245  000F36  A0D8               	btfss	status,0,c
  5246  000F38  D7D9               	goto	l1124
  5247  000F3A                     u4430:
  5248                           
  5249                           ; BSR set to: 0
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;serial.c: 91: }
  5253                           ;serial.c: 93: while (SSP1CON2bits.ACKSTAT);
  5254  000F3A  BCC5               	btfsc	4037,6,c	;volatile
  5255  000F3C  D7FE               	goto	u4430
  5256  000F3E                     u4440:
  5257                           
  5258                           ;serial.c: 94: while(!PIR1bits.SSP1IF);
  5259  000F3E  A69E               	btfss	3998,3,c	;volatile
  5260  000F40  D7FE               	goto	u4440
  5261                           
  5262                           ;serial.c: 95: SSP1CON2bits.PEN = 0x1;
  5263  000F42  84C5               	bsf	4037,2,c	;volatile
  5264  000F44  B4C5               	btfsc	4037,2,c	;volatile
  5265  000F46  D7FE               	goto	l1139
  5266                           
  5267                           ;serial.c: 98: PIR1bits.SSP1IF = 0x0;
  5268  000F48  969E               	bcf	3998,3,c	;volatile
  5269                           
  5270                           ;serial.c: 99: SSP1CON1bits.SSPEN = 0x1;
  5271  000F4A  8AC6               	bsf	4038,5,c	;volatile
  5272  000F4C  0012               	return		;funcret
  5273  000F4E                     __end_of_I2C1_Page_Write_EEPROM:
  5274                           	opt stack 0
  5275                           tblptru	equ	0xFF8
  5276                           tblptrh	equ	0xFF7
  5277                           tblptrl	equ	0xFF6
  5278                           tablat	equ	0xFF5
  5279                           prodh	equ	0xFF4
  5280                           prodl	equ	0xFF3
  5281                           intcon	equ	0xFF2
  5282                           postinc0	equ	0xFEE
  5283                           wreg	equ	0xFE8
  5284                           postinc1	equ	0xFE6
  5285                           postdec1	equ	0xFE5
  5286                           fsr1h	equ	0xFE2
  5287                           fsr1l	equ	0xFE1
  5288                           indf2	equ	0xFDF
  5289                           postinc2	equ	0xFDE
  5290                           postdec2	equ	0xFDD
  5291                           fsr2h	equ	0xFDA
  5292                           fsr2l	equ	0xFD9
  5293                           status	equ	0xFD8
  5294                           
  5295 ;; *************** function _highPriorityISR *****************
  5296 ;; Defined at:
  5297 ;;		line 127 in file "main.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;		None
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      void 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;Total ram usage:       18 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    3
  5318 ;; This function calls:
  5319 ;;		_checkSwitches
  5320 ;;		_flashLED
  5321 ;;		_sendParam
  5322 ;;		_serviceSwitches
  5323 ;;		_tapLED
  5324 ;; This function is called by:
  5325 ;;		Interrupt level 2
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	intcode
  5330  000008                     __pintcode:
  5331                           	opt stack 0
  5332  000008                     _highPriorityISR:
  5333                           	opt stack 24
  5334                           
  5335                           ;incstack = 0
  5336  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5337  00000A  CFFA F031          	movff	pclath,??_highPriorityISR
  5338  00000E  CFFB F032          	movff	pclatu,??_highPriorityISR+1
  5339  000012  CFE9 F033          	movff	fsr0l,??_highPriorityISR+2
  5340  000016  CFEA F034          	movff	fsr0h,??_highPriorityISR+3
  5341  00001A  CFE1 F035          	movff	fsr1l,??_highPriorityISR+4
  5342  00001E  CFE2 F036          	movff	fsr1h,??_highPriorityISR+5
  5343  000022  CFD9 F037          	movff	fsr2l,??_highPriorityISR+6
  5344  000026  CFDA F038          	movff	fsr2h,??_highPriorityISR+7
  5345  00002A  CFF3 F039          	movff	prodl,??_highPriorityISR+8
  5346  00002E  CFF4 F03A          	movff	prodh,??_highPriorityISR+9
  5347  000032  CFF6 F03B          	movff	tblptrl,??_highPriorityISR+10
  5348  000036  CFF7 F03C          	movff	tblptrh,??_highPriorityISR+11
  5349  00003A  CFF8 F03D          	movff	tblptru,??_highPriorityISR+12
  5350  00003E  CFF5 F03E          	movff	tablat,??_highPriorityISR+13
  5351  000042  C047  F03F         	movff	btemp,??_highPriorityISR+14
  5352  000046  C048  F040         	movff	btemp+1,??_highPriorityISR+15
  5353  00004A  C049  F041         	movff	btemp+2,??_highPriorityISR+16
  5354  00004E  C04A  F042         	movff	btemp+3,??_highPriorityISR+17
  5355                           
  5356                           ;main.c: 130: if(SSP2IF)
  5357  000052  ACA1               	btfss	4001,6,c	;volatile
  5358  000054  D003               	goto	i2l157
  5359                           
  5360                           ;main.c: 131: {
  5361                           ;main.c: 132: PIR2bits.SSP2IF = 0x0;
  5362  000056  9CA1               	bcf	4001,6,c	;volatile
  5363                           
  5364                           ;main.c: 133: sendParam();
  5365  000058  EC8F  F008         	call	_sendParam	;wreg free
  5366  00005C                     i2l157:
  5367                           
  5368                           ;main.c: 134: }
  5369                           ;main.c: 136: if (TMR4IF)
  5370  00005C  A0B8               	btfss	4024,0,c	;volatile
  5371  00005E  D007               	goto	i2l158
  5372                           
  5373                           ;main.c: 137: {
  5374                           ;main.c: 138: TMR4IF = 0;
  5375  000060  90B8               	bcf	4024,0,c	;volatile
  5376                           
  5377                           ;main.c: 139: tapLED();
  5378  000062  EC3D  F00A         	call	_tapLED	;wreg free
  5379                           
  5380                           ;main.c: 140: flashLED();
  5381  000066  ECE9  F004         	call	_flashLED	;wreg free
  5382                           
  5383                           ;main.c: 141: T4CONbits.TMR4ON = 1;
  5384  00006A  010F               	movlb	15	; () banked
  5385  00006C  8504               	bsf	4,2,b	;volatile
  5386  00006E                     i2l158:
  5387                           
  5388                           ;main.c: 142: }
  5389                           ;main.c: 144: if (TMR2IF)
  5390                           
  5391                           ; BSR set to: 15
  5392  00006E  A29E               	btfss	3998,1,c	;volatile
  5393  000070  D012               	goto	i2l161
  5394                           
  5395                           ;main.c: 145: {
  5396                           ;main.c: 146: TMR2IF = 0;
  5397  000072  929E               	bcf	3998,1,c	;volatile
  5398                           
  5399                           ;main.c: 147: tapTimeCount++;
  5400  000074  4A03               	infsnz	_tapTimeCount,f,c
  5401  000076  2A04               	incf	_tapTimeCount+1,f,c
  5402                           
  5403                           ;main.c: 148: if (tapTimeCount >= 3000)
  5404  000078  BE04               	btfsc	_tapTimeCount+1,7,c
  5405  00007A  D00C               	goto	i2l160
  5406  00007C  0EB8               	movlw	184
  5407  00007E  5C03               	subwf	_tapTimeCount,w,c
  5408  000080  0E0B               	movlw	11
  5409  000082  5804               	subwfb	_tapTimeCount+1,w,c
  5410  000084  A0D8               	btfss	status,0,c
  5411  000086  D006               	goto	i2l160
  5412                           
  5413                           ;main.c: 149: {
  5414                           ;main.c: 150: tapTimeCount = 3000;
  5415  000088  0E0B               	movlw	11
  5416  00008A  6E04               	movwf	_tapTimeCount+1,c
  5417  00008C  0EB8               	movlw	184
  5418  00008E  6E03               	movwf	_tapTimeCount,c
  5419                           
  5420                           ;main.c: 151: T2CONbits.TMR2ON = 0;
  5421  000090  94CA               	bcf	4042,2,c	;volatile
  5422                           
  5423                           ;main.c: 152: }
  5424  000092  D001               	goto	i2l161
  5425  000094                     i2l160:
  5426                           
  5427                           ;main.c: 153: else T2CONbits.TMR2ON = 1;
  5428  000094  84CA               	bsf	4042,2,c	;volatile
  5429  000096                     i2l161:
  5430                           
  5431                           ;main.c: 154: }
  5432                           ;main.c: 156: checkSwitches();
  5433  000096  ECF6  F007         	call	_checkSwitches	;wreg free
  5434                           
  5435                           ;main.c: 158: if (TMR0IF)
  5436  00009A  A4F2               	btfss	intcon,2,c	;volatile
  5437  00009C  D019               	goto	i2l164
  5438                           
  5439                           ;main.c: 159: {
  5440                           ;main.c: 160: TMR0IF = 0;
  5441  00009E  94F2               	bcf	intcon,2,c	;volatile
  5442                           
  5443                           ;main.c: 161: bounceCount++;
  5444  0000A0  0100               	movlb	0	; () banked
  5445  0000A2  4B94               	infsnz	_bounceCount& (0+255),f,b
  5446  0000A4  2B95               	incf	(_bounceCount+1)& (0+255),f,b
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;main.c: 162: if (bounceCount < 2)
  5450  0000A6  0100               	movlb	0	; () banked
  5451  0000A8  BF95               	btfsc	(_bounceCount+1)& (0+255),7,b
  5452  0000AA  D008               	goto	i2u383_40
  5453  0000AC  0100               	movlb	0	; () banked
  5454  0000AE  5195               	movf	(_bounceCount+1)& (0+255),w,b
  5455  0000B0  E107               	bnz	i2l3789
  5456  0000B2  0E02               	movlw	2
  5457  0000B4  0100               	movlb	0	; () banked
  5458  0000B6  5D94               	subwf	_bounceCount& (0+255),w,b
  5459  0000B8  B0D8               	btfsc	status,0,c
  5460  0000BA  D002               	goto	i2l163
  5461  0000BC                     i2u383_40:
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;main.c: 163: {
  5465                           ;main.c: 164: T0CONbits.TMR0ON = 0x1;
  5466  0000BC  8ED5               	bsf	4053,7,c	;volatile
  5467                           
  5468                           ;main.c: 165: }
  5469  0000BE  D008               	goto	i2l164
  5470  0000C0                     i2l163:
  5471  0000C0                     i2l3789:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;main.c: 166: else
  5475                           ;main.c: 167: {
  5476                           ;main.c: 168: bounceCount = 0;
  5477  0000C0  0E00               	movlw	0
  5478  0000C2  0100               	movlb	0	; () banked
  5479  0000C4  6F95               	movwf	(_bounceCount+1)& (0+255),b
  5480  0000C6  0E00               	movlw	0
  5481  0000C8  6F94               	movwf	_bounceCount& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;main.c: 169: serviceSwitches();
  5485  0000CA  EC90  F000         	call	_serviceSwitches	;wreg free
  5486                           
  5487                           ;main.c: 170: T0CONbits.TMR0ON = 0x0;
  5488  0000CE  9ED5               	bcf	4053,7,c	;volatile
  5489  0000D0                     i2l164:
  5490  0000D0  C042  F04A         	movff	??_highPriorityISR+17,btemp+3
  5491  0000D4  C041  F049         	movff	??_highPriorityISR+16,btemp+2
  5492  0000D8  C040  F048         	movff	??_highPriorityISR+15,btemp+1
  5493  0000DC  C03F  F047         	movff	??_highPriorityISR+14,btemp
  5494  0000E0  C03E  FFF5         	movff	??_highPriorityISR+13,tablat
  5495  0000E4  C03D  FFF8         	movff	??_highPriorityISR+12,tblptru
  5496  0000E8  C03C  FFF7         	movff	??_highPriorityISR+11,tblptrh
  5497  0000EC  C03B  FFF6         	movff	??_highPriorityISR+10,tblptrl
  5498  0000F0  C03A  FFF4         	movff	??_highPriorityISR+9,prodh
  5499  0000F4  C039  FFF3         	movff	??_highPriorityISR+8,prodl
  5500  0000F8  C038  FFDA         	movff	??_highPriorityISR+7,fsr2h
  5501  0000FC  C037  FFD9         	movff	??_highPriorityISR+6,fsr2l
  5502  000100  C036  FFE2         	movff	??_highPriorityISR+5,fsr1h
  5503  000104  C035  FFE1         	movff	??_highPriorityISR+4,fsr1l
  5504  000108  C034  FFEA         	movff	??_highPriorityISR+3,fsr0h
  5505  00010C  C033  FFE9         	movff	??_highPriorityISR+2,fsr0l
  5506  000110  C032  FFFB         	movff	??_highPriorityISR+1,pclatu
  5507  000114  C031  FFFA         	movff	??_highPriorityISR,pclath
  5508  000118  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5509  00011A  0011               	retfie		f
  5510  00011C                     __end_of_highPriorityISR:
  5511                           	opt stack 0
  5512                           pclatu	equ	0xFFB
  5513                           pclath	equ	0xFFA
  5514                           tblptru	equ	0xFF8
  5515                           tblptrh	equ	0xFF7
  5516                           tblptrl	equ	0xFF6
  5517                           tablat	equ	0xFF5
  5518                           prodh	equ	0xFF4
  5519                           prodl	equ	0xFF3
  5520                           intcon	equ	0xFF2
  5521                           postinc0	equ	0xFEE
  5522                           fsr0h	equ	0xFEA
  5523                           fsr0l	equ	0xFE9
  5524                           wreg	equ	0xFE8
  5525                           postinc1	equ	0xFE6
  5526                           postdec1	equ	0xFE5
  5527                           fsr1h	equ	0xFE2
  5528                           fsr1l	equ	0xFE1
  5529                           indf2	equ	0xFDF
  5530                           postinc2	equ	0xFDE
  5531                           postdec2	equ	0xFDD
  5532                           fsr2h	equ	0xFDA
  5533                           fsr2l	equ	0xFD9
  5534                           status	equ	0xFD8
  5535                           
  5536 ;; *************** function _tapLED *****************
  5537 ;; Defined at:
  5538 ;;		line 75 in file "hardware.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;		None
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;		None
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, status,2, status,0
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;Total ram usage:        3 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; This function calls:
  5559 ;;		Nothing
  5560 ;; This function is called by:
  5561 ;;		_highPriorityISR
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text28
  5566  00147A                     __ptext28:
  5567                           	opt stack 0
  5568  00147A                     _tapLED:
  5569                           	opt stack 26
  5570                           
  5571                           ;hardware.c: 84: if(tapFlash)
  5572                           
  5573                           ;incstack = 0
  5574  00147A  0100               	movlb	0	; () banked
  5575  00147C  5188               	movf	_tapFlash& (0+255),w,b
  5576  00147E  0100               	movlb	0	; () banked
  5577  001480  1189               	iorwf	(_tapFlash+1)& (0+255),w,b
  5578  001482  B4D8               	btfsc	status,2,c
  5579  001484  D017               	goto	i2l803
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;hardware.c: 85: {
  5583                           ;hardware.c: 86: tapDispCount++;
  5584  001486  4A13               	infsnz	_tapDispCount,f,c
  5585  001488  2A14               	incf	_tapDispCount+1,f,c
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;hardware.c: 87: if (tapDispCount >= tapOnTime)
  5589  00148A  5043               	movf	_tapOnTime,w,c
  5590  00148C  5C13               	subwf	_tapDispCount,w,c
  5591  00148E  5014               	movf	_tapDispCount+1,w,c
  5592  001490  0A80               	xorlw	128
  5593  001492  6E23               	movwf	??_tapLED& (0+255),c
  5594  001494  5044               	movf	_tapOnTime+1,w,c
  5595  001496  0A80               	xorlw	128
  5596  001498  5823               	subwfb	??_tapLED& (0+255),w,c
  5597  00149A  A0D8               	btfss	status,0,c
  5598  00149C  0012               	return	
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;hardware.c: 88: {
  5602                           ;hardware.c: 89: tapDispCount = 0;
  5603  00149E  0E00               	movlw	0
  5604  0014A0  6E14               	movwf	_tapDispCount+1,c
  5605  0014A2  0E00               	movlw	0
  5606  0014A4  6E13               	movwf	_tapDispCount,c
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;hardware.c: 90: LATE0 = 0;
  5610  0014A6  908D               	bcf	3981,0,c	;volatile
  5611                           
  5612                           ;hardware.c: 91: tapFlash = 0;
  5613  0014A8  0E00               	movlw	0
  5614  0014AA  0100               	movlb	0	; () banked
  5615  0014AC  6F89               	movwf	(_tapFlash+1)& (0+255),b
  5616  0014AE  0E00               	movlw	0
  5617  0014B0  6F88               	movwf	_tapFlash& (0+255),b
  5618                           
  5619                           ; BSR set to: 0
  5620                           ;hardware.c: 92: }
  5621                           ;hardware.c: 93: }
  5622  0014B2  0012               	return	
  5623  0014B4                     i2l803:
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;hardware.c: 94: else
  5627                           ;hardware.c: 95: {
  5628                           ;hardware.c: 96: tapDispCount++;
  5629                           
  5630                           ; BSR set to: 0
  5631  0014B4  4A13               	infsnz	_tapDispCount,f,c
  5632  0014B6  2A14               	incf	_tapDispCount+1,f,c
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;hardware.c: 97: if (tapDispCount >= (currentTapTime-tapOnTime))
  5636  0014B8  C043  F023         	movff	_tapOnTime,??_tapLED
  5637  0014BC  C044  F024         	movff	_tapOnTime+1,??_tapLED+1
  5638  0014C0  1E23               	comf	??_tapLED,f,c
  5639  0014C2  1E24               	comf	??_tapLED+1,f,c
  5640  0014C4  4A23               	infsnz	??_tapLED,f,c
  5641  0014C6  2A24               	incf	??_tapLED+1,f,c
  5642  0014C8  0100               	movlb	0	; () banked
  5643  0014CA  51E0               	movf	_currentTapTime& (0+255),w,b
  5644  0014CC  2623               	addwf	??_tapLED,f,c
  5645  0014CE  0100               	movlb	0	; () banked
  5646  0014D0  51E1               	movf	(_currentTapTime+1)& (0+255),w,b
  5647  0014D2  2224               	addwfc	??_tapLED+1,f,c
  5648  0014D4  5023               	movf	??_tapLED,w,c
  5649  0014D6  5C13               	subwf	_tapDispCount,w,c
  5650  0014D8  5014               	movf	_tapDispCount+1,w,c
  5651  0014DA  0A80               	xorlw	128
  5652  0014DC  6E25               	movwf	(??_tapLED+2)& (0+255),c
  5653  0014DE  5024               	movf	??_tapLED+1,w,c
  5654  0014E0  0A80               	xorlw	128
  5655  0014E2  5825               	subwfb	(??_tapLED+2)& (0+255),w,c
  5656  0014E4  A0D8               	btfss	status,0,c
  5657  0014E6  0012               	return	
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;hardware.c: 98: {
  5661                           ;hardware.c: 99: tapDispCount = 0;
  5662  0014E8  0E00               	movlw	0
  5663  0014EA  6E14               	movwf	_tapDispCount+1,c
  5664  0014EC  0E00               	movlw	0
  5665  0014EE  6E13               	movwf	_tapDispCount,c
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;hardware.c: 100: LATE0 = 1;
  5669  0014F0  808D               	bsf	3981,0,c	;volatile
  5670                           
  5671                           ;hardware.c: 101: tapFlash = 1;
  5672  0014F2  0E00               	movlw	0
  5673  0014F4  0100               	movlb	0	; () banked
  5674  0014F6  6F89               	movwf	(_tapFlash+1)& (0+255),b
  5675  0014F8  0E01               	movlw	1
  5676  0014FA  6F88               	movwf	_tapFlash& (0+255),b
  5677                           
  5678                           ; BSR set to: 0
  5679  0014FC  0012               	return	
  5680  0014FE                     __end_of_tapLED:
  5681                           	opt stack 0
  5682                           pclatu	equ	0xFFB
  5683                           pclath	equ	0xFFA
  5684                           tblptru	equ	0xFF8
  5685                           tblptrh	equ	0xFF7
  5686                           tblptrl	equ	0xFF6
  5687                           tablat	equ	0xFF5
  5688                           prodh	equ	0xFF4
  5689                           prodl	equ	0xFF3
  5690                           intcon	equ	0xFF2
  5691                           postinc0	equ	0xFEE
  5692                           fsr0h	equ	0xFEA
  5693                           fsr0l	equ	0xFE9
  5694                           wreg	equ	0xFE8
  5695                           postinc1	equ	0xFE6
  5696                           postdec1	equ	0xFE5
  5697                           fsr1h	equ	0xFE2
  5698                           fsr1l	equ	0xFE1
  5699                           indf2	equ	0xFDF
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _serviceSwitches *****************
  5707 ;; Defined at:
  5708 ;;		line 200 in file "hardware.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      void 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;Total ram usage:        0 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    2
  5729 ;; This function calls:
  5730 ;;		_processTaps
  5731 ;;		_updateLineLEDs
  5732 ;;		_updatePresetLEDs
  5733 ;; This function is called by:
  5734 ;;		_highPriorityISR
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           	psect	text29
  5739  000120                     __ptext29:
  5740                           	opt stack 0
  5741  000120                     _serviceSwitches:
  5742                           	opt stack 24
  5743                           
  5744                           ;hardware.c: 202: if (fsw1)
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;incstack = 0
  5748  000120  0100               	movlb	0	; () banked
  5749  000122  5198               	movf	_fsw1& (0+255),w,b
  5750  000124  0100               	movlb	0	; () banked
  5751  000126  1199               	iorwf	(_fsw1+1)& (0+255),w,b
  5752  000128  B4D8               	btfsc	status,2,c
  5753  00012A  D023               	goto	i2u315_45
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;hardware.c: 203: {
  5757                           ;hardware.c: 204: fsw1 = 0;
  5758  00012C  0E00               	movlw	0
  5759  00012E  0100               	movlb	0	; () banked
  5760  000130  6F99               	movwf	(_fsw1+1)& (0+255),b
  5761  000132  0E00               	movlw	0
  5762  000134  6F98               	movwf	_fsw1& (0+255),b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;hardware.c: 205: if (!RD4)
  5766  000136  B883               	btfsc	3971,4,c	;volatile
  5767  000138  D01C               	goto	i2u315_45
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;hardware.c: 206: {
  5771                           ;hardware.c: 207: bypass ^= 1;
  5772  00013A  0E01               	movlw	1
  5773  00013C  1A1B               	xorwf	_bypass,f,c
  5774                           
  5775                           ;hardware.c: 208: if (bypMode)
  5776  00013E  0100               	movlb	0	; () banked
  5777  000140  51E2               	movf	_bypMode& (0+255),w,b
  5778  000142  0100               	movlb	0	; () banked
  5779  000144  11E3               	iorwf	(_bypMode+1)& (0+255),w,b
  5780  000146  B4D8               	btfsc	status,2,c
  5781  000148  D00B               	goto	i2l834
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;hardware.c: 209: {
  5785                           ;hardware.c: 210: LATD3 = !bypass;
  5786  00014A  501B               	movf	_bypass,w,c
  5787  00014C  101C               	iorwf	_bypass+1,w,c
  5788  00014E  A4D8               	btfss	status,2,c
  5789  000150  D002               	goto	i2u308_40
  5790  000152  868C               	bsf	3980,3,c	;volatile
  5791  000154  D001               	goto	i2u309_45
  5792  000156                     i2u308_40:
  5793  000156  968C               	bcf	3980,3,c	;volatile
  5794  000158                     i2u309_45:
  5795                           
  5796                           ;hardware.c: 211: LATB5 = bypass;
  5797  000158  A01B               	btfss	_bypass,0,c
  5798  00015A  D005               	goto	L6
  5799  00015C                     i2u310_41:
  5800  00015C  8A8A               	bsf	3978,5,c	;volatile
  5801  00015E  D004               	goto	i2u313_45
  5802  000160                     i2l834:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;hardware.c: 213: else
  5806                           ;hardware.c: 214: {
  5807                           ;hardware.c: 215: LATD3 = 0;
  5808  000160  968C               	bcf	3980,3,c	;volatile
  5809                           
  5810                           ;hardware.c: 216: LATB5 = bypass;
  5811  000162  B01B               	btfsc	_bypass,0,c
  5812  000164  D7FB               	goto	i2u310_41
  5813  000166                     L6:
  5814  000166  9A8A               	bcf	3978,5,c	;volatile
  5815  000168                     i2u313_45:
  5816                           
  5817                           ;hardware.c: 217: }
  5818                           ;hardware.c: 218: LATD2 = bypass;
  5819  000168  A01B               	btfss	_bypass,0,c
  5820  00016A  D002               	goto	i2u314_40
  5821  00016C  848C               	bsf	3980,2,c	;volatile
  5822  00016E  D001               	goto	i2u315_45
  5823  000170                     i2u314_40:
  5824  000170  948C               	bcf	3980,2,c	;volatile
  5825  000172                     i2u315_45:
  5826                           
  5827                           ;hardware.c: 219: }
  5828                           ;hardware.c: 220: }
  5829                           ;hardware.c: 222: if (fsw2)
  5830  000172  0100               	movlb	0	; () banked
  5831  000174  5196               	movf	_fsw2& (0+255),w,b
  5832  000176  0100               	movlb	0	; () banked
  5833  000178  1197               	iorwf	(_fsw2+1)& (0+255),w,b
  5834  00017A  B4D8               	btfsc	status,2,c
  5835  00017C  D008               	goto	i2l837
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;hardware.c: 223: {
  5839                           ;hardware.c: 224: fsw2 = 0;
  5840  00017E  0E00               	movlw	0
  5841  000180  0100               	movlb	0	; () banked
  5842  000182  6F97               	movwf	(_fsw2+1)& (0+255),b
  5843  000184  0E00               	movlw	0
  5844  000186  6F96               	movwf	_fsw2& (0+255),b
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;hardware.c: 225: if (RE3)
  5848  000188  B684               	btfsc	3972,3,c	;volatile
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;hardware.c: 226: {
  5852                           ;hardware.c: 227: processTaps();
  5853  00018A  ECC1  F006         	call	_processTaps	;wreg free
  5854  00018E                     i2l837:
  5855                           
  5856                           ;hardware.c: 228: }
  5857                           ;hardware.c: 229: }
  5858                           ;hardware.c: 231: if (switch1)
  5859  00018E  0100               	movlb	0	; () banked
  5860  000190  51A2               	movf	_switch1& (0+255),w,b
  5861  000192  0100               	movlb	0	; () banked
  5862  000194  11A3               	iorwf	(_switch1+1)& (0+255),w,b
  5863  000196  B4D8               	btfsc	status,2,c
  5864  000198  D021               	goto	i2l842
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;hardware.c: 232: {
  5868                           ;hardware.c: 233: switch1 = 0;
  5869  00019A  0E00               	movlw	0
  5870  00019C  0100               	movlb	0	; () banked
  5871  00019E  6FA3               	movwf	(_switch1+1)& (0+255),b
  5872  0001A0  0E00               	movlw	0
  5873  0001A2  6FA2               	movwf	_switch1& (0+255),b
  5874                           
  5875                           ; BSR set to: 0
  5876                           ;hardware.c: 234: if (!RG1)
  5877  0001A4  B286               	btfsc	3974,1,c	;volatile
  5878  0001A6  D01A               	goto	i2l842
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;hardware.c: 235: {
  5882                           ;hardware.c: 236: if (!shift)
  5883  0001A8  5011               	movf	_shift,w,c
  5884  0001AA  1012               	iorwf	_shift+1,w,c
  5885  0001AC  A4D8               	btfss	status,2,c
  5886  0001AE  D00F               	goto	i2l840
  5887                           
  5888                           ; BSR set to: 0
  5889                           ;hardware.c: 237: {
  5890                           ;hardware.c: 238: intA++;
  5891  0001B0  4A21               	infsnz	_intA,f,c
  5892  0001B2  2A22               	incf	_intA+1,f,c
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;hardware.c: 239: if (intA > 3)
  5896  0001B4  BE22               	btfsc	_intA+1,7,c
  5897  0001B6  D012               	goto	i2l842
  5898  0001B8  5022               	movf	_intA+1,w,c
  5899  0001BA  E104               	bnz	i2u321_40
  5900  0001BC  0E04               	movlw	4
  5901  0001BE  5C21               	subwf	_intA,w,c
  5902  0001C0  A0D8               	btfss	status,0,c
  5903  0001C2  D00C               	goto	i2l842
  5904  0001C4                     i2u321_40:
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;hardware.c: 240: {
  5908                           ;hardware.c: 241: intA = 0;
  5909  0001C4  0E00               	movlw	0
  5910  0001C6  6E22               	movwf	_intA+1,c
  5911  0001C8  0E00               	movlw	0
  5912  0001CA  6E21               	movwf	_intA,c
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;hardware.c: 242: }
  5916                           ;hardware.c: 243: }
  5917  0001CC  D007               	goto	i2l842
  5918  0001CE                     i2l840:
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;hardware.c: 244: else
  5922                           ;hardware.c: 245: {
  5923                           ;hardware.c: 246: armA ^= 1;
  5924                           
  5925                           ; BSR set to: 0
  5926  0001CE  0E01               	movlw	1
  5927  0001D0  1A0F               	xorwf	_armA,f,c
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;hardware.c: 247: shiftAction = 1;
  5931  0001D2  0E00               	movlw	0
  5932  0001D4  0100               	movlb	0	; () banked
  5933  0001D6  6FA5               	movwf	(_shiftAction+1)& (0+255),b
  5934  0001D8  0E01               	movlw	1
  5935  0001DA  6FA4               	movwf	_shiftAction& (0+255),b
  5936  0001DC                     i2l842:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;hardware.c: 248: }
  5940                           ;hardware.c: 249: }
  5941                           ;hardware.c: 250: }
  5942                           ;hardware.c: 252: if (switch2)
  5943                           
  5944                           ; BSR set to: 0
  5945                           
  5946                           ; BSR set to: 0
  5947                           
  5948                           ; BSR set to: 0
  5949  0001DC  0100               	movlb	0	; () banked
  5950  0001DE  51A0               	movf	_switch2& (0+255),w,b
  5951  0001E0  0100               	movlb	0	; () banked
  5952  0001E2  11A1               	iorwf	(_switch2+1)& (0+255),w,b
  5953  0001E4  B4D8               	btfsc	status,2,c
  5954  0001E6  D021               	goto	i2l847
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;hardware.c: 253: {
  5958                           ;hardware.c: 254: switch2 = 0;
  5959  0001E8  0E00               	movlw	0
  5960  0001EA  0100               	movlb	0	; () banked
  5961  0001EC  6FA1               	movwf	(_switch2+1)& (0+255),b
  5962  0001EE  0E00               	movlw	0
  5963  0001F0  6FA0               	movwf	_switch2& (0+255),b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;hardware.c: 255: if (!RG2)
  5967  0001F2  B486               	btfsc	3974,2,c	;volatile
  5968  0001F4  D01A               	goto	i2l847
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;hardware.c: 256: {
  5972                           ;hardware.c: 257: if (!shift)
  5973  0001F6  5011               	movf	_shift,w,c
  5974  0001F8  1012               	iorwf	_shift+1,w,c
  5975  0001FA  A4D8               	btfss	status,2,c
  5976  0001FC  D00F               	goto	i2l845
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;hardware.c: 258: {
  5980                           ;hardware.c: 259: intB++;
  5981  0001FE  4A1F               	infsnz	_intB,f,c
  5982  000200  2A20               	incf	_intB+1,f,c
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;hardware.c: 260: if (intB > 3)
  5986  000202  BE20               	btfsc	_intB+1,7,c
  5987  000204  D012               	goto	i2l847
  5988  000206  5020               	movf	_intB+1,w,c
  5989  000208  E104               	bnz	i2u325_40
  5990  00020A  0E04               	movlw	4
  5991  00020C  5C1F               	subwf	_intB,w,c
  5992  00020E  A0D8               	btfss	status,0,c
  5993  000210  D00C               	goto	i2l847
  5994  000212                     i2u325_40:
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;hardware.c: 261: {
  5998                           ;hardware.c: 262: intB = 0;
  5999  000212  0E00               	movlw	0
  6000  000214  6E20               	movwf	_intB+1,c
  6001  000216  0E00               	movlw	0
  6002  000218  6E1F               	movwf	_intB,c
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;hardware.c: 263: }
  6006                           ;hardware.c: 264: }
  6007  00021A  D007               	goto	i2l847
  6008  00021C                     i2l845:
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;hardware.c: 265: else
  6012                           ;hardware.c: 266: {
  6013                           ;hardware.c: 267: armB ^= 1;
  6014                           
  6015                           ; BSR set to: 0
  6016  00021C  0E01               	movlw	1
  6017  00021E  1A0D               	xorwf	_armB,f,c
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;hardware.c: 268: shiftAction = 1;
  6021  000220  0E00               	movlw	0
  6022  000222  0100               	movlb	0	; () banked
  6023  000224  6FA5               	movwf	(_shiftAction+1)& (0+255),b
  6024  000226  0E01               	movlw	1
  6025  000228  6FA4               	movwf	_shiftAction& (0+255),b
  6026  00022A                     i2l847:
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;hardware.c: 269: }
  6030                           ;hardware.c: 270: }
  6031                           ;hardware.c: 271: }
  6032                           ;hardware.c: 273: if (switch3)
  6033                           
  6034                           ; BSR set to: 0
  6035                           
  6036                           ; BSR set to: 0
  6037                           
  6038                           ; BSR set to: 0
  6039  00022A  0100               	movlb	0	; () banked
  6040  00022C  519E               	movf	_switch3& (0+255),w,b
  6041  00022E  0100               	movlb	0	; () banked
  6042  000230  119F               	iorwf	(_switch3+1)& (0+255),w,b
  6043  000232  B4D8               	btfsc	status,2,c
  6044  000234  D021               	goto	i2l852
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;hardware.c: 274: {
  6048                           ;hardware.c: 275: switch3 = 0;
  6049  000236  0E00               	movlw	0
  6050  000238  0100               	movlb	0	; () banked
  6051  00023A  6F9F               	movwf	(_switch3+1)& (0+255),b
  6052  00023C  0E00               	movlw	0
  6053  00023E  6F9E               	movwf	_switch3& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;hardware.c: 276: if (!RE6)
  6057  000240  BC84               	btfsc	3972,6,c	;volatile
  6058  000242  D01A               	goto	i2l852
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;hardware.c: 277: {
  6062                           ;hardware.c: 278: if (!shift)
  6063  000244  5011               	movf	_shift,w,c
  6064  000246  1012               	iorwf	_shift+1,w,c
  6065  000248  A4D8               	btfss	status,2,c
  6066  00024A  D00F               	goto	i2l850
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;hardware.c: 279: {
  6070                           ;hardware.c: 280: intC++;
  6071  00024C  4A1D               	infsnz	_intC,f,c
  6072  00024E  2A1E               	incf	_intC+1,f,c
  6073                           
  6074                           ; BSR set to: 0
  6075                           ;hardware.c: 281: if (intC > 3)
  6076  000250  BE1E               	btfsc	_intC+1,7,c
  6077  000252  D012               	goto	i2l852
  6078  000254  501E               	movf	_intC+1,w,c
  6079  000256  E104               	bnz	i2u329_40
  6080  000258  0E04               	movlw	4
  6081  00025A  5C1D               	subwf	_intC,w,c
  6082  00025C  A0D8               	btfss	status,0,c
  6083  00025E  D00C               	goto	i2l852
  6084  000260                     i2u329_40:
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;hardware.c: 282: {
  6088                           ;hardware.c: 283: intC = 0;
  6089  000260  0E00               	movlw	0
  6090  000262  6E1E               	movwf	_intC+1,c
  6091  000264  0E00               	movlw	0
  6092  000266  6E1D               	movwf	_intC,c
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;hardware.c: 284: }
  6096                           ;hardware.c: 285: }
  6097  000268  D007               	goto	i2l852
  6098  00026A                     i2l850:
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;hardware.c: 286: else
  6102                           ;hardware.c: 287: {
  6103                           ;hardware.c: 288: armC ^= 1;
  6104                           
  6105                           ; BSR set to: 0
  6106  00026A  0E01               	movlw	1
  6107  00026C  1A0B               	xorwf	_armC,f,c
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;hardware.c: 289: shiftAction = 1;
  6111  00026E  0E00               	movlw	0
  6112  000270  0100               	movlb	0	; () banked
  6113  000272  6FA5               	movwf	(_shiftAction+1)& (0+255),b
  6114  000274  0E01               	movlw	1
  6115  000276  6FA4               	movwf	_shiftAction& (0+255),b
  6116  000278                     i2l852:
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;hardware.c: 290: }
  6120                           ;hardware.c: 291: }
  6121                           ;hardware.c: 292: }
  6122                           ;hardware.c: 297: updateLineLEDs(intA, intB, intC);
  6123                           
  6124                           ; BSR set to: 0
  6125                           
  6126                           ; BSR set to: 0
  6127                           
  6128                           ; BSR set to: 0
  6129  000278  C021  F029         	movff	_intA,updateLineLEDs@lineA
  6130  00027C  C022  F02A         	movff	_intA+1,updateLineLEDs@lineA+1
  6131  000280  C01F  F02B         	movff	_intB,updateLineLEDs@lineB
  6132  000284  C020  F02C         	movff	_intB+1,updateLineLEDs@lineB+1
  6133  000288  C01D  F02D         	movff	_intC,updateLineLEDs@lineC
  6134  00028C  C01E  F02E         	movff	_intC+1,updateLineLEDs@lineC+1
  6135  000290  EC6C  F009         	call	_updateLineLEDs	;wreg free
  6136                           
  6137                           ;hardware.c: 299: if (switch4)
  6138  000294  0100               	movlb	0	; () banked
  6139  000296  519C               	movf	_switch4& (0+255),w,b
  6140  000298  0100               	movlb	0	; () banked
  6141  00029A  119D               	iorwf	(_switch4+1)& (0+255),w,b
  6142  00029C  B4D8               	btfsc	status,2,c
  6143  00029E  D048               	goto	i2l862
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;hardware.c: 300: {
  6147                           ;hardware.c: 301: switch4 = 0;
  6148  0002A0  0E00               	movlw	0
  6149  0002A2  0100               	movlb	0	; () banked
  6150  0002A4  6F9D               	movwf	(_switch4+1)& (0+255),b
  6151  0002A6  0E00               	movlw	0
  6152  0002A8  6F9C               	movwf	_switch4& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;hardware.c: 302: if (!RD1)
  6156  0002AA  B283               	btfsc	3971,1,c	;volatile
  6157  0002AC  D041               	goto	i2l862
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;hardware.c: 303: {
  6161                           ;hardware.c: 304: if (!shift)
  6162  0002AE  5011               	movf	_shift,w,c
  6163  0002B0  1012               	iorwf	_shift+1,w,c
  6164  0002B2  A4D8               	btfss	status,2,c
  6165  0002B4  D015               	goto	i2l855
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;hardware.c: 305: {
  6169                           ;hardware.c: 306: preset++;
  6170  0002B6  4A19               	infsnz	_preset,f,c
  6171  0002B8  2A1A               	incf	_preset+1,f,c
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;hardware.c: 307: if (preset >= 6)
  6175  0002BA  BE1A               	btfsc	_preset+1,7,c
  6176  0002BC  D00A               	goto	i2l856
  6177  0002BE  501A               	movf	_preset+1,w,c
  6178  0002C0  E104               	bnz	i2u333_40
  6179  0002C2  0E06               	movlw	6
  6180  0002C4  5C19               	subwf	_preset,w,c
  6181  0002C6  A0D8               	btfss	status,0,c
  6182  0002C8  D004               	goto	i2l856
  6183  0002CA                     i2u333_40:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;hardware.c: 308: {
  6187                           ;hardware.c: 309: preset = 0;
  6188  0002CA  0E00               	movlw	0
  6189  0002CC  6E1A               	movwf	_preset+1,c
  6190  0002CE  0E00               	movlw	0
  6191  0002D0  6E19               	movwf	_preset,c
  6192  0002D2                     i2l856:
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;hardware.c: 310: }
  6196                           ;hardware.c: 311: updatePresetLEDs(preset);
  6197                           
  6198                           ; BSR set to: 0
  6199  0002D2  C019  F023         	movff	_preset,updatePresetLEDs@psNum
  6200  0002D6  C01A  F024         	movff	_preset+1,updatePresetLEDs@psNum+1
  6201  0002DA  ECC1  F00A         	call	_updatePresetLEDs	;wreg free
  6202                           
  6203                           ;hardware.c: 312: }
  6204  0002DE  D028               	goto	i2l862
  6205  0002E0                     i2l855:
  6206                           
  6207                           ;hardware.c: 313: else
  6208                           ;hardware.c: 314: {
  6209                           ;hardware.c: 315: if (!presetPend)
  6210  0002E0  5015               	movf	_presetPend,w,c
  6211  0002E2  1016               	iorwf	_presetPend+1,w,c
  6212  0002E4  A4D8               	btfss	status,2,c
  6213  0002E6  D016               	goto	i2l858
  6214                           
  6215                           ;hardware.c: 316: {
  6216                           ;hardware.c: 318: targPreset = preset;
  6217  0002E8  C019  F017         	movff	_preset,_targPreset
  6218  0002EC  C01A  F018         	movff	_preset+1,_targPreset+1
  6219                           
  6220                           ;hardware.c: 319: if (!targPreset)
  6221  0002F0  5017               	movf	_targPreset,w,c
  6222  0002F2  1018               	iorwf	_targPreset+1,w,c
  6223  0002F4  A4D8               	btfss	status,2,c
  6224  0002F6  D004               	goto	i2l859
  6225                           
  6226                           ;hardware.c: 320: {
  6227                           ;hardware.c: 321: targPreset = 1;
  6228  0002F8  0E00               	movlw	0
  6229  0002FA  6E18               	movwf	_targPreset+1,c
  6230  0002FC  0E01               	movlw	1
  6231  0002FE  6E17               	movwf	_targPreset,c
  6232  000300                     i2l859:
  6233                           
  6234                           ;hardware.c: 322: }
  6235                           ;hardware.c: 323: presetPend = 1;
  6236  000300  0E00               	movlw	0
  6237  000302  6E16               	movwf	_presetPend+1,c
  6238  000304  0E01               	movlw	1
  6239  000306  6E15               	movwf	_presetPend,c
  6240                           
  6241                           ;hardware.c: 324: if (targPreset > 1)
  6242  000308  BE18               	btfsc	_targPreset+1,7,c
  6243  00030A  D012               	goto	i2l862
  6244  00030C  5018               	movf	_targPreset+1,w,c
  6245  00030E  E10C               	bnz	i2u337_40
  6246  000310  0E02               	movlw	2
  6247  000312  D007               	goto	L7
  6248  000314                     i2l858:
  6249                           
  6250                           ;hardware.c: 329: else
  6251                           ;hardware.c: 330: {
  6252                           ;hardware.c: 331: targPreset++;
  6253  000314  4A17               	infsnz	_targPreset,f,c
  6254  000316  2A18               	incf	_targPreset+1,f,c
  6255                           
  6256                           ;hardware.c: 332: if (targPreset > 5)
  6257  000318  BE18               	btfsc	_targPreset+1,7,c
  6258  00031A  D00A               	goto	i2l862
  6259  00031C  5018               	movf	_targPreset+1,w,c
  6260  00031E  E104               	bnz	i2u337_40
  6261  000320  0E06               	movlw	6
  6262  000322                     L7:
  6263  000322  5C17               	subwf	_targPreset,w,c
  6264  000324  A0D8               	btfss	status,0,c
  6265  000326  D004               	goto	i2l862
  6266  000328                     i2u337_40:
  6267                           
  6268                           ;hardware.c: 333: {
  6269                           ;hardware.c: 334: targPreset = 1;
  6270  000328  0E00               	movlw	0
  6271  00032A  6E18               	movwf	_targPreset+1,c
  6272  00032C  0E01               	movlw	1
  6273  00032E  6E17               	movwf	_targPreset,c
  6274  000330                     i2l862:
  6275                           
  6276                           ;hardware.c: 335: }
  6277                           ;hardware.c: 336: }
  6278                           ;hardware.c: 337: }
  6279                           ;hardware.c: 338: }
  6280                           ;hardware.c: 339: }
  6281                           ;hardware.c: 341: if (switch5)
  6282  000330  0100               	movlb	0	; () banked
  6283  000332  519A               	movf	_switch5& (0+255),w,b
  6284  000334  0100               	movlb	0	; () banked
  6285  000336  119B               	iorwf	(_switch5+1)& (0+255),w,b
  6286  000338  B4D8               	btfsc	status,2,c
  6287  00033A  0012               	return	
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;hardware.c: 342: {
  6291                           ;hardware.c: 343: switch5 = 0;
  6292  00033C  0E00               	movlw	0
  6293  00033E  0100               	movlb	0	; () banked
  6294  000340  6F9B               	movwf	(_switch5+1)& (0+255),b
  6295  000342  0E00               	movlw	0
  6296  000344  6F9A               	movwf	_switch5& (0+255),b
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;hardware.c: 344: if (!shift)
  6300  000346  5011               	movf	_shift,w,c
  6301  000348  1012               	iorwf	_shift+1,w,c
  6302  00034A  A4D8               	btfss	status,2,c
  6303  00034C  D00B               	goto	i2l864
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;hardware.c: 345: {
  6307                           ;hardware.c: 346: if (!RG3)
  6308  00034E  B686               	btfsc	3974,3,c	;volatile
  6309  000350  0012               	return	
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;hardware.c: 347: {
  6313                           ;hardware.c: 348: shift = 1;
  6314  000352  0E00               	movlw	0
  6315  000354  6E12               	movwf	_shift+1,c
  6316  000356  0E01               	movlw	1
  6317  000358  6E11               	movwf	_shift,c
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;hardware.c: 350: IOCNbits.IOCN7 = 0x0;
  6321  00035A  010F               	movlb	15	; () banked
  6322  00035C  9F55               	bcf	85,7,b	;volatile
  6323                           
  6324                           ; BSR set to: 15
  6325                           ;hardware.c: 351: IOCPbits.IOCP7 = 0x1;
  6326  00035E  010F               	movlb	15	; () banked
  6327  000360  8F56               	bsf	86,7,b	;volatile
  6328                           
  6329                           ; BSR set to: 15
  6330                           ;hardware.c: 352: }
  6331                           ;hardware.c: 353: }
  6332  000362  0012               	return	
  6333  000364                     i2l864:
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;hardware.c: 354: else
  6337                           ;hardware.c: 355: {
  6338                           ;hardware.c: 356: if (RG3)
  6339  000364  A686               	btfss	3974,3,c	;volatile
  6340  000366  0012               	return	
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;hardware.c: 357: {
  6344                           ;hardware.c: 358: shift = 0;
  6345  000368  0E00               	movlw	0
  6346  00036A  6E12               	movwf	_shift+1,c
  6347  00036C  0E00               	movlw	0
  6348  00036E  6E11               	movwf	_shift,c
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;hardware.c: 360: IOCNbits.IOCN7 = 0x1;
  6352  000370  010F               	movlb	15	; () banked
  6353  000372  8F55               	bsf	85,7,b	;volatile
  6354                           
  6355                           ; BSR set to: 15
  6356                           ;hardware.c: 361: IOCPbits.IOCP7 = 0x0;
  6357  000374  010F               	movlb	15	; () banked
  6358  000376  9F56               	bcf	86,7,b	;volatile
  6359                           
  6360                           ; BSR set to: 15
  6361                           ;hardware.c: 363: if (!shiftAction)
  6362  000378  0100               	movlb	0	; () banked
  6363  00037A  51A4               	movf	_shiftAction& (0+255),w,b
  6364  00037C  0100               	movlb	0	; () banked
  6365  00037E  11A5               	iorwf	(_shiftAction+1)& (0+255),w,b
  6366  000380  A4D8               	btfss	status,2,c
  6367  000382  D010               	goto	i2l868
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;hardware.c: 364: {
  6371                           ;hardware.c: 365: swX ^= 1;
  6372  000384  0E01               	movlw	1
  6373  000386  1A45               	xorwf	_swX,f,c
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;hardware.c: 366: bypMode = swX;
  6377  000388  C045  F0E2         	movff	_swX,_bypMode
  6378  00038C  C046  F0E3         	movff	_swX+1,_bypMode+1
  6379                           
  6380                           ;hardware.c: 367: if (swX)
  6381  000390  5045               	movf	_swX,w,c
  6382  000392  1046               	iorwf	_swX+1,w,c
  6383  000394  B4D8               	btfsc	status,2,c
  6384  000396  D003               	goto	i2l869
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;hardware.c: 368: {
  6388                           ;hardware.c: 369: LATE1 = 1;
  6389  000398  828D               	bsf	3981,1,c	;volatile
  6390                           
  6391                           ;hardware.c: 370: LATH1 = 0;
  6392  00039A  9290               	bcf	3984,1,c	;volatile
  6393                           
  6394                           ;hardware.c: 371: }
  6395  00039C  0012               	return	
  6396  00039E                     i2l869:
  6397                           
  6398                           ; BSR set to: 0
  6399                           ;hardware.c: 372: else
  6400                           ;hardware.c: 373: {
  6401                           ;hardware.c: 374: LATE1 = 0;
  6402  00039E  928D               	bcf	3981,1,c	;volatile
  6403                           
  6404                           ;hardware.c: 375: LATH1 = 1;
  6405  0003A0  8290               	bsf	3984,1,c	;volatile
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;hardware.c: 376: }
  6409                           ;hardware.c: 377: }
  6410  0003A2  0012               	return	
  6411  0003A4                     i2l868:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;hardware.c: 378: else
  6415                           ;hardware.c: 379: {
  6416                           ;hardware.c: 380: presetPend = 0;
  6417                           
  6418                           ; BSR set to: 0
  6419  0003A4  0E00               	movlw	0
  6420  0003A6  6E16               	movwf	_presetPend+1,c
  6421  0003A8  0E00               	movlw	0
  6422  0003AA  6E15               	movwf	_presetPend,c
  6423                           
  6424                           ;hardware.c: 381: shiftAction = 0;
  6425  0003AC  0E00               	movlw	0
  6426  0003AE  0100               	movlb	0	; () banked
  6427  0003B0  6FA5               	movwf	(_shiftAction+1)& (0+255),b
  6428  0003B2  0E00               	movlw	0
  6429  0003B4  6FA4               	movwf	_shiftAction& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;hardware.c: 382: preset = targPreset;
  6433  0003B6  C017  F019         	movff	_targPreset,_preset
  6434  0003BA  C018  F01A         	movff	_targPreset+1,_preset+1
  6435                           
  6436                           ;hardware.c: 383: pFlash = 0;
  6437  0003BE  0E00               	movlw	0
  6438  0003C0  0100               	movlb	0	; () banked
  6439  0003C2  6F8B               	movwf	(_pFlash+1)& (0+255),b
  6440  0003C4  0E00               	movlw	0
  6441  0003C6  6F8A               	movwf	_pFlash& (0+255),b
  6442                           
  6443                           ;hardware.c: 384: pFlashCount = 0;
  6444  0003C8  0E00               	movlw	0
  6445  0003CA  0100               	movlb	0	; () banked
  6446  0003CC  6F8D               	movwf	(_pFlashCount+1)& (0+255),b
  6447  0003CE  0E00               	movlw	0
  6448  0003D0  6F8C               	movwf	_pFlashCount& (0+255),b
  6449                           
  6450                           ;hardware.c: 385: savePend = 1;
  6451  0003D2  0E00               	movlw	0
  6452  0003D4  0100               	movlb	0	; () banked
  6453  0003D6  6F91               	movwf	(_savePend+1)& (0+255),b
  6454  0003D8  0E01               	movlw	1
  6455  0003DA  6F90               	movwf	_savePend& (0+255),b
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;hardware.c: 386: updatePresetLEDs(preset);
  6459  0003DC  C019  F023         	movff	_preset,updatePresetLEDs@psNum
  6460  0003E0  C01A  F024         	movff	_preset+1,updatePresetLEDs@psNum+1
  6461  0003E4  ECC1  F00A         	call	_updatePresetLEDs	;wreg free
  6462  0003E8  0012               	return	
  6463  0003EA                     __end_of_serviceSwitches:
  6464                           	opt stack 0
  6465                           pclatu	equ	0xFFB
  6466                           pclath	equ	0xFFA
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           postinc0	equ	0xFEE
  6475                           fsr0h	equ	0xFEA
  6476                           fsr0l	equ	0xFE9
  6477                           wreg	equ	0xFE8
  6478                           postinc1	equ	0xFE6
  6479                           postdec1	equ	0xFE5
  6480                           fsr1h	equ	0xFE2
  6481                           fsr1l	equ	0xFE1
  6482                           indf2	equ	0xFDF
  6483                           postinc2	equ	0xFDE
  6484                           postdec2	equ	0xFDD
  6485                           fsr2h	equ	0xFDA
  6486                           fsr2l	equ	0xFD9
  6487                           status	equ	0xFD8
  6488                           
  6489 ;; *************** function _processTaps *****************
  6490 ;; Defined at:
  6491 ;;		line 30 in file "hardware.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;  tapDiff         2   10[COMRAM] int 
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6506 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;Total ram usage:        4 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    1
  6512 ;; This function calls:
  6513 ;;		___awdiv
  6514 ;;		_maxTapCheck
  6515 ;;		i2_absVal
  6516 ;; This function is called by:
  6517 ;;		_serviceSwitches
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text30
  6522  000D82                     __ptext30:
  6523                           	opt stack 0
  6524  000D82                     _processTaps:
  6525                           	opt stack 24
  6526                           
  6527                           ;hardware.c: 32: int tapDiff = 0;
  6528                           
  6529                           ;incstack = 0
  6530  000D82  0E00               	movlw	0
  6531  000D84  6E2E               	movwf	processTaps@tapDiff+1,c
  6532  000D86  0E00               	movlw	0
  6533  000D88  6E2D               	movwf	processTaps@tapDiff,c
  6534                           
  6535                           ;hardware.c: 34: if (tap < 1)
  6536  000D8A  0100               	movlb	0	; () banked
  6537  000D8C  BF6F               	btfsc	(_tap+1)& (0+255),7,b
  6538  000D8E  D007               	goto	i2u261_40
  6539  000D90  0100               	movlb	0	; () banked
  6540  000D92  516F               	movf	(_tap+1)& (0+255),w,b
  6541  000D94  E116               	bnz	i2l794
  6542  000D96  0100               	movlb	0	; () banked
  6543  000D98  056E               	decf	_tap& (0+255),w,b
  6544  000D9A  B0D8               	btfsc	status,0,c
  6545  000D9C  D012               	goto	i2l794
  6546  000D9E                     i2u261_40:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;hardware.c: 35: {
  6550                           ;hardware.c: 36: T2CONbits.TMR2ON = 0x1;
  6551  000D9E  84CA               	bsf	4042,2,c	;volatile
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;hardware.c: 37: tapAccum = 0;
  6555  000DA0  0E00               	movlw	0
  6556  000DA2  0100               	movlb	0	; () banked
  6557  000DA4  6F60               	movwf	_tapAccum& (0+255),b
  6558  000DA6  0E00               	movlw	0
  6559  000DA8  6F61               	movwf	(_tapAccum+1)& (0+255),b
  6560  000DAA  0E00               	movlw	0
  6561  000DAC  6F62               	movwf	(_tapAccum+2)& (0+255),b
  6562  000DAE  0E00               	movlw	0
  6563  000DB0  6F63               	movwf	(_tapAccum+3)& (0+255),b
  6564                           
  6565                           ;hardware.c: 38: tapPrev = 0;
  6566  000DB2  0E00               	movlw	0
  6567  000DB4  6E02               	movwf	_tapPrev+1,c
  6568  000DB6  0E00               	movlw	0
  6569  000DB8  6E01               	movwf	_tapPrev,c
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;hardware.c: 39: tap++;
  6573  000DBA  0100               	movlb	0	; () banked
  6574  000DBC  4B6E               	infsnz	_tap& (0+255),f,b
  6575  000DBE  2B6F               	incf	(_tap+1)& (0+255),f,b
  6576                           
  6577                           ;hardware.c: 40: }
  6578  000DC0  D062               	goto	i2l795
  6579  000DC2                     i2l794:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;hardware.c: 41: else
  6583                           ;hardware.c: 42: {
  6584                           ;hardware.c: 43: T2CONbits.TMR2ON = 0;
  6585  000DC2  94CA               	bcf	4042,2,c	;volatile
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;hardware.c: 44: tapFlash = 1;
  6589  000DC4  0E00               	movlw	0
  6590  000DC6  0100               	movlb	0	; () banked
  6591  000DC8  6F89               	movwf	(_tapFlash+1)& (0+255),b
  6592  000DCA  0E01               	movlw	1
  6593  000DCC  6F88               	movwf	_tapFlash& (0+255),b
  6594                           
  6595                           ;hardware.c: 45: tapDispCount = 0;
  6596  000DCE  0E00               	movlw	0
  6597  000DD0  6E14               	movwf	_tapDispCount+1,c
  6598  000DD2  0E00               	movlw	0
  6599  000DD4  6E13               	movwf	_tapDispCount,c
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;hardware.c: 46: LATE0 = 0x1;
  6603  000DD6  808D               	bsf	3981,0,c	;volatile
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;hardware.c: 48: if (tap < 2)
  6607  000DD8  0100               	movlb	0	; () banked
  6608  000DDA  BF6F               	btfsc	(_tap+1)& (0+255),7,b
  6609  000DDC  D008               	goto	i2u262_40
  6610  000DDE  0100               	movlb	0	; () banked
  6611  000DE0  516F               	movf	(_tap+1)& (0+255),w,b
  6612  000DE2  E113               	bnz	i2l3263
  6613  000DE4  0E02               	movlw	2
  6614  000DE6  0100               	movlb	0	; () banked
  6615  000DE8  5D6E               	subwf	_tap& (0+255),w,b
  6616  000DEA  B0D8               	btfsc	status,0,c
  6617  000DEC  D00E               	goto	i2l796
  6618  000DEE                     i2u262_40:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;hardware.c: 49: {
  6622                           ;hardware.c: 50: currentTapTime = tapTimeCount;
  6623  000DEE  C003  F0E0         	movff	_tapTimeCount,_currentTapTime
  6624  000DF2  C004  F0E1         	movff	_tapTimeCount+1,_currentTapTime+1
  6625                           
  6626                           ;hardware.c: 51: tapPrev = tapTimeCount;
  6627  000DF6  C003  F001         	movff	_tapTimeCount,_tapPrev
  6628  000DFA  C004  F002         	movff	_tapTimeCount+1,_tapPrev+1
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;hardware.c: 52: tap++;
  6632  000DFE  0100               	movlb	0	; () banked
  6633  000E00  4B6E               	infsnz	_tap& (0+255),f,b
  6634  000E02  2B6F               	incf	(_tap+1)& (0+255),f,b
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;hardware.c: 53: maxTapCheck();
  6638  000E04  EC27  F00B         	call	_maxTapCheck	;wreg free
  6639                           
  6640                           ;hardware.c: 54: }
  6641  000E08  D03D               	goto	i2l799
  6642  000E0A                     i2l796:
  6643  000E0A                     i2l3263:
  6644                           
  6645                           ;hardware.c: 55: else
  6646                           ;hardware.c: 56: {
  6647                           ;hardware.c: 57: tapDiff = tapTimeCount - tapPrev;
  6648  000E0A  C001  F02B         	movff	_tapPrev,??_processTaps
  6649  000E0E  C002  F02C         	movff	_tapPrev+1,??_processTaps+1
  6650  000E12  1E2B               	comf	??_processTaps,f,c
  6651  000E14  1E2C               	comf	??_processTaps+1,f,c
  6652  000E16  4A2B               	infsnz	??_processTaps,f,c
  6653  000E18  2A2C               	incf	??_processTaps+1,f,c
  6654  000E1A  5003               	movf	_tapTimeCount,w,c
  6655  000E1C  242B               	addwf	??_processTaps,w,c
  6656  000E1E  6E2D               	movwf	processTaps@tapDiff,c
  6657  000E20  5004               	movf	_tapTimeCount+1,w,c
  6658  000E22  202C               	addwfc	??_processTaps+1,w,c
  6659  000E24  6E2E               	movwf	processTaps@tapDiff+1,c
  6660                           
  6661                           ;hardware.c: 58: tapDiff = absVal(tapDiff);
  6662  000E26  C02D  F023         	movff	processTaps@tapDiff,i2absVal@val
  6663  000E2A  C02E  F024         	movff	processTaps@tapDiff+1,i2absVal@val+1
  6664  000E2E  EC00  F00C         	call	i2_absVal	;wreg free
  6665  000E32  C023  F02D         	movff	?i2_absVal,processTaps@tapDiff
  6666  000E36  C024  F02E         	movff	?i2_absVal+1,processTaps@tapDiff+1
  6667                           
  6668                           ;hardware.c: 59: if (tapDiff >= 500)
  6669  000E3A  BE2E               	btfsc	processTaps@tapDiff+1,7,c
  6670  000E3C  D00C               	goto	i2l798
  6671  000E3E  0EF4               	movlw	244
  6672  000E40  5C2D               	subwf	processTaps@tapDiff,w,c
  6673  000E42  0E01               	movlw	1
  6674  000E44  582E               	subwfb	processTaps@tapDiff+1,w,c
  6675  000E46  A0D8               	btfss	status,0,c
  6676  000E48  D006               	goto	i2l798
  6677                           
  6678                           ;hardware.c: 60: {
  6679                           ;hardware.c: 61: tap = 1;
  6680  000E4A  0E00               	movlw	0
  6681  000E4C  0100               	movlb	0	; () banked
  6682  000E4E  6F6F               	movwf	(_tap+1)& (0+255),b
  6683  000E50  0E01               	movlw	1
  6684  000E52  6F6E               	movwf	_tap& (0+255),b
  6685                           
  6686                           ;hardware.c: 62: }
  6687  000E54  D017               	goto	i2l799
  6688  000E56                     i2l798:
  6689                           
  6690                           ;hardware.c: 63: else
  6691                           ;hardware.c: 64: {
  6692                           ;hardware.c: 65: currentTapTime = (tapTimeCount + tapPrev)/2;
  6693                           
  6694                           ; BSR set to: 0
  6695  000E56  5001               	movf	_tapPrev,w,c
  6696  000E58  2403               	addwf	_tapTimeCount,w,c
  6697  000E5A  6E23               	movwf	___awdiv@dividend,c
  6698  000E5C  5002               	movf	_tapPrev+1,w,c
  6699  000E5E  2004               	addwfc	_tapTimeCount+1,w,c
  6700  000E60  6E24               	movwf	___awdiv@dividend+1,c
  6701  000E62  0E00               	movlw	0
  6702  000E64  6E26               	movwf	___awdiv@divisor+1,c
  6703  000E66  0E02               	movlw	2
  6704  000E68  6E25               	movwf	___awdiv@divisor,c
  6705  000E6A  EC7F  F00A         	call	___awdiv	;wreg free
  6706  000E6E  C023  F0E0         	movff	?___awdiv,_currentTapTime
  6707  000E72  C024  F0E1         	movff	?___awdiv+1,_currentTapTime+1
  6708                           
  6709                           ;hardware.c: 66: tapPrev = tapTimeCount;
  6710  000E76  C003  F001         	movff	_tapTimeCount,_tapPrev
  6711  000E7A  C004  F002         	movff	_tapTimeCount+1,_tapPrev+1
  6712                           
  6713                           ;hardware.c: 67: tap++;
  6714  000E7E  0100               	movlb	0	; () banked
  6715  000E80  4B6E               	infsnz	_tap& (0+255),f,b
  6716  000E82  2B6F               	incf	(_tap+1)& (0+255),f,b
  6717  000E84                     i2l799:
  6718                           
  6719                           ;hardware.c: 68: }
  6720                           ;hardware.c: 69: }
  6721                           ;hardware.c: 70: T2CONbits.TMR2ON = 1;
  6722                           
  6723                           ; BSR set to: 0
  6724                           
  6725                           ; BSR set to: 0
  6726  000E84  84CA               	bsf	4042,2,c	;volatile
  6727  000E86                     i2l795:
  6728                           
  6729                           ;hardware.c: 71: }
  6730                           ;hardware.c: 72: tapTimeCount = 0;
  6731  000E86  0E00               	movlw	0
  6732  000E88  6E04               	movwf	_tapTimeCount+1,c
  6733  000E8A  0E00               	movlw	0
  6734  000E8C  6E03               	movwf	_tapTimeCount,c
  6735  000E8E  0012               	return		;funcret
  6736  000E90                     __end_of_processTaps:
  6737                           	opt stack 0
  6738                           pclatu	equ	0xFFB
  6739                           pclath	equ	0xFFA
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           postinc0	equ	0xFEE
  6748                           fsr0h	equ	0xFEA
  6749                           fsr0l	equ	0xFE9
  6750                           wreg	equ	0xFE8
  6751                           postinc1	equ	0xFE6
  6752                           postdec1	equ	0xFE5
  6753                           fsr1h	equ	0xFE2
  6754                           fsr1l	equ	0xFE1
  6755                           indf2	equ	0xFDF
  6756                           postinc2	equ	0xFDE
  6757                           postdec2	equ	0xFDD
  6758                           fsr2h	equ	0xFDA
  6759                           fsr2l	equ	0xFD9
  6760                           status	equ	0xFD8
  6761                           
  6762 ;; *************** function i2_absVal *****************
  6763 ;; Defined at:
  6764 ;;		line 175 in file "main.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  val             2    0[COMRAM] int 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;		None
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  2    0[COMRAM] int 
  6771 ;; Registers used:
  6772 ;;		wreg, status,2, status,0
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;Total ram usage:        4 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; This function calls:
  6785 ;;		Nothing
  6786 ;; This function is called by:
  6787 ;;		_processTaps
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791                           	psect	text31
  6792  001800                     __ptext31:
  6793                           	opt stack 0
  6794  001800                     i2_absVal:
  6795                           	opt stack 24
  6796                           
  6797                           ;main.c: 177: if (val < 0)
  6798                           
  6799                           ;incstack = 0
  6800  001800  AE24               	btfss	i2absVal@val+1,7,c
  6801  001802  D00D               	goto	i2l168
  6802                           
  6803                           ;main.c: 178: return -val;
  6804  001804  C023  F025         	movff	i2absVal@val,??i2_absVal
  6805  001808  C024  F026         	movff	i2absVal@val+1,??i2_absVal+1
  6806  00180C  1E25               	comf	??i2_absVal,f,c
  6807  00180E  1E26               	comf	??i2_absVal+1,f,c
  6808  001810  4A25               	infsnz	??i2_absVal,f,c
  6809  001812  2A26               	incf	??i2_absVal+1,f,c
  6810  001814  C025  F023         	movff	??i2_absVal,?i2_absVal
  6811  001818  C026  F024         	movff	??i2_absVal+1,?i2_absVal+1
  6812  00181C  0012               	return	
  6813  00181E                     i2l168:
  6814                           
  6815                           ;main.c: 179: else return val;
  6816  00181E  C023  F023         	movff	i2absVal@val,?i2_absVal
  6817  001822  C024  F024         	movff	i2absVal@val+1,?i2_absVal+1
  6818  001826  0012               	return	
  6819  001828                     __end_ofi2_absVal:
  6820                           	opt stack 0
  6821                           pclatu	equ	0xFFB
  6822                           pclath	equ	0xFFA
  6823                           tblptru	equ	0xFF8
  6824                           tblptrh	equ	0xFF7
  6825                           tblptrl	equ	0xFF6
  6826                           tablat	equ	0xFF5
  6827                           prodh	equ	0xFF4
  6828                           prodl	equ	0xFF3
  6829                           intcon	equ	0xFF2
  6830                           postinc0	equ	0xFEE
  6831                           fsr0h	equ	0xFEA
  6832                           fsr0l	equ	0xFE9
  6833                           wreg	equ	0xFE8
  6834                           postinc1	equ	0xFE6
  6835                           postdec1	equ	0xFE5
  6836                           fsr1h	equ	0xFE2
  6837                           fsr1l	equ	0xFE1
  6838                           indf2	equ	0xFDF
  6839                           postinc2	equ	0xFDE
  6840                           postdec2	equ	0xFDD
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _maxTapCheck *****************
  6846 ;; Defined at:
  6847 ;;		line 15 in file "hardware.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_processTaps
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text32
  6875  00164E                     __ptext32:
  6876                           	opt stack 0
  6877  00164E                     _maxTapCheck:
  6878                           	opt stack 24
  6879                           
  6880                           ;hardware.c: 17: if (tapTimeCount > 3000)
  6881                           
  6882                           ;incstack = 0
  6883  00164E  BE04               	btfsc	_tapTimeCount+1,7,c
  6884  001650  D010               	goto	i2l788
  6885  001652  0EB9               	movlw	185
  6886  001654  5C03               	subwf	_tapTimeCount,w,c
  6887  001656  0E0B               	movlw	11
  6888  001658  5804               	subwfb	_tapTimeCount+1,w,c
  6889  00165A  A0D8               	btfss	status,0,c
  6890  00165C  D00A               	goto	i2l788
  6891                           
  6892                           ;hardware.c: 18: {
  6893                           ;hardware.c: 19: tapTimeCount = 0;
  6894  00165E  0E00               	movlw	0
  6895  001660  6E04               	movwf	_tapTimeCount+1,c
  6896  001662  0E00               	movlw	0
  6897  001664  6E03               	movwf	_tapTimeCount,c
  6898                           
  6899                           ;hardware.c: 20: tap = 0;
  6900  001666  0E00               	movlw	0
  6901  001668  0100               	movlb	0	; () banked
  6902  00166A  6F6F               	movwf	(_tap+1)& (0+255),b
  6903  00166C  0E00               	movlw	0
  6904  00166E  6F6E               	movwf	_tap& (0+255),b
  6905                           
  6906                           ;hardware.c: 21: }
  6907  001670  0012               	return	
  6908  001672                     i2l788:
  6909                           
  6910                           ;hardware.c: 22: else if (tapTimeCount >= 1500)
  6911                           
  6912                           ; BSR set to: 0
  6913  001672  BE04               	btfsc	_tapTimeCount+1,7,c
  6914  001674  0012               	return	
  6915  001676  0EDC               	movlw	220
  6916  001678  5C03               	subwf	_tapTimeCount,w,c
  6917  00167A  0E05               	movlw	5
  6918  00167C  5804               	subwfb	_tapTimeCount+1,w,c
  6919  00167E  A0D8               	btfss	status,0,c
  6920  001680  0012               	return	
  6921                           
  6922                           ;hardware.c: 23: {
  6923                           ;hardware.c: 24: newTempo = 1;
  6924  001682  0E00               	movlw	0
  6925  001684  0100               	movlb	0	; () banked
  6926  001686  6F6B               	movwf	(_newTempo+1)& (0+255),b
  6927  001688  0E01               	movlw	1
  6928  00168A  6F6A               	movwf	_newTempo& (0+255),b
  6929                           
  6930                           ;hardware.c: 25: tap = 0;
  6931  00168C  0E00               	movlw	0
  6932  00168E  0100               	movlb	0	; () banked
  6933  001690  6F6F               	movwf	(_tap+1)& (0+255),b
  6934  001692  0E00               	movlw	0
  6935  001694  6F6E               	movwf	_tap& (0+255),b
  6936                           
  6937                           ;hardware.c: 26: currentTapTime = 1500;
  6938  001696  0E05               	movlw	5
  6939  001698  0100               	movlb	0	; () banked
  6940  00169A  6FE1               	movwf	(_currentTapTime+1)& (0+255),b
  6941  00169C  0EDC               	movlw	220
  6942  00169E  6FE0               	movwf	_currentTapTime& (0+255),b
  6943                           
  6944                           ; BSR set to: 0
  6945  0016A0  0012               	return	
  6946  0016A2                     __end_of_maxTapCheck:
  6947                           	opt stack 0
  6948                           pclatu	equ	0xFFB
  6949                           pclath	equ	0xFFA
  6950                           tblptru	equ	0xFF8
  6951                           tblptrh	equ	0xFF7
  6952                           tblptrl	equ	0xFF6
  6953                           tablat	equ	0xFF5
  6954                           prodh	equ	0xFF4
  6955                           prodl	equ	0xFF3
  6956                           intcon	equ	0xFF2
  6957                           postinc0	equ	0xFEE
  6958                           fsr0h	equ	0xFEA
  6959                           fsr0l	equ	0xFE9
  6960                           wreg	equ	0xFE8
  6961                           postinc1	equ	0xFE6
  6962                           postdec1	equ	0xFE5
  6963                           fsr1h	equ	0xFE2
  6964                           fsr1l	equ	0xFE1
  6965                           indf2	equ	0xFDF
  6966                           postinc2	equ	0xFDE
  6967                           postdec2	equ	0xFDD
  6968                           fsr2h	equ	0xFDA
  6969                           fsr2l	equ	0xFD9
  6970                           status	equ	0xFD8
  6971                           
  6972 ;; *************** function ___awdiv *****************
  6973 ;; Defined at:
  6974 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/awdiv.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  dividend        2    0[COMRAM] int 
  6977 ;;  divisor         2    2[COMRAM] int 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  quotient        2    6[COMRAM] int 
  6980 ;;  sign            1    5[COMRAM] unsigned char 
  6981 ;;  counter         1    4[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  2    0[COMRAM] int 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;Total ram usage:        8 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_processTaps
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text33
  7005  0014FE                     __ptext33:
  7006                           	opt stack 0
  7007  0014FE                     ___awdiv:
  7008                           	opt stack 24
  7009                           
  7010                           ;incstack = 0
  7011  0014FE  0E00               	movlw	0
  7012  001500  6E28               	movwf	___awdiv@sign,c
  7013  001502  AE26               	btfss	___awdiv@divisor+1,7,c
  7014  001504  D006               	goto	i2l1439
  7015  001506  6C25               	negf	___awdiv@divisor,c
  7016  001508  1E26               	comf	___awdiv@divisor+1,f,c
  7017  00150A  B0D8               	btfsc	status,0,c
  7018  00150C  2A26               	incf	___awdiv@divisor+1,f,c
  7019  00150E  0E01               	movlw	1
  7020  001510  6E28               	movwf	___awdiv@sign,c
  7021  001512                     i2l1439:
  7022  001512  AE24               	btfss	___awdiv@dividend+1,7,c
  7023  001514  D006               	goto	i2l1440
  7024  001516  6C23               	negf	___awdiv@dividend,c
  7025  001518  1E24               	comf	___awdiv@dividend+1,f,c
  7026  00151A  B0D8               	btfsc	status,0,c
  7027  00151C  2A24               	incf	___awdiv@dividend+1,f,c
  7028  00151E  0E01               	movlw	1
  7029  001520  1A28               	xorwf	___awdiv@sign,f,c
  7030  001522                     i2l1440:
  7031  001522  0E00               	movlw	0
  7032  001524  6E2A               	movwf	___awdiv@quotient+1,c
  7033  001526  0E00               	movlw	0
  7034  001528  6E29               	movwf	___awdiv@quotient,c
  7035  00152A  5025               	movf	___awdiv@divisor,w,c
  7036  00152C  1026               	iorwf	___awdiv@divisor+1,w,c
  7037  00152E  B4D8               	btfsc	status,2,c
  7038  001530  D01C               	goto	i2l1447
  7039  001532  0E01               	movlw	1
  7040  001534  6E27               	movwf	___awdiv@counter,c
  7041  001536  D004               	goto	i2l1442
  7042  001538  90D8               	bcf	status,0,c
  7043  00153A  3625               	rlcf	___awdiv@divisor,f,c
  7044  00153C  3626               	rlcf	___awdiv@divisor+1,f,c
  7045  00153E  2A27               	incf	___awdiv@counter,f,c
  7046  001540                     i2l1442:
  7047  001540  AE26               	btfss	___awdiv@divisor+1,7,c
  7048  001542  D7FA               	goto	i2l1443
  7049  001544                     i2u225_40:
  7050  001544  90D8               	bcf	status,0,c
  7051  001546  3629               	rlcf	___awdiv@quotient,f,c
  7052  001548  362A               	rlcf	___awdiv@quotient+1,f,c
  7053  00154A  5025               	movf	___awdiv@divisor,w,c
  7054  00154C  5C23               	subwf	___awdiv@dividend,w,c
  7055  00154E  5026               	movf	___awdiv@divisor+1,w,c
  7056  001550  5824               	subwfb	___awdiv@dividend+1,w,c
  7057  001552  A0D8               	btfss	status,0,c
  7058  001554  D005               	goto	i2l1446
  7059  001556  5025               	movf	___awdiv@divisor,w,c
  7060  001558  5E23               	subwf	___awdiv@dividend,f,c
  7061  00155A  5026               	movf	___awdiv@divisor+1,w,c
  7062  00155C  5A24               	subwfb	___awdiv@dividend+1,f,c
  7063  00155E  8029               	bsf	___awdiv@quotient,0,c
  7064  001560                     i2l1446:
  7065  001560  90D8               	bcf	status,0,c
  7066  001562  3226               	rrcf	___awdiv@divisor+1,f,c
  7067  001564  3225               	rrcf	___awdiv@divisor,f,c
  7068  001566  2E27               	decfsz	___awdiv@counter,f,c
  7069  001568  D7ED               	goto	i2u225_40
  7070  00156A                     i2l1447:
  7071  00156A  5028               	movf	___awdiv@sign,w,c
  7072  00156C  B4D8               	btfsc	status,2,c
  7073  00156E  D004               	goto	i2l1448
  7074  001570  6C29               	negf	___awdiv@quotient,c
  7075  001572  1E2A               	comf	___awdiv@quotient+1,f,c
  7076  001574  B0D8               	btfsc	status,0,c
  7077  001576  2A2A               	incf	___awdiv@quotient+1,f,c
  7078  001578                     i2l1448:
  7079  001578  C029  F023         	movff	___awdiv@quotient,?___awdiv
  7080  00157C  C02A  F024         	movff	___awdiv@quotient+1,?___awdiv+1
  7081  001580  0012               	return	
  7082  001582                     __end_of___awdiv:
  7083                           	opt stack 0
  7084                           pclatu	equ	0xFFB
  7085                           pclath	equ	0xFFA
  7086                           tblptru	equ	0xFF8
  7087                           tblptrh	equ	0xFF7
  7088                           tblptrl	equ	0xFF6
  7089                           tablat	equ	0xFF5
  7090                           prodh	equ	0xFF4
  7091                           prodl	equ	0xFF3
  7092                           intcon	equ	0xFF2
  7093                           postinc0	equ	0xFEE
  7094                           fsr0h	equ	0xFEA
  7095                           fsr0l	equ	0xFE9
  7096                           wreg	equ	0xFE8
  7097                           postinc1	equ	0xFE6
  7098                           postdec1	equ	0xFE5
  7099                           fsr1h	equ	0xFE2
  7100                           fsr1l	equ	0xFE1
  7101                           indf2	equ	0xFDF
  7102                           postinc2	equ	0xFDE
  7103                           postdec2	equ	0xFDD
  7104                           fsr2h	equ	0xFDA
  7105                           fsr2l	equ	0xFD9
  7106                           status	equ	0xFD8
  7107                           
  7108 ;; *************** function _sendParam *****************
  7109 ;; Defined at:
  7110 ;;		line 261 in file "serial.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;		None
  7113 ;; Auto vars:     Size  Location     Type
  7114 ;;  n               2    2[COMRAM] int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;Total ram usage:        4 bytes
  7129 ;; Hardware stack levels used:    1
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_highPriorityISR
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text34
  7138  00111E                     __ptext34:
  7139                           	opt stack 0
  7140  00111E                     _sendParam:
  7141                           	opt stack 26
  7142                           
  7143                           ;serial.c: 263: int n = 0;
  7144                           
  7145                           ;incstack = 0
  7146  00111E  0E00               	movlw	0
  7147  001120  6E26               	movwf	sendParam@n+1,c
  7148  001122  0E00               	movlw	0
  7149  001124  6E25               	movwf	sendParam@n,c
  7150                           
  7151                           ;serial.c: 265: dataTarget = SSP2BUF;
  7152  001126  CF03 F07E          	movff	3843,_dataTarget	;volatile
  7153  00112A  0100               	movlb	0	; () banked
  7154  00112C  6B7F               	clrf	(_dataTarget+1)& (0+255),b
  7155                           
  7156                           ;serial.c: 267: for (n = 0; n < 13; n++)
  7157  00112E  0E00               	movlw	0
  7158  001130  6E26               	movwf	sendParam@n+1,c
  7159  001132  0E00               	movlw	0
  7160  001134  6E25               	movwf	sendParam@n,c
  7161                           
  7162                           ; BSR set to: 0
  7163  001136  BE26               	btfsc	sendParam@n+1,7,c
  7164  001138  D003               	goto	i2l1266
  7165  00113A  5026               	movf	sendParam@n+1,w,c
  7166  00113C  E135               	bnz	i2l1267
  7167  00113E  D030               	goto	L1
  7168  001140                     i2l1266:
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;serial.c: 268: {
  7172                           ;serial.c: 269: if (dataTarget == paramAddress[n])
  7173                           
  7174                           ; BSR set to: 0
  7175  001140  90D8               	bcf	status,0,c
  7176  001142  3425               	rlcf	sendParam@n,w,c
  7177  001144  6ED9               	movwf	fsr2l,c
  7178  001146  3426               	rlcf	sendParam@n+1,w,c
  7179  001148  6EDA               	movwf	fsr2h,c
  7180  00114A  0E94               	movlw	low _paramAddress
  7181  00114C  26D9               	addwf	fsr2l,f,c
  7182  00114E  0E01               	movlw	high _paramAddress
  7183  001150  22DA               	addwfc	fsr2h,f,c
  7184  001152  0100               	movlb	0	; () banked
  7185  001154  517E               	movf	_dataTarget& (0+255),w,b
  7186  001156  18DE               	xorwf	postinc2,w,c
  7187  001158  E11D               	bnz	i2l3359
  7188  00115A  0100               	movlb	0	; () banked
  7189  00115C  517F               	movf	(_dataTarget+1)& (0+255),w,b
  7190  00115E  18DE               	xorwf	postinc2,w,c
  7191  001160  A4D8               	btfss	status,2,c
  7192  001162  D018               	goto	i2l1268
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;serial.c: 270: {
  7196                           ;serial.c: 271: if (n == 12)
  7197  001164  0E0C               	movlw	12
  7198  001166  1825               	xorwf	sendParam@n,w,c
  7199  001168  1026               	iorwf	sendParam@n+1,w,c
  7200  00116A  A4D8               	btfss	status,2,c
  7201  00116C  D005               	goto	i2l1269
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;serial.c: 272: {
  7205                           ;serial.c: 273: dataPtr = setupComplete;
  7206  00116E  C066  F07C         	movff	_setupComplete,_dataPtr
  7207  001172  C067  F07D         	movff	_setupComplete+1,_dataPtr+1
  7208                           
  7209                           ;serial.c: 274: }
  7210  001176  D018               	goto	i2u281_40
  7211  001178                     i2l1269:
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;serial.c: 275: else dataPtr = parameter[n];
  7215                           
  7216                           ; BSR set to: 0
  7217  001178  90D8               	bcf	status,0,c
  7218  00117A  3425               	rlcf	sendParam@n,w,c
  7219  00117C  6ED9               	movwf	fsr2l,c
  7220  00117E  3426               	rlcf	sendParam@n+1,w,c
  7221  001180  6EDA               	movwf	fsr2h,c
  7222  001182  0EA6               	movlw	low _parameter
  7223  001184  26D9               	addwf	fsr2l,f,c
  7224  001186  0E00               	movlw	high _parameter
  7225  001188  22DA               	addwfc	fsr2h,f,c
  7226  00118A  CFDE F07C          	movff	postinc2,_dataPtr
  7227  00118E  CFDD F07D          	movff	postdec2,_dataPtr+1
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;serial.c: 276: break;
  7231  001192  D00A               	goto	i2u281_40
  7232  001194                     i2l1268:
  7233  001194                     i2l3359:
  7234                           
  7235                           ; BSR set to: 0
  7236  001194  4A25               	infsnz	sendParam@n,f,c
  7237  001196  2A26               	incf	sendParam@n+1,f,c
  7238                           
  7239                           ; BSR set to: 0
  7240  001198  BE26               	btfsc	sendParam@n+1,7,c
  7241  00119A  D7D2               	goto	i2l1266
  7242  00119C  5026               	movf	sendParam@n+1,w,c
  7243  00119E  E104               	bnz	i2u281_40
  7244  0011A0                     L1:
  7245  0011A0  0E0D               	movlw	13
  7246  0011A2  5C25               	subwf	sendParam@n,w,c
  7247  0011A4  A0D8               	btfss	status,0,c
  7248  0011A6  D7CC               	goto	i2l1266
  7249  0011A8                     i2u281_40:
  7250  0011A8                     i2l1267:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;serial.c: 277: }
  7254                           ;serial.c: 278: }
  7255                           ;serial.c: 280: SSP2BUF = dataPtr;
  7256  0011A8  C07C  FF03         	movff	_dataPtr,3843	;volatile
  7257                           
  7258                           ;serial.c: 281: SSP2CON1bits.CKP = 0x1;
  7259  0011AC  010F               	movlb	15	; () banked
  7260  0011AE  8919               	bsf	25,4,b	;volatile
  7261                           
  7262                           ;serial.c: 282: PIR2bits.SSP2IF = 0x0;
  7263  0011B0  9CA1               	bcf	4001,6,c	;volatile
  7264                           
  7265                           ; BSR set to: 15
  7266  0011B2  0012               	return		;funcret
  7267  0011B4                     __end_of_sendParam:
  7268                           	opt stack 0
  7269                           pclatu	equ	0xFFB
  7270                           pclath	equ	0xFFA
  7271                           tblptru	equ	0xFF8
  7272                           tblptrh	equ	0xFF7
  7273                           tblptrl	equ	0xFF6
  7274                           tablat	equ	0xFF5
  7275                           prodh	equ	0xFF4
  7276                           prodl	equ	0xFF3
  7277                           intcon	equ	0xFF2
  7278                           postinc0	equ	0xFEE
  7279                           fsr0h	equ	0xFEA
  7280                           fsr0l	equ	0xFE9
  7281                           wreg	equ	0xFE8
  7282                           postinc1	equ	0xFE6
  7283                           postdec1	equ	0xFE5
  7284                           fsr1h	equ	0xFE2
  7285                           fsr1l	equ	0xFE1
  7286                           indf2	equ	0xFDF
  7287                           postinc2	equ	0xFDE
  7288                           postdec2	equ	0xFDD
  7289                           fsr2h	equ	0xFDA
  7290                           fsr2l	equ	0xFD9
  7291                           status	equ	0xFD8
  7292                           
  7293 ;; *************** function _flashLED *****************
  7294 ;; Defined at:
  7295 ;;		line 106 in file "hardware.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:        2 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    1
  7316 ;; This function calls:
  7317 ;;		_updateLineLEDs
  7318 ;;		_updatePresetLEDs
  7319 ;;		i2___wmul
  7320 ;; This function is called by:
  7321 ;;		_highPriorityISR
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text35
  7326  0009D2                     __ptext35:
  7327                           	opt stack 0
  7328  0009D2                     _flashLED:
  7329                           	opt stack 25
  7330                           
  7331                           ;hardware.c: 108: if (presetPend)
  7332                           
  7333                           ; BSR set to: 15
  7334                           ;incstack = 0
  7335  0009D2  5015               	movf	_presetPend,w,c
  7336  0009D4  1016               	iorwf	_presetPend+1,w,c
  7337  0009D6  B4D8               	btfsc	status,2,c
  7338  0009D8  D029               	goto	i2l811
  7339                           
  7340                           ;hardware.c: 109: {
  7341                           ;hardware.c: 110: pFlashCount++;
  7342  0009DA  0100               	movlb	0	; () banked
  7343  0009DC  4B8C               	infsnz	_pFlashCount& (0+255),f,b
  7344  0009DE  2B8D               	incf	(_pFlashCount+1)& (0+255),f,b
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;hardware.c: 111: if (pFlashCount > 150)
  7348  0009E0  0100               	movlb	0	; () banked
  7349  0009E2  BF8D               	btfsc	(_pFlashCount+1)& (0+255),7,b
  7350  0009E4  D023               	goto	i2l811
  7351  0009E6  0100               	movlb	0	; () banked
  7352  0009E8  518D               	movf	(_pFlashCount+1)& (0+255),w,b
  7353  0009EA  E105               	bnz	i2u286_40
  7354  0009EC  0E97               	movlw	151
  7355  0009EE  0100               	movlb	0	; () banked
  7356  0009F0  5D8C               	subwf	_pFlashCount& (0+255),w,b
  7357  0009F2  A0D8               	btfss	status,0,c
  7358  0009F4  D01B               	goto	i2l811
  7359  0009F6                     i2u286_40:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;hardware.c: 112: {
  7363                           ;hardware.c: 113: if (pFlash)
  7364  0009F6  0100               	movlb	0	; () banked
  7365  0009F8  518A               	movf	_pFlash& (0+255),w,b
  7366  0009FA  0100               	movlb	0	; () banked
  7367  0009FC  118B               	iorwf	(_pFlash+1)& (0+255),w,b
  7368  0009FE  B4D8               	btfsc	status,2,c
  7369  000A00  D007               	goto	i2l812
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;hardware.c: 114: {
  7373                           ;hardware.c: 115: updatePresetLEDs(targPreset);
  7374  000A02  C017  F023         	movff	_targPreset,updatePresetLEDs@psNum
  7375  000A06  C018  F024         	movff	_targPreset+1,updatePresetLEDs@psNum+1
  7376  000A0A  ECC1  F00A         	call	_updatePresetLEDs	;wreg free
  7377                           
  7378                           ;hardware.c: 116: }
  7379  000A0E  D006               	goto	i2l813
  7380  000A10                     i2l812:
  7381                           
  7382                           ;hardware.c: 117: else
  7383                           ;hardware.c: 118: {
  7384                           ;hardware.c: 119: updatePresetLEDs(0);
  7385  000A10  0E00               	movlw	0
  7386  000A12  6E24               	movwf	updatePresetLEDs@psNum+1,c
  7387  000A14  0E00               	movlw	0
  7388  000A16  6E23               	movwf	updatePresetLEDs@psNum,c
  7389  000A18  ECC1  F00A         	call	_updatePresetLEDs	;wreg free
  7390  000A1C                     i2l813:
  7391                           
  7392                           ;hardware.c: 120: }
  7393                           ;hardware.c: 121: pFlash ^= 1;
  7394  000A1C  0E01               	movlw	1
  7395  000A1E  0100               	movlb	0	; () banked
  7396  000A20  1B8A               	xorwf	_pFlash& (0+255),f,b
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;hardware.c: 122: pFlashCount = 0;
  7400  000A22  0E00               	movlw	0
  7401  000A24  0100               	movlb	0	; () banked
  7402  000A26  6F8D               	movwf	(_pFlashCount+1)& (0+255),b
  7403  000A28  0E00               	movlw	0
  7404  000A2A  6F8C               	movwf	_pFlashCount& (0+255),b
  7405  000A2C                     i2l811:
  7406                           
  7407                           ;hardware.c: 123: }
  7408                           ;hardware.c: 124: }
  7409                           ;hardware.c: 125: if ((armA + armB + armC) > 0)
  7410                           
  7411                           ; BSR set to: 0
  7412                           
  7413                           ; BSR set to: 0
  7414  000A2C  500D               	movf	_armB,w,c
  7415  000A2E  240F               	addwf	_armA,w,c
  7416  000A30  6E2F               	movwf	??_flashLED& (0+255),c
  7417  000A32  500E               	movf	_armB+1,w,c
  7418  000A34  2010               	addwfc	_armA+1,w,c
  7419  000A36  6E30               	movwf	(??_flashLED+1)& (0+255),c
  7420  000A38  500B               	movf	_armC,w,c
  7421  000A3A  262F               	addwf	??_flashLED,f,c
  7422  000A3C  500C               	movf	_armC+1,w,c
  7423  000A3E  2230               	addwfc	??_flashLED+1,f,c
  7424  000A40  BE30               	btfsc	??_flashLED+1,7,c
  7425  000A42  0012               	return	
  7426  000A44  5030               	movf	??_flashLED+1,w,c
  7427  000A46  E103               	bnz	i2u288_40
  7428  000A48  042F               	decf	??_flashLED,w,c
  7429  000A4A  A0D8               	btfss	status,0,c
  7430  000A4C  0012               	return	
  7431  000A4E                     i2u288_40:
  7432                           
  7433                           ;hardware.c: 126: {
  7434                           ;hardware.c: 127: armFlashCount++;
  7435  000A4E  0100               	movlb	0	; () banked
  7436  000A50  4B86               	infsnz	_armFlashCount& (0+255),f,b
  7437  000A52  2B87               	incf	(_armFlashCount+1)& (0+255),f,b
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;hardware.c: 128: if (armFlashCount > 500)
  7441  000A54  0100               	movlb	0	; () banked
  7442  000A56  BF87               	btfsc	(_armFlashCount+1)& (0+255),7,b
  7443  000A58  0012               	return	
  7444  000A5A  0EF5               	movlw	245
  7445  000A5C  0100               	movlb	0	; () banked
  7446  000A5E  5D86               	subwf	_armFlashCount& (0+255),w,b
  7447  000A60  0E01               	movlw	1
  7448  000A62  0100               	movlb	0	; () banked
  7449  000A64  5987               	subwfb	(_armFlashCount+1)& (0+255),w,b
  7450  000A66  A0D8               	btfss	status,0,c
  7451  000A68  0012               	return	
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;hardware.c: 129: {
  7455                           ;hardware.c: 130: armFlashCount = 0;
  7456  000A6A  0E00               	movlw	0
  7457  000A6C  0100               	movlb	0	; () banked
  7458  000A6E  6F87               	movwf	(_armFlashCount+1)& (0+255),b
  7459  000A70  0E00               	movlw	0
  7460  000A72  6F86               	movwf	_armFlashCount& (0+255),b
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;hardware.c: 131: if (armFlashToggle)
  7464  000A74  0100               	movlb	0	; () banked
  7465  000A76  5182               	movf	_armFlashToggle& (0+255),w,b
  7466  000A78  0100               	movlb	0	; () banked
  7467  000A7A  1183               	iorwf	(_armFlashToggle+1)& (0+255),w,b
  7468  000A7C  B4D8               	btfsc	status,2,c
  7469  000A7E  D00F               	goto	i2l816
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;hardware.c: 132: {
  7473                           ;hardware.c: 133: updateLineLEDs(intA, intB, intC);
  7474  000A80  C021  F029         	movff	_intA,updateLineLEDs@lineA
  7475  000A84  C022  F02A         	movff	_intA+1,updateLineLEDs@lineA+1
  7476  000A88  C01F  F02B         	movff	_intB,updateLineLEDs@lineB
  7477  000A8C  C020  F02C         	movff	_intB+1,updateLineLEDs@lineB+1
  7478  000A90  C01D  F02D         	movff	_intC,updateLineLEDs@lineC
  7479  000A94  C01E  F02E         	movff	_intC+1,updateLineLEDs@lineC+1
  7480  000A98  EC6C  F009         	call	_updateLineLEDs	;wreg free
  7481                           
  7482                           ;hardware.c: 134: }
  7483  000A9C  D03B               	goto	i2l817
  7484  000A9E                     i2l816:
  7485                           
  7486                           ;hardware.c: 135: else updateLineLEDs((!armA*intA), (!armB*intB), (!armC*intC));
  7487  000A9E  500F               	movf	_armA,w,c
  7488  000AA0  1010               	iorwf	_armA+1,w,c
  7489  000AA2  A4D8               	btfss	status,2,c
  7490  000AA4  D002               	goto	i2u291_40
  7491  000AA6  0E01               	movlw	1
  7492  000AA8  D001               	goto	i2u292_40
  7493  000AAA                     i2u291_40:
  7494  000AAA  0E00               	movlw	0
  7495  000AAC                     i2u292_40:
  7496  000AAC  6E23               	movwf	i2___wmul@multiplier,c
  7497  000AAE  6A24               	clrf	i2___wmul@multiplier+1,c
  7498  000AB0  C021  F025         	movff	_intA,i2___wmul@multiplicand
  7499  000AB4  C022  F026         	movff	_intA+1,i2___wmul@multiplicand+1
  7500  000AB8  EC27  F00C         	call	i2___wmul	;wreg free
  7501  000ABC  C023  F029         	movff	?i2___wmul,updateLineLEDs@lineA
  7502  000AC0  C024  F02A         	movff	?i2___wmul+1,updateLineLEDs@lineA+1
  7503  000AC4  500D               	movf	_armB,w,c
  7504  000AC6  100E               	iorwf	_armB+1,w,c
  7505  000AC8  A4D8               	btfss	status,2,c
  7506  000ACA  D002               	goto	i2u293_40
  7507  000ACC  0E01               	movlw	1
  7508  000ACE  D001               	goto	i2u294_40
  7509  000AD0                     i2u293_40:
  7510  000AD0  0E00               	movlw	0
  7511  000AD2                     i2u294_40:
  7512  000AD2  6E23               	movwf	i2___wmul@multiplier,c
  7513  000AD4  6A24               	clrf	i2___wmul@multiplier+1,c
  7514  000AD6  C01F  F025         	movff	_intB,i2___wmul@multiplicand
  7515  000ADA  C020  F026         	movff	_intB+1,i2___wmul@multiplicand+1
  7516  000ADE  EC27  F00C         	call	i2___wmul	;wreg free
  7517  000AE2  C023  F02B         	movff	?i2___wmul,updateLineLEDs@lineB
  7518  000AE6  C024  F02C         	movff	?i2___wmul+1,updateLineLEDs@lineB+1
  7519  000AEA  500B               	movf	_armC,w,c
  7520  000AEC  100C               	iorwf	_armC+1,w,c
  7521  000AEE  A4D8               	btfss	status,2,c
  7522  000AF0  D002               	goto	i2u295_40
  7523  000AF2  0E01               	movlw	1
  7524  000AF4  D001               	goto	i2u296_40
  7525  000AF6                     i2u295_40:
  7526  000AF6  0E00               	movlw	0
  7527  000AF8                     i2u296_40:
  7528  000AF8  6E23               	movwf	i2___wmul@multiplier,c
  7529  000AFA  6A24               	clrf	i2___wmul@multiplier+1,c
  7530  000AFC  C01D  F025         	movff	_intC,i2___wmul@multiplicand
  7531  000B00  C01E  F026         	movff	_intC+1,i2___wmul@multiplicand+1
  7532  000B04  EC27  F00C         	call	i2___wmul	;wreg free
  7533  000B08  C023  F02D         	movff	?i2___wmul,updateLineLEDs@lineC
  7534  000B0C  C024  F02E         	movff	?i2___wmul+1,updateLineLEDs@lineC+1
  7535  000B10  EC6C  F009         	call	_updateLineLEDs	;wreg free
  7536  000B14                     i2l817:
  7537                           
  7538                           ;hardware.c: 136: armFlashToggle ^= 1;
  7539  000B14  0E01               	movlw	1
  7540  000B16  0100               	movlb	0	; () banked
  7541  000B18  1B82               	xorwf	_armFlashToggle& (0+255),f,b
  7542                           
  7543                           ; BSR set to: 0
  7544  000B1A  0012               	return	
  7545  000B1C                     __end_of_flashLED:
  7546                           	opt stack 0
  7547                           pclatu	equ	0xFFB
  7548                           pclath	equ	0xFFA
  7549                           tblptru	equ	0xFF8
  7550                           tblptrh	equ	0xFF7
  7551                           tblptrl	equ	0xFF6
  7552                           tablat	equ	0xFF5
  7553                           prodh	equ	0xFF4
  7554                           prodl	equ	0xFF3
  7555                           intcon	equ	0xFF2
  7556                           postinc0	equ	0xFEE
  7557                           fsr0h	equ	0xFEA
  7558                           fsr0l	equ	0xFE9
  7559                           wreg	equ	0xFE8
  7560                           postinc1	equ	0xFE6
  7561                           postdec1	equ	0xFE5
  7562                           fsr1h	equ	0xFE2
  7563                           fsr1l	equ	0xFE1
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           postdec2	equ	0xFDD
  7567                           fsr2h	equ	0xFDA
  7568                           fsr2l	equ	0xFD9
  7569                           status	equ	0xFD8
  7570                           
  7571 ;; *************** function i2___wmul *****************
  7572 ;; Defined at:
  7573 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  multiplier      2    0[COMRAM] unsigned int 
  7576 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  __wmul          2    4[COMRAM] unsigned int 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  2    0[COMRAM] unsigned int 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0, prodl, prodh
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7588 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;Total ram usage:        6 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_flashLED
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text36
  7602  00184E                     __ptext36:
  7603                           	opt stack 0
  7604  00184E                     i2___wmul:
  7605                           	opt stack 25
  7606                           
  7607                           ;incstack = 0
  7608  00184E  5023               	movf	i2___wmul@multiplier,w,c
  7609  001850  0225               	mulwf	i2___wmul@multiplicand,c
  7610  001852  CFF3 F027          	movff	prodl,i2___wmul@product
  7611  001856  CFF4 F028          	movff	prodh,i2___wmul@product+1
  7612  00185A  5023               	movf	i2___wmul@multiplier,w,c
  7613  00185C  0226               	mulwf	i2___wmul@multiplicand+1,c
  7614  00185E  50F3               	movf	prodl,w,c
  7615  001860  2628               	addwf	i2___wmul@product+1,f,c
  7616  001862  5024               	movf	i2___wmul@multiplier+1,w,c
  7617  001864  0225               	mulwf	i2___wmul@multiplicand,c
  7618  001866  50F3               	movf	prodl,w,c
  7619  001868  2628               	addwf	i2___wmul@product+1,f,c
  7620  00186A  C027  F023         	movff	i2___wmul@product,?i2___wmul
  7621  00186E  C028  F024         	movff	i2___wmul@product+1,?i2___wmul+1
  7622  001872  0012               	return	
  7623  001874                     __end_ofi2___wmul:
  7624                           	opt stack 0
  7625                           pclatu	equ	0xFFB
  7626                           pclath	equ	0xFFA
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           prodh	equ	0xFF4
  7632                           prodl	equ	0xFF3
  7633                           intcon	equ	0xFF2
  7634                           postinc0	equ	0xFEE
  7635                           fsr0h	equ	0xFEA
  7636                           fsr0l	equ	0xFE9
  7637                           wreg	equ	0xFE8
  7638                           postinc1	equ	0xFE6
  7639                           postdec1	equ	0xFE5
  7640                           fsr1h	equ	0xFE2
  7641                           fsr1l	equ	0xFE1
  7642                           indf2	equ	0xFDF
  7643                           postinc2	equ	0xFDE
  7644                           postdec2	equ	0xFDD
  7645                           fsr2h	equ	0xFDA
  7646                           fsr2l	equ	0xFD9
  7647                           status	equ	0xFD8
  7648                           
  7649 ;; *************** function _updatePresetLEDs *****************
  7650 ;; Defined at:
  7651 ;;		line 598 in file "hardware.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  psNum           2    0[COMRAM] int 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;Total ram usage:        2 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_flashLED
  7675 ;;		_serviceSwitches
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text37
  7680  001582                     __ptext37:
  7681                           	opt stack 0
  7682  001582                     _updatePresetLEDs:
  7683                           	opt stack 25
  7684                           
  7685                           ;hardware.c: 600: if (psNum == 1)
  7686                           
  7687                           ;incstack = 0
  7688  001582  0423               	decf	updatePresetLEDs@psNum,w,c
  7689  001584  1024               	iorwf	updatePresetLEDs@psNum+1,w,c
  7690  001586  A4D8               	btfss	status,2,c
  7691  001588  D006               	goto	i2l932
  7692                           
  7693                           ;hardware.c: 601: {
  7694                           ;hardware.c: 602: LATD0 = 1;
  7695  00158A  808C               	bsf	3980,0,c	;volatile
  7696                           
  7697                           ;hardware.c: 603: LATE7 = 0;
  7698  00158C  9E8D               	bcf	3981,7,c	;volatile
  7699                           
  7700                           ;hardware.c: 604: LATE5 = 0;
  7701  00158E  9A8D               	bcf	3981,5,c	;volatile
  7702                           
  7703                           ;hardware.c: 605: LATE4 = 0;
  7704  001590  988D               	bcf	3981,4,c	;volatile
  7705                           
  7706                           ;hardware.c: 606: LATH2 = 0;
  7707  001592  9490               	bcf	3984,2,c	;volatile
  7708                           
  7709                           ;hardware.c: 607: }
  7710  001594  0012               	return	
  7711  001596                     i2l932:
  7712                           
  7713                           ;hardware.c: 608: else if (psNum == 2)
  7714  001596  0E02               	movlw	2
  7715  001598  1823               	xorwf	updatePresetLEDs@psNum,w,c
  7716  00159A  1024               	iorwf	updatePresetLEDs@psNum+1,w,c
  7717  00159C  A4D8               	btfss	status,2,c
  7718  00159E  D006               	goto	i2l934
  7719                           
  7720                           ;hardware.c: 609: {
  7721                           ;hardware.c: 610: LATD0 = 0;
  7722  0015A0  908C               	bcf	3980,0,c	;volatile
  7723                           
  7724                           ;hardware.c: 611: LATE7 = 1;
  7725  0015A2  8E8D               	bsf	3981,7,c	;volatile
  7726                           
  7727                           ;hardware.c: 612: LATE5 = 0;
  7728  0015A4  9A8D               	bcf	3981,5,c	;volatile
  7729                           
  7730                           ;hardware.c: 613: LATE4 = 0;
  7731  0015A6  988D               	bcf	3981,4,c	;volatile
  7732                           
  7733                           ;hardware.c: 614: LATH2 = 0;
  7734  0015A8  9490               	bcf	3984,2,c	;volatile
  7735                           
  7736                           ;hardware.c: 615: }
  7737  0015AA  0012               	return	
  7738  0015AC                     i2l934:
  7739                           
  7740                           ;hardware.c: 616: else if (psNum == 3)
  7741  0015AC  0E03               	movlw	3
  7742  0015AE  1823               	xorwf	updatePresetLEDs@psNum,w,c
  7743  0015B0  1024               	iorwf	updatePresetLEDs@psNum+1,w,c
  7744  0015B2  A4D8               	btfss	status,2,c
  7745  0015B4  D006               	goto	i2l936
  7746                           
  7747                           ;hardware.c: 617: {
  7748                           ;hardware.c: 618: LATD0 = 0;
  7749  0015B6  908C               	bcf	3980,0,c	;volatile
  7750                           
  7751                           ;hardware.c: 619: LATE7 = 0;
  7752  0015B8  9E8D               	bcf	3981,7,c	;volatile
  7753                           
  7754                           ;hardware.c: 620: LATE5 = 1;
  7755  0015BA  8A8D               	bsf	3981,5,c	;volatile
  7756                           
  7757                           ;hardware.c: 621: LATE4 = 0;
  7758  0015BC  988D               	bcf	3981,4,c	;volatile
  7759                           
  7760                           ;hardware.c: 622: LATH2 = 0;
  7761  0015BE  9490               	bcf	3984,2,c	;volatile
  7762                           
  7763                           ;hardware.c: 623: }
  7764  0015C0  0012               	return	
  7765  0015C2                     i2l936:
  7766                           
  7767                           ;hardware.c: 624: else if (psNum == 4)
  7768  0015C2  0E04               	movlw	4
  7769  0015C4  1823               	xorwf	updatePresetLEDs@psNum,w,c
  7770  0015C6  1024               	iorwf	updatePresetLEDs@psNum+1,w,c
  7771  0015C8  A4D8               	btfss	status,2,c
  7772  0015CA  D006               	goto	i2l938
  7773                           
  7774                           ;hardware.c: 625: {
  7775                           ;hardware.c: 626: LATD0 = 0;
  7776  0015CC  908C               	bcf	3980,0,c	;volatile
  7777                           
  7778                           ;hardware.c: 627: LATE7 = 0;
  7779  0015CE  9E8D               	bcf	3981,7,c	;volatile
  7780                           
  7781                           ;hardware.c: 628: LATE5 = 0;
  7782  0015D0  9A8D               	bcf	3981,5,c	;volatile
  7783                           
  7784                           ;hardware.c: 629: LATE4 = 1;
  7785  0015D2  888D               	bsf	3981,4,c	;volatile
  7786                           
  7787                           ;hardware.c: 630: LATH2 = 0;
  7788  0015D4  9490               	bcf	3984,2,c	;volatile
  7789                           
  7790                           ;hardware.c: 631: }
  7791  0015D6  0012               	return	
  7792  0015D8                     i2l938:
  7793                           
  7794                           ;hardware.c: 632: else if (psNum == 5)
  7795  0015D8  0E05               	movlw	5
  7796  0015DA  1823               	xorwf	updatePresetLEDs@psNum,w,c
  7797  0015DC  1024               	iorwf	updatePresetLEDs@psNum+1,w,c
  7798  0015DE  A4D8               	btfss	status,2,c
  7799  0015E0  D006               	goto	i2l940
  7800                           
  7801                           ;hardware.c: 633: {
  7802                           ;hardware.c: 634: LATD0 = 0;
  7803  0015E2  908C               	bcf	3980,0,c	;volatile
  7804                           
  7805                           ;hardware.c: 635: LATE7 = 0;
  7806  0015E4  9E8D               	bcf	3981,7,c	;volatile
  7807                           
  7808                           ;hardware.c: 636: LATE5 = 0;
  7809  0015E6  9A8D               	bcf	3981,5,c	;volatile
  7810                           
  7811                           ;hardware.c: 637: LATE4 = 0;
  7812  0015E8  988D               	bcf	3981,4,c	;volatile
  7813                           
  7814                           ;hardware.c: 638: LATH2 = 1;
  7815  0015EA  8490               	bsf	3984,2,c	;volatile
  7816                           
  7817                           ;hardware.c: 639: }
  7818  0015EC  0012               	return	
  7819  0015EE                     i2l940:
  7820                           
  7821                           ;hardware.c: 640: else
  7822                           ;hardware.c: 641: {
  7823                           ;hardware.c: 642: LATD0 = 0;
  7824  0015EE  908C               	bcf	3980,0,c	;volatile
  7825                           
  7826                           ;hardware.c: 643: LATE7 = 0;
  7827  0015F0  9E8D               	bcf	3981,7,c	;volatile
  7828                           
  7829                           ;hardware.c: 644: LATE5 = 0;
  7830  0015F2  9A8D               	bcf	3981,5,c	;volatile
  7831                           
  7832                           ;hardware.c: 645: LATE4 = 0;
  7833  0015F4  988D               	bcf	3981,4,c	;volatile
  7834                           
  7835                           ;hardware.c: 646: LATH2 = 0;
  7836  0015F6  9490               	bcf	3984,2,c	;volatile
  7837  0015F8  0012               	return	
  7838  0015FA                     __end_of_updatePresetLEDs:
  7839                           	opt stack 0
  7840                           pclatu	equ	0xFFB
  7841                           pclath	equ	0xFFA
  7842                           tblptru	equ	0xFF8
  7843                           tblptrh	equ	0xFF7
  7844                           tblptrl	equ	0xFF6
  7845                           tablat	equ	0xFF5
  7846                           prodh	equ	0xFF4
  7847                           prodl	equ	0xFF3
  7848                           intcon	equ	0xFF2
  7849                           postinc0	equ	0xFEE
  7850                           fsr0h	equ	0xFEA
  7851                           fsr0l	equ	0xFE9
  7852                           wreg	equ	0xFE8
  7853                           postinc1	equ	0xFE6
  7854                           postdec1	equ	0xFE5
  7855                           fsr1h	equ	0xFE2
  7856                           fsr1l	equ	0xFE1
  7857                           indf2	equ	0xFDF
  7858                           postinc2	equ	0xFDE
  7859                           postdec2	equ	0xFDD
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8
  7863                           
  7864 ;; *************** function _updateLineLEDs *****************
  7865 ;; Defined at:
  7866 ;;		line 532 in file "hardware.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  lineA           2    6[COMRAM] int 
  7869 ;;  lineB           2    8[COMRAM] int 
  7870 ;;  lineC           2   10[COMRAM] int 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  1    wreg      void 
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7882 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;Total ram usage:        6 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_flashLED
  7892 ;;		_serviceSwitches
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text38
  7897  0012D8                     __ptext38:
  7898                           	opt stack 0
  7899  0012D8                     _updateLineLEDs:
  7900                           	opt stack 25
  7901                           
  7902                           ;hardware.c: 534: if (lineA == 1)
  7903                           
  7904                           ;incstack = 0
  7905  0012D8  0429               	decf	updateLineLEDs@lineA,w,c
  7906  0012DA  102A               	iorwf	updateLineLEDs@lineA+1,w,c
  7907  0012DC  A4D8               	btfss	status,2,c
  7908  0012DE  D002               	goto	i2l911
  7909                           
  7910                           ;hardware.c: 535: {
  7911                           ;hardware.c: 536: LATH7 = 1;
  7912  0012E0  8E90               	bsf	3984,7,c	;volatile
  7913  0012E2  D010               	goto	L2
  7914  0012E4                     i2l911:
  7915                           
  7916                           ;hardware.c: 539: else if (lineA == 2)
  7917  0012E4  0E02               	movlw	2
  7918  0012E6  1829               	xorwf	updateLineLEDs@lineA,w,c
  7919  0012E8  102A               	iorwf	updateLineLEDs@lineA+1,w,c
  7920  0012EA  A4D8               	btfss	status,2,c
  7921  0012EC  D002               	goto	i2l913
  7922                           
  7923                           ;hardware.c: 540: {
  7924                           ;hardware.c: 541: LATH7 = 0;
  7925  0012EE  9E90               	bcf	3984,7,c	;volatile
  7926  0012F0  D006               	goto	L3
  7927  0012F2                     i2l913:
  7928                           
  7929                           ;hardware.c: 544: else if (lineA == 3)
  7930  0012F2  0E03               	movlw	3
  7931  0012F4  1829               	xorwf	updateLineLEDs@lineA,w,c
  7932  0012F6  102A               	iorwf	updateLineLEDs@lineA+1,w,c
  7933  0012F8  A4D8               	btfss	status,2,c
  7934  0012FA  D003               	goto	i2l915
  7935                           
  7936                           ;hardware.c: 545: {
  7937                           ;hardware.c: 546: LATH7 = 1;
  7938  0012FC  8E90               	bsf	3984,7,c	;volatile
  7939  0012FE                     L3:
  7940                           
  7941                           ;hardware.c: 547: LATF2 = 1;
  7942  0012FE  848E               	bsf	3982,2,c	;volatile
  7943                           
  7944                           ;hardware.c: 548: }
  7945  001300  D002               	goto	i2l916
  7946  001302                     i2l915:
  7947                           
  7948                           ;hardware.c: 549: else
  7949                           ;hardware.c: 550: {
  7950                           ;hardware.c: 551: LATH7 = 0;
  7951  001302  9E90               	bcf	3984,7,c	;volatile
  7952  001304                     L2:
  7953                           
  7954                           ;hardware.c: 552: LATF2 = 0;
  7955  001304  948E               	bcf	3982,2,c	;volatile
  7956  001306                     i2l916:
  7957                           
  7958                           ;hardware.c: 553: }
  7959                           ;hardware.c: 555: if (lineB == 1)
  7960  001306  042B               	decf	updateLineLEDs@lineB,w,c
  7961  001308  102C               	iorwf	updateLineLEDs@lineB+1,w,c
  7962  00130A  A4D8               	btfss	status,2,c
  7963  00130C  D002               	goto	i2l917
  7964                           
  7965                           ;hardware.c: 556: {
  7966                           ;hardware.c: 557: LATF5 = 1;
  7967  00130E  8A8E               	bsf	3982,5,c	;volatile
  7968  001310  D010               	goto	L4
  7969  001312                     i2l917:
  7970                           
  7971                           ;hardware.c: 560: else if (lineB == 2)
  7972  001312  0E02               	movlw	2
  7973  001314  182B               	xorwf	updateLineLEDs@lineB,w,c
  7974  001316  102C               	iorwf	updateLineLEDs@lineB+1,w,c
  7975  001318  A4D8               	btfss	status,2,c
  7976  00131A  D002               	goto	i2l919
  7977                           
  7978                           ;hardware.c: 561: {
  7979                           ;hardware.c: 562: LATF5 = 0;
  7980  00131C  9A8E               	bcf	3982,5,c	;volatile
  7981  00131E  D006               	goto	L5
  7982  001320                     i2l919:
  7983                           
  7984                           ;hardware.c: 565: else if (lineB == 3)
  7985  001320  0E03               	movlw	3
  7986  001322  182B               	xorwf	updateLineLEDs@lineB,w,c
  7987  001324  102C               	iorwf	updateLineLEDs@lineB+1,w,c
  7988  001326  A4D8               	btfss	status,2,c
  7989  001328  D003               	goto	i2l921
  7990                           
  7991                           ;hardware.c: 566: {
  7992                           ;hardware.c: 567: LATF5 = 1;
  7993  00132A  8A8E               	bsf	3982,5,c	;volatile
  7994  00132C                     L5:
  7995                           
  7996                           ;hardware.c: 568: LATF6 = 1;
  7997  00132C  8C8E               	bsf	3982,6,c	;volatile
  7998                           
  7999                           ;hardware.c: 569: }
  8000  00132E  D002               	goto	i2l922
  8001  001330                     i2l921:
  8002                           
  8003                           ;hardware.c: 570: else
  8004                           ;hardware.c: 571: {
  8005                           ;hardware.c: 572: LATF5 = 0;
  8006  001330  9A8E               	bcf	3982,5,c	;volatile
  8007  001332                     L4:
  8008                           
  8009                           ;hardware.c: 573: LATF6 = 0;
  8010  001332  9C8E               	bcf	3982,6,c	;volatile
  8011  001334                     i2l922:
  8012                           
  8013                           ;hardware.c: 574: }
  8014                           ;hardware.c: 576: if (lineC == 1)
  8015  001334  042D               	decf	updateLineLEDs@lineC,w,c
  8016  001336  102E               	iorwf	updateLineLEDs@lineC+1,w,c
  8017  001338  A4D8               	btfss	status,2,c
  8018  00133A  D003               	goto	i2l923
  8019                           
  8020                           ;hardware.c: 577: {
  8021                           ;hardware.c: 578: LATG4 = 1;
  8022  00133C  888F               	bsf	3983,4,c	;volatile
  8023                           
  8024                           ;hardware.c: 579: LATH0 = 0;
  8025  00133E  9090               	bcf	3984,0,c	;volatile
  8026                           
  8027                           ;hardware.c: 580: }
  8028  001340  0012               	return	
  8029  001342                     i2l923:
  8030                           
  8031                           ;hardware.c: 581: else if (lineC == 2)
  8032  001342  0E02               	movlw	2
  8033  001344  182D               	xorwf	updateLineLEDs@lineC,w,c
  8034  001346  102E               	iorwf	updateLineLEDs@lineC+1,w,c
  8035  001348  A4D8               	btfss	status,2,c
  8036  00134A  D003               	goto	i2l925
  8037                           
  8038                           ;hardware.c: 582: {
  8039                           ;hardware.c: 583: LATG4 = 0;
  8040  00134C  988F               	bcf	3983,4,c	;volatile
  8041                           
  8042                           ;hardware.c: 584: LATH0 = 1;
  8043  00134E  8090               	bsf	3984,0,c	;volatile
  8044                           
  8045                           ;hardware.c: 585: }
  8046  001350  0012               	return	
  8047  001352                     i2l925:
  8048                           
  8049                           ;hardware.c: 586: else if (lineC == 3)
  8050  001352  0E03               	movlw	3
  8051  001354  182D               	xorwf	updateLineLEDs@lineC,w,c
  8052  001356  102E               	iorwf	updateLineLEDs@lineC+1,w,c
  8053  001358  A4D8               	btfss	status,2,c
  8054  00135A  D003               	goto	i2l927
  8055                           
  8056                           ;hardware.c: 587: {
  8057                           ;hardware.c: 588: LATG4 = 1;
  8058  00135C  888F               	bsf	3983,4,c	;volatile
  8059                           
  8060                           ;hardware.c: 589: LATH0 = 1;
  8061  00135E  8090               	bsf	3984,0,c	;volatile
  8062                           
  8063                           ;hardware.c: 590: }
  8064  001360  0012               	return	
  8065  001362                     i2l927:
  8066                           
  8067                           ;hardware.c: 591: else
  8068                           ;hardware.c: 592: {
  8069                           ;hardware.c: 593: LATG4 = 0;
  8070  001362  988F               	bcf	3983,4,c	;volatile
  8071                           
  8072                           ;hardware.c: 594: LATH0 = 0;
  8073  001364  9090               	bcf	3984,0,c	;volatile
  8074  001366  0012               	return	
  8075  001368                     __end_of_updateLineLEDs:
  8076                           	opt stack 0
  8077                           pclatu	equ	0xFFB
  8078                           pclath	equ	0xFFA
  8079                           tblptru	equ	0xFF8
  8080                           tblptrh	equ	0xFF7
  8081                           tblptrl	equ	0xFF6
  8082                           tablat	equ	0xFF5
  8083                           prodh	equ	0xFF4
  8084                           prodl	equ	0xFF3
  8085                           intcon	equ	0xFF2
  8086                           postinc0	equ	0xFEE
  8087                           fsr0h	equ	0xFEA
  8088                           fsr0l	equ	0xFE9
  8089                           wreg	equ	0xFE8
  8090                           postinc1	equ	0xFE6
  8091                           postdec1	equ	0xFE5
  8092                           fsr1h	equ	0xFE2
  8093                           fsr1l	equ	0xFE1
  8094                           indf2	equ	0xFDF
  8095                           postinc2	equ	0xFDE
  8096                           postdec2	equ	0xFDD
  8097                           fsr2h	equ	0xFDA
  8098                           fsr2l	equ	0xFD9
  8099                           status	equ	0xFD8
  8100                           
  8101 ;; *************** function _checkSwitches *****************
  8102 ;; Defined at:
  8103 ;;		line 141 in file "hardware.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  flag            1    0[COMRAM] unsigned char 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;Total ram usage:        1 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; This function calls:
  8124 ;;		Nothing
  8125 ;; This function is called by:
  8126 ;;		_highPriorityISR
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text39
  8131  000FEC                     __ptext39:
  8132                           	opt stack 0
  8133  000FEC                     _checkSwitches:
  8134                           	opt stack 26
  8135                           
  8136                           ;hardware.c: 143: char flag = 0;
  8137                           
  8138                           ;incstack = 0
  8139  000FEC  0E00               	movlw	0
  8140  000FEE  6E23               	movwf	checkSwitches@flag,c
  8141                           
  8142                           ;hardware.c: 145: if(IOCF1)
  8143  000FF0  A2D1               	btfss	4049,1,c	;volatile
  8144  000FF2  D008               	goto	i2l821
  8145                           
  8146                           ;hardware.c: 146: {
  8147                           ;hardware.c: 147: switch4 = 1;
  8148  000FF4  0E00               	movlw	0
  8149  000FF6  0100               	movlb	0	; () banked
  8150  000FF8  6F9D               	movwf	(_switch4+1)& (0+255),b
  8151  000FFA  0E01               	movlw	1
  8152  000FFC  6F9C               	movwf	_switch4& (0+255),b
  8153                           
  8154                           ;hardware.c: 148: flag = 1;
  8155  000FFE  0E01               	movlw	1
  8156  001000  6E23               	movwf	checkSwitches@flag,c
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;hardware.c: 149: IOCFbits.IOCF1 = 0;
  8160  001002  92D1               	bcf	4049,1,c	;volatile
  8161  001004                     i2l821:
  8162                           
  8163                           ;hardware.c: 150: }
  8164                           ;hardware.c: 152: if (IOCF2)
  8165                           
  8166                           ; BSR set to: 0
  8167  001004  A4D1               	btfss	4049,2,c	;volatile
  8168  001006  D008               	goto	i2l822
  8169                           
  8170                           ;hardware.c: 153: {
  8171                           ;hardware.c: 154: switch2 = 1;
  8172  001008  0E00               	movlw	0
  8173  00100A  0100               	movlb	0	; () banked
  8174  00100C  6FA1               	movwf	(_switch2+1)& (0+255),b
  8175  00100E  0E01               	movlw	1
  8176  001010  6FA0               	movwf	_switch2& (0+255),b
  8177                           
  8178                           ;hardware.c: 155: flag = 1;
  8179  001012  0E01               	movlw	1
  8180  001014  6E23               	movwf	checkSwitches@flag,c
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;hardware.c: 156: IOCFbits.IOCF2 = 0;
  8184  001016  94D1               	bcf	4049,2,c	;volatile
  8185  001018                     i2l822:
  8186                           
  8187                           ;hardware.c: 157: }
  8188                           ;hardware.c: 159: if (IOCF3)
  8189                           
  8190                           ; BSR set to: 0
  8191  001018  A6D1               	btfss	4049,3,c	;volatile
  8192  00101A  D008               	goto	i2l823
  8193                           
  8194                           ;hardware.c: 160: {
  8195                           ;hardware.c: 161: switch1 = 1;
  8196  00101C  0E00               	movlw	0
  8197  00101E  0100               	movlb	0	; () banked
  8198  001020  6FA3               	movwf	(_switch1+1)& (0+255),b
  8199  001022  0E01               	movlw	1
  8200  001024  6FA2               	movwf	_switch1& (0+255),b
  8201                           
  8202                           ;hardware.c: 162: flag = 1;
  8203  001026  0E01               	movlw	1
  8204  001028  6E23               	movwf	checkSwitches@flag,c
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;hardware.c: 163: IOCFbits.IOCF3 = 0;
  8208  00102A  96D1               	bcf	4049,3,c	;volatile
  8209  00102C                     i2l823:
  8210                           
  8211                           ;hardware.c: 164: }
  8212                           ;hardware.c: 166: if (IOCF4)
  8213                           
  8214                           ; BSR set to: 0
  8215  00102C  A8D1               	btfss	4049,4,c	;volatile
  8216  00102E  D008               	goto	i2l824
  8217                           
  8218                           ;hardware.c: 167: {
  8219                           ;hardware.c: 168: fsw1 = 1;
  8220  001030  0E00               	movlw	0
  8221  001032  0100               	movlb	0	; () banked
  8222  001034  6F99               	movwf	(_fsw1+1)& (0+255),b
  8223  001036  0E01               	movlw	1
  8224  001038  6F98               	movwf	_fsw1& (0+255),b
  8225                           
  8226                           ;hardware.c: 169: flag = 1;
  8227  00103A  0E01               	movlw	1
  8228  00103C  6E23               	movwf	checkSwitches@flag,c
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;hardware.c: 170: IOCFbits.IOCF4 = 0;
  8232  00103E  98D1               	bcf	4049,4,c	;volatile
  8233  001040                     i2l824:
  8234                           
  8235                           ;hardware.c: 171: }
  8236                           ;hardware.c: 173: if (IOCF5)
  8237                           
  8238                           ; BSR set to: 0
  8239  001040  AAD1               	btfss	4049,5,c	;volatile
  8240  001042  D008               	goto	i2l825
  8241                           
  8242                           ;hardware.c: 174: {
  8243                           ;hardware.c: 175: fsw2 = 1;
  8244  001044  0E00               	movlw	0
  8245  001046  0100               	movlb	0	; () banked
  8246  001048  6F97               	movwf	(_fsw2+1)& (0+255),b
  8247  00104A  0E01               	movlw	1
  8248  00104C  6F96               	movwf	_fsw2& (0+255),b
  8249                           
  8250                           ;hardware.c: 176: flag = 1;
  8251  00104E  0E01               	movlw	1
  8252  001050  6E23               	movwf	checkSwitches@flag,c
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;hardware.c: 177: IOCFbits.IOCF5 = 0;
  8256  001052  9AD1               	bcf	4049,5,c	;volatile
  8257  001054                     i2l825:
  8258                           
  8259                           ;hardware.c: 178: }
  8260                           ;hardware.c: 180: if (IOCF6)
  8261                           
  8262                           ; BSR set to: 0
  8263  001054  ACD1               	btfss	4049,6,c	;volatile
  8264  001056  D008               	goto	i2l826
  8265                           
  8266                           ;hardware.c: 181: {
  8267                           ;hardware.c: 182: switch3 = 1;
  8268  001058  0E00               	movlw	0
  8269  00105A  0100               	movlb	0	; () banked
  8270  00105C  6F9F               	movwf	(_switch3+1)& (0+255),b
  8271  00105E  0E01               	movlw	1
  8272  001060  6F9E               	movwf	_switch3& (0+255),b
  8273                           
  8274                           ;hardware.c: 183: flag = 1;
  8275  001062  0E01               	movlw	1
  8276  001064  6E23               	movwf	checkSwitches@flag,c
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;hardware.c: 184: IOCFbits.IOCF6 = 0;
  8280  001066  9CD1               	bcf	4049,6,c	;volatile
  8281  001068                     i2l826:
  8282                           
  8283                           ;hardware.c: 185: }
  8284                           ;hardware.c: 187: if (IOCF7)
  8285                           
  8286                           ; BSR set to: 0
  8287  001068  AED1               	btfss	4049,7,c	;volatile
  8288  00106A  D008               	goto	i2l827
  8289                           
  8290                           ;hardware.c: 188: {
  8291                           ;hardware.c: 189: switch5 = 1;
  8292  00106C  0E00               	movlw	0
  8293  00106E  0100               	movlb	0	; () banked
  8294  001070  6F9B               	movwf	(_switch5+1)& (0+255),b
  8295  001072  0E01               	movlw	1
  8296  001074  6F9A               	movwf	_switch5& (0+255),b
  8297                           
  8298                           ;hardware.c: 190: flag = 1;
  8299  001076  0E01               	movlw	1
  8300  001078  6E23               	movwf	checkSwitches@flag,c
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;hardware.c: 191: IOCFbits.IOCF7 = 0;
  8304  00107A  9ED1               	bcf	4049,7,c	;volatile
  8305  00107C                     i2l827:
  8306                           
  8307                           ;hardware.c: 192: }
  8308                           ;hardware.c: 194: if (flag)
  8309  00107C  5023               	movf	checkSwitches@flag,w,c
  8310  00107E  B4D8               	btfsc	status,2,c
  8311  001080  0012               	return	
  8312                           
  8313                           ;hardware.c: 195: {
  8314                           ;hardware.c: 196: T0CONbits.TMR0ON = 0x1;
  8315  001082  8ED5               	bsf	4053,7,c	;volatile
  8316  001084  0012               	return	
  8317  001086                     __end_of_checkSwitches:
  8318                           	opt stack 0
  8319  0000                     pclatu	equ	0xFFB
  8320                           pclath	equ	0xFFA
  8321                           tblptru	equ	0xFF8
  8322                           tblptrh	equ	0xFF7
  8323                           tblptrl	equ	0xFF6
  8324                           tablat	equ	0xFF5
  8325                           prodh	equ	0xFF4
  8326                           prodl	equ	0xFF3
  8327                           intcon	equ	0xFF2
  8328                           postinc0	equ	0xFEE
  8329                           fsr0h	equ	0xFEA
  8330                           fsr0l	equ	0xFE9
  8331                           wreg	equ	0xFE8
  8332                           postinc1	equ	0xFE6
  8333                           postdec1	equ	0xFE5
  8334                           fsr1h	equ	0xFE2
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           pclatu	equ	0xFFB
  8343                           pclath	equ	0xFFA
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           postinc0	equ	0xFEE
  8352                           fsr0h	equ	0xFEA
  8353                           fsr0l	equ	0xFE9
  8354                           wreg	equ	0xFE8
  8355                           postinc1	equ	0xFE6
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           fsr2h	equ	0xFDA
  8363                           fsr2l	equ	0xFD9
  8364                           status	equ	0xFD8
  8365                           
  8366                           	psect	rparam
  8367  0000                     pclatu	equ	0xFFB
  8368                           pclath	equ	0xFFA
  8369                           tblptru	equ	0xFF8
  8370                           tblptrh	equ	0xFF7
  8371                           tblptrl	equ	0xFF6
  8372                           tablat	equ	0xFF5
  8373                           prodh	equ	0xFF4
  8374                           prodl	equ	0xFF3
  8375                           intcon	equ	0xFF2
  8376                           postinc0	equ	0xFEE
  8377                           fsr0h	equ	0xFEA
  8378                           fsr0l	equ	0xFE9
  8379                           wreg	equ	0xFE8
  8380                           postinc1	equ	0xFE6
  8381                           postdec1	equ	0xFE5
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391                           	psect	temp
  8392  000047                     btemp:
  8393                           	opt stack 0
  8394  000047                     	ds	1
  8395  0000                     int$flags	set	btemp
  8396  0000                     wtemp6	set	btemp+1
  8397                           pclatu	equ	0xFFB
  8398                           pclath	equ	0xFFA
  8399                           tblptru	equ	0xFF8
  8400                           tblptrh	equ	0xFF7
  8401                           tblptrl	equ	0xFF6
  8402                           tablat	equ	0xFF5
  8403                           prodh	equ	0xFF4
  8404                           prodl	equ	0xFF3
  8405                           intcon	equ	0xFF2
  8406                           postinc0	equ	0xFEE
  8407                           fsr0h	equ	0xFEA
  8408                           fsr0l	equ	0xFE9
  8409                           wreg	equ	0xFE8
  8410                           postinc1	equ	0xFE6
  8411                           postdec1	equ	0xFE5
  8412                           fsr1h	equ	0xFE2
  8413                           fsr1l	equ	0xFE1
  8414                           indf2	equ	0xFDF
  8415                           postinc2	equ	0xFDE
  8416                           postdec2	equ	0xFDD
  8417                           fsr2h	equ	0xFDA
  8418                           fsr2l	equ	0xFD9
  8419                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        68
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      70
    BANK0           160     23     155
    BANK1           256     28     174
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    dataPtr	PTR int  size(2) Largest target is 3577
		 -> NULL(NULL[0]), RAM(DATA[3577]), 

    I2C1_Block_Read_EERPOM@data	PTR PTR int  size(2) Largest target is 24
		 -> fetchPreset@values(BANK1[24]), 

    I2C1_Page_Write_EEPROM@data	PTR PTR int  size(2) Largest target is 24
		 -> parameter(BANK0[24]), 

    updatePreset@values	PTR int  size(2) Largest target is 24
		 -> fetchPreset@values(BANK1[24]), parameter(BANK0[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _highPriorityISR->_flashLED
    _serviceSwitches->_processTaps
    _serviceSwitches->_updateLineLEDs
    _processTaps->___awdiv
    _flashLED->_updateLineLEDs
    _updateLineLEDs->i2___wmul

Critical Paths under _main in BANK0

    _main->_updatePreset
    _updateParams->___wmul
    _systemInit->_startupSequence
    _readControls->_ADC_Read
    _fetchPreset->_updatePreset
    _updatePreset->___wmul

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_fetchPreset

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    9627
                                             14 BANK0      9     9      0
                           _ADC_Read
             _I2C1_Page_Write_EEPROM
                 _I2C1_Write_DigiPot
                             _absVal
                        _fetchPreset
                       _readControls
                         _systemInit
                       _updateParams
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updateParams                                         6     4      2    1509
                                              6 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _systemInit                                           0     0      0       0
                        _bypassSetup
                        _clockSwitch
                         _defaultLED
                      _interfaceInit
                      _interruptInit
                           _killLEDs
                  _mapPeripheralPins
                           _setupADC
                          _setupI2C1
                          _setupI2C2
                          _setupTMR0
                          _setupTMR1
                          _setupTMR2
                          _setupTMR4
                    _startupSequence
 ---------------------------------------------------------------------------------
 (2) _startupSequence                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupTMR4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mapPeripheralPins                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _killLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interfaceInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _defaultLED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clockSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bypassSetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readControls                                         3     3      0    1305
                                              4 BANK0      3     3      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             4     2      2    1305
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fetchPreset                                         28    28      0    2652
                                              0 BANK1     28    28      0
             _I2C1_Block_Read_EERPOM
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updatePreset                                         8     4      4    1810
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1258
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C1_Block_Read_EERPOM                              13     7      6     629
                                              0 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (1) _absVal                                               4     2      2     238
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_DigiPot                                   2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Page_Write_EEPROM                              11     5      6     502
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highPriorityISR                                     18    18      0    3639
                                             14 COMRAM    18    18      0
                      _checkSwitches
                           _flashLED
                          _sendParam
                    _serviceSwitches
                             _tapLED
 ---------------------------------------------------------------------------------
 (5) _tapLED                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _serviceSwitches                                      0     0      0    1887
                        _processTaps
                     _updateLineLEDs
                   _updatePresetLEDs
 ---------------------------------------------------------------------------------
 (6) _processTaps                                          4     4      0     591
                                              8 COMRAM     4     4      0
                            ___awdiv
                        _maxTapCheck
                           i2_absVal
 ---------------------------------------------------------------------------------
 (7) i2_absVal                                             4     2      2      92
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _maxTapCheck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _sendParam                                            4     4      0     113
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) _flashLED                                             2     2      0    1609
                                             12 COMRAM     2     2      0
                     _updateLineLEDs
                   _updatePresetLEDs
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     313
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _updatePresetLEDs                                     2     0      2     414
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _updateLineLEDs                                       6     0      6     882
                                              6 COMRAM     6     0      6
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _checkSwitches                                        1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _I2C1_Page_Write_EEPROM
   _I2C1_Write_DigiPot
   _absVal
   _fetchPreset
     _I2C1_Block_Read_EERPOM
     _updatePreset
       ___wmul
   _readControls
     _ADC_Read
   _systemInit
     _bypassSetup
     _clockSwitch
     _defaultLED
     _interfaceInit
     _interruptInit
     _killLEDs
     _mapPeripheralPins
     _setupADC
     _setupI2C1
     _setupI2C2
     _setupTMR0
     _setupTMR1
     _setupTMR2
     _setupTMR4
     _startupSequence
   _updateParams
     ___wmul
   _updatePreset
     ___wmul

 _highPriorityISR (ROOT)
   _checkSwitches
   _flashLED
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
     i2___wmul
   _sendParam
   _serviceSwitches
     _processTaps
       ___awdiv
       _maxTapCheck
       i2_absVal
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
   _tapLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1C      AE       7       68.0%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      46       1       74.5%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F       8        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Oct 13 22:18:53 2018

                      __CFG_BW$16 000000                __end_of_systemInit 16E8  
           __end_of_interruptInit 17D4                      ___awdiv@sign 0028  
  I2C1_Page_Write_EEPROM@memValue 00EC               ___wmul@multiplicand 00E6  
                     __CFG_BORV$1 000000                      __CFG_CP0$OFF 000000  
          _I2C1_Page_Write_EEPROM 0E90                               l181 11D4  
                             l183 1246                               l168 17F6  
                             l176 10A6                               l505 1888  
                             l193 08A4                               l178 111C  
                             l186 142A                               l194 08FC  
                             l195 0918                               l188 1478  
                             l197 09BA                               l880 0CAE  
                             l890 0D26                               l882 0CC6  
                             l892 0D3E                               l884 0CDE  
                             l876 0C7C                               l894 0D56  
                             l886 0CF6                               l878 0C98  
                             l896 0D6E                               l888 0D0E  
                             l897 0D78                               _RC0 007C10  
                             _RC1 007C11                               _RD1 007C19  
                             _RD4 007C1C                               _RC6 007C16  
                             _RE3 007C23                               _RC7 007C17  
                             _RG1 007C31                               _RF3 007C2B  
                             _RD7 007C1F                               _RG2 007C32  
                             _RE6 007C26                               _RG3 007C33  
                             _RH4 007C3C                               _RJ0 007C40  
                             _RH5 007C3D                               _RJ1 007C41  
                             _RJ4 007C44                               _RJ5 007C45  
                             _PR2 000FCB                               _tap 006E  
                             _swX 0045                               wreg 000FE8  
          __end_of_updateLineLEDs 1368             __end_of_checkSwitches 1086  
 __size_of_I2C1_Block_Read_EERPOM 013A                     __CFG_ABW$XM16 000000  
                    ?_maxTapCheck 0023                              l1123 0F1A  
                            l1115 0EC8                              l1124 0EEC  
                            l1118 0ED2                              l1150 0B6E  
                            l1161 0B84                              l1145 0B5E  
                            l1139 0F44                              l1155 0B78  
                            l1261 1764                              l1181 0BE0  
                            l1173 0B9E                              l1246 1742  
                            l1255 175A                              l1191 0C44  
                            l1167 0B92                              l1184 0BE8  
                            l1249 174C                              l1194 0C4C  
                            l1178 0C20                              l1179 0BDC  
                            l4175 11BE                              l4187 1414  
                            l3903 1090                              u4020 0B62  
                            u4110 0BA2                              u4050 0B7C  
                            u4140 0BEC                              u4070 0B88  
                            u4225 06D6                              u4410 0EF0  
                            u4330 1750                              u4090 0B96  
                            u4235 0710                              u4500 09AA  
                            u4245 077C                              u4430 0F3A  
                            u4350 175E                              u4190 1892  
                            u4255 07B6                              u4440 0F3E  
                            u4265 0822                              u4275 085C  
                            u4390 0ED6                              u4607 04EA  
                            u4527 03FA                              u4480 090A  
                            u4617 0508                              u4537 0418  
                            u4707 0616                              u4627 0526  
                            u4547 0436                              u4717 0634  
                            u4637 0544                              u4557 0454  
                            u4727 0652                              u4647 0562  
                            u4567 0472                              u4495 0940  
                            u4737 0670                              u4657 0580  
                            u4577 0490                              u4747 0C68  
                            u4667 059E                              u4587 04AE  
                            u4757 0C74                              u4677 05BC  
                            u4597 04CC                              u4767 0B56  
                            u4687 05DA                              u4777 173A  
                            u4697 05F8                              u4787 0EC0  
                            _fbkA 007A                              _fbkB 0076  
                            _fbkC 0072                              _armA 000F  
                            _armB 000D                              _armC 000B  
                            _fsw1 0098                              _fsw2 0096  
                            _intA 0021                              _intB 001F  
                            _intC 001D                              _main 0874  
                            _lvlA 0078                              _lvlB 0074  
                            _lvlC 0070                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                     main@prevDry 00F5                              btemp 0047  
                            _sync 0064                  __end_of_ADC_Read 0D82  
                            prodh 000FF4                              prodl 000FF3  
              __CFG_WDTWIN$PS25_0 000000                              start 011C  
        __size_of_serviceSwitches 02CA   I2C1_Page_Write_EEPROM@wrDevAddr 00EB  
                   __CFG_IESO$OFF 000000                __CFG_LS48MHZ$SYSX2 000000  
                    ___param_bank 000000                       i2absVal@val 0023  
                    ?_bypassSetup 0023                     __CFG_WAIT$OFF 000000  
                           ?_main 0023                   __end_of___awdiv 1582  
                    main@dryLevel 00F9           I2C1_Block_Read_EERPOM@n 00EF  
                 ___awdiv@divisor 0025                             _T2CON 000FCA  
                           _LATD0 007C60                             _LATB5 007C55  
                           _IOCF1 007E89                             _LATD2 007C62  
                           _LATE0 007C68                             _IOCF2 007E8A  
                           _LATD3 007C63                             _LATE1 007C69  
                           _IOCF3 007E8B                             _IOCF4 007E8C  
                           _IOCF5 007E8D                             _LATF2 007C72  
                           _LATE4 007C6C                             _IOCF6 007E8E  
                           _LATE5 007C6D                             _IOCF7 007E8F  
                           _LATH0 007C80                             _LATF5 007C75  
                           _LATE7 007C6F                             _LATH1 007C81  
                           _LATF6 007C76                             _LATG4 007C7C  
                           _LATH2 007C82                             _LATH7 007C87  
                           i2l160 0094                             i2l161 0096  
                           i2l163 00C0                             i2l164 00D0  
                           i2l157 005C                             i2l158 006E  
                           i2l168 181E                             i2l811 0A2C  
                           i2l803 14B4                             i2l812 0A10  
                           i2l821 1004                             i2l813 0A1C  
                           i2l822 1018                             i2l823 102C  
                           i2l911 12E4                             i2l824 1040  
                           i2l816 0A9E                             i2l840 01CE  
                           i2l825 1054                             i2l921 1330  
                           i2l913 12F2                             i2l817 0B14  
                           i2l826 1068                             i2l922 1334  
                           i2l850 026A                             i2l842 01DC  
                           i2l834 0160                             i2l827 107C  
                           i2l923 1342                             i2l915 1302  
                           i2l916 1306                             i2l940 15EE  
                           i2l932 1596                             i2l852 0278  
                           i2l925 1352                             i2l917 1312  
                           i2l845 021C                             i2l837 018E  
                           i2l934 15AC                             i2l862 0330  
                           i2l927 1362                             i2l919 1320  
                           i2l855 02E0                             i2l847 022A  
                           i2l936 15C2                             i2l864 0364  
                           i2l856 02D2                             i2l938 15D8  
                           i2l794 0DC2                             i2l858 0314  
                           i2l795 0E86                             i2l859 0300  
                           i2l788 1672                             i2l796 0E0A  
                           i2l868 03A4                   ___awdiv@counter 0027  
                           i2l869 039E                             i2l798 0E56  
                           i2l799 0E84                     __CFG_WPSA$128 000000  
                 ?_updateLineLEDs 0029                    __CFG_EASHFT$ON 000000  
                           _timeA 0009                             _timeB 0007  
                           _timeC 0005                             _shift 0011  
                  __CFG_BOREN$OFF 000000                             pclath 000FFA  
                           tablat 000FF5                  __end_ofi2_absVal 1828  
                __end_ofi2___wmul 1874                             status 000FD8  
                updatePreset@slot 00EA                             wtemp6 0048  
      __size_of_mapPeripheralPins 0054            _I2C1_Block_Read_EERPOM 0B1C  
                 __initialization 1368                      __end_of_main 09D2  
     __size_of_I2C1_Write_DigiPot 0042                            ??_main 00F2  
                   ?_readControls 0023                     __activetblptr 000000  
             __CFG_WPEND$WPENDMEM 000000                    __CFG_RETEN$OFF 000000  
                          _CCPR4H 000F12                            _CCPR4L 000F11  
                ___awdiv@dividend 0023          __size_of_startupSequence 0296  
            __size_of_clockSwitch 0024                            _LCDSE0 000ECE  
                          _LCDSE1 000ECF                            _LCDSE2 000ED0  
                          _LCDSE3 000ED1                            _LCDSE4 000ED2  
                          _LCDSE5 000ED3                            _LCDSE6 000ED4  
                          _LCDSE7 000ED5          __size_of_highPriorityISR 0114  
                          i2l1440 1522                            i2l1266 1140  
                          i2l1442 1540                            i2l1267 11A8  
                          i2l1443 1538                            i2l1268 1194  
                          i2l1269 1178                            i2l1446 1560  
                          i2l1447 156A                            i2l1439 1512  
                          i2l1448 1578                    __CFG_WDTEN$OFF 000000  
                          i2l3263 0E0A                            i2l3359 1194  
                          i2l3789 00C0                            _OSCCON 000FD3  
            __size_of_fetchPreset 0084                            _TMR0IF 007F92  
                          _TMR2IF 007CF1                            _TMR4IF 007DC0  
                          _TMR2ON 007E52                            _SSP2IF 007D0E  
                  __CFG_XINST$OFF 000000                  __end_of_flashLED 0B1C  
                    _CCPTMRS1bits 000F35                            _absVal 17D4  
                __end_of_killLEDs 18B8                            _pFlash 008A  
                          ___wmul 176E                         ??___awdiv 0027  
        __end_of_updatePresetLEDs 15FA                 ??_serviceSwitches 002F  
                 ADC_Read@channel 00E4                            _tapLED 147A  
                          _bypass 001B                            _muxADC 0092  
                          clear_0 13CE                            clear_1 13DA  
                          clear_2 13E6                  ___awdiv@quotient 0029  
                  _RPINR20_21bits 000E34                   __CFG_CLKOEN$OFF 000000  
                          _preset 0019                    ??_readControls 00E8  
                  _RPINR22_23bits 000E35                      __pdataCOMRAM 0043  
                  _RPINR24_25bits 000E36                  __end_of_setupADC 12D8  
                       ?_ADC_Read 00E4                    _RPINR18_19bits 000E33  
              processTaps@tapDiff 002D                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                  _armFlashToggle 0082                      ?_processTaps 0023  
                   updateParams@i 00EE              __size_of_maxTapCheck 0054  
                      __accesstop 0060           __end_of__initialization 13EC  
              __CFG_DSWDTOSC$LPRC 000000                     ___rparam_used 000001  
                 __CFG_T5GSEL$T5G 000000                   __CFG_IOL1WAY$ON 000000  
                   updatePreset@i 00F0                    __pcstackCOMRAM 0023  
                    __pidataBANK0 1828                      __pidataBANK1 18B8  
         ?_I2C1_Page_Write_EEPROM 00E4        I2C1_Page_Write_EEPROM@data 00E6  
      I2C1_Page_Write_EEPROM@slot 00E4              __size_of_bypassSetup 000C  
                       ?i2_absVal 0023                         ?i2___wmul 0023  
               __CFG_PLLDIV$PLL8X 000000                        ??_ADC_Read 00E6  
                      _dataTarget 007E                        __pbssBANK0 0060  
                      __pbssBANK1 0100                        _defaultLED 1904  
          __size_of_interfaceInit 009E                 ??_startupSequence 00E4  
               ??_highPriorityISR 0031    __end_of_I2C1_Page_Write_EEPROM 0F4E  
                         ?_absVal 00E4                           ?___wmul 00E4  
              __size_of_sendParam 0096                           _ADCBUF0 000FC2  
                         _ADCBUF1 000E48                           _ADCBUF2 000E4A  
                         _ADCBUF3 000E4C                           _ADCBUF4 000E4E  
                         _ADCBUF5 000E50                           _ADCBUF6 000E52  
                         _ADCBUF8 000E56                           _ADCBUF9 000E58  
                         ?_tapLED 0023                   __CFG_VBTBOR$OFF 000000  
                ??_updateLineLEDs 002F                        ??i2_absVal 0025  
              __size_of_setupI2C1 001A                __size_of_setupI2C2 0044  
                      ??i2___wmul 0027                __size_of_setupTMR0 0018  
              __size_of_setupTMR1 000E                __size_of_setupTMR2 0010  
              __size_of_setupTMR4 0016                   __CFG_WDTCLK$FRC 000000  
                         _SSP1ADD 000FC8                           _SSP2ADD 000F02  
                         _SSP1BUF 000FC9                           _SSP2BUF 000F03  
                       ?_flashLED 0023                           _SSP2MSK 000F17  
                       ?_killLEDs 0023            __size_of_interruptInit 0030  
         ?_I2C1_Block_Read_EERPOM 00E4              __end_of_readControls 0874  
                         __Hparam 0000                           __Lparam 0000  
                       ?_setupADC 0023            __size_of_checkSwitches 009A  
                         ___awdiv 14FE                   __size_of_absVal 002C  
                 __size_of___wmul 0036                        _linesArmed 0080  
                 __CFG_STVREN$OFF 000000                           _dataPtr 007C  
                 __size_of_tapLED 0084                           __pcinit 1368  
                         __ramtop 0E00                           __ptext0 0874  
                         __ptext1 11B4                           __ptext2 16A2  
                         __ptext3 03EA                           __ptext4 191C  
                         __ptext5 1932                           __ptext6 1942  
                         __ptext7 18EC                           __ptext8 16E8  
                         __ptext9 18D2                     _interfaceInit 0F4E  
                       _T0CONbits 000FD5                           _bypMode 00E2  
                       _T1CONbits 000FCD                         _T2CONbits 000FCA  
                       _T3CONbits 000FB1                           _tapTime 006C  
                         _tapPrev 0001                         _T4CONbits 000F04  
                       _T5CONbits 000F14                        ??_flashLED 002F  
                         _switch1 00A2                           _switch2 00A0  
                         _switch3 009E                           _switch4 009C  
                         _switch5 009A                 __end_of_sendParam 11B4  
            end_of_initialization 13EC                        ??_killLEDs 00E4  
  __end_of_I2C1_Block_Read_EERPOM 0C56                 checkSwitches@flag 0023  
                     ?_defaultLED 0023                        _targPreset 0017  
             updateLineLEDs@lineA 0029               updateLineLEDs@lineB 002B  
             updateLineLEDs@lineC 002D               i2___wmul@multiplier 0023  
            __size_of_processTaps 010E                   _serviceSwitches 0120  
               __end_of_setupI2C1 18EC                 __end_of_setupI2C2 172C  
               __end_of_setupTMR0 1904                 __end_of_setupTMR1 1950  
               __end_of_setupTMR2 1942                 __end_of_setupTMR4 1932  
                      ??_setupADC 00E4                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
      __end_of_I2C1_Write_DigiPot 176E                  __CFG_FSCM$CSECMD 000000  
                __CFG_DSBITEN$OFF 000000                     _interruptInit 17A4  
              updatePreset@values 00EC                 ?_updatePresetLEDs 0023  
                      _presetPend 0015                    ?_interfaceInit 0023  
                __CFG_DSBOREN$OFF 000000                       _ADCHS0Lbits 000E86  
              ??_updatePresetLEDs 0025                  __CFG_FOSC$FRCDIV 000000  
                     _ADCON1Hbits 000FC1                       _ADCON2Hbits 000E8D  
                     _ADCON1Lbits 000FC0                       _ADCON3Hbits 000E8B  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                     ??_clockSwitch 00E4  
                       _TRISDbits 000F95                       _ADCON3Lbits 000E8A  
                     _ADCON5Hbits 000E89                         _TRISEbits 000F96  
                       _TRISFbits 000F97                         _TRISGbits 000F98  
                       _TRISHbits 000F99                         _TRISJbits 000F9A  
                   _checkSwitches 0FEC                 __size_of_ADC_Read 012C  
                   ??_fetchPreset 00F2              __CFG_CINASEL$DEFAULT 000000  
                      _userParams 0100                       _CCP4CONbits 000F10  
                   ?_updateParams 00EA                     ?_updatePreset 00EA  
    I2C1_Block_Read_EERPOM@rdAddr 00EC                 __CFG_WPFP$WPFP255 000000  
                  ?_interruptInit 0023                    __end_of_absVal 1800  
                  __end_of___wmul 17A4                     __pidataCOMRAM 195C  
                  __end_of_tapLED 14FE       I2C1_Page_Write_EEPROM@bytes 00E8  
             __size_of_defaultLED 0018                  __CFG_DSWDTEN$OFF 000000  
                i2___wmul@product 0027               start_initialization 1368  
               __size_ofi2_absVal 0028                 __size_ofi2___wmul 0026  
                      _systemInit 16A2                    ?_checkSwitches 0023  
                 _startupSequence 03EA                     ??_maxTapCheck 0023  
         __end_of_serviceSwitches 03EA                   _highPriorityISR 0008  
           __size_of_readControls 01F4               __end_of_clockSwitch 1898  
         I2C1_Write_DigiPot@value 00E4                    ??_updateParams 00EC  
             __end_of_fetchPreset 147A                       _pFlashCount 008C  
                  ??_updatePreset 00EE                          ??_absVal 00E6  
                        ??___wmul 00E8                    _currentTapTime 00E0  
                   ??_bypassSetup 00E4                   ??_interfaceInit 00E4  
                     __pdataBANK0 00BE                       __pdataBANK1 0194  
                        ??_tapLED 0023                     _armFlashCount 0086  
                    _readControls 0680                       __pbssCOMRAM 0001  
                   __pcstackBANK0 00E4                     __pcstackBANK1 0178  
         I2C1_Page_Write_EEPROM@n 00ED                 __size_of_flashLED 014A  
                    _paramAddress 0194                 __size_of_killLEDs 0020  
           updatePresetLEDs@psNum 0023               __end_of_maxTapCheck 16A2  
                 ??_interruptInit 00E4                         __pintcode 0008  
                      sendParam@n 0025                         absVal@val 00E4  
                        ?___awdiv 0023                 __size_of_setupADC 0090  
                        _ADCBUF14 000E62                      _tapDispCount 0013  
         __end_of_startupSequence 0680           __end_of_highPriorityISR 011C  
                __CFG_POSCMD$NONE 000000                   ??_checkSwitches 0023  
             __end_of_bypassSetup 195C                          _ADC_Read 0C56  
                     ?_systemInit 0023                       _PADCFG1bits 000F54  
                     _clockSwitch 1874                  ?_serviceSwitches 0023  
                     _fetchPreset 13F6                         _parameter 00A6  
                       _tapOnTime 0043                      ??_defaultLED 00E4  
                  ___wmul@product 00E8                          _IOCFbits 000FD1  
                       _sendParam 111E                          _IOCNbits 000F55  
                        _IOCPbits 000F56                          _PIE1bits 000F9D  
                        _PIE2bits 000FA0                          _PIE5bits 000FB7  
  I2C1_Block_Read_EERPOM@memValue 00ED                          i2u310_41 015C  
                        i2u225_40 1544                          i2u321_40 01C4  
                        i2u313_45 0168                          i2u314_40 0170  
                        i2u315_45 0172                          i2u308_40 0156  
                        i2u261_40 0D9E                          i2u333_40 02CA  
                        i2u325_40 0212                          i2u309_45 0158  
                        i2u262_40 0DEE                          i2u281_40 11A8  
                        i2u337_40 0328                          i2u329_40 0260  
                        _PIR1bits 000F9E                          i2u291_40 0AAA  
                        _PIR2bits 000FA1                          i2u292_40 0AAC  
                        i2u293_40 0AD0                          i2u294_40 0AD2  
                        i2u286_40 09F6                          i2u295_40 0AF6  
                        i2u383_40 00BC                          i2u296_40 0AF8  
                        i2u288_40 0A4E                         _setupI2C1 18D2  
                       _setupI2C2 16E8                  __CFG_WDTPS$32768 000000  
                       _presetAdd 00D6                         _setupTMR0 18EC  
                       _setupTMR1 1942                         _setupTMR2 1932  
                       _setupTMR4 191C                          _UCONbits 000F75  
                    _tapTimeCount 0003                   fetchPreset@test 0190  
                     _bounceCount 0094                 ___wmul@multiplier 00E4  
                __CFG_SOSCSEL$DIG 000000       I2C1_Write_DigiPot@wrCommand 00E5  
                        i2_absVal 1800                          i2___wmul 184E  
              __end_of_defaultLED 191C              __end_of_updateParams 1248  
            __end_of_updatePreset 111E                        _CM1CONbits 000F53  
              _I2C1_Write_DigiPot 172C                        _CM2CONbits 000F38  
     I2C1_Block_Read_EERPOM@bytes 00E8                        _CM3CONbits 000F37  
                __CFG_WPDIS$WPDIS 000000           __size_of_updateLineLEDs 0090  
                     _maxTapCheck 164E                         copy_data0 137C  
                       copy_data1 139C                         copy_data2 13BC  
                   ??_processTaps 002B         __size_of_updatePresetLEDs 0078  
             ?_I2C1_Write_DigiPot 0023          ??_I2C1_Page_Write_EEPROM 00EA  
                      ?_sendParam 0023                        _ANCON1bits 000E47  
                      _ANCON2bits 000E46                        _ANCON3bits 000E45  
                        __Hrparam 0000                          __Lrparam 0000  
                      ?_setupI2C1 0023                        ?_setupI2C2 0023  
             __size_of_systemInit 0046                        ?_setupTMR0 0023  
                      ?_setupTMR1 0023                        ?_setupTMR2 0023  
                      ?_setupTMR4 0023                     ADC_Read@value 00E6  
                     _bypassSetup 1950                  __size_of___awdiv 0084  
           i2___wmul@multiplicand 0025              ??_I2C1_Write_DigiPot 00E4  
                ?_startupSequence 0023                  ?_highPriorityISR 0023  
                        _armFlash 0084                          __ptext10 1248  
                        __ptext11 15FA                          __ptext20 13F6  
                        __ptext12 1898                          __ptext21 1086  
                        __ptext13 17A4                          __ptext30 0D82  
                        __ptext22 176E                          __ptext14 0F4E  
                        __ptext31 1800                          __ptext23 0B1C  
                        __ptext15 1904                          __ptext32 164E  
                        __ptext24 17D4                          __ptext16 1874  
                        __ptext33 14FE                          __ptext25 172C  
                        __ptext17 1950                          __ptext34 111E  
                        __ptext26 0E90                          __ptext18 0680  
                        __ptext35 09D2                          __ptext19 0C56  
                        __ptext36 184E                          __ptext28 147A  
                        __ptext37 1582                          __ptext29 0120  
                        __ptext38 12D8                          __ptext39 0FEC  
                        _flashLED 09D2                      _SSP1CON1bits 000FC6  
                    _SSP1CON2bits 000FC5                        _LCDCONbits 000ED9  
                    _SSP2CON1bits 000F19                      _SSP2CON2bits 000F18  
                    _SSP2CON3bits 000F39                          _killLEDs 1898  
                     _OSCCON2bits 000F66                       _OSCCON3bits 000F65  
                     _OSCCON4bits 000F64                     __size_of_main 015E  
                        _tapAccum 0060                          _newTempo 006A  
                        _tapFlash 0088                __CFG_MSSPMSK1$MSK7 000000  
              __CFG_MSSPMSK2$MSK7 000000                          _savePend 0090  
             __end_of_processTaps 0E90                          _setupADC 1248  
                   _setupComplete 0066                          int$flags 0047  
                        _slotUsed 008E                        _MEMCONbits 000EE3  
                        main@diff 00F7                      _SSP1STATbits 000FC7  
      I2C1_Block_Read_EERPOM@data 00E6        I2C1_Block_Read_EERPOM@slot 00E4  
                      _INTCONbits 000FF2          ??_I2C1_Block_Read_EERPOM 00EA  
                        intlevel2 0000                       _shiftAction 00A4  
                     ??_sendParam 0023   __size_of_I2C1_Page_Write_EEPROM 00BE  
                    _presetParams 00BE                        _OSCCONbits 000FD3  
                     ??_setupI2C1 00E4                       ??_setupI2C2 00E4  
I2C1_Block_Read_EERPOM@dummyWrite 00EE                       ??_setupTMR0 00E4  
                     ??_setupTMR1 00E4                       ??_setupTMR2 00E4  
                     ??_setupTMR4 00E4                 _mapPeripheralPins 15FA  
           __size_of_updateParams 0094                ?_mapPeripheralPins 0023  
           __size_of_updatePreset 0098             __end_of_interfaceInit 0FEC  
                    _timeoutCount 0068               ??_mapPeripheralPins 00E4  
                    ??_systemInit 00E6                      fetchPreset@i 0192  
                    ?_clockSwitch 0023                    _updateLineLEDs 12D8  
                    ?_fetchPreset 0023                 fetchPreset@values 0178  
                _updatePresetLEDs 1582               __CFG_WPCFG$WPCFGDIS 000000  
                     _processTaps 0D82                __CFG_WINDIS$WDTSTD 000000  
                    _updateParams 11B4            __CFG_DSWDTPS$DSWDTPS1F 000000  
       __end_of_mapPeripheralPins 164E                      _updatePreset 1086  
                updateParams@slot 00EA  
