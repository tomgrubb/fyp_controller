

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Aug 27 20:28:41 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F85J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.43
    49                           ; Generated 25/07/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F85J94 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001336                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _tapOnTime
    88  001336  0005               	dw	5
    89                           
    90                           	psect	idataBANK0
    91  001338                     __pidataBANK0:
    92                           	opt stack 0
    93                           
    94                           ;initializer for _currentTapTime
    95  001338  01F4               	dw	500
    96  0000                     _ADCBUF9	set	3672
    97  0000                     _ADCBUF8	set	3670
    98  0000                     _ADCBUF14	set	3682
    99  0000                     _ADCBUF6	set	3666
   100  0000                     _ADCBUF5	set	3664
   101  0000                     _ADCBUF4	set	3662
   102  0000                     _ADCBUF3	set	3660
   103  0000                     _ADCBUF2	set	3658
   104  0000                     _ADCBUF1	set	3656
   105  0000                     _MEMCONbits	set	3811
   106  0000                     _LCDSE7	set	3797
   107  0000                     _LCDSE6	set	3796
   108  0000                     _LCDSE5	set	3795
   109  0000                     _LCDSE4	set	3794
   110  0000                     _LCDSE3	set	3793
   111  0000                     _LCDSE2	set	3792
   112  0000                     _LCDSE1	set	3791
   113  0000                     _LCDSE0	set	3790
   114  0000                     _LCDCONbits	set	3801
   115  0000                     _RPINR22_23bits	set	3637
   116  0000                     _RPINR18_19bits	set	3635
   117  0000                     _RPINR24_25bits	set	3638
   118  0000                     _RPINR20_21bits	set	3636
   119  0000                     _ANCON3bits	set	3653
   120  0000                     _ANCON2bits	set	3654
   121  0000                     _ANCON1bits	set	3655
   122  0000                     _ADCHS0Lbits	set	3718
   123  0000                     _ADCON5Hbits	set	3721
   124  0000                     _ADCON3Lbits	set	3722
   125  0000                     _ADCON3Hbits	set	3723
   126  0000                     _ADCON2Hbits	set	3725
   127  0000                     _SSP2STATbits	set	3866
   128  0000                     _IOCNbits	set	3925
   129  0000                     _T5CONbits	set	3860
   130  0000                     _CM3CONbits	set	3895
   131  0000                     _CM2CONbits	set	3896
   132  0000                     _CM1CONbits	set	3923
   133  0000                     _SSP2BUF	set	3843
   134  0000                     _SSP2CON3bits	set	3897
   135  0000                     _SSP2CON2bits	set	3864
   136  0000                     _SSP2MSK	set	3863
   137  0000                     _SSP2ADD	set	3842
   138  0000                     _SSP2CON1bits	set	3865
   139  0000                     _CCPR4H	set	3858
   140  0000                     _CCPTMRS1bits	set	3893
   141  0000                     _CCP4CONbits	set	3856
   142  0000                     _CCPR4L	set	3857
   143  0000                     _T4CONbits	set	3844
   144  0000                     _ADCBUF0	set	4034
   145  0000                     _SSP1STATbits	set	4039
   146  0000                     _PIR1bits	set	3998
   147  0000                     _SSP1CON2bits	set	4037
   148  0000                     _IOCFbits	set	4049
   149  0000                     _PIE5bits	set	4023
   150  0000                     _PIE2bits	set	4000
   151  0000                     _PIE1bits	set	3997
   152  0000                     _INTCONbits	set	4082
   153  0000                     _TRISBbits	set	3987
   154  0000                     _TRISJbits	set	3994
   155  0000                     _TRISEbits	set	3990
   156  0000                     _T3CONbits	set	4017
   157  0000                     _UCONbits	set	3957
   158  0000                     _OSCCON	set	4051
   159  0000                     _TRISGbits	set	3992
   160  0000                     _TRISHbits	set	3993
   161  0000                     _TRISFbits	set	3991
   162  0000                     _TRISAbits	set	3986
   163  0000                     _ADCON1Lbits	set	4032
   164  0000                     _ADCON1Hbits	set	4033
   165  0000                     _TRISDbits	set	3989
   166  0000                     _SSP1BUF	set	4041
   167  0000                     _SSP1ADD	set	4040
   168  0000                     _SSP1CON1bits	set	4038
   169  0000                     _T2CON	set	4042
   170  0000                     _TRISCbits	set	3988
   171  0000                     _PR2	set	4043
   172  0000                     _OSCCONbits	set	4051
   173  0000                     _OSCCON2bits	set	3942
   174  0000                     _OSCCON3bits	set	3941
   175  0000                     _OSCCON4bits	set	3940
   176  0000                     _T1CONbits	set	4045
   177  0000                     _T0CONbits	set	4053
   178  0000                     _T2CONbits	set	4042
   179  0000                     _PIR2bits	set	4001
   180  0000                     _RD7	set	31775
   181  0000                     _RJ0	set	31808
   182  0000                     _RJ1	set	31809
   183  0000                     _RH4	set	31804
   184  0000                     _RH5	set	31805
   185  0000                     _RF3	set	31787
   186  0000                     _RC6	set	31766
   187  0000                     _RC0	set	31760
   188  0000                     _RC1	set	31761
   189  0000                     _RJ5	set	31813
   190  0000                     _RJ4	set	31812
   191  0000                     _RC7	set	31767
   192  0000                     _LATH2	set	31874
   193  0000                     _LATE4	set	31852
   194  0000                     _LATE5	set	31853
   195  0000                     _LATE7	set	31855
   196  0000                     _LATD0	set	31840
   197  0000                     _LATH1	set	31873
   198  0000                     _LATE1	set	31849
   199  0000                     _RG3	set	31795
   200  0000                     _RD1	set	31769
   201  0000                     _LATH0	set	31872
   202  0000                     _LATG4	set	31868
   203  0000                     _RE6	set	31782
   204  0000                     _LATF6	set	31862
   205  0000                     _LATF5	set	31861
   206  0000                     _RG2	set	31794
   207  0000                     _LATF2	set	31858
   208  0000                     _LATH7	set	31879
   209  0000                     _RG1	set	31793
   210  0000                     _RE3	set	31779
   211  0000                     _LATD2	set	31842
   212  0000                     _RD4	set	31772
   213  0000                     _IOCF7	set	32399
   214  0000                     _IOCF6	set	32398
   215  0000                     _IOCF5	set	32397
   216  0000                     _IOCF4	set	32396
   217  0000                     _IOCF3	set	32395
   218  0000                     _IOCF2	set	32394
   219  0000                     _IOCF1	set	32393
   220  0000                     _LATE0	set	31848
   221  0000                     _LATD3	set	31843
   222  0000                     _LATB5	set	31829
   223  0000                     _TMR2ON	set	32338
   224  0000                     _TMR0IF	set	32658
   225  0000                     _TMR2IF	set	31985
   226  0000                     _TMR4IF	set	32192
   227  0000                     _SSP2IF	set	32014
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  00107A                     __pcinit:
   233                           	opt stack 0
   234  00107A                     start_initialization:
   235                           	opt stack 0
   236  00107A                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Initialize objects allocated to BANK0 (2 bytes)
   240                           ; load TBLPTR registers with __pidataBANK0
   241  00107A  0E38               	movlw	low __pidataBANK0
   242  00107C  6EF6               	movwf	tblptrl,c
   243  00107E  0E13               	movlw	high __pidataBANK0
   244  001080  6EF7               	movwf	tblptrh,c
   245  001082  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   246  001084  6EF8               	movwf	tblptru,c
   247  001086  0009               	tblrd		*+	;fetch initializer
   248  001088  CFF5 F092          	movff	tablat,__pdataBANK0
   249  00108C  0009               	tblrd		*+	;fetch initializer
   250  00108E  CFF5 F093          	movff	tablat,__pdataBANK0+1
   251                           
   252                           ; Initialize objects allocated to COMRAM (2 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  001092  0E36               	movlw	low __pidataCOMRAM
   255  001094  6EF6               	movwf	tblptrl,c
   256  001096  0E13               	movlw	high __pidataCOMRAM
   257  001098  6EF7               	movwf	tblptrh,c
   258  00109A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  00109C  6EF8               	movwf	tblptru,c
   260  00109E  0009               	tblrd		*+	;fetch initializer
   261  0010A0  CFF5 F03F          	movff	tablat,__pdataCOMRAM
   262  0010A4  0009               	tblrd		*+	;fetch initializer
   263  0010A6  CFF5 F040          	movff	tablat,__pdataCOMRAM+1
   264                           
   265                           ; Clear objects allocated to BANK0 (20 bytes)
   266  0010AA  EE00  F07E         	lfsr	0,__pbssBANK0
   267  0010AE  0E14               	movlw	20
   268  0010B0                     clear_0:
   269  0010B0  6AEE               	clrf	postinc0,c
   270  0010B2  06E8               	decf	wreg,f,c
   271  0010B4  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (32 bytes)
   274  0010B6  EE00  F001         	lfsr	0,__pbssCOMRAM
   275  0010BA  0E20               	movlw	32
   276  0010BC                     clear_1:
   277  0010BC  6AEE               	clrf	postinc0,c
   278  0010BE  06E8               	decf	wreg,f,c
   279  0010C0  E1FD               	bnz	clear_1
   280  0010C2                     end_of_initialization:
   281                           	opt stack 0
   282  0010C2                     __end_of__initialization:
   283                           	opt stack 0
   284  0010C2  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  0010C4  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  0010C6  0100               	movlb	0
   287  0010C8  EF41  F002         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bssCOMRAM
   296  000001                     __pbssCOMRAM:
   297                           	opt stack 0
   298  000001                     _tap:
   299                           	opt stack 0
   300  000001                     	ds	2
   301  000003                     _tapPrev:
   302                           	opt stack 0
   303  000003                     	ds	2
   304  000005                     _tapTimeCount:
   305                           	opt stack 0
   306  000005                     	ds	2
   307  000007                     _timeValue:
   308                           	opt stack 0
   309  000007                     	ds	2
   310  000009                     _levelValue:
   311                           	opt stack 0
   312  000009                     	ds	2
   313  00000B                     _feedbackValue:
   314                           	opt stack 0
   315  00000B                     	ds	2
   316  00000D                     _dataTarget:
   317                           	opt stack 0
   318  00000D                     	ds	2
   319  00000F                     _tapDispCount:
   320                           	opt stack 0
   321  00000F                     	ds	2
   322  000011                     _switch5:
   323                           	opt stack 0
   324  000011                     	ds	2
   325  000013                     _switch4:
   326                           	opt stack 0
   327  000013                     	ds	2
   328  000015                     _switch3:
   329                           	opt stack 0
   330  000015                     	ds	2
   331  000017                     _switch2:
   332                           	opt stack 0
   333  000017                     	ds	2
   334  000019                     _switch1:
   335                           	opt stack 0
   336  000019                     	ds	2
   337  00001B                     _preset:
   338                           	opt stack 0
   339  00001B                     	ds	1
   340  00001C                     _bypass:
   341                           	opt stack 0
   342  00001C                     	ds	1
   343  00001D                     _swX:
   344                           	opt stack 0
   345  00001D                     	ds	1
   346  00001E                     _intC:
   347                           	opt stack 0
   348  00001E                     	ds	1
   349  00001F                     _intB:
   350                           	opt stack 0
   351  00001F                     	ds	1
   352  000020                     _intA:
   353                           	opt stack 0
   354  000020                     	ds	1
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           
   362                           	psect	dataCOMRAM
   363  00003F                     __pdataCOMRAM:
   364                           	opt stack 0
   365  00003F                     _tapOnTime:
   366                           	opt stack 0
   367  00003F                     	ds	2
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           postinc0	equ	0xFEE
   373                           wreg	equ	0xFE8
   374                           
   375                           	psect	bssBANK0
   376  00007E                     __pbssBANK0:
   377                           	opt stack 0
   378  00007E                     _tapAccum:
   379                           	opt stack 0
   380  00007E                     	ds	4
   381  000082                     _timeoutCount:
   382                           	opt stack 0
   383  000082                     	ds	2
   384  000084                     _newTempo:
   385                           	opt stack 0
   386  000084                     	ds	2
   387  000086                     _tapTime:
   388                           	opt stack 0
   389  000086                     	ds	2
   390  000088                     _dataPtr:
   391                           	opt stack 0
   392  000088                     	ds	2
   393  00008A                     _tapFlash:
   394                           	opt stack 0
   395  00008A                     	ds	2
   396  00008C                     _muxADC:
   397                           	opt stack 0
   398  00008C                     	ds	2
   399  00008E                     _fsw2:
   400                           	opt stack 0
   401  00008E                     	ds	2
   402  000090                     _fsw1:
   403                           	opt stack 0
   404  000090                     	ds	2
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           
   412                           	psect	dataBANK0
   413  000092                     __pdataBANK0:
   414                           	opt stack 0
   415  000092                     _currentTapTime:
   416                           	opt stack 0
   417  000092                     	ds	2
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           
   425                           	psect	cstackBANK0
   426  000060                     __pcstackBANK0:
   427                           	opt stack 0
   428  000060                     ??_startupSequence:
   429  000060                     ?_ADC_Read:
   430                           	opt stack 0
   431  000060                     ?___wmul:
   432                           	opt stack 0
   433  000060                     I2C1_Write_EEPROM@memValue:
   434                           	opt stack 0
   435  000060                     I2C1_Read_EEPROM@memValue:
   436                           	opt stack 0
   437  000060                     I2C1_Write_DigiPot@value:
   438                           	opt stack 0
   439  000060                     ADC_Read@channel:
   440                           	opt stack 0
   441  000060                     updatePresetLEDs@psNum:
   442                           	opt stack 0
   443  000060                     ___wmul@multiplier:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x0
   447  000060                     	ds	1
   448  000061                     I2C1_Write_EEPROM@value:
   449                           	opt stack 0
   450  000061                     I2C1_Read_EEPROM@dummyWrite:
   451                           	opt stack 0
   452  000061                     I2C1_Write_DigiPot@wrCommand:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x1
   456  000061                     	ds	1
   457  000062                     I2C1_Write_EEPROM@devAddr:
   458                           	opt stack 0
   459  000062                     I2C1_Read_EEPROM@rdAddr:
   460                           	opt stack 0
   461  000062                     ADC_Read@value:
   462                           	opt stack 0
   463  000062                     ___wmul@multiplicand:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x2
   467  000062                     	ds	1
   468  000063                     I2C1_Write_EEPROM@wrDevAddr:
   469                           	opt stack 0
   470  000063                     I2C1_Read_EEPROM@value:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0x3
   474  000063                     	ds	1
   475  000064                     I2C1_Read_EEPROM@devAddr:
   476                           	opt stack 0
   477  000064                     ___wmul@product:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x4
   481  000064                     	ds	2
   482  000066                     ??_main:
   483                           
   484                           ; 1 bytes @ 0x6
   485  000066                     	ds	2
   486  000068                     main@result:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x8
   490  000068                     	ds	2
   491  00006A                     main@i:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0xA
   495  00006A                     	ds	2
   496  00006C                     main@bitA:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0xC
   500  00006C                     	ds	2
   501  00006E                     main@bitB:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0xE
   505  00006E                     	ds	2
   506  000070                     main@bitC:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x10
   510  000070                     	ds	2
   511  000072                     main@byte:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x12
   515  000072                     	ds	2
   516  000074                     main@prevDry:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x14
   520  000074                     	ds	2
   521  000076                     main@diff:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x16
   525  000076                     	ds	2
   526  000078                     main@dir:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x18
   530  000078                     	ds	2
   531  00007A                     main@dryLevel:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x1A
   535  00007A                     	ds	2
   536  00007C                     main@temp:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1C
   540  00007C                     	ds	2
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           
   548                           	psect	cstackCOMRAM
   549  000021                     __pcstackCOMRAM:
   550                           	opt stack 0
   551  000021                     ??_tapLED:
   552  000021                     ?_absVal:
   553                           	opt stack 0
   554  000021                     ?___awdiv:
   555                           	opt stack 0
   556  000021                     checkSwitches@flag:
   557                           	opt stack 0
   558  000021                     absVal@val:
   559                           	opt stack 0
   560  000021                     ___awdiv@dividend:
   561                           	opt stack 0
   562  000021                     i2updatePresetLEDs@psNum:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x0
   566  000021                     	ds	2
   567  000023                     ??_absVal:
   568  000023                     ___awdiv@divisor:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572  000023                     	ds	2
   573  000025                     ___awdiv@counter:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x4
   577  000025                     	ds	1
   578  000026                     ___awdiv@sign:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x5
   582  000026                     	ds	1
   583  000027                     ___awdiv@quotient:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x6
   587  000027                     	ds	2
   588  000029                     ??_processTaps:
   589                           
   590                           ; 1 bytes @ 0x8
   591  000029                     	ds	2
   592  00002B                     processTaps@tapDiff:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0xA
   596  00002B                     	ds	2
   597  00002D                     ??_highPriorityISR:
   598                           
   599                           ; 1 bytes @ 0xC
   600  00002D                     	ds	18
   601  00003F                     tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           
   608                           ; 1 bytes @ 0x1E
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 166 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  temp            2   28[BANK0 ] int 
   619 ;;  dryLevel        2   26[BANK0 ] int 
   620 ;;  dir             2   24[BANK0 ] int 
   621 ;;  diff            2   22[BANK0 ] int 
   622 ;;  prevDry         2   20[BANK0 ] int 
   623 ;;  byte            2   18[BANK0 ] int 
   624 ;;  bitC            2   16[BANK0 ] int 
   625 ;;  bitB            2   14[BANK0 ] int 
   626 ;;  bitA            2   12[BANK0 ] int 
   627 ;;  i               2   10[BANK0 ] int 
   628 ;;  result          2    8[BANK0 ] int 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   641 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;Total ram usage:       24 bytes
   643 ;; Hardware stack levels required when called:    7
   644 ;; This function calls:
   645 ;;		_ADC_Read
   646 ;;		_I2C1_Read_EEPROM
   647 ;;		_I2C1_Write_DigiPot
   648 ;;		_I2C1_Write_EEPROM
   649 ;;		___wmul
   650 ;;		_interruptInit
   651 ;;		_systemInit
   652 ;;		_updatePresetLEDs
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text0
   659  000482                     __ptext0:
   660                           	opt stack 0
   661  000482                     _main:
   662                           	opt stack 24
   663                           
   664                           ;main.c: 168: int result = 0;
   665                           
   666                           ;incstack = 0
   667  000482  0E00               	movlw	0
   668  000484  0100               	movlb	0	; () banked
   669  000486  6F69               	movwf	(main@result+1)& (0+255),b
   670  000488  0E00               	movlw	0
   671  00048A  6F68               	movwf	main@result& (0+255),b
   672                           
   673                           ;main.c: 169: int i = 0;
   674  00048C  0E00               	movlw	0
   675  00048E  0100               	movlb	0	; () banked
   676  000490  6F6B               	movwf	(main@i+1)& (0+255),b
   677  000492  0E00               	movlw	0
   678  000494  6F6A               	movwf	main@i& (0+255),b
   679                           
   680                           ;main.c: 170: int byte = 0;
   681  000496  0E00               	movlw	0
   682  000498  0100               	movlb	0	; () banked
   683  00049A  6F73               	movwf	(main@byte+1)& (0+255),b
   684  00049C  0E00               	movlw	0
   685  00049E  6F72               	movwf	main@byte& (0+255),b
   686                           
   687                           ;main.c: 171: int dryLevel = 100;
   688  0004A0  0E00               	movlw	0
   689  0004A2  0100               	movlb	0	; () banked
   690  0004A4  6F7B               	movwf	(main@dryLevel+1)& (0+255),b
   691  0004A6  0E64               	movlw	100
   692  0004A8  6F7A               	movwf	main@dryLevel& (0+255),b
   693                           
   694                           ;main.c: 172: int prevDry = 0;
   695  0004AA  0E00               	movlw	0
   696  0004AC  0100               	movlb	0	; () banked
   697  0004AE  6F75               	movwf	(main@prevDry+1)& (0+255),b
   698  0004B0  0E00               	movlw	0
   699  0004B2  6F74               	movwf	main@prevDry& (0+255),b
   700                           
   701                           ;main.c: 173: int diff = 0;
   702  0004B4  0E00               	movlw	0
   703  0004B6  0100               	movlb	0	; () banked
   704  0004B8  6F77               	movwf	(main@diff+1)& (0+255),b
   705  0004BA  0E00               	movlw	0
   706  0004BC  6F76               	movwf	main@diff& (0+255),b
   707                           
   708                           ;main.c: 174: int dir = 1;
   709  0004BE  0E00               	movlw	0
   710  0004C0  0100               	movlb	0	; () banked
   711  0004C2  6F79               	movwf	(main@dir+1)& (0+255),b
   712  0004C4  0E01               	movlw	1
   713  0004C6  6F78               	movwf	main@dir& (0+255),b
   714                           
   715                           ;main.c: 176: int temp = 0;
   716  0004C8  0E00               	movlw	0
   717  0004CA  0100               	movlb	0	; () banked
   718  0004CC  6F7D               	movwf	(main@temp+1)& (0+255),b
   719  0004CE  0E00               	movlw	0
   720  0004D0  6F7C               	movwf	main@temp& (0+255),b
   721                           
   722                           ;main.c: 178: int bitA = 1;
   723  0004D2  0E00               	movlw	0
   724  0004D4  0100               	movlb	0	; () banked
   725  0004D6  6F6D               	movwf	(main@bitA+1)& (0+255),b
   726  0004D8  0E01               	movlw	1
   727  0004DA  6F6C               	movwf	main@bitA& (0+255),b
   728                           
   729                           ;main.c: 179: int bitB = 1;
   730  0004DC  0E00               	movlw	0
   731  0004DE  0100               	movlb	0	; () banked
   732  0004E0  6F6F               	movwf	(main@bitB+1)& (0+255),b
   733  0004E2  0E01               	movlw	1
   734  0004E4  6F6E               	movwf	main@bitB& (0+255),b
   735                           
   736                           ;main.c: 180: int bitC = 1;
   737  0004E6  0E00               	movlw	0
   738  0004E8  0100               	movlb	0	; () banked
   739  0004EA  6F71               	movwf	(main@bitC+1)& (0+255),b
   740  0004EC  0E01               	movlw	1
   741  0004EE  6F70               	movwf	main@bitC& (0+255),b
   742                           
   743                           ; BSR set to: 0
   744                           ;main.c: 182: systemInit();
   745  0004F0  EC28  F009         	call	_systemInit	;wreg free
   746                           
   747                           ;main.c: 183: interruptInit();
   748  0004F4  EC10  F009         	call	_interruptInit	;wreg free
   749                           
   750                           ;main.c: 185: T4CONbits.TMR4ON = 1;
   751  0004F8  010F               	movlb	15	; () banked
   752  0004FA  8504               	bsf	4,2,b	;volatile
   753  0004FC                     
   754                           ;main.c: 188: {
   755                           ;main.c: 189: temp++;
   756                           
   757                           ; BSR set to: 15
   758  0004FC  0100               	movlb	0	; () banked
   759  0004FE  4B7C               	infsnz	main@temp& (0+255),f,b
   760  000500  2B7D               	incf	(main@temp+1)& (0+255),f,b
   761                           
   762                           ; BSR set to: 0
   763  000502  D7FC               	goto	l121
   764  000504                     
   765                           ;main.c: 194: {
   766                           ;main.c: 195: temp = ADC_Read(14);
   767                           
   768                           ; BSR set to: 0
   769                           
   770                           ;main.c: 191: }
   771                           ;main.c: 193: while(1)
   772                           
   773                           ; BSR set to: 0
   774  000504  0E00               	movlw	0
   775  000506  0100               	movlb	0	; () banked
   776  000508  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
   777  00050A  0E0E               	movlw	14
   778  00050C  6F60               	movwf	ADC_Read@channel& (0+255),b
   779  00050E  ECAF  F004         	call	_ADC_Read	;wreg free
   780  000512  C060  F07C         	movff	?_ADC_Read,main@temp
   781  000516  C061  F07D         	movff	?_ADC_Read+1,main@temp+1
   782                           
   783                           ;main.c: 197: if (temp >= 1000)
   784  00051A  0100               	movlb	0	; () banked
   785  00051C  BF7D               	btfsc	(main@temp+1)& (0+255),7,b
   786  00051E  D00D               	goto	l125
   787  000520  0EE8               	movlw	232
   788  000522  0100               	movlb	0	; () banked
   789  000524  5D7C               	subwf	main@temp& (0+255),w,b
   790  000526  0E03               	movlw	3
   791  000528  0100               	movlb	0	; () banked
   792  00052A  597D               	subwfb	(main@temp+1)& (0+255),w,b
   793  00052C  A0D8               	btfss	status,0,c
   794  00052E  D005               	goto	l125
   795                           
   796                           ; BSR set to: 0
   797                           ;main.c: 198: {
   798                           ;main.c: 199: temp = 1;
   799  000530  0E00               	movlw	0
   800  000532  0100               	movlb	0	; () banked
   801  000534  6F7D               	movwf	(main@temp+1)& (0+255),b
   802  000536  0E01               	movlw	1
   803  000538  D044               	goto	L5
   804  00053A                     l125:
   805                           
   806                           ; BSR set to: 0
   807                           ;main.c: 201: else if (temp >= 800)
   808                           
   809                           ; BSR set to: 0
   810  00053A  0100               	movlb	0	; () banked
   811  00053C  BF7D               	btfsc	(main@temp+1)& (0+255),7,b
   812  00053E  D00D               	goto	l127
   813  000540  0E20               	movlw	32
   814  000542  0100               	movlb	0	; () banked
   815  000544  5D7C               	subwf	main@temp& (0+255),w,b
   816  000546  0E03               	movlw	3
   817  000548  0100               	movlb	0	; () banked
   818  00054A  597D               	subwfb	(main@temp+1)& (0+255),w,b
   819  00054C  A0D8               	btfss	status,0,c
   820  00054E  D005               	goto	l127
   821                           
   822                           ; BSR set to: 0
   823                           ;main.c: 202: {
   824                           ;main.c: 203: temp = 2;
   825  000550  0E00               	movlw	0
   826  000552  0100               	movlb	0	; () banked
   827  000554  6F7D               	movwf	(main@temp+1)& (0+255),b
   828  000556  0E02               	movlw	2
   829  000558  D034               	goto	L5
   830  00055A                     l127:
   831                           
   832                           ; BSR set to: 0
   833                           ;main.c: 205: else if (temp >= 600)
   834                           
   835                           ; BSR set to: 0
   836  00055A  0100               	movlb	0	; () banked
   837  00055C  BF7D               	btfsc	(main@temp+1)& (0+255),7,b
   838  00055E  D00D               	goto	l129
   839  000560  0E58               	movlw	88
   840  000562  0100               	movlb	0	; () banked
   841  000564  5D7C               	subwf	main@temp& (0+255),w,b
   842  000566  0E02               	movlw	2
   843  000568  0100               	movlb	0	; () banked
   844  00056A  597D               	subwfb	(main@temp+1)& (0+255),w,b
   845  00056C  A0D8               	btfss	status,0,c
   846  00056E  D005               	goto	l129
   847                           
   848                           ; BSR set to: 0
   849                           ;main.c: 206: {
   850                           ;main.c: 207: temp = 3;
   851  000570  0E00               	movlw	0
   852  000572  0100               	movlb	0	; () banked
   853  000574  6F7D               	movwf	(main@temp+1)& (0+255),b
   854  000576  0E03               	movlw	3
   855  000578  D024               	goto	L5
   856  00057A                     l129:
   857                           
   858                           ; BSR set to: 0
   859                           ;main.c: 209: else if (temp >= 400)
   860                           
   861                           ; BSR set to: 0
   862  00057A  0100               	movlb	0	; () banked
   863  00057C  BF7D               	btfsc	(main@temp+1)& (0+255),7,b
   864  00057E  D00D               	goto	l131
   865  000580  0E90               	movlw	144
   866  000582  0100               	movlb	0	; () banked
   867  000584  5D7C               	subwf	main@temp& (0+255),w,b
   868  000586  0E01               	movlw	1
   869  000588  0100               	movlb	0	; () banked
   870  00058A  597D               	subwfb	(main@temp+1)& (0+255),w,b
   871  00058C  A0D8               	btfss	status,0,c
   872  00058E  D005               	goto	l131
   873                           
   874                           ; BSR set to: 0
   875                           ;main.c: 210: {
   876                           ;main.c: 211: temp = 4;
   877  000590  0E00               	movlw	0
   878  000592  0100               	movlb	0	; () banked
   879  000594  6F7D               	movwf	(main@temp+1)& (0+255),b
   880  000596  0E04               	movlw	4
   881  000598  D014               	goto	L5
   882  00059A                     l131:
   883                           
   884                           ; BSR set to: 0
   885                           ;main.c: 213: else if (temp >= 200)
   886                           
   887                           ; BSR set to: 0
   888  00059A  0100               	movlb	0	; () banked
   889  00059C  BF7D               	btfsc	(main@temp+1)& (0+255),7,b
   890  00059E  D00D               	goto	l133
   891  0005A0  0100               	movlb	0	; () banked
   892  0005A2  517D               	movf	(main@temp+1)& (0+255),w,b
   893  0005A4  E105               	bnz	u3190
   894  0005A6  0EC8               	movlw	200
   895  0005A8  0100               	movlb	0	; () banked
   896  0005AA  5D7C               	subwf	main@temp& (0+255),w,b
   897  0005AC  A0D8               	btfss	status,0,c
   898  0005AE  D005               	goto	l133
   899  0005B0                     u3190:
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 214: {
   903                           ;main.c: 215: temp = 5;
   904  0005B0  0E00               	movlw	0
   905  0005B2  0100               	movlb	0	; () banked
   906  0005B4  6F7D               	movwf	(main@temp+1)& (0+255),b
   907  0005B6  0E05               	movlw	5
   908  0005B8  D004               	goto	L5
   909  0005BA                     l133:
   910                           
   911                           ; BSR set to: 0
   912                           ;main.c: 217: else temp = 0;
   913                           
   914                           ; BSR set to: 0
   915  0005BA  0E00               	movlw	0
   916  0005BC  0100               	movlb	0	; () banked
   917  0005BE  6F7D               	movwf	(main@temp+1)& (0+255),b
   918  0005C0  0E00               	movlw	0
   919  0005C2                     L5:
   920  0005C2  6F7C               	movwf	main@temp& (0+255),b
   921                           
   922                           ; BSR set to: 0
   923                           ;main.c: 219: updatePresetLEDs(temp);
   924                           
   925                           ; BSR set to: 0
   926                           
   927                           ; BSR set to: 0
   928                           
   929                           ; BSR set to: 0
   930                           
   931                           ; BSR set to: 0
   932                           
   933                           ; BSR set to: 0
   934  0005C4  C07C  F060         	movff	main@temp,updatePresetLEDs@psNum
   935  0005C8  C07D  F061         	movff	main@temp+1,updatePresetLEDs@psNum+1
   936  0005CC  EC9D  F006         	call	_updatePresetLEDs	;wreg free
   937  0005D0  D799               	goto	l123
   938  0005D2                     
   939                           ;main.c: 223: {
   940                           ;main.c: 224: I2C1_Write_DigiPot(dryLevel);
   941                           
   942                           ;main.c: 220: }
   943                           ;main.c: 222: while(1)
   944  0005D2  0100               	movlb	0	; () banked
   945  0005D4  517A               	movf	main@dryLevel& (0+255),w,b
   946  0005D6  ECB5  F008         	call	_I2C1_Write_DigiPot
   947                           
   948                           ;main.c: 225: dryLevel += dir;
   949  0005DA  0100               	movlb	0	; () banked
   950  0005DC  5178               	movf	main@dir& (0+255),w,b
   951  0005DE  0100               	movlb	0	; () banked
   952  0005E0  277A               	addwf	main@dryLevel& (0+255),f,b
   953  0005E2  0100               	movlb	0	; () banked
   954  0005E4  5179               	movf	(main@dir+1)& (0+255),w,b
   955  0005E6  0100               	movlb	0	; () banked
   956  0005E8  237B               	addwfc	(main@dryLevel+1)& (0+255),f,b
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 226: if (dryLevel >= 127 | dryLevel <= 20)
   960  0005EA  0100               	movlb	0	; () banked
   961  0005EC  BF7B               	btfsc	(main@dryLevel+1)& (0+255),7,b
   962  0005EE  D008               	goto	u3200
   963  0005F0  0100               	movlb	0	; () banked
   964  0005F2  517B               	movf	(main@dryLevel+1)& (0+255),w,b
   965  0005F4  E110               	bnz	l3492
   966  0005F6  0E7F               	movlw	127
   967  0005F8  0100               	movlb	0	; () banked
   968  0005FA  5D7A               	subwf	main@dryLevel& (0+255),w,b
   969  0005FC  B0D8               	btfsc	status,0,c
   970  0005FE  D00B               	goto	u3210
   971  000600                     u3200:
   972                           
   973                           ; BSR set to: 0
   974  000600  0100               	movlb	0	; () banked
   975  000602  BF7B               	btfsc	(main@dryLevel+1)& (0+255),7,b
   976  000604  D008               	goto	u3210
   977  000606  0100               	movlb	0	; () banked
   978  000608  517B               	movf	(main@dryLevel+1)& (0+255),w,b
   979  00060A  E113               	bnz	l3494
   980  00060C  0E15               	movlw	21
   981  00060E  0100               	movlb	0	; () banked
   982  000610  5D7A               	subwf	main@dryLevel& (0+255),w,b
   983  000612  B0D8               	btfsc	status,0,c
   984  000614  D00E               	goto	l138
   985  000616                     u3210:
   986  000616                     l3492:
   987                           
   988                           ; BSR set to: 0
   989                           ;main.c: 227: {
   990                           ;main.c: 228: dir *= -1;
   991  000616  C078  F060         	movff	main@dir,___wmul@multiplier
   992  00061A  C079  F061         	movff	main@dir+1,___wmul@multiplier+1
   993  00061E  0EFF               	movlw	255
   994  000620  0100               	movlb	0	; () banked
   995  000622  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   996  000624  6962               	setf	___wmul@multiplicand& (0+255),b
   997  000626  ECF5  F008         	call	___wmul	;wreg free
   998  00062A  C060  F078         	movff	?___wmul,main@dir
   999  00062E  C061  F079         	movff	?___wmul+1,main@dir+1
  1000  000632                     l138:
  1001  000632                     l3494:
  1002                           
  1003                           ;main.c: 229: }
  1004                           ;main.c: 230: _delay((unsigned long)((1500)*(32000000/4000000.0)));
  1005  000632  0E10               	movlw	16
  1006  000634  0100               	movlb	0	; () banked
  1007  000636  6F66               	movwf	??_main& (0+255),b
  1008  000638  0E94               	movlw	148
  1009  00063A                     u3247:
  1010  00063A  2EE8               	decfsz	wreg,f,c
  1011  00063C  D7FE               	bra	u3247
  1012  00063E  2F66               	decfsz	??_main& (0+255),f,b
  1013  000640  D7FC               	bra	u3247
  1014  000642  F000               	nop	
  1015  000644  D7C6               	goto	l136
  1016  000646                     
  1017                           ;main.c: 234: {
  1018                           ;main.c: 235: dryLevel = ADC_Read(3);
  1019                           
  1020                           ;main.c: 231: }
  1021                           ;main.c: 233: while(1)
  1022  000646  0E00               	movlw	0
  1023  000648  0100               	movlb	0	; () banked
  1024  00064A  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1025  00064C  0E03               	movlw	3
  1026  00064E  6F60               	movwf	ADC_Read@channel& (0+255),b
  1027  000650  ECAF  F004         	call	_ADC_Read	;wreg free
  1028  000654  C060  F07A         	movff	?_ADC_Read,main@dryLevel
  1029  000658  C061  F07B         	movff	?_ADC_Read+1,main@dryLevel+1
  1030                           
  1031                           ;main.c: 236: dryLevel = dryLevel>>3;
  1032  00065C  C07A  F066         	movff	main@dryLevel,??_main
  1033  000660  C07B  F067         	movff	main@dryLevel+1,??_main+1
  1034  000664  0100               	movlb	0	; () banked
  1035  000666  3567               	rlcf	(??_main+1)& (0+255),w,b
  1036  000668  3367               	rrcf	(??_main+1)& (0+255),f,b
  1037  00066A  3366               	rrcf	??_main& (0+255),f,b
  1038  00066C  0100               	movlb	0	; () banked
  1039  00066E  3567               	rlcf	(??_main+1)& (0+255),w,b
  1040  000670  3367               	rrcf	(??_main+1)& (0+255),f,b
  1041  000672  3366               	rrcf	??_main& (0+255),f,b
  1042  000674  0100               	movlb	0	; () banked
  1043  000676  3567               	rlcf	(??_main+1)& (0+255),w,b
  1044  000678  3367               	rrcf	(??_main+1)& (0+255),f,b
  1045  00067A  3366               	rrcf	??_main& (0+255),f,b
  1046  00067C  C066  F07A         	movff	??_main,main@dryLevel
  1047  000680  C067  F07B         	movff	??_main+1,main@dryLevel+1
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 237: diff = dryLevel - prevDry;
  1051  000684  C074  F066         	movff	main@prevDry,??_main
  1052  000688  C075  F067         	movff	main@prevDry+1,??_main+1
  1053  00068C  0100               	movlb	0	; () banked
  1054  00068E  1F66               	comf	??_main& (0+255),f,b
  1055  000690  1F67               	comf	(??_main+1)& (0+255),f,b
  1056  000692  4B66               	infsnz	??_main& (0+255),f,b
  1057  000694  2B67               	incf	(??_main+1)& (0+255),f,b
  1058  000696  0100               	movlb	0	; () banked
  1059  000698  517A               	movf	main@dryLevel& (0+255),w,b
  1060  00069A  0100               	movlb	0	; () banked
  1061  00069C  2566               	addwf	??_main& (0+255),w,b
  1062  00069E  0100               	movlb	0	; () banked
  1063  0006A0  6F76               	movwf	main@diff& (0+255),b
  1064  0006A2  0100               	movlb	0	; () banked
  1065  0006A4  517B               	movf	(main@dryLevel+1)& (0+255),w,b
  1066  0006A6  0100               	movlb	0	; () banked
  1067  0006A8  2167               	addwfc	(??_main+1)& (0+255),w,b
  1068  0006AA  0100               	movlb	0	; () banked
  1069  0006AC  6F77               	movwf	(main@diff+1)& (0+255),b
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;main.c: 238: if (diff >= 3 | diff <= -3)
  1073  0006AE  0100               	movlb	0	; () banked
  1074  0006B0  BF77               	btfsc	(main@diff+1)& (0+255),7,b
  1075  0006B2  D008               	goto	u3220
  1076  0006B4  0100               	movlb	0	; () banked
  1077  0006B6  5177               	movf	(main@diff+1)& (0+255),w,b
  1078  0006B8  E110               	bnz	l3506
  1079  0006BA  0E03               	movlw	3
  1080  0006BC  0100               	movlb	0	; () banked
  1081  0006BE  5D76               	subwf	main@diff& (0+255),w,b
  1082  0006C0  B0D8               	btfsc	status,0,c
  1083  0006C2  D00B               	goto	u3230
  1084  0006C4                     u3220:
  1085                           
  1086                           ; BSR set to: 0
  1087  0006C4  0100               	movlb	0	; () banked
  1088  0006C6  AF77               	btfss	(main@diff+1)& (0+255),7,b
  1089  0006C8  D010               	goto	l144
  1090  0006CA  0EFE               	movlw	254
  1091  0006CC  0100               	movlb	0	; () banked
  1092  0006CE  5D76               	subwf	main@diff& (0+255),w,b
  1093  0006D0  0EFF               	movlw	255
  1094  0006D2  0100               	movlb	0	; () banked
  1095  0006D4  5977               	subwfb	(main@diff+1)& (0+255),w,b
  1096  0006D6  B0D8               	btfsc	status,0,c
  1097  0006D8  D008               	goto	l144
  1098  0006DA                     u3230:
  1099  0006DA                     l3506:
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 239: {
  1103                           ;main.c: 240: I2C1_Write_DigiPot(dryLevel);
  1104  0006DA  0100               	movlb	0	; () banked
  1105  0006DC  517A               	movf	main@dryLevel& (0+255),w,b
  1106  0006DE  ECB5  F008         	call	_I2C1_Write_DigiPot
  1107                           
  1108                           ;main.c: 241: prevDry = dryLevel;
  1109  0006E2  C07A  F074         	movff	main@dryLevel,main@prevDry
  1110  0006E6  C07B  F075         	movff	main@dryLevel+1,main@prevDry+1
  1111  0006EA                     l144:
  1112                           
  1113                           ;main.c: 242: }
  1114                           ;main.c: 243: _delay((unsigned long)((5)*(32000000/4000.0)));
  1115  0006EA  0E34               	movlw	52
  1116  0006EC  0100               	movlb	0	; () banked
  1117  0006EE  6F66               	movwf	??_main& (0+255),b
  1118  0006F0  0EF1               	movlw	241
  1119  0006F2                     u3257:
  1120  0006F2  2EE8               	decfsz	wreg,f,c
  1121  0006F4  D7FE               	bra	u3257
  1122  0006F6  2F66               	decfsz	??_main& (0+255),f,b
  1123  0006F8  D7FC               	bra	u3257
  1124  0006FA  D000               	nop2	
  1125  0006FC  D7A4               	goto	l142
  1126  0006FE                     
  1127                           ;main.c: 247: {
  1128                           ;main.c: 248: _delay((unsigned long)((10)*(32000000/4000.0)));
  1129                           
  1130                           ;main.c: 244: }
  1131                           ;main.c: 246: while(1)
  1132  0006FE  0E68               	movlw	104
  1133  000700  0100               	movlb	0	; () banked
  1134  000702  6F66               	movwf	??_main& (0+255),b
  1135  000704  0EE4               	movlw	228
  1136  000706                     u3267:
  1137  000706  2EE8               	decfsz	wreg,f,c
  1138  000708  D7FE               	bra	u3267
  1139  00070A  2F66               	decfsz	??_main& (0+255),f,b
  1140  00070C  D7FC               	bra	u3267
  1141  00070E  F000               	nop	
  1142                           
  1143                           ;main.c: 249: I2C1_Write_EEPROM(0xA0, 0x00, 0xAA);
  1144  000710  0E00               	movlw	0
  1145  000712  0100               	movlb	0	; () banked
  1146  000714  6F60               	movwf	I2C1_Write_EEPROM@memValue& (0+255),b
  1147  000716  0EAA               	movlw	170
  1148  000718  0100               	movlb	0	; () banked
  1149  00071A  6F61               	movwf	I2C1_Write_EEPROM@value& (0+255),b
  1150  00071C  0EA0               	movlw	160
  1151  00071E  EC8E  F008         	call	_I2C1_Write_EEPROM
  1152                           
  1153                           ;main.c: 250: _delay((unsigned long)((50)*(32000000/4000000.0)));
  1154  000722  0E85               	movlw	133
  1155  000724                     u3277:
  1156  000724  2EE8               	decfsz	wreg,f,c
  1157  000726  D7FE               	bra	u3277
  1158  000728  F000               	nop	
  1159                           
  1160                           ;main.c: 251: byte = I2C1_Read_EEPROM(0xA0, 0x00);
  1161  00072A  0E00               	movlw	0
  1162  00072C  0100               	movlb	0	; () banked
  1163  00072E  6F60               	movwf	I2C1_Read_EEPROM@memValue& (0+255),b
  1164  000730  0EA0               	movlw	160
  1165  000732  ECE3  F006         	call	_I2C1_Read_EEPROM
  1166  000736  0100               	movlb	0	; () banked
  1167  000738  6F66               	movwf	??_main& (0+255),b
  1168  00073A  0100               	movlb	0	; () banked
  1169  00073C  5166               	movf	??_main& (0+255),w,b
  1170  00073E  0100               	movlb	0	; () banked
  1171  000740  6F72               	movwf	main@byte& (0+255),b
  1172  000742  6B73               	clrf	(main@byte+1)& (0+255),b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;main.c: 252: _delay((unsigned long)((10)*(32000000/4000.0)));
  1176  000744  0E68               	movlw	104
  1177  000746  0100               	movlb	0	; () banked
  1178  000748  6F66               	movwf	??_main& (0+255),b
  1179  00074A  0EE4               	movlw	228
  1180  00074C                     u3287:
  1181  00074C  2EE8               	decfsz	wreg,f,c
  1182  00074E  D7FE               	bra	u3287
  1183  000750  2F66               	decfsz	??_main& (0+255),f,b
  1184  000752  D7FC               	bra	u3287
  1185  000754  F000               	nop	
  1186  000756  D7D3               	goto	l148
  1187  000758                     
  1188                           ;main.c: 256: {
  1189                           ;main.c: 257: feedbackValue = ADC_Read(6);
  1190                           
  1191                           ;main.c: 253: }
  1192                           ;main.c: 255: while(1)
  1193  000758  0E00               	movlw	0
  1194  00075A  0100               	movlb	0	; () banked
  1195  00075C  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1196  00075E  0E06               	movlw	6
  1197  000760  6F60               	movwf	ADC_Read@channel& (0+255),b
  1198  000762  ECAF  F004         	call	_ADC_Read	;wreg free
  1199  000766  C060  F00B         	movff	?_ADC_Read,_feedbackValue
  1200  00076A  C061  F00C         	movff	?_ADC_Read+1,_feedbackValue+1
  1201                           
  1202                           ;main.c: 258: feedbackValue = feedbackValue>>2;
  1203  00076E  C00B  F066         	movff	_feedbackValue,??_main
  1204  000772  C00C  F067         	movff	_feedbackValue+1,??_main+1
  1205  000776  0100               	movlb	0	; () banked
  1206  000778  3567               	rlcf	(??_main+1)& (0+255),w,b
  1207  00077A  3367               	rrcf	(??_main+1)& (0+255),f,b
  1208  00077C  3366               	rrcf	??_main& (0+255),f,b
  1209  00077E  0100               	movlb	0	; () banked
  1210  000780  3567               	rlcf	(??_main+1)& (0+255),w,b
  1211  000782  3367               	rrcf	(??_main+1)& (0+255),f,b
  1212  000784  3366               	rrcf	??_main& (0+255),f,b
  1213  000786  C066  F00B         	movff	??_main,_feedbackValue
  1214  00078A  C067  F00C         	movff	??_main+1,_feedbackValue+1
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;main.c: 260: levelValue = ADC_Read(5);
  1218  00078E  0E00               	movlw	0
  1219  000790  0100               	movlb	0	; () banked
  1220  000792  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1221  000794  0E05               	movlw	5
  1222  000796  6F60               	movwf	ADC_Read@channel& (0+255),b
  1223  000798  ECAF  F004         	call	_ADC_Read	;wreg free
  1224  00079C  C060  F009         	movff	?_ADC_Read,_levelValue
  1225  0007A0  C061  F00A         	movff	?_ADC_Read+1,_levelValue+1
  1226                           
  1227                           ;main.c: 261: levelValue = levelValue>>2;
  1228  0007A4  C009  F066         	movff	_levelValue,??_main
  1229  0007A8  C00A  F067         	movff	_levelValue+1,??_main+1
  1230  0007AC  0100               	movlb	0	; () banked
  1231  0007AE  3567               	rlcf	(??_main+1)& (0+255),w,b
  1232  0007B0  3367               	rrcf	(??_main+1)& (0+255),f,b
  1233  0007B2  3366               	rrcf	??_main& (0+255),f,b
  1234  0007B4  0100               	movlb	0	; () banked
  1235  0007B6  3567               	rlcf	(??_main+1)& (0+255),w,b
  1236  0007B8  3367               	rrcf	(??_main+1)& (0+255),f,b
  1237  0007BA  3366               	rrcf	??_main& (0+255),f,b
  1238  0007BC  C066  F009         	movff	??_main,_levelValue
  1239  0007C0  C067  F00A         	movff	??_main+1,_levelValue+1
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 263: timeValue = ADC_Read(4);
  1243  0007C4  0E00               	movlw	0
  1244  0007C6  0100               	movlb	0	; () banked
  1245  0007C8  6F61               	movwf	(ADC_Read@channel+1)& (0+255),b
  1246  0007CA  0E04               	movlw	4
  1247  0007CC  6F60               	movwf	ADC_Read@channel& (0+255),b
  1248  0007CE  ECAF  F004         	call	_ADC_Read	;wreg free
  1249  0007D2  C060  F007         	movff	?_ADC_Read,_timeValue
  1250  0007D6  C061  F008         	movff	?_ADC_Read+1,_timeValue+1
  1251                           
  1252                           ;main.c: 264: timeValue = timeValue>>2;
  1253  0007DA  C007  F066         	movff	_timeValue,??_main
  1254  0007DE  C008  F067         	movff	_timeValue+1,??_main+1
  1255  0007E2  0100               	movlb	0	; () banked
  1256  0007E4  3567               	rlcf	(??_main+1)& (0+255),w,b
  1257  0007E6  3367               	rrcf	(??_main+1)& (0+255),f,b
  1258  0007E8  3366               	rrcf	??_main& (0+255),f,b
  1259  0007EA  0100               	movlb	0	; () banked
  1260  0007EC  3567               	rlcf	(??_main+1)& (0+255),w,b
  1261  0007EE  3367               	rrcf	(??_main+1)& (0+255),f,b
  1262  0007F0  3366               	rrcf	??_main& (0+255),f,b
  1263  0007F2  C066  F007         	movff	??_main,_timeValue
  1264  0007F6  C067  F008         	movff	??_main+1,_timeValue+1
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;main.c: 266: _delay((unsigned long)((5)*(32000000/4000.0)));
  1268  0007FA  0E34               	movlw	52
  1269  0007FC  0100               	movlb	0	; () banked
  1270  0007FE  6F66               	movwf	??_main& (0+255),b
  1271  000800  0EF1               	movlw	241
  1272  000802                     u3297:
  1273  000802  2EE8               	decfsz	wreg,f,c
  1274  000804  D7FE               	bra	u3297
  1275  000806  2F66               	decfsz	??_main& (0+255),f,b
  1276  000808  D7FC               	bra	u3297
  1277  00080A  D000               	nop2	
  1278  00080C  D7A5               	goto	l151
  1279  00080E                     __end_of_main:
  1280                           	opt stack 0
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _updatePresetLEDs *****************
  1290 ;; Defined at:
  1291 ;;		line 475 in file "hardware.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  psNum           2    0[BANK0 ] int 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;Total ram usage:        2 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    4
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text1
  1320  000D3A                     __ptext1:
  1321                           	opt stack 0
  1322  000D3A                     _updatePresetLEDs:
  1323                           	opt stack 26
  1324                           
  1325                           ;hardware.c: 477: if (psNum == 1)
  1326                           
  1327                           ;incstack = 0
  1328  000D3A  0100               	movlb	0	; () banked
  1329  000D3C  0560               	decf	updatePresetLEDs@psNum& (0+255),w,b
  1330  000D3E  0100               	movlb	0	; () banked
  1331  000D40  1161               	iorwf	(updatePresetLEDs@psNum+1)& (0+255),w,b
  1332  000D42  A4D8               	btfss	status,2,c
  1333  000D44  D006               	goto	l698
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;hardware.c: 478: {
  1337                           ;hardware.c: 479: LATD0 = 1;
  1338  000D46  808C               	bsf	3980,0,c	;volatile
  1339                           
  1340                           ;hardware.c: 480: LATE7 = 0;
  1341  000D48  9E8D               	bcf	3981,7,c	;volatile
  1342                           
  1343                           ;hardware.c: 481: LATE5 = 0;
  1344  000D4A  9A8D               	bcf	3981,5,c	;volatile
  1345                           
  1346                           ;hardware.c: 482: LATE4 = 0;
  1347  000D4C  988D               	bcf	3981,4,c	;volatile
  1348                           
  1349                           ;hardware.c: 483: LATH2 = 0;
  1350  000D4E  9490               	bcf	3984,2,c	;volatile
  1351                           
  1352                           ;hardware.c: 484: }
  1353  000D50  0012               	return	
  1354  000D52                     l698:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;hardware.c: 485: else if (psNum == 2)
  1358                           
  1359                           ; BSR set to: 0
  1360  000D52  0E02               	movlw	2
  1361  000D54  0100               	movlb	0	; () banked
  1362  000D56  1960               	xorwf	updatePresetLEDs@psNum& (0+255),w,b
  1363  000D58  0100               	movlb	0	; () banked
  1364  000D5A  1161               	iorwf	(updatePresetLEDs@psNum+1)& (0+255),w,b
  1365  000D5C  A4D8               	btfss	status,2,c
  1366  000D5E  D006               	goto	l700
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;hardware.c: 486: {
  1370                           ;hardware.c: 487: LATD0 = 0;
  1371  000D60  908C               	bcf	3980,0,c	;volatile
  1372                           
  1373                           ;hardware.c: 488: LATE7 = 1;
  1374  000D62  8E8D               	bsf	3981,7,c	;volatile
  1375                           
  1376                           ;hardware.c: 489: LATE5 = 0;
  1377  000D64  9A8D               	bcf	3981,5,c	;volatile
  1378                           
  1379                           ;hardware.c: 490: LATE4 = 0;
  1380  000D66  988D               	bcf	3981,4,c	;volatile
  1381                           
  1382                           ;hardware.c: 491: LATH2 = 0;
  1383  000D68  9490               	bcf	3984,2,c	;volatile
  1384                           
  1385                           ;hardware.c: 492: }
  1386  000D6A  0012               	return	
  1387  000D6C                     l700:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;hardware.c: 493: else if (psNum == 3)
  1391                           
  1392                           ; BSR set to: 0
  1393  000D6C  0E03               	movlw	3
  1394  000D6E  0100               	movlb	0	; () banked
  1395  000D70  1960               	xorwf	updatePresetLEDs@psNum& (0+255),w,b
  1396  000D72  0100               	movlb	0	; () banked
  1397  000D74  1161               	iorwf	(updatePresetLEDs@psNum+1)& (0+255),w,b
  1398  000D76  A4D8               	btfss	status,2,c
  1399  000D78  D006               	goto	l702
  1400                           
  1401                           ; BSR set to: 0
  1402                           ;hardware.c: 494: {
  1403                           ;hardware.c: 495: LATD0 = 0;
  1404  000D7A  908C               	bcf	3980,0,c	;volatile
  1405                           
  1406                           ;hardware.c: 496: LATE7 = 0;
  1407  000D7C  9E8D               	bcf	3981,7,c	;volatile
  1408                           
  1409                           ;hardware.c: 497: LATE5 = 1;
  1410  000D7E  8A8D               	bsf	3981,5,c	;volatile
  1411                           
  1412                           ;hardware.c: 498: LATE4 = 0;
  1413  000D80  988D               	bcf	3981,4,c	;volatile
  1414                           
  1415                           ;hardware.c: 499: LATH2 = 0;
  1416  000D82  9490               	bcf	3984,2,c	;volatile
  1417                           
  1418                           ;hardware.c: 500: }
  1419  000D84  0012               	return	
  1420  000D86                     l702:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;hardware.c: 501: else if (psNum == 4)
  1424                           
  1425                           ; BSR set to: 0
  1426  000D86  0E04               	movlw	4
  1427  000D88  0100               	movlb	0	; () banked
  1428  000D8A  1960               	xorwf	updatePresetLEDs@psNum& (0+255),w,b
  1429  000D8C  0100               	movlb	0	; () banked
  1430  000D8E  1161               	iorwf	(updatePresetLEDs@psNum+1)& (0+255),w,b
  1431  000D90  A4D8               	btfss	status,2,c
  1432  000D92  D006               	goto	l704
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;hardware.c: 502: {
  1436                           ;hardware.c: 503: LATD0 = 0;
  1437  000D94  908C               	bcf	3980,0,c	;volatile
  1438                           
  1439                           ;hardware.c: 504: LATE7 = 0;
  1440  000D96  9E8D               	bcf	3981,7,c	;volatile
  1441                           
  1442                           ;hardware.c: 505: LATE5 = 0;
  1443  000D98  9A8D               	bcf	3981,5,c	;volatile
  1444                           
  1445                           ;hardware.c: 506: LATE4 = 1;
  1446  000D9A  888D               	bsf	3981,4,c	;volatile
  1447                           
  1448                           ;hardware.c: 507: LATH2 = 0;
  1449  000D9C  9490               	bcf	3984,2,c	;volatile
  1450                           
  1451                           ;hardware.c: 508: }
  1452  000D9E  0012               	return	
  1453  000DA0                     l704:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;hardware.c: 509: else if (psNum == 5)
  1457                           
  1458                           ; BSR set to: 0
  1459  000DA0  0E05               	movlw	5
  1460  000DA2  0100               	movlb	0	; () banked
  1461  000DA4  1960               	xorwf	updatePresetLEDs@psNum& (0+255),w,b
  1462  000DA6  0100               	movlb	0	; () banked
  1463  000DA8  1161               	iorwf	(updatePresetLEDs@psNum+1)& (0+255),w,b
  1464  000DAA  A4D8               	btfss	status,2,c
  1465  000DAC  D006               	goto	l706
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;hardware.c: 510: {
  1469                           ;hardware.c: 511: LATD0 = 0;
  1470  000DAE  908C               	bcf	3980,0,c	;volatile
  1471                           
  1472                           ;hardware.c: 512: LATE7 = 0;
  1473  000DB0  9E8D               	bcf	3981,7,c	;volatile
  1474                           
  1475                           ;hardware.c: 513: LATE5 = 0;
  1476  000DB2  9A8D               	bcf	3981,5,c	;volatile
  1477                           
  1478                           ;hardware.c: 514: LATE4 = 0;
  1479  000DB4  988D               	bcf	3981,4,c	;volatile
  1480                           
  1481                           ;hardware.c: 515: LATH2 = 1;
  1482  000DB6  8490               	bsf	3984,2,c	;volatile
  1483                           
  1484                           ;hardware.c: 516: }
  1485  000DB8  0012               	return	
  1486  000DBA                     l706:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;hardware.c: 517: else
  1490                           ;hardware.c: 518: {
  1491                           ;hardware.c: 519: LATD0 = 0;
  1492  000DBA  908C               	bcf	3980,0,c	;volatile
  1493                           
  1494                           ;hardware.c: 520: LATE7 = 0;
  1495  000DBC  9E8D               	bcf	3981,7,c	;volatile
  1496                           
  1497                           ;hardware.c: 521: LATE5 = 0;
  1498  000DBE  9A8D               	bcf	3981,5,c	;volatile
  1499                           
  1500                           ;hardware.c: 522: LATE4 = 0;
  1501  000DC0  988D               	bcf	3981,4,c	;volatile
  1502                           
  1503                           ;hardware.c: 523: LATH2 = 0;
  1504  000DC2  9490               	bcf	3984,2,c	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507                           
  1508                           ; BSR set to: 0
  1509                           
  1510                           ; BSR set to: 0
  1511                           
  1512                           ; BSR set to: 0
  1513  000DC4  0012               	return	
  1514  000DC6                     __end_of_updatePresetLEDs:
  1515                           	opt stack 0
  1516                           tblptru	equ	0xFF8
  1517                           tblptrh	equ	0xFF7
  1518                           tblptrl	equ	0xFF6
  1519                           tablat	equ	0xFF5
  1520                           postinc0	equ	0xFEE
  1521                           wreg	equ	0xFE8
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _systemInit *****************
  1525 ;; Defined at:
  1526 ;;		line 311 in file "systemConfig.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    6
  1547 ;; This function calls:
  1548 ;;		_clockSwitch
  1549 ;;		_interfaceInit
  1550 ;;		_killLEDs
  1551 ;;		_mapPeripheralPins
  1552 ;;		_setupADC
  1553 ;;		_setupTMR0
  1554 ;;		_setupTMR1
  1555 ;;		_setupTMR2
  1556 ;;		_setupTMR4
  1557 ;;		_startupSequence
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text2
  1564  001250                     __ptext2:
  1565                           	opt stack 0
  1566  001250                     _systemInit:
  1567                           	opt stack 24
  1568                           
  1569                           ;systemConfig.c: 313: clockSwitch();
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;incstack = 0
  1573  001250  EC53  F009         	call	_clockSwitch	;wreg free
  1574                           
  1575                           ;systemConfig.c: 315: setupTMR0();
  1576  001254  EC75  F009         	call	_setupTMR0	;wreg free
  1577                           
  1578                           ;systemConfig.c: 316: setupTMR1();
  1579  001258  EC94  F009         	call	_setupTMR1	;wreg free
  1580                           
  1581                           ;systemConfig.c: 317: setupTMR2();
  1582  00125C  EC8C  F009         	call	_setupTMR2	;wreg free
  1583                           
  1584                           ;systemConfig.c: 318: setupTMR4();
  1585  001260  EC81  F009         	call	_setupTMR4	;wreg free
  1586                           
  1587                           ;systemConfig.c: 323: setupADC();
  1588  001264  EC0D  F006         	call	_setupADC	;wreg free
  1589                           
  1590                           ;systemConfig.c: 326: mapPeripheralPins();
  1591  001268  EC13  F008         	call	_mapPeripheralPins	;wreg free
  1592                           
  1593                           ;systemConfig.c: 327: interfaceInit();
  1594  00126C  ECC2  F005         	call	_interfaceInit	;wreg free
  1595                           
  1596                           ;systemConfig.c: 329: killLEDs();
  1597  001270  EC65  F009         	call	_killLEDs	;wreg free
  1598                           
  1599                           ;systemConfig.c: 330: startupSequence();
  1600  001274  EC79  F000         	call	_startupSequence	;wreg free
  1601                           
  1602                           ;systemConfig.c: 331: killLEDs();
  1603  001278  EC65  F009         	call	_killLEDs	;wreg free
  1604  00127C  0012               	return		;funcret
  1605  00127E                     __end_of_systemInit:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           status	equ	0xFD8
  1614                           
  1615 ;; *************** function _startupSequence *****************
  1616 ;; Defined at:
  1617 ;;		line 365 in file "hardware.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;Total ram usage:        2 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    4
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_systemInit
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text3
  1646  0000F2                     __ptext3:
  1647                           	opt stack 0
  1648  0000F2                     _startupSequence:
  1649                           	opt stack 25
  1650                           
  1651                           ;hardware.c: 370: LATD0 = 1;
  1652                           
  1653                           ;incstack = 0
  1654  0000F2  808C               	bsf	3980,0,c	;volatile
  1655                           
  1656                           ;hardware.c: 371: _delay((unsigned long)((75)*(32000000/4000.0)));
  1657  0000F4  0E04               	movlw	4
  1658  0000F6  0100               	movlb	0	; () banked
  1659  0000F8  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1660  0000FA  0E0C               	movlw	12
  1661  0000FC  0100               	movlb	0	; () banked
  1662  0000FE  6F60               	movwf	??_startupSequence& (0+255),b
  1663  000100  0E33               	movlw	51
  1664  000102                     u3307:
  1665  000102  2EE8               	decfsz	wreg,f,c
  1666  000104  D7FE               	bra	u3307
  1667  000106  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1668  000108  D7FC               	bra	u3307
  1669  00010A  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1670  00010C  D7FA               	bra	u3307
  1671  00010E  D000               	nop2	
  1672                           
  1673                           ;hardware.c: 372: LATE7 = 1;
  1674  000110  8E8D               	bsf	3981,7,c	;volatile
  1675                           
  1676                           ;hardware.c: 373: _delay((unsigned long)((75)*(32000000/4000.0)));
  1677  000112  0E04               	movlw	4
  1678  000114  0100               	movlb	0	; () banked
  1679  000116  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1680  000118  0E0C               	movlw	12
  1681  00011A  0100               	movlb	0	; () banked
  1682  00011C  6F60               	movwf	??_startupSequence& (0+255),b
  1683  00011E  0E33               	movlw	51
  1684  000120                     u3317:
  1685  000120  2EE8               	decfsz	wreg,f,c
  1686  000122  D7FE               	bra	u3317
  1687  000124  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1688  000126  D7FC               	bra	u3317
  1689  000128  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1690  00012A  D7FA               	bra	u3317
  1691  00012C  D000               	nop2	
  1692                           
  1693                           ;hardware.c: 374: LATE5 = 1;
  1694  00012E  8A8D               	bsf	3981,5,c	;volatile
  1695                           
  1696                           ;hardware.c: 375: _delay((unsigned long)((75)*(32000000/4000.0)));
  1697  000130  0E04               	movlw	4
  1698  000132  0100               	movlb	0	; () banked
  1699  000134  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1700  000136  0E0C               	movlw	12
  1701  000138  0100               	movlb	0	; () banked
  1702  00013A  6F60               	movwf	??_startupSequence& (0+255),b
  1703  00013C  0E33               	movlw	51
  1704  00013E                     u3327:
  1705  00013E  2EE8               	decfsz	wreg,f,c
  1706  000140  D7FE               	bra	u3327
  1707  000142  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1708  000144  D7FC               	bra	u3327
  1709  000146  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1710  000148  D7FA               	bra	u3327
  1711  00014A  D000               	nop2	
  1712                           
  1713                           ;hardware.c: 376: LATE4 = 1;
  1714  00014C  888D               	bsf	3981,4,c	;volatile
  1715                           
  1716                           ;hardware.c: 377: _delay((unsigned long)((75)*(32000000/4000.0)));
  1717  00014E  0E04               	movlw	4
  1718  000150  0100               	movlb	0	; () banked
  1719  000152  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1720  000154  0E0C               	movlw	12
  1721  000156  0100               	movlb	0	; () banked
  1722  000158  6F60               	movwf	??_startupSequence& (0+255),b
  1723  00015A  0E33               	movlw	51
  1724  00015C                     u3337:
  1725  00015C  2EE8               	decfsz	wreg,f,c
  1726  00015E  D7FE               	bra	u3337
  1727  000160  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1728  000162  D7FC               	bra	u3337
  1729  000164  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1730  000166  D7FA               	bra	u3337
  1731  000168  D000               	nop2	
  1732                           
  1733                           ;hardware.c: 378: LATH2 = 1;
  1734  00016A  8490               	bsf	3984,2,c	;volatile
  1735                           
  1736                           ;hardware.c: 379: _delay((unsigned long)((75)*(32000000/4000.0)));
  1737  00016C  0E04               	movlw	4
  1738  00016E  0100               	movlb	0	; () banked
  1739  000170  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1740  000172  0E0C               	movlw	12
  1741  000174  0100               	movlb	0	; () banked
  1742  000176  6F60               	movwf	??_startupSequence& (0+255),b
  1743  000178  0E33               	movlw	51
  1744  00017A                     u3347:
  1745  00017A  2EE8               	decfsz	wreg,f,c
  1746  00017C  D7FE               	bra	u3347
  1747  00017E  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1748  000180  D7FC               	bra	u3347
  1749  000182  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1750  000184  D7FA               	bra	u3347
  1751  000186  D000               	nop2	
  1752                           
  1753                           ;hardware.c: 380: LATH2 = 0;
  1754  000188  9490               	bcf	3984,2,c	;volatile
  1755                           
  1756                           ;hardware.c: 381: _delay((unsigned long)((75)*(32000000/4000.0)));
  1757  00018A  0E04               	movlw	4
  1758  00018C  0100               	movlb	0	; () banked
  1759  00018E  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1760  000190  0E0C               	movlw	12
  1761  000192  0100               	movlb	0	; () banked
  1762  000194  6F60               	movwf	??_startupSequence& (0+255),b
  1763  000196  0E33               	movlw	51
  1764  000198                     u3357:
  1765  000198  2EE8               	decfsz	wreg,f,c
  1766  00019A  D7FE               	bra	u3357
  1767  00019C  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1768  00019E  D7FC               	bra	u3357
  1769  0001A0  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1770  0001A2  D7FA               	bra	u3357
  1771  0001A4  D000               	nop2	
  1772                           
  1773                           ;hardware.c: 382: LATE4 = 0;
  1774  0001A6  988D               	bcf	3981,4,c	;volatile
  1775                           
  1776                           ;hardware.c: 383: _delay((unsigned long)((75)*(32000000/4000.0)));
  1777  0001A8  0E04               	movlw	4
  1778  0001AA  0100               	movlb	0	; () banked
  1779  0001AC  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1780  0001AE  0E0C               	movlw	12
  1781  0001B0  0100               	movlb	0	; () banked
  1782  0001B2  6F60               	movwf	??_startupSequence& (0+255),b
  1783  0001B4  0E33               	movlw	51
  1784  0001B6                     u3367:
  1785  0001B6  2EE8               	decfsz	wreg,f,c
  1786  0001B8  D7FE               	bra	u3367
  1787  0001BA  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1788  0001BC  D7FC               	bra	u3367
  1789  0001BE  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1790  0001C0  D7FA               	bra	u3367
  1791  0001C2  D000               	nop2	
  1792                           
  1793                           ;hardware.c: 384: LATE5 = 0;
  1794  0001C4  9A8D               	bcf	3981,5,c	;volatile
  1795                           
  1796                           ;hardware.c: 385: _delay((unsigned long)((75)*(32000000/4000.0)));
  1797  0001C6  0E04               	movlw	4
  1798  0001C8  0100               	movlb	0	; () banked
  1799  0001CA  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1800  0001CC  0E0C               	movlw	12
  1801  0001CE  0100               	movlb	0	; () banked
  1802  0001D0  6F60               	movwf	??_startupSequence& (0+255),b
  1803  0001D2  0E33               	movlw	51
  1804  0001D4                     u3377:
  1805  0001D4  2EE8               	decfsz	wreg,f,c
  1806  0001D6  D7FE               	bra	u3377
  1807  0001D8  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1808  0001DA  D7FC               	bra	u3377
  1809  0001DC  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1810  0001DE  D7FA               	bra	u3377
  1811  0001E0  D000               	nop2	
  1812                           
  1813                           ;hardware.c: 386: LATE7 = 0;
  1814  0001E2  9E8D               	bcf	3981,7,c	;volatile
  1815                           
  1816                           ;hardware.c: 387: _delay((unsigned long)((75)*(32000000/4000.0)));
  1817  0001E4  0E04               	movlw	4
  1818  0001E6  0100               	movlb	0	; () banked
  1819  0001E8  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1820  0001EA  0E0C               	movlw	12
  1821  0001EC  0100               	movlb	0	; () banked
  1822  0001EE  6F60               	movwf	??_startupSequence& (0+255),b
  1823  0001F0  0E33               	movlw	51
  1824  0001F2                     u3387:
  1825  0001F2  2EE8               	decfsz	wreg,f,c
  1826  0001F4  D7FE               	bra	u3387
  1827  0001F6  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1828  0001F8  D7FC               	bra	u3387
  1829  0001FA  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1830  0001FC  D7FA               	bra	u3387
  1831  0001FE  D000               	nop2	
  1832                           
  1833                           ;hardware.c: 388: LATD0 = 0;
  1834  000200  908C               	bcf	3980,0,c	;volatile
  1835                           
  1836                           ;hardware.c: 389: _delay((unsigned long)((75)*(32000000/4000.0)));
  1837  000202  0E04               	movlw	4
  1838  000204  0100               	movlb	0	; () banked
  1839  000206  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1840  000208  0E0C               	movlw	12
  1841  00020A  0100               	movlb	0	; () banked
  1842  00020C  6F60               	movwf	??_startupSequence& (0+255),b
  1843  00020E  0E33               	movlw	51
  1844  000210                     u3397:
  1845  000210  2EE8               	decfsz	wreg,f,c
  1846  000212  D7FE               	bra	u3397
  1847  000214  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1848  000216  D7FC               	bra	u3397
  1849  000218  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1850  00021A  D7FA               	bra	u3397
  1851  00021C  D000               	nop2	
  1852                           
  1853                           ;hardware.c: 392: LATH7 = 1;
  1854  00021E  8E90               	bsf	3984,7,c	;volatile
  1855                           
  1856                           ;hardware.c: 393: _delay((unsigned long)((75)*(32000000/4000.0)));
  1857  000220  0E04               	movlw	4
  1858  000222  0100               	movlb	0	; () banked
  1859  000224  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1860  000226  0E0C               	movlw	12
  1861  000228  0100               	movlb	0	; () banked
  1862  00022A  6F60               	movwf	??_startupSequence& (0+255),b
  1863  00022C  0E33               	movlw	51
  1864  00022E                     u3407:
  1865  00022E  2EE8               	decfsz	wreg,f,c
  1866  000230  D7FE               	bra	u3407
  1867  000232  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1868  000234  D7FC               	bra	u3407
  1869  000236  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1870  000238  D7FA               	bra	u3407
  1871  00023A  D000               	nop2	
  1872                           
  1873                           ;hardware.c: 394: LATF2 = 1;
  1874  00023C  848E               	bsf	3982,2,c	;volatile
  1875                           
  1876                           ;hardware.c: 395: _delay((unsigned long)((75)*(32000000/4000.0)));
  1877  00023E  0E04               	movlw	4
  1878  000240  0100               	movlb	0	; () banked
  1879  000242  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1880  000244  0E0C               	movlw	12
  1881  000246  0100               	movlb	0	; () banked
  1882  000248  6F60               	movwf	??_startupSequence& (0+255),b
  1883  00024A  0E33               	movlw	51
  1884  00024C                     u3417:
  1885  00024C  2EE8               	decfsz	wreg,f,c
  1886  00024E  D7FE               	bra	u3417
  1887  000250  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1888  000252  D7FC               	bra	u3417
  1889  000254  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1890  000256  D7FA               	bra	u3417
  1891  000258  D000               	nop2	
  1892                           
  1893                           ;hardware.c: 396: LATF5 = 1;
  1894  00025A  8A8E               	bsf	3982,5,c	;volatile
  1895                           
  1896                           ;hardware.c: 397: _delay((unsigned long)((75)*(32000000/4000.0)));
  1897  00025C  0E04               	movlw	4
  1898  00025E  0100               	movlb	0	; () banked
  1899  000260  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1900  000262  0E0C               	movlw	12
  1901  000264  0100               	movlb	0	; () banked
  1902  000266  6F60               	movwf	??_startupSequence& (0+255),b
  1903  000268  0E33               	movlw	51
  1904  00026A                     u3427:
  1905  00026A  2EE8               	decfsz	wreg,f,c
  1906  00026C  D7FE               	bra	u3427
  1907  00026E  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1908  000270  D7FC               	bra	u3427
  1909  000272  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1910  000274  D7FA               	bra	u3427
  1911  000276  D000               	nop2	
  1912                           
  1913                           ;hardware.c: 398: LATF6 = 1;
  1914  000278  8C8E               	bsf	3982,6,c	;volatile
  1915                           
  1916                           ;hardware.c: 399: _delay((unsigned long)((75)*(32000000/4000.0)));
  1917  00027A  0E04               	movlw	4
  1918  00027C  0100               	movlb	0	; () banked
  1919  00027E  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1920  000280  0E0C               	movlw	12
  1921  000282  0100               	movlb	0	; () banked
  1922  000284  6F60               	movwf	??_startupSequence& (0+255),b
  1923  000286  0E33               	movlw	51
  1924  000288                     u3437:
  1925  000288  2EE8               	decfsz	wreg,f,c
  1926  00028A  D7FE               	bra	u3437
  1927  00028C  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1928  00028E  D7FC               	bra	u3437
  1929  000290  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1930  000292  D7FA               	bra	u3437
  1931  000294  D000               	nop2	
  1932                           
  1933                           ;hardware.c: 400: LATG4 = 1;
  1934  000296  888F               	bsf	3983,4,c	;volatile
  1935                           
  1936                           ;hardware.c: 401: _delay((unsigned long)((75)*(32000000/4000.0)));
  1937  000298  0E04               	movlw	4
  1938  00029A  0100               	movlb	0	; () banked
  1939  00029C  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1940  00029E  0E0C               	movlw	12
  1941  0002A0  0100               	movlb	0	; () banked
  1942  0002A2  6F60               	movwf	??_startupSequence& (0+255),b
  1943  0002A4  0E33               	movlw	51
  1944  0002A6                     u3447:
  1945  0002A6  2EE8               	decfsz	wreg,f,c
  1946  0002A8  D7FE               	bra	u3447
  1947  0002AA  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1948  0002AC  D7FC               	bra	u3447
  1949  0002AE  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1950  0002B0  D7FA               	bra	u3447
  1951  0002B2  D000               	nop2	
  1952                           
  1953                           ;hardware.c: 402: LATH0 = 1;
  1954  0002B4  8090               	bsf	3984,0,c	;volatile
  1955                           
  1956                           ;hardware.c: 403: _delay((unsigned long)((75)*(32000000/4000.0)));
  1957  0002B6  0E04               	movlw	4
  1958  0002B8  0100               	movlb	0	; () banked
  1959  0002BA  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1960  0002BC  0E0C               	movlw	12
  1961  0002BE  0100               	movlb	0	; () banked
  1962  0002C0  6F60               	movwf	??_startupSequence& (0+255),b
  1963  0002C2  0E33               	movlw	51
  1964  0002C4                     u3457:
  1965  0002C4  2EE8               	decfsz	wreg,f,c
  1966  0002C6  D7FE               	bra	u3457
  1967  0002C8  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1968  0002CA  D7FC               	bra	u3457
  1969  0002CC  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1970  0002CE  D7FA               	bra	u3457
  1971  0002D0  D000               	nop2	
  1972                           
  1973                           ;hardware.c: 404: LATH7 = 0;
  1974  0002D2  9E90               	bcf	3984,7,c	;volatile
  1975                           
  1976                           ;hardware.c: 405: _delay((unsigned long)((75)*(32000000/4000.0)));
  1977  0002D4  0E04               	movlw	4
  1978  0002D6  0100               	movlb	0	; () banked
  1979  0002D8  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  1980  0002DA  0E0C               	movlw	12
  1981  0002DC  0100               	movlb	0	; () banked
  1982  0002DE  6F60               	movwf	??_startupSequence& (0+255),b
  1983  0002E0  0E33               	movlw	51
  1984  0002E2                     u3467:
  1985  0002E2  2EE8               	decfsz	wreg,f,c
  1986  0002E4  D7FE               	bra	u3467
  1987  0002E6  2F60               	decfsz	??_startupSequence& (0+255),f,b
  1988  0002E8  D7FC               	bra	u3467
  1989  0002EA  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1990  0002EC  D7FA               	bra	u3467
  1991  0002EE  D000               	nop2	
  1992                           
  1993                           ;hardware.c: 406: LATF2 = 0;
  1994  0002F0  948E               	bcf	3982,2,c	;volatile
  1995                           
  1996                           ;hardware.c: 407: _delay((unsigned long)((75)*(32000000/4000.0)));
  1997  0002F2  0E04               	movlw	4
  1998  0002F4  0100               	movlb	0	; () banked
  1999  0002F6  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2000  0002F8  0E0C               	movlw	12
  2001  0002FA  0100               	movlb	0	; () banked
  2002  0002FC  6F60               	movwf	??_startupSequence& (0+255),b
  2003  0002FE  0E33               	movlw	51
  2004  000300                     u3477:
  2005  000300  2EE8               	decfsz	wreg,f,c
  2006  000302  D7FE               	bra	u3477
  2007  000304  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2008  000306  D7FC               	bra	u3477
  2009  000308  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2010  00030A  D7FA               	bra	u3477
  2011  00030C  D000               	nop2	
  2012                           
  2013                           ;hardware.c: 408: LATF5 = 0;
  2014  00030E  9A8E               	bcf	3982,5,c	;volatile
  2015                           
  2016                           ;hardware.c: 409: _delay((unsigned long)((75)*(32000000/4000.0)));
  2017  000310  0E04               	movlw	4
  2018  000312  0100               	movlb	0	; () banked
  2019  000314  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2020  000316  0E0C               	movlw	12
  2021  000318  0100               	movlb	0	; () banked
  2022  00031A  6F60               	movwf	??_startupSequence& (0+255),b
  2023  00031C  0E33               	movlw	51
  2024  00031E                     u3487:
  2025  00031E  2EE8               	decfsz	wreg,f,c
  2026  000320  D7FE               	bra	u3487
  2027  000322  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2028  000324  D7FC               	bra	u3487
  2029  000326  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2030  000328  D7FA               	bra	u3487
  2031  00032A  D000               	nop2	
  2032                           
  2033                           ;hardware.c: 410: LATF6 = 0;
  2034  00032C  9C8E               	bcf	3982,6,c	;volatile
  2035                           
  2036                           ;hardware.c: 411: _delay((unsigned long)((75)*(32000000/4000.0)));
  2037  00032E  0E04               	movlw	4
  2038  000330  0100               	movlb	0	; () banked
  2039  000332  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2040  000334  0E0C               	movlw	12
  2041  000336  0100               	movlb	0	; () banked
  2042  000338  6F60               	movwf	??_startupSequence& (0+255),b
  2043  00033A  0E33               	movlw	51
  2044  00033C                     u3497:
  2045  00033C  2EE8               	decfsz	wreg,f,c
  2046  00033E  D7FE               	bra	u3497
  2047  000340  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2048  000342  D7FC               	bra	u3497
  2049  000344  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2050  000346  D7FA               	bra	u3497
  2051  000348  D000               	nop2	
  2052                           
  2053                           ;hardware.c: 412: LATG4 = 0;
  2054  00034A  988F               	bcf	3983,4,c	;volatile
  2055                           
  2056                           ;hardware.c: 413: _delay((unsigned long)((75)*(32000000/4000.0)));
  2057  00034C  0E04               	movlw	4
  2058  00034E  0100               	movlb	0	; () banked
  2059  000350  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2060  000352  0E0C               	movlw	12
  2061  000354  0100               	movlb	0	; () banked
  2062  000356  6F60               	movwf	??_startupSequence& (0+255),b
  2063  000358  0E33               	movlw	51
  2064  00035A                     u3507:
  2065  00035A  2EE8               	decfsz	wreg,f,c
  2066  00035C  D7FE               	bra	u3507
  2067  00035E  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2068  000360  D7FC               	bra	u3507
  2069  000362  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2070  000364  D7FA               	bra	u3507
  2071  000366  D000               	nop2	
  2072                           
  2073                           ;hardware.c: 414: LATH0 = 0;
  2074  000368  9090               	bcf	3984,0,c	;volatile
  2075                           
  2076                           ;hardware.c: 415: _delay((unsigned long)((75)*(32000000/4000.0)));
  2077  00036A  0E04               	movlw	4
  2078  00036C  0100               	movlb	0	; () banked
  2079  00036E  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2080  000370  0E0C               	movlw	12
  2081  000372  0100               	movlb	0	; () banked
  2082  000374  6F60               	movwf	??_startupSequence& (0+255),b
  2083  000376  0E33               	movlw	51
  2084  000378                     u3517:
  2085  000378  2EE8               	decfsz	wreg,f,c
  2086  00037A  D7FE               	bra	u3517
  2087  00037C  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2088  00037E  D7FC               	bra	u3517
  2089  000380  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2090  000382  D7FA               	bra	u3517
  2091  000384  D000               	nop2	
  2092                           
  2093                           ;hardware.c: 418: LATD2 = 1;
  2094  000386  848C               	bsf	3980,2,c	;volatile
  2095                           
  2096                           ;hardware.c: 419: LATE0 = 0;
  2097  000388  908D               	bcf	3981,0,c	;volatile
  2098                           
  2099                           ;hardware.c: 420: _delay((unsigned long)((100)*(32000000/4000.0)));
  2100  00038A  0E05               	movlw	5
  2101  00038C  0100               	movlb	0	; () banked
  2102  00038E  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2103  000390  0E0F               	movlw	15
  2104  000392  0100               	movlb	0	; () banked
  2105  000394  6F60               	movwf	??_startupSequence& (0+255),b
  2106  000396  0EF1               	movlw	241
  2107  000398                     u3527:
  2108  000398  2EE8               	decfsz	wreg,f,c
  2109  00039A  D7FE               	bra	u3527
  2110  00039C  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2111  00039E  D7FC               	bra	u3527
  2112  0003A0  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2113  0003A2  D7FA               	bra	u3527
  2114                           
  2115                           ;hardware.c: 421: LATD2 = 0;
  2116  0003A4  948C               	bcf	3980,2,c	;volatile
  2117                           
  2118                           ;hardware.c: 422: LATE0 = 1;
  2119  0003A6  808D               	bsf	3981,0,c	;volatile
  2120                           
  2121                           ;hardware.c: 423: _delay((unsigned long)((100)*(32000000/4000.0)));
  2122  0003A8  0E05               	movlw	5
  2123  0003AA  0100               	movlb	0	; () banked
  2124  0003AC  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2125  0003AE  0E0F               	movlw	15
  2126  0003B0  0100               	movlb	0	; () banked
  2127  0003B2  6F60               	movwf	??_startupSequence& (0+255),b
  2128  0003B4  0EF1               	movlw	241
  2129  0003B6                     u3537:
  2130  0003B6  2EE8               	decfsz	wreg,f,c
  2131  0003B8  D7FE               	bra	u3537
  2132  0003BA  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2133  0003BC  D7FC               	bra	u3537
  2134  0003BE  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2135  0003C0  D7FA               	bra	u3537
  2136                           
  2137                           ;hardware.c: 424: LATD2 = 1;
  2138  0003C2  848C               	bsf	3980,2,c	;volatile
  2139                           
  2140                           ;hardware.c: 425: LATE0 = 0;
  2141  0003C4  908D               	bcf	3981,0,c	;volatile
  2142                           
  2143                           ;hardware.c: 426: _delay((unsigned long)((100)*(32000000/4000.0)));
  2144  0003C6  0E05               	movlw	5
  2145  0003C8  0100               	movlb	0	; () banked
  2146  0003CA  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2147  0003CC  0E0F               	movlw	15
  2148  0003CE  0100               	movlb	0	; () banked
  2149  0003D0  6F60               	movwf	??_startupSequence& (0+255),b
  2150  0003D2  0EF1               	movlw	241
  2151  0003D4                     u3547:
  2152  0003D4  2EE8               	decfsz	wreg,f,c
  2153  0003D6  D7FE               	bra	u3547
  2154  0003D8  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2155  0003DA  D7FC               	bra	u3547
  2156  0003DC  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2157  0003DE  D7FA               	bra	u3547
  2158                           
  2159                           ;hardware.c: 427: LATD2 = 0;
  2160  0003E0  948C               	bcf	3980,2,c	;volatile
  2161                           
  2162                           ;hardware.c: 428: LATE0 = 1;
  2163  0003E2  808D               	bsf	3981,0,c	;volatile
  2164                           
  2165                           ;hardware.c: 429: _delay((unsigned long)((100)*(32000000/4000.0)));
  2166  0003E4  0E05               	movlw	5
  2167  0003E6  0100               	movlb	0	; () banked
  2168  0003E8  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2169  0003EA  0E0F               	movlw	15
  2170  0003EC  0100               	movlb	0	; () banked
  2171  0003EE  6F60               	movwf	??_startupSequence& (0+255),b
  2172  0003F0  0EF1               	movlw	241
  2173  0003F2                     u3557:
  2174  0003F2  2EE8               	decfsz	wreg,f,c
  2175  0003F4  D7FE               	bra	u3557
  2176  0003F6  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2177  0003F8  D7FC               	bra	u3557
  2178  0003FA  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2179  0003FC  D7FA               	bra	u3557
  2180                           
  2181                           ;hardware.c: 430: LATD2 = 0;
  2182  0003FE  948C               	bcf	3980,2,c	;volatile
  2183                           
  2184                           ;hardware.c: 431: LATE0 = 0;
  2185  000400  908D               	bcf	3981,0,c	;volatile
  2186                           
  2187                           ;hardware.c: 432: _delay((unsigned long)((100)*(32000000/4000.0)));
  2188  000402  0E05               	movlw	5
  2189  000404  0100               	movlb	0	; () banked
  2190  000406  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2191  000408  0E0F               	movlw	15
  2192  00040A  0100               	movlb	0	; () banked
  2193  00040C  6F60               	movwf	??_startupSequence& (0+255),b
  2194  00040E  0EF1               	movlw	241
  2195  000410                     u3567:
  2196  000410  2EE8               	decfsz	wreg,f,c
  2197  000412  D7FE               	bra	u3567
  2198  000414  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2199  000416  D7FC               	bra	u3567
  2200  000418  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2201  00041A  D7FA               	bra	u3567
  2202                           
  2203                           ;hardware.c: 433: LATD2 = 1;
  2204  00041C  848C               	bsf	3980,2,c	;volatile
  2205                           
  2206                           ;hardware.c: 434: LATE0 = 1;
  2207  00041E  808D               	bsf	3981,0,c	;volatile
  2208                           
  2209                           ;hardware.c: 435: _delay((unsigned long)((75)*(32000000/4000.0)));
  2210  000420  0E04               	movlw	4
  2211  000422  0100               	movlb	0	; () banked
  2212  000424  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2213  000426  0E0C               	movlw	12
  2214  000428  0100               	movlb	0	; () banked
  2215  00042A  6F60               	movwf	??_startupSequence& (0+255),b
  2216  00042C  0E33               	movlw	51
  2217  00042E                     u3577:
  2218  00042E  2EE8               	decfsz	wreg,f,c
  2219  000430  D7FE               	bra	u3577
  2220  000432  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2221  000434  D7FC               	bra	u3577
  2222  000436  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2223  000438  D7FA               	bra	u3577
  2224  00043A  D000               	nop2	
  2225                           
  2226                           ;hardware.c: 436: LATD2 = 0;
  2227  00043C  948C               	bcf	3980,2,c	;volatile
  2228                           
  2229                           ;hardware.c: 437: LATE0 = 0;
  2230  00043E  908D               	bcf	3981,0,c	;volatile
  2231                           
  2232                           ;hardware.c: 438: _delay((unsigned long)((75)*(32000000/4000.0)));
  2233  000440  0E04               	movlw	4
  2234  000442  0100               	movlb	0	; () banked
  2235  000444  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2236  000446  0E0C               	movlw	12
  2237  000448  0100               	movlb	0	; () banked
  2238  00044A  6F60               	movwf	??_startupSequence& (0+255),b
  2239  00044C  0E33               	movlw	51
  2240  00044E                     u3587:
  2241  00044E  2EE8               	decfsz	wreg,f,c
  2242  000450  D7FE               	bra	u3587
  2243  000452  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2244  000454  D7FC               	bra	u3587
  2245  000456  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2246  000458  D7FA               	bra	u3587
  2247  00045A  D000               	nop2	
  2248                           
  2249                           ;hardware.c: 439: LATD2 = 1;
  2250  00045C  848C               	bsf	3980,2,c	;volatile
  2251                           
  2252                           ;hardware.c: 440: LATE0 = 1;
  2253  00045E  808D               	bsf	3981,0,c	;volatile
  2254                           
  2255                           ;hardware.c: 441: _delay((unsigned long)((75)*(32000000/4000.0)));
  2256  000460  0E04               	movlw	4
  2257  000462  0100               	movlb	0	; () banked
  2258  000464  6F61               	movwf	(??_startupSequence+1)& (0+255),b
  2259  000466  0E0C               	movlw	12
  2260  000468  0100               	movlb	0	; () banked
  2261  00046A  6F60               	movwf	??_startupSequence& (0+255),b
  2262  00046C  0E33               	movlw	51
  2263  00046E                     u3597:
  2264  00046E  2EE8               	decfsz	wreg,f,c
  2265  000470  D7FE               	bra	u3597
  2266  000472  2F60               	decfsz	??_startupSequence& (0+255),f,b
  2267  000474  D7FC               	bra	u3597
  2268  000476  2F61               	decfsz	(??_startupSequence+1)& (0+255),f,b
  2269  000478  D7FA               	bra	u3597
  2270  00047A  D000               	nop2	
  2271                           
  2272                           ;hardware.c: 442: LATD2 = 0;
  2273  00047C  948C               	bcf	3980,2,c	;volatile
  2274                           
  2275                           ;hardware.c: 443: LATE0 = 0;
  2276  00047E  908D               	bcf	3981,0,c	;volatile
  2277  000480  0012               	return		;funcret
  2278  000482                     __end_of_startupSequence:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _setupTMR4 *****************
  2289 ;; Defined at:
  2290 ;;		line 43 in file "systemConfig.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    4
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_systemInit
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text4
  2319  001302                     __ptext4:
  2320                           	opt stack 0
  2321  001302                     _setupTMR4:
  2322                           	opt stack 25
  2323                           
  2324                           ;systemConfig.c: 46: T4CONbits.TMR4ON = 0x0;
  2325                           
  2326                           ;incstack = 0
  2327  001302  010F               	movlb	15	; () banked
  2328  001304  9504               	bcf	4,2,b	;volatile
  2329                           
  2330                           ; BSR set to: 15
  2331                           ;systemConfig.c: 47: T4CONbits.T4CKPS = 0x3;
  2332  001306  0E03               	movlw	3
  2333  001308  010F               	movlb	15	; () banked
  2334  00130A  1304               	iorwf	4,f,b	;volatile
  2335                           
  2336                           ;systemConfig.c: 48: T4CONbits.T4OUTPS = 0x1;
  2337  00130C  010F               	movlb	15	; () banked
  2338  00130E  5104               	movf	4,w,b	;volatile
  2339  001310  0B87               	andlw	-121
  2340  001312  0908               	iorlw	8
  2341  001314  6F04               	movwf	4,b	;volatile
  2342                           
  2343                           ; BSR set to: 15
  2344  001316  0012               	return		;funcret
  2345  001318                     __end_of_setupTMR4:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function _setupTMR2 *****************
  2356 ;; Defined at:
  2357 ;;		line 34 in file "systemConfig.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_systemInit
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text5
  2386  001318                     __ptext5:
  2387                           	opt stack 0
  2388  001318                     _setupTMR2:
  2389                           	opt stack 25
  2390                           
  2391                           ;systemConfig.c: 37: T2CONbits.TMR2ON = 0x0;
  2392                           
  2393                           ; BSR set to: 15
  2394                           ;incstack = 0
  2395  001318  94CA               	bcf	4042,2,c	;volatile
  2396                           
  2397                           ;systemConfig.c: 38: T2CONbits.T2CKPS = 0x3;
  2398  00131A  0E03               	movlw	3
  2399  00131C  12CA               	iorwf	4042,f,c	;volatile
  2400                           
  2401                           ;systemConfig.c: 39: T2CONbits.T2OUTPS = 0x1;
  2402  00131E  50CA               	movf	4042,w,c	;volatile
  2403  001320  0B87               	andlw	-121
  2404  001322  0908               	iorlw	8
  2405  001324  6ECA               	movwf	4042,c	;volatile
  2406  001326  0012               	return		;funcret
  2407  001328                     __end_of_setupTMR2:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           status	equ	0xFD8
  2416                           
  2417 ;; *************** function _setupTMR1 *****************
  2418 ;; Defined at:
  2419 ;;		line 25 in file "systemConfig.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    4
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_systemInit
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text6
  2448  001328                     __ptext6:
  2449                           	opt stack 0
  2450  001328                     _setupTMR1:
  2451                           	opt stack 25
  2452                           
  2453                           ;systemConfig.c: 27: T1CONbits.TMR1ON = 0x0;
  2454                           
  2455                           ;incstack = 0
  2456  001328  90CD               	bcf	4045,0,c	;volatile
  2457                           
  2458                           ;systemConfig.c: 28: T1CONbits.TMR1CS = 0x0;
  2459  00132A  0E3F               	movlw	-193
  2460  00132C  16CD               	andwf	4045,f,c	;volatile
  2461                           
  2462                           ;systemConfig.c: 29: T1CONbits.TCKPS = 0x3;
  2463  00132E  0E30               	movlw	48
  2464  001330  12CD               	iorwf	4045,f,c	;volatile
  2465                           
  2466                           ;systemConfig.c: 30: T1CONbits.RD16 = 0x1;
  2467  001332  82CD               	bsf	4045,1,c	;volatile
  2468  001334  0012               	return		;funcret
  2469  001336                     __end_of_setupTMR1:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _setupTMR0 *****************
  2480 ;; Defined at:
  2481 ;;		line 16 in file "systemConfig.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    4
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_systemInit
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text7
  2510  0012EA                     __ptext7:
  2511                           	opt stack 0
  2512  0012EA                     _setupTMR0:
  2513                           	opt stack 25
  2514                           
  2515                           ;systemConfig.c: 18: T0CONbits.TMR0ON = 0x0;
  2516                           
  2517                           ;incstack = 0
  2518  0012EA  9ED5               	bcf	4053,7,c	;volatile
  2519                           
  2520                           ;systemConfig.c: 19: T0CONbits.T08BIT = 0x1;
  2521  0012EC  8CD5               	bsf	4053,6,c	;volatile
  2522                           
  2523                           ;systemConfig.c: 20: T0CONbits.T0CS = 0x1;
  2524  0012EE  50D5               	movf	4053,w,c	;volatile
  2525  0012F0  0BCF               	andlw	-49
  2526  0012F2  0910               	iorlw	16
  2527  0012F4  6ED5               	movwf	4053,c	;volatile
  2528                           
  2529                           ;systemConfig.c: 21: T0CONbits.PSA = 0x0;
  2530  0012F6  96D5               	bcf	4053,3,c	;volatile
  2531                           
  2532                           ;systemConfig.c: 22: T0CONbits.T0PS = 0x6;
  2533  0012F8  50D5               	movf	4053,w,c	;volatile
  2534  0012FA  0BF8               	andlw	-8
  2535  0012FC  0906               	iorlw	6
  2536  0012FE  6ED5               	movwf	4053,c	;volatile
  2537  001300  0012               	return		;funcret
  2538  001302                     __end_of_setupTMR0:
  2539                           	opt stack 0
  2540                           tblptru	equ	0xFF8
  2541                           tblptrh	equ	0xFF7
  2542                           tblptrl	equ	0xFF6
  2543                           tablat	equ	0xFF5
  2544                           postinc0	equ	0xFEE
  2545                           wreg	equ	0xFE8
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _setupADC *****************
  2549 ;; Defined at:
  2550 ;;		line 116 in file "systemConfig.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    4
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_systemInit
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text8
  2579  000C1A                     __ptext8:
  2580                           	opt stack 0
  2581  000C1A                     _setupADC:
  2582                           	opt stack 25
  2583                           
  2584                           ;systemConfig.c: 118: ADCON1Hbits.ADON = 0;
  2585                           
  2586                           ;incstack = 0
  2587  000C1A  9EC1               	bcf	4033,7,c	;volatile
  2588                           
  2589                           ;systemConfig.c: 119: ADCON1Hbits.MODE12 = 0;
  2590  000C1C  94C1               	bcf	4033,2,c	;volatile
  2591                           
  2592                           ;systemConfig.c: 120: ADCON1Hbits.FORM = 0;
  2593  000C1E  0EFC               	movlw	-4
  2594  000C20  16C1               	andwf	4033,f,c	;volatile
  2595                           
  2596                           ;systemConfig.c: 121: ADCON1Lbits.SSRC = 0;
  2597  000C22  98C0               	bcf	4032,4,c	;volatile
  2598  000C24  9AC0               	bcf	4032,5,c	;volatile
  2599  000C26  9CC0               	bcf	4032,6,c	;volatile
  2600  000C28  9EC0               	bcf	4032,7,c	;volatile
  2601                           
  2602                           ;systemConfig.c: 122: ADCON1Lbits.ASAM = 0;
  2603  000C2A  94C0               	bcf	4032,2,c	;volatile
  2604                           
  2605                           ;systemConfig.c: 124: ADCON2Hbits.PVCFG = 0;
  2606  000C2C  0E3F               	movlw	-193
  2607  000C2E  010E               	movlb	14	; () banked
  2608  000C30  178D               	andwf	141,f,b	;volatile
  2609                           
  2610                           ; BSR set to: 14
  2611                           ;systemConfig.c: 125: ADCON2Hbits.NVCFG0 = 0;
  2612  000C32  010E               	movlb	14	; () banked
  2613  000C34  9B8D               	bcf	141,5,b	;volatile
  2614                           
  2615                           ; BSR set to: 14
  2616                           ;systemConfig.c: 126: ADCON2Hbits.BUFREGEN = 1;
  2617  000C36  010E               	movlb	14	; () banked
  2618  000C38  878D               	bsf	141,3,b	;volatile
  2619                           
  2620                           ; BSR set to: 14
  2621                           ;systemConfig.c: 128: ADCON3Hbits.ADRC = 0;
  2622  000C3A  010E               	movlb	14	; () banked
  2623  000C3C  9F8B               	bcf	139,7,b	;volatile
  2624                           
  2625                           ; BSR set to: 14
  2626                           ;systemConfig.c: 129: ADCON3Hbits.PUMPEN = 0;
  2627  000C3E  010E               	movlb	14	; () banked
  2628  000C40  9B8B               	bcf	139,5,b	;volatile
  2629                           
  2630                           ;systemConfig.c: 130: ADCON3Lbits.ADCS = 0x20;
  2631  000C42  0E20               	movlw	32
  2632  000C44  010E               	movlb	14	; () banked
  2633  000C46  6F8A               	movwf	138,b	;volatile
  2634                           
  2635                           ; BSR set to: 14
  2636                           ;systemConfig.c: 132: ADCON5Hbits.ASENA = 0;
  2637  000C48  010E               	movlb	14	; () banked
  2638  000C4A  9F89               	bcf	137,7,b	;volatile
  2639                           
  2640                           ; BSR set to: 14
  2641                           ;systemConfig.c: 133: ADCHS0Lbits.CH0SA = 0;
  2642  000C4C  010E               	movlb	14	; () banked
  2643  000C4E  9186               	bcf	134,0,b	;volatile
  2644  000C50  9386               	bcf	134,1,b	;volatile
  2645  000C52  9586               	bcf	134,2,b	;volatile
  2646  000C54  9786               	bcf	134,3,b	;volatile
  2647  000C56  9986               	bcf	134,4,b	;volatile
  2648                           
  2649                           ; BSR set to: 14
  2650                           ;systemConfig.c: 134: ADCHS0Lbits.CH0NA = 0;
  2651  000C58  010E               	movlb	14	; () banked
  2652  000C5A  9B86               	bcf	134,5,b	;volatile
  2653  000C5C  9D86               	bcf	134,6,b	;volatile
  2654  000C5E  9F86               	bcf	134,7,b	;volatile
  2655                           
  2656                           ; BSR set to: 14
  2657                           ;systemConfig.c: 137: CM1CONbits.CON = 0;
  2658  000C60  010F               	movlb	15	; () banked
  2659  000C62  9F53               	bcf	83,7,b	;volatile
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;systemConfig.c: 138: CM2CONbits.CON = 0;
  2663  000C64  010F               	movlb	15	; () banked
  2664  000C66  9F38               	bcf	56,7,b	;volatile
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;systemConfig.c: 139: CM3CONbits.CON = 0;
  2668  000C68  010F               	movlb	15	; () banked
  2669  000C6A  9F37               	bcf	55,7,b	;volatile
  2670                           
  2671                           ; BSR set to: 15
  2672                           ;systemConfig.c: 141: ANCON1bits.ANSEL0 = 1;
  2673  000C6C  010E               	movlb	14	; () banked
  2674  000C6E  8147               	bsf	71,0,b	;volatile
  2675                           
  2676                           ; BSR set to: 14
  2677                           ;systemConfig.c: 142: ANCON1bits.ANSEL1 = 1;
  2678  000C70  010E               	movlb	14	; () banked
  2679  000C72  8347               	bsf	71,1,b	;volatile
  2680                           
  2681                           ; BSR set to: 14
  2682                           ;systemConfig.c: 143: ANCON1bits.ANSEL2 = 1;
  2683  000C74  010E               	movlb	14	; () banked
  2684  000C76  8547               	bsf	71,2,b	;volatile
  2685                           
  2686                           ; BSR set to: 14
  2687                           ;systemConfig.c: 144: ANCON1bits.ANSEL3 = 1;
  2688  000C78  010E               	movlb	14	; () banked
  2689  000C7A  8747               	bsf	71,3,b	;volatile
  2690                           
  2691                           ; BSR set to: 14
  2692                           ;systemConfig.c: 145: ANCON1bits.ANSEL4 = 1;
  2693  000C7C  010E               	movlb	14	; () banked
  2694  000C7E  8947               	bsf	71,4,b	;volatile
  2695                           
  2696                           ; BSR set to: 14
  2697                           ;systemConfig.c: 146: ANCON1bits.ANSEL5 = 1;
  2698  000C80  010E               	movlb	14	; () banked
  2699  000C82  8B47               	bsf	71,5,b	;volatile
  2700                           
  2701                           ; BSR set to: 14
  2702                           ;systemConfig.c: 147: ANCON2bits.ANSEL11 = 1;
  2703  000C84  010E               	movlb	14	; () banked
  2704  000C86  8746               	bsf	70,3,b	;volatile
  2705                           
  2706                           ; BSR set to: 14
  2707                           ;systemConfig.c: 148: ANCON1bits.ANSEL7 = 1;
  2708  000C88  010E               	movlb	14	; () banked
  2709  000C8A  8F47               	bsf	71,7,b	;volatile
  2710                           
  2711                           ; BSR set to: 14
  2712                           ;systemConfig.c: 149: ANCON2bits.ANSEL8 = 1;
  2713  000C8C  010E               	movlb	14	; () banked
  2714  000C8E  8146               	bsf	70,0,b	;volatile
  2715                           
  2716                           ; BSR set to: 14
  2717                           ;systemConfig.c: 150: ANCON3bits.ANSEL22 = 1;
  2718  000C90  010E               	movlb	14	; () banked
  2719  000C92  8D45               	bsf	69,6,b	;volatile
  2720                           
  2721                           ; BSR set to: 14
  2722                           ;systemConfig.c: 152: TRISAbits.TRISA0 = 1;
  2723  000C94  8092               	bsf	3986,0,c	;volatile
  2724                           
  2725                           ; BSR set to: 14
  2726                           ;systemConfig.c: 153: TRISAbits.TRISA1 = 1;
  2727  000C96  8292               	bsf	3986,1,c	;volatile
  2728                           
  2729                           ; BSR set to: 14
  2730                           ;systemConfig.c: 154: TRISAbits.TRISA2 = 1;
  2731  000C98  8492               	bsf	3986,2,c	;volatile
  2732                           
  2733                           ; BSR set to: 14
  2734                           ;systemConfig.c: 155: TRISAbits.TRISA3 = 1;
  2735  000C9A  8692               	bsf	3986,3,c	;volatile
  2736                           
  2737                           ; BSR set to: 14
  2738                           ;systemConfig.c: 156: TRISAbits.TRISA5 = 1;
  2739  000C9C  8A92               	bsf	3986,5,c	;volatile
  2740                           
  2741                           ; BSR set to: 14
  2742                           ;systemConfig.c: 157: TRISFbits.TRISF7 = 1;
  2743  000C9E  8E97               	bsf	3991,7,c	;volatile
  2744                           
  2745                           ; BSR set to: 14
  2746                           ;systemConfig.c: 158: TRISAbits.TRISA4 = 1;
  2747  000CA0  8892               	bsf	3986,4,c	;volatile
  2748                           
  2749                           ; BSR set to: 14
  2750                           ;systemConfig.c: 159: TRISHbits.TRISH6 = 1;
  2751  000CA2  8C99               	bsf	3993,6,c	;volatile
  2752                           
  2753                           ; BSR set to: 14
  2754                           ;systemConfig.c: 160: TRISGbits.TRISG0 = 1;
  2755  000CA4  8098               	bsf	3992,0,c	;volatile
  2756                           
  2757                           ; BSR set to: 14
  2758                           ;systemConfig.c: 161: TRISCbits.TRISC2 = 1;
  2759  000CA6  8494               	bsf	3988,2,c	;volatile
  2760                           
  2761                           ; BSR set to: 14
  2762  000CA8  0012               	return		;funcret
  2763  000CAA                     __end_of_setupADC:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           postinc0	equ	0xFEE
  2770                           wreg	equ	0xFE8
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _mapPeripheralPins *****************
  2774 ;; Defined at:
  2775 ;;		line 164 in file "systemConfig.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    4
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_systemInit
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text9
  2804  001026                     __ptext9:
  2805                           	opt stack 0
  2806  001026                     _mapPeripheralPins:
  2807                           	opt stack 25
  2808                           
  2809                           ;systemConfig.c: 167: OSCCON = (OSCCON & 0x5F);
  2810                           
  2811                           ; BSR set to: 14
  2812                           ;incstack = 0
  2813  001026  50D3               	movf	4051,w,c	;volatile
  2814  001028  0B5F               	andlw	95
  2815  00102A  6ED3               	movwf	4051,c	;volatile
  2816                           
  2817                           ;systemConfig.c: 168: RPINR20_21bits.IOC3R = 0x9;
  2818  00102C  010E               	movlb	14	; () banked
  2819  00102E  5134               	movf	52,w,b	;volatile
  2820  001030  0B0F               	andlw	-241
  2821  001032  0990               	iorlw	144
  2822  001034  6F34               	movwf	52,b	;volatile
  2823                           
  2824                           ; BSR set to: 14
  2825                           ;systemConfig.c: 169: RPINR20_21bits.IOC2R = 0xA;
  2826  001036  010E               	movlb	14	; () banked
  2827  001038  5134               	movf	52,w,b	;volatile
  2828  00103A  0BF0               	andlw	-16
  2829  00103C  090A               	iorlw	10
  2830  00103E  6F34               	movwf	52,b	;volatile
  2831                           
  2832                           ; BSR set to: 14
  2833                           ;systemConfig.c: 170: RPINR24_25bits.IOC6R = 0x8;
  2834  001040  010E               	movlb	14	; () banked
  2835  001042  5136               	movf	54,w,b	;volatile
  2836  001044  0BF0               	andlw	-16
  2837  001046  0908               	iorlw	8
  2838  001048  6F36               	movwf	54,b	;volatile
  2839                           
  2840                           ; BSR set to: 14
  2841                           ;systemConfig.c: 171: RPINR18_19bits.IOC1R = 0x5;
  2842  00104A  010E               	movlb	14	; () banked
  2843  00104C  5133               	movf	51,w,b	;volatile
  2844  00104E  0B0F               	andlw	-241
  2845  001050  0950               	iorlw	80
  2846  001052  6F33               	movwf	51,b	;volatile
  2847                           
  2848                           ; BSR set to: 14
  2849                           ;systemConfig.c: 172: RPINR24_25bits.IOC7R = 0xA;
  2850  001054  010E               	movlb	14	; () banked
  2851  001056  5136               	movf	54,w,b	;volatile
  2852  001058  0B0F               	andlw	-241
  2853  00105A  09A0               	iorlw	160
  2854  00105C  6F36               	movwf	54,b	;volatile
  2855                           
  2856                           ; BSR set to: 14
  2857                           ;systemConfig.c: 173: RPINR22_23bits.IOC4R = 0x6;
  2858  00105E  010E               	movlb	14	; () banked
  2859  001060  5135               	movf	53,w,b	;volatile
  2860  001062  0BF0               	andlw	-16
  2861  001064  0906               	iorlw	6
  2862  001066  6F35               	movwf	53,b	;volatile
  2863                           
  2864                           ; BSR set to: 14
  2865                           ;systemConfig.c: 174: RPINR22_23bits.IOC5R = 0x8;
  2866  001068  010E               	movlb	14	; () banked
  2867  00106A  5135               	movf	53,w,b	;volatile
  2868  00106C  0B0F               	andlw	-241
  2869  00106E  0980               	iorlw	128
  2870  001070  6F35               	movwf	53,b	;volatile
  2871                           
  2872                           ; BSR set to: 14
  2873                           ;systemConfig.c: 175: OSCCON = (OSCCON | 0x40);
  2874  001072  50D3               	movf	4051,w,c	;volatile
  2875  001074  0940               	iorlw	64
  2876  001076  6ED3               	movwf	4051,c	;volatile
  2877                           
  2878                           ; BSR set to: 14
  2879  001078  0012               	return		;funcret
  2880  00107A                     __end_of_mapPeripheralPins:
  2881                           	opt stack 0
  2882                           tblptru	equ	0xFF8
  2883                           tblptrh	equ	0xFF7
  2884                           tblptrl	equ	0xFF6
  2885                           tablat	equ	0xFF5
  2886                           postinc0	equ	0xFEE
  2887                           wreg	equ	0xFE8
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _killLEDs *****************
  2891 ;; Defined at:
  2892 ;;		line 542 in file "hardware.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		None
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_systemInit
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text10
  2921  0012CA                     __ptext10:
  2922                           	opt stack 0
  2923  0012CA                     _killLEDs:
  2924                           	opt stack 25
  2925                           
  2926                           ;hardware.c: 544: LATE0 = 0;
  2927                           
  2928                           ; BSR set to: 14
  2929                           ;incstack = 0
  2930  0012CA  908D               	bcf	3981,0,c	;volatile
  2931                           
  2932                           ;hardware.c: 545: LATD2 = 0;
  2933  0012CC  948C               	bcf	3980,2,c	;volatile
  2934                           
  2935                           ;hardware.c: 546: LATH7 = 0;
  2936  0012CE  9E90               	bcf	3984,7,c	;volatile
  2937                           
  2938                           ;hardware.c: 547: LATF2 = 0;
  2939  0012D0  948E               	bcf	3982,2,c	;volatile
  2940                           
  2941                           ;hardware.c: 548: LATF5 = 0;
  2942  0012D2  9A8E               	bcf	3982,5,c	;volatile
  2943                           
  2944                           ;hardware.c: 549: LATF6 = 0;
  2945  0012D4  9C8E               	bcf	3982,6,c	;volatile
  2946                           
  2947                           ;hardware.c: 550: LATG4 = 0;
  2948  0012D6  988F               	bcf	3983,4,c	;volatile
  2949                           
  2950                           ;hardware.c: 551: LATH0 = 0;
  2951  0012D8  9090               	bcf	3984,0,c	;volatile
  2952                           
  2953                           ;hardware.c: 552: LATE1 = 0;
  2954  0012DA  928D               	bcf	3981,1,c	;volatile
  2955                           
  2956                           ;hardware.c: 553: LATH1 = 0;
  2957  0012DC  9290               	bcf	3984,1,c	;volatile
  2958                           
  2959                           ;hardware.c: 554: LATD0 = 0;
  2960  0012DE  908C               	bcf	3980,0,c	;volatile
  2961                           
  2962                           ;hardware.c: 555: LATE7 = 0;
  2963  0012E0  9E8D               	bcf	3981,7,c	;volatile
  2964                           
  2965                           ;hardware.c: 556: LATE5 = 0;
  2966  0012E2  9A8D               	bcf	3981,5,c	;volatile
  2967                           
  2968                           ;hardware.c: 557: LATE4 = 0;
  2969  0012E4  988D               	bcf	3981,4,c	;volatile
  2970                           
  2971                           ;hardware.c: 558: LATH2 = 0;
  2972  0012E6  9490               	bcf	3984,2,c	;volatile
  2973  0012E8  0012               	return		;funcret
  2974  0012EA                     __end_of_killLEDs:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           status	equ	0xFD8
  2983                           
  2984 ;; *************** function _interfaceInit *****************
  2985 ;; Defined at:
  2986 ;;		line 193 in file "systemConfig.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    5
  3007 ;; This function calls:
  3008 ;;		_disableLCD
  3009 ;; This function is called by:
  3010 ;;		_systemInit
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text11
  3015  000B84                     __ptext11:
  3016                           	opt stack 0
  3017  000B84                     _interfaceInit:
  3018                           	opt stack 24
  3019                           
  3020                           ;systemConfig.c: 195: disableLCD();
  3021                           
  3022                           ;incstack = 0
  3023  000B84  ECD6  F008         	call	_disableLCD	;wreg free
  3024                           
  3025                           ;systemConfig.c: 196: MEMCONbits.EBDIS = 1;
  3026  000B88  010E               	movlb	14	; () banked
  3027  000B8A  8FE3               	bsf	227,7,b	;volatile
  3028                           
  3029                           ; BSR set to: 14
  3030                           ;systemConfig.c: 197: UCONbits.USBEN = 0;
  3031  000B8C  9675               	bcf	3957,3,c	;volatile
  3032                           
  3033                           ; BSR set to: 14
  3034                           ;systemConfig.c: 200: OSCCON2bits.SOSCGO = 0;
  3035  000B8E  9266               	bcf	3942,1,c	;volatile
  3036                           
  3037                           ; BSR set to: 14
  3038                           ;systemConfig.c: 201: T1CONbits.SOSCEN = 0;
  3039  000B90  96CD               	bcf	4045,3,c	;volatile
  3040                           
  3041                           ; BSR set to: 14
  3042                           ;systemConfig.c: 202: T3CONbits.SOSCEN = 0;
  3043  000B92  96B1               	bcf	4017,3,c	;volatile
  3044                           
  3045                           ; BSR set to: 14
  3046                           ;systemConfig.c: 203: T5CONbits.SOSCEN = 0;
  3047  000B94  010F               	movlb	15	; () banked
  3048  000B96  9714               	bcf	20,3,b	;volatile
  3049                           
  3050                           ; BSR set to: 15
  3051                           ;systemConfig.c: 208: ANCON2bits.ANSEL12 = 0;
  3052  000B98  010E               	movlb	14	; () banked
  3053  000B9A  9946               	bcf	70,4,b	;volatile
  3054                           
  3055                           ; BSR set to: 14
  3056                           ;systemConfig.c: 209: TRISGbits.TRISG1 = 1;
  3057  000B9C  8298               	bsf	3992,1,c	;volatile
  3058                           
  3059                           ; BSR set to: 14
  3060                           ;systemConfig.c: 211: ANCON2bits.ANSEL13 = 0;
  3061  000B9E  010E               	movlb	14	; () banked
  3062  000BA0  9B46               	bcf	70,5,b	;volatile
  3063                           
  3064                           ; BSR set to: 14
  3065                           ;systemConfig.c: 212: TRISGbits.TRISG2 = 1;
  3066  000BA2  8498               	bsf	3992,2,c	;volatile
  3067                           
  3068                           ; BSR set to: 14
  3069                           ;systemConfig.c: 214: TRISEbits.TRISE6 = 1;
  3070  000BA4  8C96               	bsf	3990,6,c	;volatile
  3071                           
  3072                           ; BSR set to: 14
  3073                           ;systemConfig.c: 216: TRISDbits.TRISD1 = 1;
  3074  000BA6  8295               	bsf	3989,1,c	;volatile
  3075                           
  3076                           ; BSR set to: 14
  3077                           ;systemConfig.c: 218: ANCON2bits.ANSEL14 = 0;
  3078  000BA8  010E               	movlb	14	; () banked
  3079  000BAA  9D46               	bcf	70,6,b	;volatile
  3080                           
  3081                           ; BSR set to: 14
  3082                           ;systemConfig.c: 219: TRISGbits.TRISG3 = 1;
  3083  000BAC  8698               	bsf	3992,3,c	;volatile
  3084                           
  3085                           ; BSR set to: 14
  3086                           ;systemConfig.c: 221: TRISDbits.TRISD4 = 1;
  3087  000BAE  8895               	bsf	3989,4,c	;volatile
  3088                           
  3089                           ; BSR set to: 14
  3090                           ;systemConfig.c: 222: TRISEbits.TRISE3 = 1;
  3091  000BB0  8696               	bsf	3990,3,c	;volatile
  3092                           
  3093                           ; BSR set to: 14
  3094                           ;systemConfig.c: 225: TRISEbits.TRISE0 = 0;
  3095  000BB2  9096               	bcf	3990,0,c	;volatile
  3096                           
  3097                           ; BSR set to: 14
  3098                           ;systemConfig.c: 226: TRISDbits.TRISD2 = 0;
  3099  000BB4  9495               	bcf	3989,2,c	;volatile
  3100                           
  3101                           ; BSR set to: 14
  3102                           ;systemConfig.c: 229: TRISEbits.TRISE1 = 0;
  3103  000BB6  9296               	bcf	3990,1,c	;volatile
  3104                           
  3105                           ; BSR set to: 14
  3106                           ;systemConfig.c: 230: ANCON3bits.ANSEL17 = 0;
  3107  000BB8  010E               	movlb	14	; () banked
  3108  000BBA  9345               	bcf	69,1,b	;volatile
  3109                           
  3110                           ; BSR set to: 14
  3111                           ;systemConfig.c: 231: TRISHbits.TRISH1 = 0;
  3112  000BBC  9299               	bcf	3993,1,c	;volatile
  3113                           
  3114                           ; BSR set to: 14
  3115                           ;systemConfig.c: 234: TRISDbits.TRISD0 = 0;
  3116  000BBE  9095               	bcf	3989,0,c	;volatile
  3117                           
  3118                           ; BSR set to: 14
  3119                           ;systemConfig.c: 235: TRISEbits.TRISE7 = 0;
  3120  000BC0  9E96               	bcf	3990,7,c	;volatile
  3121                           
  3122                           ; BSR set to: 14
  3123                           ;systemConfig.c: 236: TRISEbits.TRISE5 = 0;
  3124  000BC2  9A96               	bcf	3990,5,c	;volatile
  3125                           
  3126                           ; BSR set to: 14
  3127                           ;systemConfig.c: 237: TRISEbits.TRISE4 = 0;
  3128  000BC4  9896               	bcf	3990,4,c	;volatile
  3129                           
  3130                           ; BSR set to: 14
  3131                           ;systemConfig.c: 238: ANCON3bits.ANSEL18 = 0;
  3132  000BC6  010E               	movlb	14	; () banked
  3133  000BC8  9545               	bcf	69,2,b	;volatile
  3134                           
  3135                           ; BSR set to: 14
  3136                           ;systemConfig.c: 239: TRISHbits.TRISH2 = 0;
  3137  000BCA  9499               	bcf	3993,2,c	;volatile
  3138                           
  3139                           ; BSR set to: 14
  3140                           ;systemConfig.c: 242: ANCON1bits.ANSEL6 = 0;
  3141  000BCC  010E               	movlb	14	; () banked
  3142  000BCE  9D47               	bcf	71,6,b	;volatile
  3143                           
  3144                           ; BSR set to: 14
  3145                           ;systemConfig.c: 243: TRISFbits.TRISF2 = 0;
  3146  000BD0  9497               	bcf	3991,2,c	;volatile
  3147                           
  3148                           ; BSR set to: 14
  3149                           ;systemConfig.c: 244: ANCON3bits.ANSEL23 = 0;
  3150  000BD2  010E               	movlb	14	; () banked
  3151  000BD4  9F45               	bcf	69,7,b	;volatile
  3152                           
  3153                           ; BSR set to: 14
  3154                           ;systemConfig.c: 245: TRISHbits.TRISH7 = 0;
  3155  000BD6  9E99               	bcf	3993,7,c	;volatile
  3156                           
  3157                           ; BSR set to: 14
  3158                           ;systemConfig.c: 248: ANCON2bits.ANSEL10 = 0;
  3159  000BD8  010E               	movlb	14	; () banked
  3160  000BDA  9546               	bcf	70,2,b	;volatile
  3161                           
  3162                           ; BSR set to: 14
  3163                           ;systemConfig.c: 249: TRISFbits.TRISF6 = 0;
  3164  000BDC  9C97               	bcf	3991,6,c	;volatile
  3165                           
  3166                           ; BSR set to: 14
  3167                           ;systemConfig.c: 250: ANCON2bits.ANSEL9 = 0;
  3168  000BDE  010E               	movlb	14	; () banked
  3169  000BE0  9346               	bcf	70,1,b	;volatile
  3170                           
  3171                           ; BSR set to: 14
  3172                           ;systemConfig.c: 251: TRISFbits.TRISF5 = 0;
  3173  000BE2  9A97               	bcf	3991,5,c	;volatile
  3174                           
  3175                           ; BSR set to: 14
  3176                           ;systemConfig.c: 254: ANCON3bits.ANSEL16 = 0;
  3177  000BE4  010E               	movlb	14	; () banked
  3178  000BE6  9145               	bcf	69,0,b	;volatile
  3179                           
  3180                           ; BSR set to: 14
  3181                           ;systemConfig.c: 255: TRISHbits.TRISH0 = 0;
  3182  000BE8  9099               	bcf	3993,0,c	;volatile
  3183                           
  3184                           ; BSR set to: 14
  3185                           ;systemConfig.c: 256: TRISGbits.TRISG4 = 0;
  3186  000BEA  9898               	bcf	3992,4,c	;volatile
  3187                           
  3188                           ; BSR set to: 14
  3189                           ;systemConfig.c: 257: ANCON2bits.ANSEL15 = 0;
  3190  000BEC  010E               	movlb	14	; () banked
  3191  000BEE  9F46               	bcf	70,7,b	;volatile
  3192                           
  3193                           ; BSR set to: 14
  3194                           ;systemConfig.c: 260: TRISCbits.TRISC7 = 1;
  3195  000BF0  8E94               	bsf	3988,7,c	;volatile
  3196                           
  3197                           ; BSR set to: 14
  3198                           ;systemConfig.c: 261: TRISJbits.TRISJ4 = 1;
  3199  000BF2  889A               	bsf	3994,4,c	;volatile
  3200                           
  3201                           ; BSR set to: 14
  3202                           ;systemConfig.c: 262: TRISJbits.TRISJ5 = 1;
  3203  000BF4  8A9A               	bsf	3994,5,c	;volatile
  3204                           
  3205                           ; BSR set to: 14
  3206                           ;systemConfig.c: 265: TRISCbits.TRISC1 = 1;
  3207  000BF6  8294               	bsf	3988,1,c	;volatile
  3208                           
  3209                           ; BSR set to: 14
  3210                           ;systemConfig.c: 266: TRISCbits.TRISC0 = 1;
  3211  000BF8  8094               	bsf	3988,0,c	;volatile
  3212                           
  3213                           ; BSR set to: 14
  3214                           ;systemConfig.c: 267: TRISCbits.TRISC6 = 1;
  3215  000BFA  8C94               	bsf	3988,6,c	;volatile
  3216                           
  3217                           ; BSR set to: 14
  3218                           ;systemConfig.c: 270: ANCON3bits.ANSEL21 = 0;
  3219  000BFC  010E               	movlb	14	; () banked
  3220  000BFE  9B45               	bcf	69,5,b	;volatile
  3221                           
  3222                           ; BSR set to: 14
  3223                           ;systemConfig.c: 271: ANCON3bits.ANSEL20 = 0;
  3224  000C00  010E               	movlb	14	; () banked
  3225  000C02  9945               	bcf	69,4,b	;volatile
  3226                           
  3227                           ; BSR set to: 14
  3228                           ;systemConfig.c: 272: TRISFbits.TRISF3 = 1;
  3229  000C04  8697               	bsf	3991,3,c	;volatile
  3230                           
  3231                           ; BSR set to: 14
  3232                           ;systemConfig.c: 273: TRISHbits.TRISH5 = 1;
  3233  000C06  8A99               	bsf	3993,5,c	;volatile
  3234                           
  3235                           ; BSR set to: 14
  3236                           ;systemConfig.c: 274: TRISHbits.TRISH4 = 1;
  3237  000C08  8899               	bsf	3993,4,c	;volatile
  3238                           
  3239                           ; BSR set to: 14
  3240                           ;systemConfig.c: 277: TRISBbits.TRISB5 = 0;
  3241  000C0A  9A93               	bcf	3987,5,c	;volatile
  3242                           
  3243                           ; BSR set to: 14
  3244                           ;systemConfig.c: 278: TRISDbits.TRISD3 = 0;
  3245  000C0C  9695               	bcf	3989,3,c	;volatile
  3246                           
  3247                           ; BSR set to: 14
  3248                           ;systemConfig.c: 279: LATB5 = 1;
  3249  000C0E  8A8A               	bsf	3978,5,c	;volatile
  3250                           
  3251                           ; BSR set to: 14
  3252                           ;systemConfig.c: 280: LATD3 = 0;
  3253  000C10  968C               	bcf	3980,3,c	;volatile
  3254                           
  3255                           ; BSR set to: 14
  3256                           ;systemConfig.c: 283: TRISJbits.TRISJ0 = 1;
  3257  000C12  809A               	bsf	3994,0,c	;volatile
  3258                           
  3259                           ; BSR set to: 14
  3260                           ;systemConfig.c: 284: TRISJbits.TRISJ1 = 1;
  3261  000C14  829A               	bsf	3994,1,c	;volatile
  3262                           
  3263                           ; BSR set to: 14
  3264                           ;systemConfig.c: 285: TRISDbits.TRISD7 = 1;
  3265  000C16  8E95               	bsf	3989,7,c	;volatile
  3266                           
  3267                           ; BSR set to: 14
  3268  000C18  0012               	return		;funcret
  3269  000C1A                     __end_of_interfaceInit:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _disableLCD *****************
  3280 ;; Defined at:
  3281 ;;		line 178 in file "systemConfig.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    4
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_interfaceInit
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text12
  3310  0011AC                     __ptext12:
  3311                           	opt stack 0
  3312  0011AC                     _disableLCD:
  3313                           	opt stack 24
  3314                           
  3315                           ;systemConfig.c: 180: LCDCONbits.LCDEN = 0;
  3316                           
  3317                           ; BSR set to: 14
  3318                           ;incstack = 0
  3319  0011AC  010E               	movlb	14	; () banked
  3320  0011AE  9FD9               	bcf	217,7,b	;volatile
  3321                           
  3322                           ;systemConfig.c: 181: LCDCONbits.LMUX = 0x0;
  3323  0011B0  010E               	movlb	14	; () banked
  3324  0011B2  91D9               	bcf	217,0,b	;volatile
  3325  0011B4  93D9               	bcf	217,1,b	;volatile
  3326  0011B6  95D9               	bcf	217,2,b	;volatile
  3327                           
  3328                           ; BSR set to: 14
  3329                           ;systemConfig.c: 183: LCDSE0 = 0x00;
  3330  0011B8  0E00               	movlw	0
  3331  0011BA  010E               	movlb	14	; () banked
  3332  0011BC  6FCE               	movwf	206,b	;volatile
  3333                           
  3334                           ;systemConfig.c: 184: LCDSE1 = 0x00;
  3335  0011BE  0E00               	movlw	0
  3336  0011C0  010E               	movlb	14	; () banked
  3337  0011C2  6FCF               	movwf	207,b	;volatile
  3338                           
  3339                           ;systemConfig.c: 185: LCDSE2 = 0x00;
  3340  0011C4  0E00               	movlw	0
  3341  0011C6  010E               	movlb	14	; () banked
  3342  0011C8  6FD0               	movwf	208,b	;volatile
  3343                           
  3344                           ;systemConfig.c: 186: LCDSE3 = 0x00;
  3345  0011CA  0E00               	movlw	0
  3346  0011CC  010E               	movlb	14	; () banked
  3347  0011CE  6FD1               	movwf	209,b	;volatile
  3348                           
  3349                           ;systemConfig.c: 187: LCDSE4 = 0x00;
  3350  0011D0  0E00               	movlw	0
  3351  0011D2  010E               	movlb	14	; () banked
  3352  0011D4  6FD2               	movwf	210,b	;volatile
  3353                           
  3354                           ;systemConfig.c: 188: LCDSE5 = 0x00;
  3355  0011D6  0E00               	movlw	0
  3356  0011D8  010E               	movlb	14	; () banked
  3357  0011DA  6FD3               	movwf	211,b	;volatile
  3358                           
  3359                           ;systemConfig.c: 189: LCDSE6 = 0x00;
  3360  0011DC  0E00               	movlw	0
  3361  0011DE  010E               	movlb	14	; () banked
  3362  0011E0  6FD4               	movwf	212,b	;volatile
  3363                           
  3364                           ;systemConfig.c: 190: LCDSE7 = 0x00;
  3365  0011E2  0E00               	movlw	0
  3366  0011E4  010E               	movlb	14	; () banked
  3367  0011E6  6FD5               	movwf	213,b	;volatile
  3368                           
  3369                           ; BSR set to: 14
  3370  0011E8  0012               	return		;funcret
  3371  0011EA                     __end_of_disableLCD:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           status	equ	0xFD8
  3380                           
  3381 ;; *************** function _clockSwitch *****************
  3382 ;; Defined at:
  3383 ;;		line 52 in file "systemConfig.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    4
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_systemInit
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text13
  3412  0012A6                     __ptext13:
  3413                           	opt stack 0
  3414  0012A6                     _clockSwitch:
  3415                           	opt stack 25
  3416                           
  3417                           ;systemConfig.c: 54: OSCCON4bits.PLLEN = 0x1;
  3418                           
  3419                           ; BSR set to: 14
  3420                           ;incstack = 0
  3421  0012A6  8A64               	bsf	3940,5,c	;volatile
  3422                           
  3423                           ;systemConfig.c: 55: OSCCON3bits.IRCF = 0x1;
  3424  0012A8  5065               	movf	3941,w,c	;volatile
  3425  0012AA  0BF8               	andlw	-8
  3426  0012AC  0901               	iorlw	1
  3427  0012AE  6E65               	movwf	3941,c	;volatile
  3428                           
  3429                           ;systemConfig.c: 56: OSCCON2bits.CLKLOCK = 0x0;
  3430  0012B0  9E66               	bcf	3942,7,c	;volatile
  3431                           
  3432                           ;systemConfig.c: 57: OSCCONbits.NOSC = 0x1;
  3433  0012B2  50D3               	movf	4051,w,c	;volatile
  3434  0012B4  0BF8               	andlw	-8
  3435  0012B6  0901               	iorlw	1
  3436  0012B8  6ED3               	movwf	4051,c	;volatile
  3437  0012BA  38D3               	swapf	4051,w,c	;volatile
  3438  0012BC  0B07               	andlw	7
  3439  0012BE  06E8               	decf	wreg,f,c
  3440  0012C0  A4D8               	btfss	status,2,c
  3441  0012C2  D7FB               	goto	l377
  3442  0012C4                     u2700:
  3443                           
  3444                           ;systemConfig.c: 60: while (!OSCCON2bits.LOCK);
  3445  0012C4  BA66               	btfsc	3942,5,c	;volatile
  3446  0012C6  0012               	return	
  3447  0012C8  D7FD               	goto	u2700
  3448  0012CA                     __end_of_clockSwitch:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _interruptInit *****************
  3459 ;; Defined at:
  3460 ;;		line 288 in file "systemConfig.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		None
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    4
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text14
  3489  001220                     __ptext14:
  3490                           	opt stack 0
  3491  001220                     _interruptInit:
  3492                           	opt stack 26
  3493                           
  3494                           ;systemConfig.c: 290: INTCONbits.T0IE = 0x1;
  3495                           
  3496                           ;incstack = 0
  3497  001220  8AF2               	bsf	intcon,5,c	;volatile
  3498                           
  3499                           ;systemConfig.c: 291: PIE1bits.TMR1IE = 0x1;
  3500  001222  809D               	bsf	3997,0,c	;volatile
  3501                           
  3502                           ;systemConfig.c: 292: PIE1bits.TMR2IE = 0x1;
  3503  001224  829D               	bsf	3997,1,c	;volatile
  3504                           
  3505                           ;systemConfig.c: 293: PIE2bits.TMR3IE = 0x1;
  3506  001226  82A0               	bsf	4000,1,c	;volatile
  3507                           
  3508                           ;systemConfig.c: 294: PIE5bits.TMR4IE = 0x1;
  3509  001228  80B7               	bsf	4023,0,c	;volatile
  3510                           
  3511                           ;systemConfig.c: 296: PIE2bits.SSP2IE = 0x1;
  3512  00122A  8CA0               	bsf	4000,6,c	;volatile
  3513                           
  3514                           ;systemConfig.c: 298: INTCONbits.IOCIE = 0x1;
  3515  00122C  86F2               	bsf	intcon,3,c	;volatile
  3516                           
  3517                           ;systemConfig.c: 299: IOCNbits.IOCN1 = 0x1;
  3518  00122E  010F               	movlb	15	; () banked
  3519  001230  8355               	bsf	85,1,b	;volatile
  3520                           
  3521                           ;systemConfig.c: 300: IOCNbits.IOCN2 = 0x1;
  3522  001232  010F               	movlb	15	; () banked
  3523  001234  8555               	bsf	85,2,b	;volatile
  3524                           
  3525                           ;systemConfig.c: 301: IOCNbits.IOCN3 = 0x1;
  3526  001236  010F               	movlb	15	; () banked
  3527  001238  8755               	bsf	85,3,b	;volatile
  3528                           
  3529                           ;systemConfig.c: 302: IOCNbits.IOCN4 = 0x1;
  3530  00123A  010F               	movlb	15	; () banked
  3531  00123C  8955               	bsf	85,4,b	;volatile
  3532                           
  3533                           ;systemConfig.c: 303: IOCNbits.IOCN5 = 0x1;
  3534  00123E  010F               	movlb	15	; () banked
  3535  001240  8B55               	bsf	85,5,b	;volatile
  3536                           
  3537                           ;systemConfig.c: 304: IOCNbits.IOCN6 = 0x1;
  3538  001242  010F               	movlb	15	; () banked
  3539  001244  8D55               	bsf	85,6,b	;volatile
  3540                           
  3541                           ;systemConfig.c: 305: IOCNbits.IOCN7 = 0x1;
  3542  001246  010F               	movlb	15	; () banked
  3543  001248  8F55               	bsf	85,7,b	;volatile
  3544                           
  3545                           ;systemConfig.c: 307: INTCONbits.PEIE = 0x1;
  3546  00124A  8CF2               	bsf	intcon,6,c	;volatile
  3547                           
  3548                           ;systemConfig.c: 308: INTCONbits.GIE = 0x1;
  3549  00124C  8EF2               	bsf	intcon,7,c	;volatile
  3550                           
  3551                           ; BSR set to: 15
  3552  00124E  0012               	return		;funcret
  3553  001250                     __end_of_interruptInit:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           wreg	equ	0xFE8
  3562                           status	equ	0xFD8
  3563                           
  3564 ;; *************** function ___wmul *****************
  3565 ;; Defined at:
  3566 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3569 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  product         2    4[BANK0 ] unsigned int 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    0[BANK0 ] unsigned int 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0, prodl, prodh
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:        6 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    4
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text15
  3596  0011EA                     __ptext15:
  3597                           	opt stack 0
  3598  0011EA                     ___wmul:
  3599                           	opt stack 26
  3600                           
  3601                           ; BSR set to: 15
  3602                           ;incstack = 0
  3603  0011EA  0100               	movlb	0	; () banked
  3604  0011EC  5160               	movf	___wmul@multiplier& (0+255),w,b
  3605  0011EE  0100               	movlb	0	; () banked
  3606  0011F0  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3607  0011F2  CFF3 F064          	movff	prodl,___wmul@product
  3608  0011F6  CFF4 F065          	movff	prodh,___wmul@product+1
  3609  0011FA  0100               	movlb	0	; () banked
  3610  0011FC  5160               	movf	___wmul@multiplier& (0+255),w,b
  3611  0011FE  0100               	movlb	0	; () banked
  3612  001200  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3613  001202  50F3               	movf	prodl,w,c
  3614  001204  0100               	movlb	0	; () banked
  3615  001206  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3616  001208  0100               	movlb	0	; () banked
  3617  00120A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3618  00120C  0100               	movlb	0	; () banked
  3619  00120E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3620  001210  50F3               	movf	prodl,w,c
  3621  001212  0100               	movlb	0	; () banked
  3622  001214  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3623                           
  3624                           ; BSR set to: 0
  3625  001216  C064  F060         	movff	___wmul@product,?___wmul
  3626  00121A  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3627  00121E  0012               	return	
  3628  001220                     __end_of___wmul:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           intcon	equ	0xFF2
  3637                           postinc0	equ	0xFEE
  3638                           wreg	equ	0xFE8
  3639                           status	equ	0xFD8
  3640                           
  3641 ;; *************** function _I2C1_Write_EEPROM *****************
  3642 ;; Defined at:
  3643 ;;		line 15 in file "serial.c"
  3644 ;; Parameters:    Size  Location     Type
  3645 ;;  devAddr         1    wreg     unsigned char 
  3646 ;;  memValue        1    0[BANK0 ] unsigned char 
  3647 ;;  value           1    1[BANK0 ] unsigned char 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  devAddr         1    2[BANK0 ] unsigned char 
  3650 ;;  wrDevAddr       1    3[BANK0 ] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3660 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;Total ram usage:        4 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text16
  3675  00111C                     __ptext16:
  3676                           	opt stack 0
  3677  00111C                     _I2C1_Write_EEPROM:
  3678                           	opt stack 26
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;incstack = 0
  3682                           ;I2C1_Write_EEPROM@devAddr stored from wreg
  3683  00111C  0100               	movlb	0	; () banked
  3684  00111E  6F62               	movwf	I2C1_Write_EEPROM@devAddr& (0+255),b
  3685                           
  3686                           ;serial.c: 17: char wrDevAddr = devAddr;
  3687  001120  C062  F063         	movff	I2C1_Write_EEPROM@devAddr,I2C1_Write_EEPROM@wrDevAddr
  3688                           
  3689                           ;serial.c: 19: SSP1CON1bits.SSPEN = 0x1;
  3690  001124  8AC6               	bsf	4038,5,c	;volatile
  3691                           
  3692                           ;serial.c: 20: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3693  001126  0E0D               	movlw	13
  3694  001128                     u3607:
  3695  001128  2EE8               	decfsz	wreg,f,c
  3696  00112A  D7FE               	bra	u3607
  3697  00112C  F000               	nop	
  3698                           
  3699                           ;serial.c: 22: SSP1CON2bits.SEN = 0x1;
  3700  00112E  80C5               	bsf	4037,0,c	;volatile
  3701  001130  B0C5               	btfsc	4037,0,c	;volatile
  3702  001132  D7FE               	goto	l800
  3703                           
  3704                           ;serial.c: 24: PIR1bits.SSP1IF = 0x0;
  3705  001134  969E               	bcf	3998,3,c	;volatile
  3706                           
  3707                           ;serial.c: 25: SSP1BUF = wrDevAddr;
  3708  001136  C063  FFC9         	movff	I2C1_Write_EEPROM@wrDevAddr,4041	;volatile
  3709  00113A  BCC5               	btfsc	4037,6,c	;volatile
  3710  00113C  D7FE               	goto	l803
  3711  00113E                     u2950:
  3712                           
  3713                           ;serial.c: 28: while(!PIR1bits.SSP1IF);
  3714  00113E  A69E               	btfss	3998,3,c	;volatile
  3715  001140  D7FE               	goto	u2950
  3716                           
  3717                           ;serial.c: 29: PIR1bits.SSP1IF = 0x0;
  3718  001142  969E               	bcf	3998,3,c	;volatile
  3719                           
  3720                           ;serial.c: 30: SSP1BUF = memValue;
  3721  001144  C060  FFC9         	movff	I2C1_Write_EEPROM@memValue,4041	;volatile
  3722  001148  BCC5               	btfsc	4037,6,c	;volatile
  3723  00114A  D7FE               	goto	l809
  3724  00114C                     u2970:
  3725                           
  3726                           ;serial.c: 33: while(!PIR1bits.SSP1IF);
  3727  00114C  A69E               	btfss	3998,3,c	;volatile
  3728  00114E  D7FE               	goto	u2970
  3729                           
  3730                           ;serial.c: 34: PIR1bits.SSP1IF = 0x0;
  3731  001150  969E               	bcf	3998,3,c	;volatile
  3732                           
  3733                           ;serial.c: 35: SSP1BUF = value;
  3734  001152  C061  FFC9         	movff	I2C1_Write_EEPROM@value,4041	;volatile
  3735  001156  BCC5               	btfsc	4037,6,c	;volatile
  3736  001158  D7FE               	goto	l815
  3737  00115A                     u2990:
  3738                           
  3739                           ;serial.c: 38: while(!PIR1bits.SSP1IF);
  3740  00115A  A69E               	btfss	3998,3,c	;volatile
  3741  00115C  D7FE               	goto	u2990
  3742                           
  3743                           ;serial.c: 39: SSP1CON2bits.PEN = 0x1;
  3744  00115E  84C5               	bsf	4037,2,c	;volatile
  3745  001160  B4C5               	btfsc	4037,2,c	;volatile
  3746  001162  D7FE               	goto	l821
  3747                           
  3748                           ;serial.c: 42: PIR1bits.SSP1IF = 0x0;
  3749  001164  969E               	bcf	3998,3,c	;volatile
  3750                           
  3751                           ;serial.c: 43: SSP1CON1bits.SSPEN = 0x1;
  3752  001166  8AC6               	bsf	4038,5,c	;volatile
  3753  001168  0012               	return		;funcret
  3754  00116A                     __end_of_I2C1_Write_EEPROM:
  3755                           	opt stack 0
  3756                           tblptru	equ	0xFF8
  3757                           tblptrh	equ	0xFF7
  3758                           tblptrl	equ	0xFF6
  3759                           tablat	equ	0xFF5
  3760                           prodh	equ	0xFF4
  3761                           prodl	equ	0xFF3
  3762                           intcon	equ	0xFF2
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           status	equ	0xFD8
  3766                           
  3767 ;; *************** function _I2C1_Write_DigiPot *****************
  3768 ;; Defined at:
  3769 ;;		line 102 in file "serial.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  value           1    wreg     unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  value           1    0[BANK0 ] unsigned char 
  3774 ;;  wrCommand       1    1[BANK0 ] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;Total ram usage:        2 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text17
  3799  00116A                     __ptext17:
  3800                           	opt stack 0
  3801  00116A                     _I2C1_Write_DigiPot:
  3802                           	opt stack 26
  3803                           
  3804                           ;incstack = 0
  3805                           ;I2C1_Write_DigiPot@value stored from wreg
  3806  00116A  0100               	movlb	0	; () banked
  3807  00116C  6F60               	movwf	I2C1_Write_DigiPot@value& (0+255),b
  3808                           
  3809                           ;serial.c: 104: char wrCommand = (0b00101111 << 1);
  3810  00116E  0E5E               	movlw	94
  3811  001170  0100               	movlb	0	; () banked
  3812  001172  6F61               	movwf	I2C1_Write_DigiPot@wrCommand& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;serial.c: 106: SSP1CON1bits.SSPEN = 0x1;
  3816  001174  8AC6               	bsf	4038,5,c	;volatile
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;serial.c: 107: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3820  001176  0E0D               	movlw	13
  3821  001178                     u3617:
  3822  001178  2EE8               	decfsz	wreg,f,c
  3823  00117A  D7FE               	bra	u3617
  3824  00117C  F000               	nop	
  3825                           
  3826                           ;serial.c: 109: SSP1CON2bits.SEN = 0x1;
  3827  00117E  80C5               	bsf	4037,0,c	;volatile
  3828  001180  B0C5               	btfsc	4037,0,c	;volatile
  3829  001182  D7FE               	goto	l870
  3830                           
  3831                           ;serial.c: 111: PIR1bits.SSP1IF = 0x0;
  3832  001184  969E               	bcf	3998,3,c	;volatile
  3833                           
  3834                           ;serial.c: 112: SSP1BUF = wrCommand;
  3835  001186  C061  FFC9         	movff	I2C1_Write_DigiPot@wrCommand,4041	;volatile
  3836  00118A  BCC5               	btfsc	4037,6,c	;volatile
  3837  00118C  D7FE               	goto	l873
  3838  00118E                     u2890:
  3839                           
  3840                           ;serial.c: 115: while(!PIR1bits.SSP1IF);
  3841  00118E  A69E               	btfss	3998,3,c	;volatile
  3842  001190  D7FE               	goto	u2890
  3843                           
  3844                           ;serial.c: 116: PIR1bits.SSP1IF = 0x0;
  3845  001192  969E               	bcf	3998,3,c	;volatile
  3846                           
  3847                           ;serial.c: 117: SSP1BUF = value;
  3848  001194  C060  FFC9         	movff	I2C1_Write_DigiPot@value,4041	;volatile
  3849  001198  BCC5               	btfsc	4037,6,c	;volatile
  3850  00119A  D7FE               	goto	l879
  3851  00119C                     u2910:
  3852                           
  3853                           ;serial.c: 120: while(!PIR1bits.SSP1IF);
  3854  00119C  A69E               	btfss	3998,3,c	;volatile
  3855  00119E  D7FE               	goto	u2910
  3856                           
  3857                           ;serial.c: 121: SSP1CON2bits.PEN = 0x1;
  3858  0011A0  84C5               	bsf	4037,2,c	;volatile
  3859  0011A2  B4C5               	btfsc	4037,2,c	;volatile
  3860  0011A4  D7FE               	goto	l885
  3861                           
  3862                           ;serial.c: 124: PIR1bits.SSP1IF = 0x0;
  3863  0011A6  969E               	bcf	3998,3,c	;volatile
  3864                           
  3865                           ;serial.c: 125: SSP1CON1bits.SSPEN = 0x1;
  3866  0011A8  8AC6               	bsf	4038,5,c	;volatile
  3867  0011AA  0012               	return		;funcret
  3868  0011AC                     __end_of_I2C1_Write_DigiPot:
  3869                           	opt stack 0
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           intcon	equ	0xFF2
  3877                           postinc0	equ	0xFEE
  3878                           wreg	equ	0xFE8
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _I2C1_Read_EEPROM *****************
  3882 ;; Defined at:
  3883 ;;		line 46 in file "serial.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  devAddr         1    wreg     unsigned char 
  3886 ;;  memValue        1    0[BANK0 ] unsigned char 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  devAddr         1    4[BANK0 ] unsigned char 
  3889 ;;  value           1    3[BANK0 ] unsigned char 
  3890 ;;  rdAddr          1    2[BANK0 ] unsigned char 
  3891 ;;  dummyWrite      1    1[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      unsigned char 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3901 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;Total ram usage:        5 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    4
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text18
  3916  000DC6                     __ptext18:
  3917                           	opt stack 0
  3918  000DC6                     _I2C1_Read_EEPROM:
  3919                           	opt stack 26
  3920                           
  3921                           ;incstack = 0
  3922                           ;I2C1_Read_EEPROM@devAddr stored from wreg
  3923  000DC6  0100               	movlb	0	; () banked
  3924  000DC8  6F64               	movwf	I2C1_Read_EEPROM@devAddr& (0+255),b
  3925                           
  3926                           ;serial.c: 48: char dummyWrite = devAddr;
  3927  000DCA  C064  F061         	movff	I2C1_Read_EEPROM@devAddr,I2C1_Read_EEPROM@dummyWrite
  3928                           
  3929                           ;serial.c: 49: char rdAddr = (devAddr|0x01);
  3930  000DCE  0100               	movlb	0	; () banked
  3931  000DD0  5164               	movf	I2C1_Read_EEPROM@devAddr& (0+255),w,b
  3932  000DD2  0901               	iorlw	1
  3933  000DD4  0100               	movlb	0	; () banked
  3934  000DD6  6F62               	movwf	I2C1_Read_EEPROM@rdAddr& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;serial.c: 50: char value = 0x0;
  3938  000DD8  0E00               	movlw	0
  3939  000DDA  0100               	movlb	0	; () banked
  3940  000DDC  6F63               	movwf	I2C1_Read_EEPROM@value& (0+255),b
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;serial.c: 52: SSP1CON1bits.SSPEN = 0x1;
  3944  000DDE  8AC6               	bsf	4038,5,c	;volatile
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;serial.c: 53: _delay((unsigned long)((5)*(32000000/4000000.0)));
  3948  000DE0  0E0D               	movlw	13
  3949  000DE2                     u3627:
  3950  000DE2  2EE8               	decfsz	wreg,f,c
  3951  000DE4  D7FE               	bra	u3627
  3952  000DE6  F000               	nop	
  3953                           
  3954                           ;serial.c: 55: SSP1CON2bits.SEN = 0x1;
  3955  000DE8  80C5               	bsf	4037,0,c	;volatile
  3956  000DEA  B0C5               	btfsc	4037,0,c	;volatile
  3957  000DEC  D7FE               	goto	l827
  3958  000DEE                     u3020:
  3959                           
  3960                           ;serial.c: 57: while(!PIR1bits.SSP1IF);
  3961  000DEE  A69E               	btfss	3998,3,c	;volatile
  3962  000DF0  D7FE               	goto	u3020
  3963                           
  3964                           ;serial.c: 58: PIR1bits.SSP1IF = 0x0;
  3965  000DF2  969E               	bcf	3998,3,c	;volatile
  3966                           
  3967                           ;serial.c: 59: SSP1BUF = dummyWrite;
  3968  000DF4  C061  FFC9         	movff	I2C1_Read_EEPROM@dummyWrite,4041	;volatile
  3969                           
  3970                           ;serial.c: 61: if(SSP1CON2bits.ACKSTAT);
  3971  000DF8  50C5               	movf	4037,w,c	;volatile
  3972  000DFA                     
  3973                           ;serial.c: 62: while(!PIR1bits.SSP1IF);
  3974  000DFA  A69E               	btfss	3998,3,c	;volatile
  3975  000DFC  D7FE               	goto	l832
  3976                           
  3977                           ;serial.c: 63: PIR1bits.SSP1IF = 0x0;
  3978  000DFE  969E               	bcf	3998,3,c	;volatile
  3979                           
  3980                           ;serial.c: 64: SSP1BUF = memValue;
  3981  000E00  C060  FFC9         	movff	I2C1_Read_EEPROM@memValue,4041	;volatile
  3982  000E04  BCC5               	btfsc	4037,6,c	;volatile
  3983  000E06  D7FE               	goto	l837
  3984  000E08                     u3050:
  3985                           
  3986                           ;serial.c: 67: while(!PIR1bits.SSP1IF);
  3987  000E08  A69E               	btfss	3998,3,c	;volatile
  3988  000E0A  D7FE               	goto	u3050
  3989                           
  3990                           ;serial.c: 68: PIR1bits.SSP1IF = 0x0;
  3991  000E0C  969E               	bcf	3998,3,c	;volatile
  3992                           
  3993                           ;serial.c: 69: SSP1CON2bits.RSEN = 0x1;
  3994  000E0E  82C5               	bsf	4037,1,c	;volatile
  3995  000E10  B2C5               	btfsc	4037,1,c	;volatile
  3996  000E12  D7FE               	goto	l843
  3997  000E14                     u3070:
  3998                           
  3999                           ;serial.c: 72: while(!PIR1bits.SSP1IF);
  4000  000E14  A69E               	btfss	3998,3,c	;volatile
  4001  000E16  D7FE               	goto	u3070
  4002                           
  4003                           ;serial.c: 73: PIR1bits.SSP1IF = 0x0;
  4004  000E18  969E               	bcf	3998,3,c	;volatile
  4005                           
  4006                           ;serial.c: 74: SSP1BUF = rdAddr;
  4007  000E1A  C062  FFC9         	movff	I2C1_Read_EEPROM@rdAddr,4041	;volatile
  4008  000E1E  BCC5               	btfsc	4037,6,c	;volatile
  4009  000E20  D7FE               	goto	l849
  4010  000E22                     u3090:
  4011                           
  4012                           ;serial.c: 77: while(!PIR1bits.SSP1IF);
  4013  000E22  A69E               	btfss	3998,3,c	;volatile
  4014  000E24  D7FE               	goto	u3090
  4015                           
  4016                           ;serial.c: 78: PIR1bits.SSP1IF = 0x0;
  4017  000E26  969E               	bcf	3998,3,c	;volatile
  4018                           
  4019                           ;serial.c: 80: SSP1CON2bits.RCEN = 0x1;
  4020  000E28  86C5               	bsf	4037,3,c	;volatile
  4021  000E2A  A0C7               	btfss	4039,0,c	;volatile
  4022  000E2C  D7FE               	goto	l855
  4023  000E2E                     u3110:
  4024                           
  4025                           ;serial.c: 83: while (!PIR1bits.SSP1IF);
  4026  000E2E  A69E               	btfss	3998,3,c	;volatile
  4027  000E30  D7FE               	goto	u3110
  4028                           
  4029                           ;serial.c: 85: value = SSP1BUF;
  4030  000E32  CFC9 F063          	movff	4041,I2C1_Read_EEPROM@value	;volatile
  4031                           
  4032                           ;serial.c: 87: SSP1CON2bits.ACKDT = 0x1;
  4033  000E36  8AC5               	bsf	4037,5,c	;volatile
  4034                           
  4035                           ;serial.c: 88: SSP1CON2bits.ACKEN = 0x1;
  4036  000E38  88C5               	bsf	4037,4,c	;volatile
  4037  000E3A  B8C5               	btfsc	4037,4,c	;volatile
  4038  000E3C  D7FE               	goto	l861
  4039                           
  4040                           ;serial.c: 91: PIR1bits.SSP1IF = 0x0;
  4041  000E3E  969E               	bcf	3998,3,c	;volatile
  4042                           
  4043                           ;serial.c: 92: SSP1CON2bits.PEN = 0x1;
  4044  000E40  84C5               	bsf	4037,2,c	;volatile
  4045  000E42  B4C5               	btfsc	4037,2,c	;volatile
  4046  000E44  D7FE               	goto	l864
  4047                           
  4048                           ;serial.c: 96: PIR1bits.SSP1IF = 0x0;
  4049  000E46  969E               	bcf	3998,3,c	;volatile
  4050                           
  4051                           ;serial.c: 97: SSP1CON1bits.SSPEN = 0x1;
  4052  000E48  8AC6               	bsf	4038,5,c	;volatile
  4053                           
  4054                           ;serial.c: 99: return value;
  4055  000E4A  0100               	movlb	0	; () banked
  4056  000E4C  5163               	movf	I2C1_Read_EEPROM@value& (0+255),w,b
  4057  000E4E  0012               	return	
  4058  000E50                     __end_of_I2C1_Read_EEPROM:
  4059                           	opt stack 0
  4060                           tblptru	equ	0xFF8
  4061                           tblptrh	equ	0xFF7
  4062                           tblptrl	equ	0xFF6
  4063                           tablat	equ	0xFF5
  4064                           prodh	equ	0xFF4
  4065                           prodl	equ	0xFF3
  4066                           intcon	equ	0xFF2
  4067                           postinc0	equ	0xFEE
  4068                           wreg	equ	0xFE8
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _ADC_Read *****************
  4072 ;; Defined at:
  4073 ;;		line 308 in file "hardware.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  channel         2    0[BANK0 ] int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  value           2    2[BANK0 ] int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    0[BANK0 ] int 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;Total ram usage:        4 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    4
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text19
  4102  00095E                     __ptext19:
  4103                           	opt stack 0
  4104  00095E                     _ADC_Read:
  4105                           	opt stack 26
  4106                           
  4107                           ;hardware.c: 310: int value;
  4108                           ;hardware.c: 311: ADCHS0Lbits.CH0SA = channel;
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;incstack = 0
  4112  00095E  010E               	movlb	14	; () banked
  4113  000960  5186               	movf	134,w,b	;volatile
  4114  000962  0100               	movlb	0	; () banked
  4115  000964  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4116  000966  0BE0               	andlw	-32
  4117  000968  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4118  00096A  010E               	movlb	14	; () banked
  4119  00096C  6F86               	movwf	134,b	;volatile
  4120                           
  4121                           ; BSR set to: 14
  4122                           ;hardware.c: 312: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4123  00096E  0EA0               	movlw	160
  4124  000970                     u3637:
  4125  000970  D000               	nop2	
  4126  000972  2EE8               	decfsz	wreg,f,c
  4127  000974  D7FD               	bra	u3637
  4128                           
  4129                           ;hardware.c: 313: ADCON1Hbits.ADON = 1;
  4130  000976  8EC1               	bsf	4033,7,c	;volatile
  4131                           
  4132                           ;hardware.c: 314: ADCON1Lbits.SAMP = 1;
  4133  000978  82C0               	bsf	4032,1,c	;volatile
  4134                           
  4135                           ;hardware.c: 315: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4136  00097A  0EA0               	movlw	160
  4137  00097C                     u3647:
  4138  00097C  D000               	nop2	
  4139  00097E  2EE8               	decfsz	wreg,f,c
  4140  000980  D7FD               	bra	u3647
  4141                           
  4142                           ;hardware.c: 316: ADCON1Lbits.SAMP = 0;
  4143  000982  92C0               	bcf	4032,1,c	;volatile
  4144  000984  A0C0               	btfss	4032,0,c	;volatile
  4145  000986  D7FE               	goto	l663
  4146                           
  4147                           ;hardware.c: 318: ADCON1Hbits.ADON = 0;
  4148  000988  9EC1               	bcf	4033,7,c	;volatile
  4149                           
  4150                           ;hardware.c: 321: if (channel == 0)
  4151  00098A  0100               	movlb	0	; () banked
  4152  00098C  5160               	movf	ADC_Read@channel& (0+255),w,b
  4153  00098E  0100               	movlb	0	; () banked
  4154  000990  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4155  000992  A4D8               	btfss	status,2,c
  4156  000994  D005               	goto	l665
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;hardware.c: 322: {
  4160                           ;hardware.c: 323: value = ADCBUF0;
  4161  000996  CFC2 F062          	movff	4034,ADC_Read@value	;volatile
  4162  00099A  CFC3 F063          	movff	4035,ADC_Read@value+1	;volatile
  4163                           
  4164                           ;hardware.c: 324: }
  4165  00099E  D070               	goto	l684
  4166  0009A0                     l665:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;hardware.c: 325: else if (channel == 1)
  4170                           
  4171                           ; BSR set to: 0
  4172  0009A0  0100               	movlb	0	; () banked
  4173  0009A2  0560               	decf	ADC_Read@channel& (0+255),w,b
  4174  0009A4  0100               	movlb	0	; () banked
  4175  0009A6  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4176  0009A8  A4D8               	btfss	status,2,c
  4177  0009AA  D005               	goto	l667
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;hardware.c: 326: {
  4181                           ;hardware.c: 327: value = ADCBUF1;
  4182  0009AC  CE48 F062          	movff	3656,ADC_Read@value	;volatile
  4183  0009B0  CE49 F063          	movff	3657,ADC_Read@value+1	;volatile
  4184                           
  4185                           ;hardware.c: 328: }
  4186  0009B4  D065               	goto	l684
  4187  0009B6                     l667:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;hardware.c: 329: else if (channel == 2)
  4191                           
  4192                           ; BSR set to: 0
  4193  0009B6  0E02               	movlw	2
  4194  0009B8  0100               	movlb	0	; () banked
  4195  0009BA  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4196  0009BC  0100               	movlb	0	; () banked
  4197  0009BE  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4198  0009C0  A4D8               	btfss	status,2,c
  4199  0009C2  D005               	goto	l669
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;hardware.c: 330: {
  4203                           ;hardware.c: 331: value = ADCBUF2;
  4204  0009C4  CE4A F062          	movff	3658,ADC_Read@value	;volatile
  4205  0009C8  CE4B F063          	movff	3659,ADC_Read@value+1	;volatile
  4206                           
  4207                           ;hardware.c: 332: }
  4208  0009CC  D059               	goto	l684
  4209  0009CE                     l669:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;hardware.c: 333: else if (channel == 3)
  4213                           
  4214                           ; BSR set to: 0
  4215  0009CE  0E03               	movlw	3
  4216  0009D0  0100               	movlb	0	; () banked
  4217  0009D2  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4218  0009D4  0100               	movlb	0	; () banked
  4219  0009D6  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4220  0009D8  A4D8               	btfss	status,2,c
  4221  0009DA  D005               	goto	l671
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;hardware.c: 334: {
  4225                           ;hardware.c: 335: value = ADCBUF3;
  4226  0009DC  CE4C F062          	movff	3660,ADC_Read@value	;volatile
  4227  0009E0  CE4D F063          	movff	3661,ADC_Read@value+1	;volatile
  4228                           
  4229                           ;hardware.c: 336: }
  4230  0009E4  D04D               	goto	l684
  4231  0009E6                     l671:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;hardware.c: 337: else if (channel == 4)
  4235                           
  4236                           ; BSR set to: 0
  4237  0009E6  0E04               	movlw	4
  4238  0009E8  0100               	movlb	0	; () banked
  4239  0009EA  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4240  0009EC  0100               	movlb	0	; () banked
  4241  0009EE  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4242  0009F0  A4D8               	btfss	status,2,c
  4243  0009F2  D005               	goto	l673
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;hardware.c: 338: {
  4247                           ;hardware.c: 339: value = ADCBUF4;
  4248  0009F4  CE4E F062          	movff	3662,ADC_Read@value	;volatile
  4249  0009F8  CE4F F063          	movff	3663,ADC_Read@value+1	;volatile
  4250                           
  4251                           ;hardware.c: 340: }
  4252  0009FC  D041               	goto	l684
  4253  0009FE                     l673:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;hardware.c: 341: else if (channel == 5)
  4257                           
  4258                           ; BSR set to: 0
  4259  0009FE  0E05               	movlw	5
  4260  000A00  0100               	movlb	0	; () banked
  4261  000A02  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4262  000A04  0100               	movlb	0	; () banked
  4263  000A06  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4264  000A08  A4D8               	btfss	status,2,c
  4265  000A0A  D005               	goto	l675
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;hardware.c: 342: {
  4269                           ;hardware.c: 343: value = ADCBUF5;
  4270  000A0C  CE50 F062          	movff	3664,ADC_Read@value	;volatile
  4271  000A10  CE51 F063          	movff	3665,ADC_Read@value+1	;volatile
  4272                           
  4273                           ;hardware.c: 344: }
  4274  000A14  D035               	goto	l684
  4275  000A16                     l675:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;hardware.c: 345: else if (channel == 6)
  4279                           
  4280                           ; BSR set to: 0
  4281  000A16  0E06               	movlw	6
  4282  000A18  0100               	movlb	0	; () banked
  4283  000A1A  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4284  000A1C  0100               	movlb	0	; () banked
  4285  000A1E  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4286  000A20  A4D8               	btfss	status,2,c
  4287  000A22  D005               	goto	l677
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;hardware.c: 346: {
  4291                           ;hardware.c: 347: value = ADCBUF6;
  4292  000A24  CE52 F062          	movff	3666,ADC_Read@value	;volatile
  4293  000A28  CE53 F063          	movff	3667,ADC_Read@value+1	;volatile
  4294                           
  4295                           ;hardware.c: 348: }
  4296  000A2C  D029               	goto	l684
  4297  000A2E                     l677:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;hardware.c: 349: else if (channel == 14)
  4301                           
  4302                           ; BSR set to: 0
  4303  000A2E  0E0E               	movlw	14
  4304  000A30  0100               	movlb	0	; () banked
  4305  000A32  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4306  000A34  0100               	movlb	0	; () banked
  4307  000A36  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4308  000A38  A4D8               	btfss	status,2,c
  4309  000A3A  D005               	goto	l679
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;hardware.c: 350: {
  4313                           ;hardware.c: 351: value = ADCBUF14;
  4314  000A3C  CE62 F062          	movff	3682,ADC_Read@value	;volatile
  4315  000A40  CE63 F063          	movff	3683,ADC_Read@value+1	;volatile
  4316                           
  4317                           ;hardware.c: 352: }
  4318  000A44  D01D               	goto	l684
  4319  000A46                     l679:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;hardware.c: 353: else if (channel == 8)
  4323                           
  4324                           ; BSR set to: 0
  4325  000A46  0E08               	movlw	8
  4326  000A48  0100               	movlb	0	; () banked
  4327  000A4A  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4328  000A4C  0100               	movlb	0	; () banked
  4329  000A4E  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4330  000A50  A4D8               	btfss	status,2,c
  4331  000A52  D005               	goto	l681
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;hardware.c: 354: {
  4335                           ;hardware.c: 355: value = ADCBUF8;
  4336  000A54  CE56 F062          	movff	3670,ADC_Read@value	;volatile
  4337  000A58  CE57 F063          	movff	3671,ADC_Read@value+1	;volatile
  4338                           
  4339                           ;hardware.c: 356: }
  4340  000A5C  D011               	goto	l684
  4341  000A5E                     l681:
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;hardware.c: 357: else if (channel == 9)
  4345                           
  4346                           ; BSR set to: 0
  4347  000A5E  0E09               	movlw	9
  4348  000A60  0100               	movlb	0	; () banked
  4349  000A62  1960               	xorwf	ADC_Read@channel& (0+255),w,b
  4350  000A64  0100               	movlb	0	; () banked
  4351  000A66  1161               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4352  000A68  A4D8               	btfss	status,2,c
  4353  000A6A  D005               	goto	l683
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;hardware.c: 358: {
  4357                           ;hardware.c: 359: value = ADCBUF9;
  4358  000A6C  CE58 F062          	movff	3672,ADC_Read@value	;volatile
  4359  000A70  CE59 F063          	movff	3673,ADC_Read@value+1	;volatile
  4360                           
  4361                           ;hardware.c: 360: }
  4362  000A74  D005               	goto	l684
  4363  000A76                     l683:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;hardware.c: 361: else value = 0;
  4367                           
  4368                           ; BSR set to: 0
  4369  000A76  0E00               	movlw	0
  4370  000A78  0100               	movlb	0	; () banked
  4371  000A7A  6F63               	movwf	(ADC_Read@value+1)& (0+255),b
  4372  000A7C  0E00               	movlw	0
  4373  000A7E  6F62               	movwf	ADC_Read@value& (0+255),b
  4374  000A80                     l684:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;hardware.c: 362: return (value);
  4378                           
  4379                           ; BSR set to: 0
  4380                           
  4381                           ; BSR set to: 0
  4382                           
  4383                           ; BSR set to: 0
  4384                           
  4385                           ; BSR set to: 0
  4386                           
  4387                           ; BSR set to: 0
  4388                           
  4389                           ; BSR set to: 0
  4390                           
  4391                           ; BSR set to: 0
  4392                           
  4393                           ; BSR set to: 0
  4394                           
  4395                           ; BSR set to: 0
  4396                           
  4397                           ; BSR set to: 0
  4398  000A80  C062  F060         	movff	ADC_Read@value,?_ADC_Read
  4399  000A84  C063  F061         	movff	ADC_Read@value+1,?_ADC_Read+1
  4400  000A88  0012               	return	
  4401  000A8A                     __end_of_ADC_Read:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           postinc0	equ	0xFEE
  4411                           wreg	equ	0xFE8
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _highPriorityISR *****************
  4415 ;; Defined at:
  4416 ;;		line 121 in file "main.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4434 ;;Total ram usage:       18 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    3
  4437 ;; This function calls:
  4438 ;;		_checkSwitches
  4439 ;;		_sendParam
  4440 ;;		_serviceSwitches
  4441 ;;		_tapLED
  4442 ;; This function is called by:
  4443 ;;		Interrupt level 2
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	intcode
  4448  000008                     __pintcode:
  4449                           	opt stack 0
  4450  000008                     _highPriorityISR:
  4451                           	opt stack 24
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;incstack = 0
  4455  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4456  00000A  CFFA F02D          	movff	pclath,??_highPriorityISR
  4457  00000E  CFFB F02E          	movff	pclatu,??_highPriorityISR+1
  4458  000012  CFE9 F02F          	movff	fsr0l,??_highPriorityISR+2
  4459  000016  CFEA F030          	movff	fsr0h,??_highPriorityISR+3
  4460  00001A  CFE1 F031          	movff	fsr1l,??_highPriorityISR+4
  4461  00001E  CFE2 F032          	movff	fsr1h,??_highPriorityISR+5
  4462  000022  CFD9 F033          	movff	fsr2l,??_highPriorityISR+6
  4463  000026  CFDA F034          	movff	fsr2h,??_highPriorityISR+7
  4464  00002A  CFF3 F035          	movff	prodl,??_highPriorityISR+8
  4465  00002E  CFF4 F036          	movff	prodh,??_highPriorityISR+9
  4466  000032  CFF6 F037          	movff	tblptrl,??_highPriorityISR+10
  4467  000036  CFF7 F038          	movff	tblptrh,??_highPriorityISR+11
  4468  00003A  CFF8 F039          	movff	tblptru,??_highPriorityISR+12
  4469  00003E  CFF5 F03A          	movff	tablat,??_highPriorityISR+13
  4470  000042  C041  F03B         	movff	btemp,??_highPriorityISR+14
  4471  000046  C042  F03C         	movff	btemp+1,??_highPriorityISR+15
  4472  00004A  C043  F03D         	movff	btemp+2,??_highPriorityISR+16
  4473  00004E  C044  F03E         	movff	btemp+3,??_highPriorityISR+17
  4474                           
  4475                           ;main.c: 124: if(SSP2IF)
  4476  000052  ACA1               	btfss	4001,6,c	;volatile
  4477  000054  D003               	goto	i2l105
  4478                           
  4479                           ;main.c: 125: {
  4480                           ;main.c: 126: PIR2bits.SSP2IF = 0x0;
  4481  000056  9CA1               	bcf	4001,6,c	;volatile
  4482                           
  4483                           ;main.c: 127: sendParam();
  4484  000058  ECE8  F007         	call	_sendParam	;wreg free
  4485  00005C                     i2l105:
  4486                           
  4487                           ;main.c: 128: }
  4488                           ;main.c: 130: if (TMR4IF)
  4489  00005C  A0B8               	btfss	4024,0,c	;volatile
  4490  00005E  D005               	goto	i2l106
  4491                           
  4492                           ;main.c: 131: {
  4493                           ;main.c: 132: TMR4IF = 0;
  4494  000060  90B8               	bcf	4024,0,c	;volatile
  4495                           
  4496                           ;main.c: 133: tapLED();
  4497  000062  EC28  F007         	call	_tapLED	;wreg free
  4498                           
  4499                           ;main.c: 134: T4CONbits.TMR4ON = 1;
  4500  000066  010F               	movlb	15	; () banked
  4501  000068  8504               	bsf	4,2,b	;volatile
  4502  00006A                     i2l106:
  4503                           
  4504                           ;main.c: 135: }
  4505                           ;main.c: 137: if (TMR2IF)
  4506                           
  4507                           ; BSR set to: 15
  4508  00006A  A29E               	btfss	3998,1,c	;volatile
  4509  00006C  D012               	goto	i2l109
  4510                           
  4511                           ;main.c: 138: {
  4512                           ;main.c: 139: TMR2IF = 0;
  4513  00006E  929E               	bcf	3998,1,c	;volatile
  4514                           
  4515                           ;main.c: 140: tapTimeCount++;
  4516  000070  4A05               	infsnz	_tapTimeCount,f,c
  4517  000072  2A06               	incf	_tapTimeCount+1,f,c
  4518                           
  4519                           ;main.c: 141: if (tapTimeCount >= 3000)
  4520  000074  BE06               	btfsc	_tapTimeCount+1,7,c
  4521  000076  D00C               	goto	i2l108
  4522  000078  0EB8               	movlw	184
  4523  00007A  5C05               	subwf	_tapTimeCount,w,c
  4524  00007C  0E0B               	movlw	11
  4525  00007E  5806               	subwfb	_tapTimeCount+1,w,c
  4526  000080  A0D8               	btfss	status,0,c
  4527  000082  D006               	goto	i2l108
  4528                           
  4529                           ;main.c: 142: {
  4530                           ;main.c: 143: tapTimeCount = 3000;
  4531  000084  0E0B               	movlw	11
  4532  000086  6E06               	movwf	_tapTimeCount+1,c
  4533  000088  0EB8               	movlw	184
  4534  00008A  6E05               	movwf	_tapTimeCount,c
  4535                           
  4536                           ;main.c: 144: T2CONbits.TMR2ON = 0;
  4537  00008C  94CA               	bcf	4042,2,c	;volatile
  4538                           
  4539                           ;main.c: 145: }
  4540  00008E  D001               	goto	i2l109
  4541  000090                     i2l108:
  4542                           
  4543                           ;main.c: 146: else T2CONbits.TMR2ON = 1;
  4544  000090  84CA               	bsf	4042,2,c	;volatile
  4545  000092                     i2l109:
  4546                           
  4547                           ;main.c: 147: }
  4548                           ;main.c: 149: checkSwitches();
  4549  000092  EC55  F006         	call	_checkSwitches	;wreg free
  4550                           
  4551                           ;main.c: 151: if (TMR0IF)
  4552  000096  A4F2               	btfss	intcon,2,c	;volatile
  4553  000098  D004               	goto	i2l110
  4554                           
  4555                           ;main.c: 152: {
  4556                           ;main.c: 153: TMR0IF = 0;
  4557  00009A  94F2               	bcf	intcon,2,c	;volatile
  4558                           
  4559                           ;main.c: 154: serviceSwitches();
  4560  00009C  EC07  F004         	call	_serviceSwitches	;wreg free
  4561                           
  4562                           ;main.c: 155: T0CONbits.TMR0ON = 0x0;
  4563  0000A0  9ED5               	bcf	4053,7,c	;volatile
  4564  0000A2                     i2l110:
  4565  0000A2  C03E  F044         	movff	??_highPriorityISR+17,btemp+3
  4566  0000A6  C03D  F043         	movff	??_highPriorityISR+16,btemp+2
  4567  0000AA  C03C  F042         	movff	??_highPriorityISR+15,btemp+1
  4568  0000AE  C03B  F041         	movff	??_highPriorityISR+14,btemp
  4569  0000B2  C03A  FFF5         	movff	??_highPriorityISR+13,tablat
  4570  0000B6  C039  FFF8         	movff	??_highPriorityISR+12,tblptru
  4571  0000BA  C038  FFF7         	movff	??_highPriorityISR+11,tblptrh
  4572  0000BE  C037  FFF6         	movff	??_highPriorityISR+10,tblptrl
  4573  0000C2  C036  FFF4         	movff	??_highPriorityISR+9,prodh
  4574  0000C6  C035  FFF3         	movff	??_highPriorityISR+8,prodl
  4575  0000CA  C034  FFDA         	movff	??_highPriorityISR+7,fsr2h
  4576  0000CE  C033  FFD9         	movff	??_highPriorityISR+6,fsr2l
  4577  0000D2  C032  FFE2         	movff	??_highPriorityISR+5,fsr1h
  4578  0000D6  C031  FFE1         	movff	??_highPriorityISR+4,fsr1l
  4579  0000DA  C030  FFEA         	movff	??_highPriorityISR+3,fsr0h
  4580  0000DE  C02F  FFE9         	movff	??_highPriorityISR+2,fsr0l
  4581  0000E2  C02E  FFFB         	movff	??_highPriorityISR+1,pclatu
  4582  0000E6  C02D  FFFA         	movff	??_highPriorityISR,pclath
  4583  0000EA  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4584  0000EC  0011               	retfie		f
  4585  0000EE                     __end_of_highPriorityISR:
  4586                           	opt stack 0
  4587                           pclatu	equ	0xFFB
  4588                           pclath	equ	0xFFA
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           intcon	equ	0xFF2
  4596                           postinc0	equ	0xFEE
  4597                           fsr0h	equ	0xFEA
  4598                           fsr0l	equ	0xFE9
  4599                           wreg	equ	0xFE8
  4600                           fsr1h	equ	0xFE2
  4601                           fsr1l	equ	0xFE1
  4602                           fsr2h	equ	0xFDA
  4603                           fsr2l	equ	0xFD9
  4604                           status	equ	0xFD8
  4605                           
  4606 ;; *************** function _tapLED *****************
  4607 ;; Defined at:
  4608 ;;		line 75 in file "hardware.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;		None
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      void 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;Total ram usage:        3 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_highPriorityISR
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text21
  4636  000E50                     __ptext21:
  4637                           	opt stack 0
  4638  000E50                     _tapLED:
  4639                           	opt stack 26
  4640                           
  4641                           ;hardware.c: 84: if(tapFlash)
  4642                           
  4643                           ;incstack = 0
  4644  000E50  0100               	movlb	0	; () banked
  4645  000E52  518A               	movf	_tapFlash& (0+255),w,b
  4646  000E54  0100               	movlb	0	; () banked
  4647  000E56  118B               	iorwf	(_tapFlash+1)& (0+255),w,b
  4648  000E58  B4D8               	btfsc	status,2,c
  4649  000E5A  D017               	goto	i2l609
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;hardware.c: 85: {
  4653                           ;hardware.c: 86: tapDispCount++;
  4654  000E5C  4A0F               	infsnz	_tapDispCount,f,c
  4655  000E5E  2A10               	incf	_tapDispCount+1,f,c
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;hardware.c: 87: if (tapDispCount >= tapOnTime)
  4659  000E60  503F               	movf	_tapOnTime,w,c
  4660  000E62  5C0F               	subwf	_tapDispCount,w,c
  4661  000E64  5010               	movf	_tapDispCount+1,w,c
  4662  000E66  0A80               	xorlw	128
  4663  000E68  6E21               	movwf	??_tapLED& (0+255),c
  4664  000E6A  5040               	movf	_tapOnTime+1,w,c
  4665  000E6C  0A80               	xorlw	128
  4666  000E6E  5821               	subwfb	??_tapLED& (0+255),w,c
  4667  000E70  A0D8               	btfss	status,0,c
  4668  000E72  0012               	return	
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;hardware.c: 88: {
  4672                           ;hardware.c: 89: tapDispCount = 0;
  4673  000E74  0E00               	movlw	0
  4674  000E76  6E10               	movwf	_tapDispCount+1,c
  4675  000E78  0E00               	movlw	0
  4676  000E7A  6E0F               	movwf	_tapDispCount,c
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;hardware.c: 90: LATE0 = 0;
  4680  000E7C  908D               	bcf	3981,0,c	;volatile
  4681                           
  4682                           ;hardware.c: 91: tapFlash = 0;
  4683  000E7E  0E00               	movlw	0
  4684  000E80  0100               	movlb	0	; () banked
  4685  000E82  6F8B               	movwf	(_tapFlash+1)& (0+255),b
  4686  000E84  0E00               	movlw	0
  4687  000E86  6F8A               	movwf	_tapFlash& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;hardware.c: 92: }
  4691                           ;hardware.c: 93: }
  4692  000E88  0012               	return	
  4693  000E8A                     i2l609:
  4694                           
  4695                           ; BSR set to: 0
  4696                           ;hardware.c: 94: else
  4697                           ;hardware.c: 95: {
  4698                           ;hardware.c: 96: tapDispCount++;
  4699                           
  4700                           ; BSR set to: 0
  4701  000E8A  4A0F               	infsnz	_tapDispCount,f,c
  4702  000E8C  2A10               	incf	_tapDispCount+1,f,c
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;hardware.c: 97: if (tapDispCount >= (currentTapTime-tapOnTime))
  4706  000E8E  C03F  F021         	movff	_tapOnTime,??_tapLED
  4707  000E92  C040  F022         	movff	_tapOnTime+1,??_tapLED+1
  4708  000E96  1E21               	comf	??_tapLED,f,c
  4709  000E98  1E22               	comf	??_tapLED+1,f,c
  4710  000E9A  4A21               	infsnz	??_tapLED,f,c
  4711  000E9C  2A22               	incf	??_tapLED+1,f,c
  4712  000E9E  0100               	movlb	0	; () banked
  4713  000EA0  5192               	movf	_currentTapTime& (0+255),w,b
  4714  000EA2  2621               	addwf	??_tapLED,f,c
  4715  000EA4  0100               	movlb	0	; () banked
  4716  000EA6  5193               	movf	(_currentTapTime+1)& (0+255),w,b
  4717  000EA8  2222               	addwfc	??_tapLED+1,f,c
  4718  000EAA  5021               	movf	??_tapLED,w,c
  4719  000EAC  5C0F               	subwf	_tapDispCount,w,c
  4720  000EAE  5010               	movf	_tapDispCount+1,w,c
  4721  000EB0  0A80               	xorlw	128
  4722  000EB2  6E23               	movwf	(??_tapLED+2)& (0+255),c
  4723  000EB4  5022               	movf	??_tapLED+1,w,c
  4724  000EB6  0A80               	xorlw	128
  4725  000EB8  5823               	subwfb	(??_tapLED+2)& (0+255),w,c
  4726  000EBA  A0D8               	btfss	status,0,c
  4727  000EBC  0012               	return	
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;hardware.c: 98: {
  4731                           ;hardware.c: 99: tapDispCount = 0;
  4732  000EBE  0E00               	movlw	0
  4733  000EC0  6E10               	movwf	_tapDispCount+1,c
  4734  000EC2  0E00               	movlw	0
  4735  000EC4  6E0F               	movwf	_tapDispCount,c
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;hardware.c: 100: LATE0 = 1;
  4739  000EC6  808D               	bsf	3981,0,c	;volatile
  4740                           
  4741                           ;hardware.c: 101: tapFlash = 1;
  4742  000EC8  0E00               	movlw	0
  4743  000ECA  0100               	movlb	0	; () banked
  4744  000ECC  6F8B               	movwf	(_tapFlash+1)& (0+255),b
  4745  000ECE  0E01               	movlw	1
  4746  000ED0  6F8A               	movwf	_tapFlash& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  000ED2  0012               	return	
  4750  000ED4                     __end_of_tapLED:
  4751                           	opt stack 0
  4752                           pclatu	equ	0xFFB
  4753                           pclath	equ	0xFFA
  4754                           tblptru	equ	0xFF8
  4755                           tblptrh	equ	0xFF7
  4756                           tblptrl	equ	0xFF6
  4757                           tablat	equ	0xFF5
  4758                           prodh	equ	0xFF4
  4759                           prodl	equ	0xFF3
  4760                           intcon	equ	0xFF2
  4761                           postinc0	equ	0xFEE
  4762                           fsr0h	equ	0xFEA
  4763                           fsr0l	equ	0xFE9
  4764                           wreg	equ	0xFE8
  4765                           fsr1h	equ	0xFE2
  4766                           fsr1l	equ	0xFE1
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _serviceSwitches *****************
  4772 ;; Defined at:
  4773 ;;		line 165 in file "hardware.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, status,2, status,0, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    2
  4794 ;; This function calls:
  4795 ;;		_processTaps
  4796 ;;		i2_updatePresetLEDs
  4797 ;; This function is called by:
  4798 ;;		_highPriorityISR
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text22
  4803  00080E                     __ptext22:
  4804                           	opt stack 0
  4805  00080E                     _serviceSwitches:
  4806                           	opt stack 24
  4807                           
  4808                           ;hardware.c: 167: if (fsw1)
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;incstack = 0
  4812  00080E  0100               	movlb	0	; () banked
  4813  000810  5190               	movf	_fsw1& (0+255),w,b
  4814  000812  0100               	movlb	0	; () banked
  4815  000814  1191               	iorwf	(_fsw1+1)& (0+255),w,b
  4816  000816  B4D8               	btfsc	status,2,c
  4817  000818  D013               	goto	i2u195_45
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;hardware.c: 168: {
  4821                           ;hardware.c: 169: fsw1 = 0;
  4822  00081A  0E00               	movlw	0
  4823  00081C  0100               	movlb	0	; () banked
  4824  00081E  6F91               	movwf	(_fsw1+1)& (0+255),b
  4825  000820  0E00               	movlw	0
  4826  000822  6F90               	movwf	_fsw1& (0+255),b
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;hardware.c: 170: if (!RD4)
  4830  000824  B883               	btfsc	3971,4,c	;volatile
  4831  000826  D00C               	goto	i2u195_45
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;hardware.c: 171: {
  4835                           ;hardware.c: 172: bypass ^= 1;
  4836  000828  0E01               	movlw	1
  4837  00082A  1A1C               	xorwf	_bypass,f,c
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;hardware.c: 173: LATD3 = bypass;
  4841  00082C  A01C               	btfss	_bypass,0,c
  4842  00082E  D002               	goto	i2u192_40
  4843  000830  868C               	bsf	3980,3,c	;volatile
  4844  000832  D001               	goto	i2u193_45
  4845  000834                     i2u192_40:
  4846  000834  968C               	bcf	3980,3,c	;volatile
  4847  000836                     i2u193_45:
  4848                           
  4849                           ;hardware.c: 174: LATD2 = bypass;
  4850  000836  A01C               	btfss	_bypass,0,c
  4851  000838  D002               	goto	i2u194_40
  4852  00083A  848C               	bsf	3980,2,c	;volatile
  4853  00083C  D001               	goto	i2u195_45
  4854  00083E                     i2u194_40:
  4855  00083E  948C               	bcf	3980,2,c	;volatile
  4856  000840                     i2u195_45:
  4857                           
  4858                           ;hardware.c: 175: }
  4859                           ;hardware.c: 176: }
  4860                           ;hardware.c: 178: if (fsw2)
  4861  000840  0100               	movlb	0	; () banked
  4862  000842  518E               	movf	_fsw2& (0+255),w,b
  4863  000844  0100               	movlb	0	; () banked
  4864  000846  118F               	iorwf	(_fsw2+1)& (0+255),w,b
  4865  000848  B4D8               	btfsc	status,2,c
  4866  00084A  D008               	goto	i2l630
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;hardware.c: 179: {
  4870                           ;hardware.c: 180: fsw2 = 0;
  4871  00084C  0E00               	movlw	0
  4872  00084E  0100               	movlb	0	; () banked
  4873  000850  6F8F               	movwf	(_fsw2+1)& (0+255),b
  4874  000852  0E00               	movlw	0
  4875  000854  6F8E               	movwf	_fsw2& (0+255),b
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;hardware.c: 181: if (RE3)
  4879  000856  B684               	btfsc	3972,3,c	;volatile
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;hardware.c: 182: {
  4883                           ;hardware.c: 183: processTaps();
  4884  000858  EC45  F005         	call	_processTaps	;wreg free
  4885  00085C                     i2l630:
  4886                           
  4887                           ;hardware.c: 184: }
  4888                           ;hardware.c: 185: }
  4889                           ;hardware.c: 187: if (switch1)
  4890  00085C  5019               	movf	_switch1,w,c
  4891  00085E  101A               	iorwf	_switch1+1,w,c
  4892  000860  B4D8               	btfsc	status,2,c
  4893  000862  D019               	goto	i2l637
  4894                           
  4895                           ;hardware.c: 188: {
  4896                           ;hardware.c: 189: switch1 = 0;
  4897  000864  0E00               	movlw	0
  4898  000866  6E1A               	movwf	_switch1+1,c
  4899  000868  0E00               	movlw	0
  4900  00086A  6E19               	movwf	_switch1,c
  4901                           
  4902                           ;hardware.c: 190: if (!RG1)
  4903  00086C  B286               	btfsc	3974,1,c	;volatile
  4904  00086E  D013               	goto	i2l637
  4905                           
  4906                           ;hardware.c: 191: {
  4907                           ;hardware.c: 192: intA++;
  4908  000870  2A20               	incf	_intA,f,c
  4909                           
  4910                           ;hardware.c: 193: if (intA >= 3)
  4911  000872  0E02               	movlw	2
  4912  000874  6420               	cpfsgt	_intA,c
  4913  000876  D002               	goto	i2l633
  4914                           
  4915                           ;hardware.c: 194: {
  4916                           ;hardware.c: 195: intA = 0;
  4917  000878  0E00               	movlw	0
  4918  00087A  6E20               	movwf	_intA,c
  4919  00087C                     i2l633:
  4920                           
  4921                           ;hardware.c: 196: }
  4922                           ;hardware.c: 198: if (intA == 0)
  4923  00087C  5020               	movf	_intA,w,c
  4924  00087E  A4D8               	btfss	status,2,c
  4925  000880  D003               	goto	i2l634
  4926                           
  4927                           ;hardware.c: 199: {
  4928                           ;hardware.c: 200: LATH7 = 1;
  4929  000882  8E90               	bsf	3984,7,c	;volatile
  4930                           
  4931                           ;hardware.c: 201: LATF2 = 0;
  4932  000884  948E               	bcf	3982,2,c	;volatile
  4933                           
  4934                           ;hardware.c: 202: }
  4935  000886  D007               	goto	i2l637
  4936  000888                     i2l634:
  4937                           
  4938                           ;hardware.c: 203: else if (intA == 1)
  4939  000888  0420               	decf	_intA,w,c
  4940  00088A  A4D8               	btfss	status,2,c
  4941  00088C  D002               	goto	i2l636
  4942                           
  4943                           ;hardware.c: 204: {
  4944                           ;hardware.c: 205: LATH7 = 0;
  4945  00088E  9E90               	bcf	3984,7,c	;volatile
  4946  000890  D001               	goto	L6
  4947  000892                     i2l636:
  4948                           
  4949                           ;hardware.c: 208: else
  4950                           ;hardware.c: 209: {
  4951                           ;hardware.c: 210: LATH7 = 1;
  4952  000892  8E90               	bsf	3984,7,c	;volatile
  4953  000894                     L6:
  4954                           
  4955                           ;hardware.c: 211: LATF2 = 1;
  4956  000894  848E               	bsf	3982,2,c	;volatile
  4957  000896                     i2l637:
  4958                           
  4959                           ;hardware.c: 212: }
  4960                           ;hardware.c: 213: }
  4961                           ;hardware.c: 214: }
  4962                           ;hardware.c: 216: if (switch2)
  4963  000896  5017               	movf	_switch2,w,c
  4964  000898  1018               	iorwf	_switch2+1,w,c
  4965  00089A  B4D8               	btfsc	status,2,c
  4966  00089C  D019               	goto	i2l644
  4967                           
  4968                           ;hardware.c: 217: {
  4969                           ;hardware.c: 218: switch2 = 0;
  4970  00089E  0E00               	movlw	0
  4971  0008A0  6E18               	movwf	_switch2+1,c
  4972  0008A2  0E00               	movlw	0
  4973  0008A4  6E17               	movwf	_switch2,c
  4974                           
  4975                           ;hardware.c: 219: if (!RG2)
  4976  0008A6  B486               	btfsc	3974,2,c	;volatile
  4977  0008A8  D013               	goto	i2l644
  4978                           
  4979                           ;hardware.c: 220: {
  4980                           ;hardware.c: 221: intB++;
  4981  0008AA  2A1F               	incf	_intB,f,c
  4982                           
  4983                           ;hardware.c: 222: if (intB >= 3)
  4984  0008AC  0E02               	movlw	2
  4985  0008AE  641F               	cpfsgt	_intB,c
  4986  0008B0  D002               	goto	i2l640
  4987                           
  4988                           ;hardware.c: 223: {
  4989                           ;hardware.c: 224: intB = 0;
  4990  0008B2  0E00               	movlw	0
  4991  0008B4  6E1F               	movwf	_intB,c
  4992  0008B6                     i2l640:
  4993                           
  4994                           ;hardware.c: 225: }
  4995                           ;hardware.c: 227: if (intB == 0)
  4996  0008B6  501F               	movf	_intB,w,c
  4997  0008B8  A4D8               	btfss	status,2,c
  4998  0008BA  D003               	goto	i2l641
  4999                           
  5000                           ;hardware.c: 228: {
  5001                           ;hardware.c: 229: LATF5 = 1;
  5002  0008BC  8A8E               	bsf	3982,5,c	;volatile
  5003                           
  5004                           ;hardware.c: 230: LATF6 = 0;
  5005  0008BE  9C8E               	bcf	3982,6,c	;volatile
  5006                           
  5007                           ;hardware.c: 231: }
  5008  0008C0  D007               	goto	i2l644
  5009  0008C2                     i2l641:
  5010                           
  5011                           ;hardware.c: 232: else if (intB == 1)
  5012  0008C2  041F               	decf	_intB,w,c
  5013  0008C4  A4D8               	btfss	status,2,c
  5014  0008C6  D002               	goto	i2l643
  5015                           
  5016                           ;hardware.c: 233: {
  5017                           ;hardware.c: 234: LATF5 = 0;
  5018  0008C8  9A8E               	bcf	3982,5,c	;volatile
  5019  0008CA  D001               	goto	L7
  5020  0008CC                     i2l643:
  5021                           
  5022                           ;hardware.c: 237: else
  5023                           ;hardware.c: 238: {
  5024                           ;hardware.c: 239: LATF5 = 1;
  5025  0008CC  8A8E               	bsf	3982,5,c	;volatile
  5026  0008CE                     L7:
  5027                           
  5028                           ;hardware.c: 240: LATF6 = 1;
  5029  0008CE  8C8E               	bsf	3982,6,c	;volatile
  5030  0008D0                     i2l644:
  5031                           
  5032                           ;hardware.c: 241: }
  5033                           ;hardware.c: 242: }
  5034                           ;hardware.c: 243: }
  5035                           ;hardware.c: 245: if (switch3)
  5036  0008D0  5015               	movf	_switch3,w,c
  5037  0008D2  1016               	iorwf	_switch3+1,w,c
  5038  0008D4  B4D8               	btfsc	status,2,c
  5039  0008D6  D019               	goto	i2l651
  5040                           
  5041                           ;hardware.c: 246: {
  5042                           ;hardware.c: 247: switch3 = 0;
  5043  0008D8  0E00               	movlw	0
  5044  0008DA  6E16               	movwf	_switch3+1,c
  5045  0008DC  0E00               	movlw	0
  5046  0008DE  6E15               	movwf	_switch3,c
  5047                           
  5048                           ;hardware.c: 248: if (!RE6)
  5049  0008E0  BC84               	btfsc	3972,6,c	;volatile
  5050  0008E2  D013               	goto	i2l651
  5051                           
  5052                           ;hardware.c: 249: {
  5053                           ;hardware.c: 250: intC++;
  5054  0008E4  2A1E               	incf	_intC,f,c
  5055                           
  5056                           ;hardware.c: 251: if (intC >= 3)
  5057  0008E6  0E02               	movlw	2
  5058  0008E8  641E               	cpfsgt	_intC,c
  5059  0008EA  D002               	goto	i2l647
  5060                           
  5061                           ;hardware.c: 252: {
  5062                           ;hardware.c: 253: intC = 0;
  5063  0008EC  0E00               	movlw	0
  5064  0008EE  6E1E               	movwf	_intC,c
  5065  0008F0                     i2l647:
  5066                           
  5067                           ;hardware.c: 254: }
  5068                           ;hardware.c: 256: if (intC == 0)
  5069  0008F0  501E               	movf	_intC,w,c
  5070  0008F2  A4D8               	btfss	status,2,c
  5071  0008F4  D003               	goto	i2l648
  5072                           
  5073                           ;hardware.c: 257: {
  5074                           ;hardware.c: 258: LATG4 = 1;
  5075  0008F6  888F               	bsf	3983,4,c	;volatile
  5076                           
  5077                           ;hardware.c: 259: LATH0 = 0;
  5078  0008F8  9090               	bcf	3984,0,c	;volatile
  5079                           
  5080                           ;hardware.c: 260: }
  5081  0008FA  D007               	goto	i2l651
  5082  0008FC                     i2l648:
  5083                           
  5084                           ;hardware.c: 261: else if (intC == 1)
  5085  0008FC  041E               	decf	_intC,w,c
  5086  0008FE  A4D8               	btfss	status,2,c
  5087  000900  D002               	goto	i2l650
  5088                           
  5089                           ;hardware.c: 262: {
  5090                           ;hardware.c: 263: LATG4 = 0;
  5091  000902  988F               	bcf	3983,4,c	;volatile
  5092  000904  D001               	goto	L8
  5093  000906                     i2l650:
  5094                           
  5095                           ;hardware.c: 266: else
  5096                           ;hardware.c: 267: {
  5097                           ;hardware.c: 268: LATG4 = 1;
  5098  000906  888F               	bsf	3983,4,c	;volatile
  5099  000908                     L8:
  5100                           
  5101                           ;hardware.c: 269: LATH0 = 1;
  5102  000908  8090               	bsf	3984,0,c	;volatile
  5103  00090A                     i2l651:
  5104                           
  5105                           ;hardware.c: 270: }
  5106                           ;hardware.c: 271: }
  5107                           ;hardware.c: 272: }
  5108                           ;hardware.c: 274: if (switch4)
  5109  00090A  5013               	movf	_switch4,w,c
  5110  00090C  1014               	iorwf	_switch4+1,w,c
  5111  00090E  B4D8               	btfsc	status,2,c
  5112  000910  D011               	goto	i2l653
  5113                           
  5114                           ;hardware.c: 275: {
  5115                           ;hardware.c: 276: switch4 = 0;
  5116  000912  0E00               	movlw	0
  5117  000914  6E14               	movwf	_switch4+1,c
  5118  000916  0E00               	movlw	0
  5119  000918  6E13               	movwf	_switch4,c
  5120                           
  5121                           ;hardware.c: 277: if (!RD1)
  5122  00091A  B283               	btfsc	3971,1,c	;volatile
  5123  00091C  D00B               	goto	i2l653
  5124                           
  5125                           ;hardware.c: 278: {
  5126                           ;hardware.c: 279: preset++;
  5127  00091E  2A1B               	incf	_preset,f,c
  5128                           
  5129                           ;hardware.c: 280: if (preset >= 6)
  5130  000920  0E05               	movlw	5
  5131  000922  641B               	cpfsgt	_preset,c
  5132  000924  D002               	goto	i2l654
  5133                           
  5134                           ;hardware.c: 281: {
  5135                           ;hardware.c: 282: preset = 0;
  5136  000926  0E00               	movlw	0
  5137  000928  6E1B               	movwf	_preset,c
  5138  00092A                     i2l654:
  5139                           
  5140                           ;hardware.c: 283: }
  5141                           ;hardware.c: 284: updatePresetLEDs(preset);
  5142  00092A  C01B  F021         	movff	_preset,i2updatePresetLEDs@psNum
  5143  00092E  6A22               	clrf	i2updatePresetLEDs@psNum+1,c
  5144  000930  ECAC  F007         	call	i2_updatePresetLEDs	;wreg free
  5145  000934                     i2l653:
  5146                           
  5147                           ;hardware.c: 285: }
  5148                           ;hardware.c: 286: }
  5149                           ;hardware.c: 288: if (switch5)
  5150  000934  5011               	movf	_switch5,w,c
  5151  000936  1012               	iorwf	_switch5+1,w,c
  5152  000938  B4D8               	btfsc	status,2,c
  5153  00093A  0012               	return	
  5154                           
  5155                           ;hardware.c: 289: {
  5156                           ;hardware.c: 290: switch5 = 0;
  5157  00093C  0E00               	movlw	0
  5158  00093E  6E12               	movwf	_switch5+1,c
  5159  000940  0E00               	movlw	0
  5160  000942  6E11               	movwf	_switch5,c
  5161                           
  5162                           ;hardware.c: 291: if (!RG3)
  5163  000944  B686               	btfsc	3974,3,c	;volatile
  5164  000946  0012               	return	
  5165                           
  5166                           ;hardware.c: 292: {
  5167                           ;hardware.c: 293: if (swX)
  5168  000948  501D               	movf	_swX,w,c
  5169  00094A  B4D8               	btfsc	status,2,c
  5170  00094C  D003               	goto	i2l657
  5171                           
  5172                           ;hardware.c: 294: {
  5173                           ;hardware.c: 295: LATE1 = 1;
  5174  00094E  828D               	bsf	3981,1,c	;volatile
  5175                           
  5176                           ;hardware.c: 296: LATH1 = 0;
  5177  000950  9290               	bcf	3984,1,c	;volatile
  5178                           
  5179                           ;hardware.c: 297: }
  5180  000952  D002               	goto	i2l658
  5181  000954                     i2l657:
  5182                           
  5183                           ;hardware.c: 298: else
  5184                           ;hardware.c: 299: {
  5185                           ;hardware.c: 300: LATE1 = 0;
  5186  000954  928D               	bcf	3981,1,c	;volatile
  5187                           
  5188                           ;hardware.c: 301: LATH1 = 1;
  5189  000956  8290               	bsf	3984,1,c	;volatile
  5190  000958                     i2l658:
  5191                           
  5192                           ;hardware.c: 302: }
  5193                           ;hardware.c: 303: swX ^= 1;
  5194  000958  0E01               	movlw	1
  5195  00095A  1A1D               	xorwf	_swX,f,c
  5196  00095C  0012               	return	
  5197  00095E                     __end_of_serviceSwitches:
  5198                           	opt stack 0
  5199                           pclatu	equ	0xFFB
  5200                           pclath	equ	0xFFA
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           intcon	equ	0xFF2
  5208                           postinc0	equ	0xFEE
  5209                           fsr0h	equ	0xFEA
  5210                           fsr0l	equ	0xFE9
  5211                           wreg	equ	0xFE8
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function i2_updatePresetLEDs *****************
  5219 ;; Defined at:
  5220 ;;		line 475 in file "hardware.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  psNum           2    0[COMRAM] int 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_serviceSwitches
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text23
  5248  000F58                     __ptext23:
  5249                           	opt stack 0
  5250  000F58                     i2_updatePresetLEDs:
  5251                           	opt stack 25
  5252                           
  5253                           ;hardware.c: 477: if (psNum == 1)
  5254                           
  5255                           ;incstack = 0
  5256  000F58  0421               	decf	i2updatePresetLEDs@psNum,w,c
  5257  000F5A  1022               	iorwf	i2updatePresetLEDs@psNum+1,w,c
  5258  000F5C  A4D8               	btfss	status,2,c
  5259  000F5E  D006               	goto	i2l698
  5260                           
  5261                           ;hardware.c: 478: {
  5262                           ;hardware.c: 479: LATD0 = 1;
  5263  000F60  808C               	bsf	3980,0,c	;volatile
  5264                           
  5265                           ;hardware.c: 480: LATE7 = 0;
  5266  000F62  9E8D               	bcf	3981,7,c	;volatile
  5267                           
  5268                           ;hardware.c: 481: LATE5 = 0;
  5269  000F64  9A8D               	bcf	3981,5,c	;volatile
  5270                           
  5271                           ;hardware.c: 482: LATE4 = 0;
  5272  000F66  988D               	bcf	3981,4,c	;volatile
  5273                           
  5274                           ;hardware.c: 483: LATH2 = 0;
  5275  000F68  9490               	bcf	3984,2,c	;volatile
  5276                           
  5277                           ;hardware.c: 484: }
  5278  000F6A  0012               	return	
  5279  000F6C                     i2l698:
  5280                           
  5281                           ;hardware.c: 485: else if (psNum == 2)
  5282  000F6C  0E02               	movlw	2
  5283  000F6E  1821               	xorwf	i2updatePresetLEDs@psNum,w,c
  5284  000F70  1022               	iorwf	i2updatePresetLEDs@psNum+1,w,c
  5285  000F72  A4D8               	btfss	status,2,c
  5286  000F74  D006               	goto	i2l700
  5287                           
  5288                           ;hardware.c: 486: {
  5289                           ;hardware.c: 487: LATD0 = 0;
  5290  000F76  908C               	bcf	3980,0,c	;volatile
  5291                           
  5292                           ;hardware.c: 488: LATE7 = 1;
  5293  000F78  8E8D               	bsf	3981,7,c	;volatile
  5294                           
  5295                           ;hardware.c: 489: LATE5 = 0;
  5296  000F7A  9A8D               	bcf	3981,5,c	;volatile
  5297                           
  5298                           ;hardware.c: 490: LATE4 = 0;
  5299  000F7C  988D               	bcf	3981,4,c	;volatile
  5300                           
  5301                           ;hardware.c: 491: LATH2 = 0;
  5302  000F7E  9490               	bcf	3984,2,c	;volatile
  5303                           
  5304                           ;hardware.c: 492: }
  5305  000F80  0012               	return	
  5306  000F82                     i2l700:
  5307                           
  5308                           ;hardware.c: 493: else if (psNum == 3)
  5309  000F82  0E03               	movlw	3
  5310  000F84  1821               	xorwf	i2updatePresetLEDs@psNum,w,c
  5311  000F86  1022               	iorwf	i2updatePresetLEDs@psNum+1,w,c
  5312  000F88  A4D8               	btfss	status,2,c
  5313  000F8A  D006               	goto	i2l702
  5314                           
  5315                           ;hardware.c: 494: {
  5316                           ;hardware.c: 495: LATD0 = 0;
  5317  000F8C  908C               	bcf	3980,0,c	;volatile
  5318                           
  5319                           ;hardware.c: 496: LATE7 = 0;
  5320  000F8E  9E8D               	bcf	3981,7,c	;volatile
  5321                           
  5322                           ;hardware.c: 497: LATE5 = 1;
  5323  000F90  8A8D               	bsf	3981,5,c	;volatile
  5324                           
  5325                           ;hardware.c: 498: LATE4 = 0;
  5326  000F92  988D               	bcf	3981,4,c	;volatile
  5327                           
  5328                           ;hardware.c: 499: LATH2 = 0;
  5329  000F94  9490               	bcf	3984,2,c	;volatile
  5330                           
  5331                           ;hardware.c: 500: }
  5332  000F96  0012               	return	
  5333  000F98                     i2l702:
  5334                           
  5335                           ;hardware.c: 501: else if (psNum == 4)
  5336  000F98  0E04               	movlw	4
  5337  000F9A  1821               	xorwf	i2updatePresetLEDs@psNum,w,c
  5338  000F9C  1022               	iorwf	i2updatePresetLEDs@psNum+1,w,c
  5339  000F9E  A4D8               	btfss	status,2,c
  5340  000FA0  D006               	goto	i2l704
  5341                           
  5342                           ;hardware.c: 502: {
  5343                           ;hardware.c: 503: LATD0 = 0;
  5344  000FA2  908C               	bcf	3980,0,c	;volatile
  5345                           
  5346                           ;hardware.c: 504: LATE7 = 0;
  5347  000FA4  9E8D               	bcf	3981,7,c	;volatile
  5348                           
  5349                           ;hardware.c: 505: LATE5 = 0;
  5350  000FA6  9A8D               	bcf	3981,5,c	;volatile
  5351                           
  5352                           ;hardware.c: 506: LATE4 = 1;
  5353  000FA8  888D               	bsf	3981,4,c	;volatile
  5354                           
  5355                           ;hardware.c: 507: LATH2 = 0;
  5356  000FAA  9490               	bcf	3984,2,c	;volatile
  5357                           
  5358                           ;hardware.c: 508: }
  5359  000FAC  0012               	return	
  5360  000FAE                     i2l704:
  5361                           
  5362                           ;hardware.c: 509: else if (psNum == 5)
  5363  000FAE  0E05               	movlw	5
  5364  000FB0  1821               	xorwf	i2updatePresetLEDs@psNum,w,c
  5365  000FB2  1022               	iorwf	i2updatePresetLEDs@psNum+1,w,c
  5366  000FB4  A4D8               	btfss	status,2,c
  5367  000FB6  D006               	goto	i2l706
  5368                           
  5369                           ;hardware.c: 510: {
  5370                           ;hardware.c: 511: LATD0 = 0;
  5371  000FB8  908C               	bcf	3980,0,c	;volatile
  5372                           
  5373                           ;hardware.c: 512: LATE7 = 0;
  5374  000FBA  9E8D               	bcf	3981,7,c	;volatile
  5375                           
  5376                           ;hardware.c: 513: LATE5 = 0;
  5377  000FBC  9A8D               	bcf	3981,5,c	;volatile
  5378                           
  5379                           ;hardware.c: 514: LATE4 = 0;
  5380  000FBE  988D               	bcf	3981,4,c	;volatile
  5381                           
  5382                           ;hardware.c: 515: LATH2 = 1;
  5383  000FC0  8490               	bsf	3984,2,c	;volatile
  5384                           
  5385                           ;hardware.c: 516: }
  5386  000FC2  0012               	return	
  5387  000FC4                     i2l706:
  5388                           
  5389                           ;hardware.c: 517: else
  5390                           ;hardware.c: 518: {
  5391                           ;hardware.c: 519: LATD0 = 0;
  5392  000FC4  908C               	bcf	3980,0,c	;volatile
  5393                           
  5394                           ;hardware.c: 520: LATE7 = 0;
  5395  000FC6  9E8D               	bcf	3981,7,c	;volatile
  5396                           
  5397                           ;hardware.c: 521: LATE5 = 0;
  5398  000FC8  9A8D               	bcf	3981,5,c	;volatile
  5399                           
  5400                           ;hardware.c: 522: LATE4 = 0;
  5401  000FCA  988D               	bcf	3981,4,c	;volatile
  5402                           
  5403                           ;hardware.c: 523: LATH2 = 0;
  5404  000FCC  9490               	bcf	3984,2,c	;volatile
  5405  000FCE  0012               	return	
  5406  000FD0                     __end_ofi2_updatePresetLEDs:
  5407                           	opt stack 0
  5408                           pclatu	equ	0xFFB
  5409                           pclath	equ	0xFFA
  5410                           tblptru	equ	0xFF8
  5411                           tblptrh	equ	0xFF7
  5412                           tblptrl	equ	0xFF6
  5413                           tablat	equ	0xFF5
  5414                           prodh	equ	0xFF4
  5415                           prodl	equ	0xFF3
  5416                           intcon	equ	0xFF2
  5417                           postinc0	equ	0xFEE
  5418                           fsr0h	equ	0xFEA
  5419                           fsr0l	equ	0xFE9
  5420                           wreg	equ	0xFE8
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           fsr2h	equ	0xFDA
  5424                           fsr2l	equ	0xFD9
  5425                           status	equ	0xFD8
  5426                           
  5427 ;; *************** function _processTaps *****************
  5428 ;; Defined at:
  5429 ;;		line 30 in file "hardware.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  tapDiff         2   10[COMRAM] int 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;Total ram usage:        4 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    1
  5450 ;; This function calls:
  5451 ;;		___awdiv
  5452 ;;		_absVal
  5453 ;;		_maxTapCheck
  5454 ;; This function is called by:
  5455 ;;		_serviceSwitches
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text24
  5460  000A8A                     __ptext24:
  5461                           	opt stack 0
  5462  000A8A                     _processTaps:
  5463                           	opt stack 24
  5464                           
  5465                           ;hardware.c: 32: int tapDiff = 0;
  5466                           
  5467                           ;incstack = 0
  5468  000A8A  0E00               	movlw	0
  5469  000A8C  6E2C               	movwf	processTaps@tapDiff+1,c
  5470  000A8E  0E00               	movlw	0
  5471  000A90  6E2B               	movwf	processTaps@tapDiff,c
  5472                           
  5473                           ;hardware.c: 34: if (tap < 1)
  5474  000A92  BE02               	btfsc	_tap+1,7,c
  5475  000A94  D005               	goto	i2u167_40
  5476  000A96  5002               	movf	_tap+1,w,c
  5477  000A98  E114               	bnz	i2l600
  5478  000A9A  0401               	decf	_tap,w,c
  5479  000A9C  B0D8               	btfsc	status,0,c
  5480  000A9E  D011               	goto	i2l600
  5481  000AA0                     i2u167_40:
  5482                           
  5483                           ;hardware.c: 35: {
  5484                           ;hardware.c: 36: T2CONbits.TMR2ON = 0x1;
  5485  000AA0  84CA               	bsf	4042,2,c	;volatile
  5486                           
  5487                           ;hardware.c: 37: tapAccum = 0;
  5488  000AA2  0E00               	movlw	0
  5489  000AA4  0100               	movlb	0	; () banked
  5490  000AA6  6F7E               	movwf	_tapAccum& (0+255),b
  5491  000AA8  0E00               	movlw	0
  5492  000AAA  6F7F               	movwf	(_tapAccum+1)& (0+255),b
  5493  000AAC  0E00               	movlw	0
  5494  000AAE  6F80               	movwf	(_tapAccum+2)& (0+255),b
  5495  000AB0  0E00               	movlw	0
  5496  000AB2  6F81               	movwf	(_tapAccum+3)& (0+255),b
  5497                           
  5498                           ;hardware.c: 38: tapPrev = 0;
  5499  000AB4  0E00               	movlw	0
  5500  000AB6  6E04               	movwf	_tapPrev+1,c
  5501  000AB8  0E00               	movlw	0
  5502  000ABA  6E03               	movwf	_tapPrev,c
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;hardware.c: 39: tap++;
  5506  000ABC  4A01               	infsnz	_tap,f,c
  5507  000ABE  2A02               	incf	_tap+1,f,c
  5508                           
  5509                           ;hardware.c: 40: }
  5510  000AC0  D05C               	goto	i2l601
  5511  000AC2                     i2l600:
  5512                           
  5513                           ;hardware.c: 41: else
  5514                           ;hardware.c: 42: {
  5515                           ;hardware.c: 43: T2CONbits.TMR2ON = 0;
  5516  000AC2  94CA               	bcf	4042,2,c	;volatile
  5517                           
  5518                           ;hardware.c: 44: tapFlash = 1;
  5519  000AC4  0E00               	movlw	0
  5520  000AC6  0100               	movlb	0	; () banked
  5521  000AC8  6F8B               	movwf	(_tapFlash+1)& (0+255),b
  5522  000ACA  0E01               	movlw	1
  5523  000ACC  6F8A               	movwf	_tapFlash& (0+255),b
  5524                           
  5525                           ;hardware.c: 45: tapDispCount = 0;
  5526  000ACE  0E00               	movlw	0
  5527  000AD0  6E10               	movwf	_tapDispCount+1,c
  5528  000AD2  0E00               	movlw	0
  5529  000AD4  6E0F               	movwf	_tapDispCount,c
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;hardware.c: 46: LATE0 = 0x1;
  5533  000AD6  808D               	bsf	3981,0,c	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;hardware.c: 48: if (tap < 2)
  5537  000AD8  BE02               	btfsc	_tap+1,7,c
  5538  000ADA  D006               	goto	i2u168_40
  5539  000ADC  5002               	movf	_tap+1,w,c
  5540  000ADE  E111               	bnz	i2l2540
  5541  000AE0  0E02               	movlw	2
  5542  000AE2  5C01               	subwf	_tap,w,c
  5543  000AE4  B0D8               	btfsc	status,0,c
  5544  000AE6  D00D               	goto	i2l602
  5545  000AE8                     i2u168_40:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;hardware.c: 49: {
  5549                           ;hardware.c: 50: currentTapTime = tapTimeCount;
  5550  000AE8  C005  F092         	movff	_tapTimeCount,_currentTapTime
  5551  000AEC  C006  F093         	movff	_tapTimeCount+1,_currentTapTime+1
  5552                           
  5553                           ;hardware.c: 51: tapPrev = tapTimeCount;
  5554  000AF0  C005  F003         	movff	_tapTimeCount,_tapPrev
  5555  000AF4  C006  F004         	movff	_tapTimeCount+1,_tapPrev+1
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;hardware.c: 52: tap++;
  5559  000AF8  4A01               	infsnz	_tap,f,c
  5560  000AFA  2A02               	incf	_tap+1,f,c
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;hardware.c: 53: maxTapCheck();
  5564  000AFC  EC66  F008         	call	_maxTapCheck	;wreg free
  5565                           
  5566                           ;hardware.c: 54: }
  5567  000B00  D03B               	goto	i2l605
  5568  000B02                     i2l602:
  5569  000B02                     i2l2540:
  5570                           
  5571                           ;hardware.c: 55: else
  5572                           ;hardware.c: 56: {
  5573                           ;hardware.c: 57: tapDiff = tapTimeCount - tapPrev;
  5574  000B02  C003  F029         	movff	_tapPrev,??_processTaps
  5575  000B06  C004  F02A         	movff	_tapPrev+1,??_processTaps+1
  5576  000B0A  1E29               	comf	??_processTaps,f,c
  5577  000B0C  1E2A               	comf	??_processTaps+1,f,c
  5578  000B0E  4A29               	infsnz	??_processTaps,f,c
  5579  000B10  2A2A               	incf	??_processTaps+1,f,c
  5580  000B12  5005               	movf	_tapTimeCount,w,c
  5581  000B14  2429               	addwf	??_processTaps,w,c
  5582  000B16  6E2B               	movwf	processTaps@tapDiff,c
  5583  000B18  5006               	movf	_tapTimeCount+1,w,c
  5584  000B1A  202A               	addwfc	??_processTaps+1,w,c
  5585  000B1C  6E2C               	movwf	processTaps@tapDiff+1,c
  5586                           
  5587                           ;hardware.c: 58: tapDiff = absVal(tapDiff);
  5588  000B1E  C02B  F021         	movff	processTaps@tapDiff,absVal@val
  5589  000B22  C02C  F022         	movff	processTaps@tapDiff+1,absVal@val+1
  5590  000B26  EC3F  F009         	call	_absVal	;wreg free
  5591  000B2A  C021  F02B         	movff	?_absVal,processTaps@tapDiff
  5592  000B2E  C022  F02C         	movff	?_absVal+1,processTaps@tapDiff+1
  5593                           
  5594                           ;hardware.c: 59: if (tapDiff >= 500)
  5595  000B32  BE2C               	btfsc	processTaps@tapDiff+1,7,c
  5596  000B34  D00B               	goto	i2l604
  5597  000B36  0EF4               	movlw	244
  5598  000B38  5C2B               	subwf	processTaps@tapDiff,w,c
  5599  000B3A  0E01               	movlw	1
  5600  000B3C  582C               	subwfb	processTaps@tapDiff+1,w,c
  5601  000B3E  A0D8               	btfss	status,0,c
  5602  000B40  D005               	goto	i2l604
  5603                           
  5604                           ;hardware.c: 60: {
  5605                           ;hardware.c: 61: tap = 1;
  5606  000B42  0E00               	movlw	0
  5607  000B44  6E02               	movwf	_tap+1,c
  5608  000B46  0E01               	movlw	1
  5609  000B48  6E01               	movwf	_tap,c
  5610                           
  5611                           ;hardware.c: 62: }
  5612  000B4A  D016               	goto	i2l605
  5613  000B4C                     i2l604:
  5614                           
  5615                           ;hardware.c: 63: else
  5616                           ;hardware.c: 64: {
  5617                           ;hardware.c: 65: currentTapTime = (tapTimeCount + tapPrev)/2;
  5618  000B4C  5003               	movf	_tapPrev,w,c
  5619  000B4E  2405               	addwf	_tapTimeCount,w,c
  5620  000B50  6E21               	movwf	___awdiv@dividend,c
  5621  000B52  5004               	movf	_tapPrev+1,w,c
  5622  000B54  2006               	addwfc	_tapTimeCount+1,w,c
  5623  000B56  6E22               	movwf	___awdiv@dividend+1,c
  5624  000B58  0E00               	movlw	0
  5625  000B5A  6E24               	movwf	___awdiv@divisor+1,c
  5626  000B5C  0E02               	movlw	2
  5627  000B5E  6E23               	movwf	___awdiv@divisor,c
  5628  000B60  EC6A  F007         	call	___awdiv	;wreg free
  5629  000B64  C021  F092         	movff	?___awdiv,_currentTapTime
  5630  000B68  C022  F093         	movff	?___awdiv+1,_currentTapTime+1
  5631                           
  5632                           ;hardware.c: 66: tapPrev = tapTimeCount;
  5633  000B6C  C005  F003         	movff	_tapTimeCount,_tapPrev
  5634  000B70  C006  F004         	movff	_tapTimeCount+1,_tapPrev+1
  5635                           
  5636                           ;hardware.c: 67: tap++;
  5637  000B74  4A01               	infsnz	_tap,f,c
  5638  000B76  2A02               	incf	_tap+1,f,c
  5639  000B78                     i2l605:
  5640                           
  5641                           ;hardware.c: 68: }
  5642                           ;hardware.c: 69: }
  5643                           ;hardware.c: 70: T2CONbits.TMR2ON = 1;
  5644  000B78  84CA               	bsf	4042,2,c	;volatile
  5645  000B7A                     i2l601:
  5646                           
  5647                           ;hardware.c: 71: }
  5648                           ;hardware.c: 72: tapTimeCount = 0;
  5649  000B7A  0E00               	movlw	0
  5650  000B7C  6E06               	movwf	_tapTimeCount+1,c
  5651  000B7E  0E00               	movlw	0
  5652  000B80  6E05               	movwf	_tapTimeCount,c
  5653  000B82  0012               	return		;funcret
  5654  000B84                     __end_of_processTaps:
  5655                           	opt stack 0
  5656                           pclatu	equ	0xFFB
  5657                           pclath	equ	0xFFA
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           intcon	equ	0xFF2
  5665                           postinc0	equ	0xFEE
  5666                           fsr0h	equ	0xFEA
  5667                           fsr0l	equ	0xFE9
  5668                           wreg	equ	0xFE8
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _maxTapCheck *****************
  5676 ;; Defined at:
  5677 ;;		line 15 in file "hardware.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;Total ram usage:        0 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_processTaps
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text25
  5705  0010CC                     __ptext25:
  5706                           	opt stack 0
  5707  0010CC                     _maxTapCheck:
  5708                           	opt stack 24
  5709                           
  5710                           ;hardware.c: 17: if (tapTimeCount > 3000)
  5711                           
  5712                           ;incstack = 0
  5713  0010CC  BE06               	btfsc	_tapTimeCount+1,7,c
  5714  0010CE  D00F               	goto	i2l594
  5715  0010D0  0EB9               	movlw	185
  5716  0010D2  5C05               	subwf	_tapTimeCount,w,c
  5717  0010D4  0E0B               	movlw	11
  5718  0010D6  5806               	subwfb	_tapTimeCount+1,w,c
  5719  0010D8  A0D8               	btfss	status,0,c
  5720  0010DA  D009               	goto	i2l594
  5721                           
  5722                           ;hardware.c: 18: {
  5723                           ;hardware.c: 19: tapTimeCount = 0;
  5724  0010DC  0E00               	movlw	0
  5725  0010DE  6E06               	movwf	_tapTimeCount+1,c
  5726  0010E0  0E00               	movlw	0
  5727  0010E2  6E05               	movwf	_tapTimeCount,c
  5728                           
  5729                           ;hardware.c: 20: tap = 0;
  5730  0010E4  0E00               	movlw	0
  5731  0010E6  6E02               	movwf	_tap+1,c
  5732  0010E8  0E00               	movlw	0
  5733  0010EA  6E01               	movwf	_tap,c
  5734                           
  5735                           ;hardware.c: 21: }
  5736  0010EC  0012               	return	
  5737  0010EE                     i2l594:
  5738                           
  5739                           ;hardware.c: 22: else if (tapTimeCount >= 1500)
  5740  0010EE  BE06               	btfsc	_tapTimeCount+1,7,c
  5741  0010F0  0012               	return	
  5742  0010F2  0EDC               	movlw	220
  5743  0010F4  5C05               	subwf	_tapTimeCount,w,c
  5744  0010F6  0E05               	movlw	5
  5745  0010F8  5806               	subwfb	_tapTimeCount+1,w,c
  5746  0010FA  A0D8               	btfss	status,0,c
  5747  0010FC  0012               	return	
  5748                           
  5749                           ;hardware.c: 23: {
  5750                           ;hardware.c: 24: newTempo = 1;
  5751  0010FE  0E00               	movlw	0
  5752  001100  0100               	movlb	0	; () banked
  5753  001102  6F85               	movwf	(_newTempo+1)& (0+255),b
  5754  001104  0E01               	movlw	1
  5755  001106  6F84               	movwf	_newTempo& (0+255),b
  5756                           
  5757                           ;hardware.c: 25: tap = 0;
  5758  001108  0E00               	movlw	0
  5759  00110A  6E02               	movwf	_tap+1,c
  5760  00110C  0E00               	movlw	0
  5761  00110E  6E01               	movwf	_tap,c
  5762                           
  5763                           ;hardware.c: 26: currentTapTime = 1500;
  5764  001110  0E05               	movlw	5
  5765  001112  0100               	movlb	0	; () banked
  5766  001114  6F93               	movwf	(_currentTapTime+1)& (0+255),b
  5767  001116  0EDC               	movlw	220
  5768  001118  6F92               	movwf	_currentTapTime& (0+255),b
  5769                           
  5770                           ; BSR set to: 0
  5771  00111A  0012               	return	
  5772  00111C                     __end_of_maxTapCheck:
  5773                           	opt stack 0
  5774                           pclatu	equ	0xFFB
  5775                           pclath	equ	0xFFA
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           intcon	equ	0xFF2
  5783                           postinc0	equ	0xFEE
  5784                           fsr0h	equ	0xFEA
  5785                           fsr0l	equ	0xFE9
  5786                           wreg	equ	0xFE8
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function _absVal *****************
  5794 ;; Defined at:
  5795 ;;		line 159 in file "main.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  val             2    0[COMRAM] int 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  2    0[COMRAM] int 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;Total ram usage:        4 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_processTaps
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text26
  5823  00127E                     __ptext26:
  5824                           	opt stack 0
  5825  00127E                     _absVal:
  5826                           	opt stack 24
  5827                           
  5828                           ;main.c: 161: if (val < 0)
  5829                           
  5830                           ;incstack = 0
  5831  00127E  AE22               	btfss	absVal@val+1,7,c
  5832  001280  D00D               	goto	i2l114
  5833                           
  5834                           ;main.c: 162: return -val;
  5835  001282  C021  F023         	movff	absVal@val,??_absVal
  5836  001286  C022  F024         	movff	absVal@val+1,??_absVal+1
  5837  00128A  1E23               	comf	??_absVal,f,c
  5838  00128C  1E24               	comf	??_absVal+1,f,c
  5839  00128E  4A23               	infsnz	??_absVal,f,c
  5840  001290  2A24               	incf	??_absVal+1,f,c
  5841  001292  C023  F021         	movff	??_absVal,?_absVal
  5842  001296  C024  F022         	movff	??_absVal+1,?_absVal+1
  5843  00129A  0012               	return	
  5844  00129C                     i2l114:
  5845                           
  5846                           ;main.c: 163: else return val;
  5847  00129C  C021  F021         	movff	absVal@val,?_absVal
  5848  0012A0  C022  F022         	movff	absVal@val+1,?_absVal+1
  5849  0012A4  0012               	return	
  5850  0012A6                     __end_of_absVal:
  5851                           	opt stack 0
  5852                           pclatu	equ	0xFFB
  5853                           pclath	equ	0xFFA
  5854                           tblptru	equ	0xFF8
  5855                           tblptrh	equ	0xFF7
  5856                           tblptrl	equ	0xFF6
  5857                           tablat	equ	0xFF5
  5858                           prodh	equ	0xFF4
  5859                           prodl	equ	0xFF3
  5860                           intcon	equ	0xFF2
  5861                           postinc0	equ	0xFEE
  5862                           fsr0h	equ	0xFEA
  5863                           fsr0l	equ	0xFE9
  5864                           wreg	equ	0xFE8
  5865                           fsr1h	equ	0xFE2
  5866                           fsr1l	equ	0xFE1
  5867                           fsr2h	equ	0xFDA
  5868                           fsr2l	equ	0xFD9
  5869                           status	equ	0xFD8
  5870                           
  5871 ;; *************** function ___awdiv *****************
  5872 ;; Defined at:
  5873 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/awdiv.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  dividend        2    0[COMRAM] int 
  5876 ;;  divisor         2    2[COMRAM] int 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  quotient        2    6[COMRAM] int 
  5879 ;;  sign            1    5[COMRAM] unsigned char 
  5880 ;;  counter         1    4[COMRAM] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  2    0[COMRAM] int 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5894 ;;Total ram usage:        8 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_processTaps
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text27
  5904  000ED4                     __ptext27:
  5905                           	opt stack 0
  5906  000ED4                     ___awdiv:
  5907                           	opt stack 24
  5908                           
  5909                           ;incstack = 0
  5910  000ED4  0E00               	movlw	0
  5911  000ED6  6E26               	movwf	___awdiv@sign,c
  5912  000ED8  AE24               	btfss	___awdiv@divisor+1,7,c
  5913  000EDA  D006               	goto	i2l1066
  5914  000EDC  6C23               	negf	___awdiv@divisor,c
  5915  000EDE  1E24               	comf	___awdiv@divisor+1,f,c
  5916  000EE0  B0D8               	btfsc	status,0,c
  5917  000EE2  2A24               	incf	___awdiv@divisor+1,f,c
  5918  000EE4  0E01               	movlw	1
  5919  000EE6  6E26               	movwf	___awdiv@sign,c
  5920  000EE8                     i2l1066:
  5921  000EE8  AE22               	btfss	___awdiv@dividend+1,7,c
  5922  000EEA  D006               	goto	i2l1067
  5923  000EEC  6C21               	negf	___awdiv@dividend,c
  5924  000EEE  1E22               	comf	___awdiv@dividend+1,f,c
  5925  000EF0  B0D8               	btfsc	status,0,c
  5926  000EF2  2A22               	incf	___awdiv@dividend+1,f,c
  5927  000EF4  0E01               	movlw	1
  5928  000EF6  1A26               	xorwf	___awdiv@sign,f,c
  5929  000EF8                     i2l1067:
  5930  000EF8  0E00               	movlw	0
  5931  000EFA  6E28               	movwf	___awdiv@quotient+1,c
  5932  000EFC  0E00               	movlw	0
  5933  000EFE  6E27               	movwf	___awdiv@quotient,c
  5934  000F00  5023               	movf	___awdiv@divisor,w,c
  5935  000F02  1024               	iorwf	___awdiv@divisor+1,w,c
  5936  000F04  B4D8               	btfsc	status,2,c
  5937  000F06  D01C               	goto	i2l1074
  5938  000F08  0E01               	movlw	1
  5939  000F0A  6E25               	movwf	___awdiv@counter,c
  5940  000F0C  D004               	goto	i2l1069
  5941  000F0E  90D8               	bcf	status,0,c
  5942  000F10  3623               	rlcf	___awdiv@divisor,f,c
  5943  000F12  3624               	rlcf	___awdiv@divisor+1,f,c
  5944  000F14  2A25               	incf	___awdiv@counter,f,c
  5945  000F16                     i2l1069:
  5946  000F16  AE24               	btfss	___awdiv@divisor+1,7,c
  5947  000F18  D7FA               	goto	i2l1070
  5948  000F1A                     i2u164_40:
  5949  000F1A  90D8               	bcf	status,0,c
  5950  000F1C  3627               	rlcf	___awdiv@quotient,f,c
  5951  000F1E  3628               	rlcf	___awdiv@quotient+1,f,c
  5952  000F20  5023               	movf	___awdiv@divisor,w,c
  5953  000F22  5C21               	subwf	___awdiv@dividend,w,c
  5954  000F24  5024               	movf	___awdiv@divisor+1,w,c
  5955  000F26  5822               	subwfb	___awdiv@dividend+1,w,c
  5956  000F28  A0D8               	btfss	status,0,c
  5957  000F2A  D005               	goto	i2l1073
  5958  000F2C  5023               	movf	___awdiv@divisor,w,c
  5959  000F2E  5E21               	subwf	___awdiv@dividend,f,c
  5960  000F30  5024               	movf	___awdiv@divisor+1,w,c
  5961  000F32  5A22               	subwfb	___awdiv@dividend+1,f,c
  5962  000F34  8027               	bsf	___awdiv@quotient,0,c
  5963  000F36                     i2l1073:
  5964  000F36  90D8               	bcf	status,0,c
  5965  000F38  3224               	rrcf	___awdiv@divisor+1,f,c
  5966  000F3A  3223               	rrcf	___awdiv@divisor,f,c
  5967  000F3C  2E25               	decfsz	___awdiv@counter,f,c
  5968  000F3E  D7ED               	goto	i2u164_40
  5969  000F40                     i2l1074:
  5970  000F40  5026               	movf	___awdiv@sign,w,c
  5971  000F42  B4D8               	btfsc	status,2,c
  5972  000F44  D004               	goto	i2l1075
  5973  000F46  6C27               	negf	___awdiv@quotient,c
  5974  000F48  1E28               	comf	___awdiv@quotient+1,f,c
  5975  000F4A  B0D8               	btfsc	status,0,c
  5976  000F4C  2A28               	incf	___awdiv@quotient+1,f,c
  5977  000F4E                     i2l1075:
  5978  000F4E  C027  F021         	movff	___awdiv@quotient,?___awdiv
  5979  000F52  C028  F022         	movff	___awdiv@quotient+1,?___awdiv+1
  5980  000F56  0012               	return	
  5981  000F58                     __end_of___awdiv:
  5982                           	opt stack 0
  5983                           pclatu	equ	0xFFB
  5984                           pclath	equ	0xFFA
  5985                           tblptru	equ	0xFF8
  5986                           tblptrh	equ	0xFF7
  5987                           tblptrl	equ	0xFF6
  5988                           tablat	equ	0xFF5
  5989                           prodh	equ	0xFF4
  5990                           prodl	equ	0xFF3
  5991                           intcon	equ	0xFF2
  5992                           postinc0	equ	0xFEE
  5993                           fsr0h	equ	0xFEA
  5994                           fsr0l	equ	0xFE9
  5995                           wreg	equ	0xFE8
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           fsr2h	equ	0xFDA
  5999                           fsr2l	equ	0xFD9
  6000                           status	equ	0xFD8
  6001                           
  6002 ;; *************** function _sendParam *****************
  6003 ;; Defined at:
  6004 ;;		line 128 in file "serial.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, status,2, status,0
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_highPriorityISR
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text28
  6032  000FD0                     __ptext28:
  6033                           	opt stack 0
  6034  000FD0                     _sendParam:
  6035                           	opt stack 26
  6036                           
  6037                           ;serial.c: 130: dataTarget = SSP2BUF;
  6038                           
  6039                           ;incstack = 0
  6040  000FD0  CF03 F00D          	movff	3843,_dataTarget	;volatile
  6041  000FD4  6A0E               	clrf	_dataTarget+1,c
  6042  000FD6  010F               	movlb	15	; () banked
  6043  000FD8  B11A               	btfsc	26,0,b	;volatile
  6044  000FDA  D7FD               	goto	i2l891
  6045                           
  6046                           ; BSR set to: 15
  6047                           ;serial.c: 134: if (dataTarget == 0xA1)
  6048                           
  6049                           ; BSR set to: 15
  6050  000FDC  0EA1               	movlw	161
  6051  000FDE  180D               	xorwf	_dataTarget,w,c
  6052  000FE0  100E               	iorwf	_dataTarget+1,w,c
  6053  000FE2  A4D8               	btfss	status,2,c
  6054  000FE4  D005               	goto	i2l893
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;serial.c: 135: {
  6058                           ;serial.c: 136: dataPtr = feedbackValue;
  6059  000FE6  C00B  F088         	movff	_feedbackValue,_dataPtr
  6060  000FEA  C00C  F089         	movff	_feedbackValue+1,_dataPtr+1
  6061                           
  6062                           ;serial.c: 137: }
  6063  000FEE  D013               	goto	i2l897
  6064  000FF0                     i2l893:
  6065                           
  6066                           ; BSR set to: 15
  6067                           ;serial.c: 138: else if (dataTarget == 0xA5)
  6068                           
  6069                           ; BSR set to: 15
  6070  000FF0  0EA5               	movlw	165
  6071  000FF2  180D               	xorwf	_dataTarget,w,c
  6072  000FF4  100E               	iorwf	_dataTarget+1,w,c
  6073  000FF6  A4D8               	btfss	status,2,c
  6074  000FF8  D005               	goto	i2l895
  6075                           
  6076                           ; BSR set to: 15
  6077                           ;serial.c: 139: {
  6078                           ;serial.c: 140: dataPtr = levelValue;
  6079  000FFA  C009  F088         	movff	_levelValue,_dataPtr
  6080  000FFE  C00A  F089         	movff	_levelValue+1,_dataPtr+1
  6081                           
  6082                           ;serial.c: 141: }
  6083  001002  D009               	goto	i2l897
  6084  001004                     i2l895:
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;serial.c: 142: else if (dataTarget == 0xA9)
  6088                           
  6089                           ; BSR set to: 15
  6090  001004  0EA9               	movlw	169
  6091  001006  180D               	xorwf	_dataTarget,w,c
  6092  001008  100E               	iorwf	_dataTarget+1,w,c
  6093  00100A  A4D8               	btfss	status,2,c
  6094  00100C  D004               	goto	i2l897
  6095                           
  6096                           ; BSR set to: 15
  6097                           ;serial.c: 143: {
  6098                           ;serial.c: 144: dataPtr = timeValue;
  6099  00100E  C007  F088         	movff	_timeValue,_dataPtr
  6100  001012  C008  F089         	movff	_timeValue+1,_dataPtr+1
  6101  001016                     i2l897:
  6102                           
  6103                           ; BSR set to: 15
  6104                           ;serial.c: 145: }
  6105                           ;serial.c: 147: SSP2BUF = dataPtr;
  6106                           
  6107                           ; BSR set to: 15
  6108                           
  6109                           ; BSR set to: 15
  6110                           
  6111                           ; BSR set to: 15
  6112  001016  C088  FF03         	movff	_dataPtr,3843	;volatile
  6113                           
  6114                           ;serial.c: 148: dataTarget ^= 1;
  6115  00101A  0E01               	movlw	1
  6116  00101C  1A0D               	xorwf	_dataTarget,f,c
  6117                           
  6118                           ; BSR set to: 15
  6119                           ;serial.c: 149: SSP2CON1bits.CKP = 0x1;
  6120  00101E  010F               	movlb	15	; () banked
  6121  001020  8919               	bsf	25,4,b	;volatile
  6122                           
  6123                           ; BSR set to: 15
  6124                           ;serial.c: 150: PIR2bits.SSP2IF = 0x0;
  6125  001022  9CA1               	bcf	4001,6,c	;volatile
  6126                           
  6127                           ; BSR set to: 15
  6128  001024  0012               	return		;funcret
  6129  001026                     __end_of_sendParam:
  6130                           	opt stack 0
  6131                           pclatu	equ	0xFFB
  6132                           pclath	equ	0xFFA
  6133                           tblptru	equ	0xFF8
  6134                           tblptrh	equ	0xFF7
  6135                           tblptrl	equ	0xFF6
  6136                           tablat	equ	0xFF5
  6137                           prodh	equ	0xFF4
  6138                           prodl	equ	0xFF3
  6139                           intcon	equ	0xFF2
  6140                           postinc0	equ	0xFEE
  6141                           fsr0h	equ	0xFEA
  6142                           fsr0l	equ	0xFE9
  6143                           wreg	equ	0xFE8
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           fsr2h	equ	0xFDA
  6147                           fsr2l	equ	0xFD9
  6148                           status	equ	0xFD8
  6149                           
  6150 ;; *************** function _checkSwitches *****************
  6151 ;; Defined at:
  6152 ;;		line 106 in file "hardware.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  flag            1    0[COMRAM] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;Total ram usage:        1 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_highPriorityISR
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text29
  6180  000CAA                     __ptext29:
  6181                           	opt stack 0
  6182  000CAA                     _checkSwitches:
  6183                           	opt stack 26
  6184                           
  6185                           ;hardware.c: 108: char flag = 0;
  6186                           
  6187                           ; BSR set to: 15
  6188                           ;incstack = 0
  6189  000CAA  0E00               	movlw	0
  6190  000CAC  6E21               	movwf	checkSwitches@flag,c
  6191                           
  6192                           ;hardware.c: 110: if(IOCF1)
  6193  000CAE  A2D1               	btfss	4049,1,c	;volatile
  6194  000CB0  D007               	goto	i2l616
  6195                           
  6196                           ;hardware.c: 111: {
  6197                           ;hardware.c: 112: switch4 = 1;
  6198  000CB2  0E00               	movlw	0
  6199  000CB4  6E14               	movwf	_switch4+1,c
  6200  000CB6  0E01               	movlw	1
  6201  000CB8  6E13               	movwf	_switch4,c
  6202                           
  6203                           ;hardware.c: 113: flag = 1;
  6204  000CBA  0E01               	movlw	1
  6205  000CBC  6E21               	movwf	checkSwitches@flag,c
  6206                           
  6207                           ;hardware.c: 114: IOCFbits.IOCF1 = 0;
  6208  000CBE  92D1               	bcf	4049,1,c	;volatile
  6209  000CC0                     i2l616:
  6210                           
  6211                           ;hardware.c: 115: }
  6212                           ;hardware.c: 117: if (IOCF2)
  6213  000CC0  A4D1               	btfss	4049,2,c	;volatile
  6214  000CC2  D007               	goto	i2l617
  6215                           
  6216                           ;hardware.c: 118: {
  6217                           ;hardware.c: 119: switch2 = 1;
  6218  000CC4  0E00               	movlw	0
  6219  000CC6  6E18               	movwf	_switch2+1,c
  6220  000CC8  0E01               	movlw	1
  6221  000CCA  6E17               	movwf	_switch2,c
  6222                           
  6223                           ;hardware.c: 120: flag = 1;
  6224  000CCC  0E01               	movlw	1
  6225  000CCE  6E21               	movwf	checkSwitches@flag,c
  6226                           
  6227                           ;hardware.c: 121: IOCFbits.IOCF2 = 0;
  6228  000CD0  94D1               	bcf	4049,2,c	;volatile
  6229  000CD2                     i2l617:
  6230                           
  6231                           ;hardware.c: 122: }
  6232                           ;hardware.c: 124: if (IOCF3)
  6233  000CD2  A6D1               	btfss	4049,3,c	;volatile
  6234  000CD4  D007               	goto	i2l618
  6235                           
  6236                           ;hardware.c: 125: {
  6237                           ;hardware.c: 126: switch1 = 1;
  6238  000CD6  0E00               	movlw	0
  6239  000CD8  6E1A               	movwf	_switch1+1,c
  6240  000CDA  0E01               	movlw	1
  6241  000CDC  6E19               	movwf	_switch1,c
  6242                           
  6243                           ;hardware.c: 127: flag = 1;
  6244  000CDE  0E01               	movlw	1
  6245  000CE0  6E21               	movwf	checkSwitches@flag,c
  6246                           
  6247                           ;hardware.c: 128: IOCFbits.IOCF3 = 0;
  6248  000CE2  96D1               	bcf	4049,3,c	;volatile
  6249  000CE4                     i2l618:
  6250                           
  6251                           ;hardware.c: 129: }
  6252                           ;hardware.c: 131: if (IOCF4)
  6253  000CE4  A8D1               	btfss	4049,4,c	;volatile
  6254  000CE6  D008               	goto	i2l619
  6255                           
  6256                           ;hardware.c: 132: {
  6257                           ;hardware.c: 133: fsw1 = 1;
  6258  000CE8  0E00               	movlw	0
  6259  000CEA  0100               	movlb	0	; () banked
  6260  000CEC  6F91               	movwf	(_fsw1+1)& (0+255),b
  6261  000CEE  0E01               	movlw	1
  6262  000CF0  6F90               	movwf	_fsw1& (0+255),b
  6263                           
  6264                           ;hardware.c: 134: flag = 1;
  6265  000CF2  0E01               	movlw	1
  6266  000CF4  6E21               	movwf	checkSwitches@flag,c
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;hardware.c: 135: IOCFbits.IOCF4 = 0;
  6270  000CF6  98D1               	bcf	4049,4,c	;volatile
  6271  000CF8                     i2l619:
  6272                           
  6273                           ;hardware.c: 136: }
  6274                           ;hardware.c: 138: if (IOCF5)
  6275                           
  6276                           ; BSR set to: 0
  6277  000CF8  AAD1               	btfss	4049,5,c	;volatile
  6278  000CFA  D008               	goto	i2l620
  6279                           
  6280                           ;hardware.c: 139: {
  6281                           ;hardware.c: 140: fsw2 = 1;
  6282  000CFC  0E00               	movlw	0
  6283  000CFE  0100               	movlb	0	; () banked
  6284  000D00  6F8F               	movwf	(_fsw2+1)& (0+255),b
  6285  000D02  0E01               	movlw	1
  6286  000D04  6F8E               	movwf	_fsw2& (0+255),b
  6287                           
  6288                           ;hardware.c: 141: flag = 1;
  6289  000D06  0E01               	movlw	1
  6290  000D08  6E21               	movwf	checkSwitches@flag,c
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;hardware.c: 142: IOCFbits.IOCF5 = 0;
  6294  000D0A  9AD1               	bcf	4049,5,c	;volatile
  6295  000D0C                     i2l620:
  6296                           
  6297                           ;hardware.c: 143: }
  6298                           ;hardware.c: 145: if (IOCF6)
  6299                           
  6300                           ; BSR set to: 0
  6301  000D0C  ACD1               	btfss	4049,6,c	;volatile
  6302  000D0E  D007               	goto	i2l621
  6303                           
  6304                           ;hardware.c: 146: {
  6305                           ;hardware.c: 147: switch3 = 1;
  6306  000D10  0E00               	movlw	0
  6307  000D12  6E16               	movwf	_switch3+1,c
  6308  000D14  0E01               	movlw	1
  6309  000D16  6E15               	movwf	_switch3,c
  6310                           
  6311                           ;hardware.c: 148: flag = 1;
  6312  000D18  0E01               	movlw	1
  6313  000D1A  6E21               	movwf	checkSwitches@flag,c
  6314                           
  6315                           ;hardware.c: 149: IOCFbits.IOCF6 = 0;
  6316  000D1C  9CD1               	bcf	4049,6,c	;volatile
  6317  000D1E                     i2l621:
  6318                           
  6319                           ;hardware.c: 150: }
  6320                           ;hardware.c: 152: if (IOCF7)
  6321  000D1E  AED1               	btfss	4049,7,c	;volatile
  6322  000D20  D007               	goto	i2l622
  6323                           
  6324                           ;hardware.c: 153: {
  6325                           ;hardware.c: 154: switch5 = 1;
  6326  000D22  0E00               	movlw	0
  6327  000D24  6E12               	movwf	_switch5+1,c
  6328  000D26  0E01               	movlw	1
  6329  000D28  6E11               	movwf	_switch5,c
  6330                           
  6331                           ;hardware.c: 155: flag = 1;
  6332  000D2A  0E01               	movlw	1
  6333  000D2C  6E21               	movwf	checkSwitches@flag,c
  6334                           
  6335                           ;hardware.c: 156: IOCFbits.IOCF7 = 0;
  6336  000D2E  9ED1               	bcf	4049,7,c	;volatile
  6337  000D30                     i2l622:
  6338                           
  6339                           ;hardware.c: 157: }
  6340                           ;hardware.c: 159: if (flag)
  6341  000D30  5021               	movf	checkSwitches@flag,w,c
  6342  000D32  B4D8               	btfsc	status,2,c
  6343  000D34  0012               	return	
  6344                           
  6345                           ;hardware.c: 160: {
  6346                           ;hardware.c: 161: T0CONbits.TMR0ON = 0x1;
  6347  000D36  8ED5               	bsf	4053,7,c	;volatile
  6348  000D38  0012               	return	
  6349  000D3A                     __end_of_checkSwitches:
  6350                           	opt stack 0
  6351  0000                     pclatu	equ	0xFFB
  6352                           pclath	equ	0xFFA
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           postinc0	equ	0xFEE
  6361                           fsr0h	equ	0xFEA
  6362                           fsr0l	equ	0xFE9
  6363                           wreg	equ	0xFE8
  6364                           fsr1h	equ	0xFE2
  6365                           fsr1l	equ	0xFE1
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           pclatu	equ	0xFFB
  6370                           pclath	equ	0xFFA
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           intcon	equ	0xFF2
  6378                           postinc0	equ	0xFEE
  6379                           fsr0h	equ	0xFEA
  6380                           fsr0l	equ	0xFE9
  6381                           wreg	equ	0xFE8
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           fsr2h	equ	0xFDA
  6385                           fsr2l	equ	0xFD9
  6386                           status	equ	0xFD8
  6387                           
  6388                           	psect	rparam
  6389  0000                     pclatu	equ	0xFFB
  6390                           pclath	equ	0xFFA
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           prodh	equ	0xFF4
  6396                           prodl	equ	0xFF3
  6397                           intcon	equ	0xFF2
  6398                           postinc0	equ	0xFEE
  6399                           fsr0h	equ	0xFEA
  6400                           fsr0l	equ	0xFE9
  6401                           wreg	equ	0xFE8
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           fsr2h	equ	0xFDA
  6405                           fsr2l	equ	0xFD9
  6406                           status	equ	0xFD8
  6407                           
  6408                           	psect	temp
  6409  000041                     btemp:
  6410                           	opt stack 0
  6411  000041                     	ds	1
  6412  0000                     int$flags	set	btemp
  6413  0000                     wtemp6	set	btemp+1
  6414                           pclatu	equ	0xFFB
  6415                           pclath	equ	0xFFA
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           prodh	equ	0xFF4
  6421                           prodl	equ	0xFF3
  6422                           intcon	equ	0xFF2
  6423                           postinc0	equ	0xFEE
  6424                           fsr0h	equ	0xFEA
  6425                           fsr0l	equ	0xFE9
  6426                           wreg	equ	0xFE8
  6427                           fsr1h	equ	0xFE2
  6428                           fsr1l	equ	0xFE1
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     30      64
    BANK0           160     30      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    dataPtr	PTR int  size(2) Largest target is 3577
		 -> NULL(NULL[0]), RAM(DATA[3577]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _serviceSwitches->_processTaps
    _processTaps->___awdiv

Critical Paths under _main in BANK0

    _main->___wmul
    _systemInit->_startupSequence

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    2843
                                              6 BANK0     24    24      0
                           _ADC_Read
                   _I2C1_Read_EEPROM
                 _I2C1_Write_DigiPot
                  _I2C1_Write_EEPROM
                             ___wmul
                      _interruptInit
                         _systemInit
                   _updatePresetLEDs
 ---------------------------------------------------------------------------------
 (1) _updatePresetLEDs                                     2     0      2     300
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _systemInit                                           0     0      0       0
                        _clockSwitch
                      _interfaceInit
                           _killLEDs
                  _mapPeripheralPins
                           _setupADC
                          _setupTMR0
                          _setupTMR1
                          _setupTMR2
                          _setupTMR4
                    _startupSequence
 ---------------------------------------------------------------------------------
 (2) _startupSequence                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupTMR4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mapPeripheralPins                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _killLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interfaceInit                                        0     0      0       0
                         _disableLCD
 ---------------------------------------------------------------------------------
 (3) _disableLCD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clockSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     412
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_EEPROM                                    4     2      2     307
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_DigiPot                                   2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Read_EEPROM                                     5     4      1     288
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2     855
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highPriorityISR                                     18    18      0     807
                                             12 COMRAM    18    18      0
                      _checkSwitches
                          _sendParam
                    _serviceSwitches
                             _tapLED
 ---------------------------------------------------------------------------------
 (5) _tapLED                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _serviceSwitches                                      0     0      0     777
                        _processTaps
                 i2_updatePresetLEDs
 ---------------------------------------------------------------------------------
 (6) i2_updatePresetLEDs                                   2     0      2     136
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _processTaps                                          4     4      0     641
                                              8 COMRAM     4     4      0
                            ___awdiv
                             _absVal
                        _maxTapCheck
 ---------------------------------------------------------------------------------
 (7) _maxTapCheck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _absVal                                               4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _sendParam                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _checkSwitches                                        1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _I2C1_Read_EEPROM
   _I2C1_Write_DigiPot
   _I2C1_Write_EEPROM
   ___wmul
   _interruptInit
   _systemInit
     _clockSwitch
     _interfaceInit
       _disableLCD
     _killLEDs
     _mapPeripheralPins
     _setupADC
     _setupTMR0
     _setupTMR1
     _setupTMR2
     _setupTMR4
     _startupSequence
   _updatePresetLEDs

 _highPriorityISR (ROOT)
   _checkSwitches
   _sendParam
   _serviceSwitches
     _processTaps
       ___awdiv
       _absVal
       _maxTapCheck
     i2_updatePresetLEDs
   _tapLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      34       5       32.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1E      40       1       68.1%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74       8        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Aug 27 20:28:41 2018

                 __CFG_BW$16 000000           __end_of_systemInit 127E        __end_of_interruptInit 1250  
               ___awdiv@sign 0026          ___wmul@multiplicand 0062                  __CFG_BORV$1 000000  
               __CFG_CP0$OFF 000000                          l121 04FC                          l131 059A  
                        l123 0504                          l133 05BA                          l125 053A  
                        l142 0646                          l151 0758                          l127 055A  
                        l144 06EA                          l136 05D2                          l129 057A  
                        l138 0632                          l148 06FE                          l700 0D6C  
                        l702 0D86                          l800 1130                          l704 0DA0  
                        l377 12BA                          l706 0DBA                          l803 113A  
                        l821 1160                          l671 09E6                          l663 0984  
                        l815 1156                          l832 0DFA                          l681 0A5E  
                        l673 09FE                          l665 09A0                          l809 1148  
                        l683 0A76                          l675 0A16                          l667 09B6  
                        l843 0E10                          l827 0DEA                          l684 0A80  
                        l677 0A2E                          l669 09CE                          l861 0E3A  
                        l837 0E04                          l870 1180                          l679 0A46  
                        l855 0E2A                          l864 0E42                          l849 0E1E  
                        l873 118A                          l698 0D52                          l885 11A2  
                        l879 1198                          _RC0 007C10                          _RC1 007C11  
                        _RD1 007C19                          _RD4 007C1C                          _RC6 007C16  
                        _RE3 007C23                          _RC7 007C17                          _RG1 007C31  
                        _RF3 007C2B                          _RD7 007C1F                          _RG2 007C32  
                        _RE6 007C26                          _RG3 007C33                          _RH4 007C3C  
                        _RJ0 007C40                          _RH5 007C3D                          _RJ1 007C41  
                        _RJ4 007C44                          _RJ5 007C45                          _PR2 000FCB  
                        _tap 0001                          _swX 001D                          wreg 000FE8  
      __end_of_checkSwitches 0D3A   __end_ofi2_updatePresetLEDs 0FD0                __CFG_ABW$XM16 000000  
               ?_maxTapCheck 0021                         l3506 06DA                         l3492 0616  
                       l3494 0632                         u3020 0DEE                         u3110 0E2E  
                       u3200 0600                         u3050 0E08                         u3210 0616  
                       u3220 06C4                         u3070 0E14                         u3230 06DA  
                       u3090 0E22                         u3307 0102                         u2700 12C4  
                       u3317 0120                         u3190 05B0                         u3407 022E  
                       u3327 013E                         u3247 063A                         u3417 024C  
                       u3337 015C                         u3257 06F2                         u3507 035A  
                       u3427 026A                         u3347 017A                         u3267 0706  
                       u3517 0378                         u3437 0288                         u3357 0198  
                       u3277 0724                         u2910 119C                         u3607 1128  
                       u3527 0398                         u3447 02A6                         u3367 01B6  
                       u3287 074C                         u3617 1178                         u3537 03B6  
                       u3457 02C4                         u3377 01D4                         u3297 0802  
                       u3627 0DE2                         u3547 03D4                         u3467 02E2  
                       u3387 01F2                         u3637 0970                         u3557 03F2  
                       u3477 0300                         u3397 0210                         u2950 113E  
                       u3647 097C                         u3567 0410                         u3487 031E  
                       u3577 042E                         u3497 033C                         u2890 118E  
                       u2970 114C                         u3587 044E                         u3597 046E  
                       u2990 115A                         _fsw1 0090                         _fsw2 008E  
                       _intA 0020                         _intB 001F                         _intC 001E  
                       _main 0482                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr2h 000FDA                         fsr0l 000FE9                         fsr1l 000FE1  
                       fsr2l 000FD9                  main@prevDry 0074                         btemp 0041  
           __end_of_ADC_Read 0A8A                __CFG_BOREN$ON 000000                         prodh 000FF4  
                       prodl 000FF3           __CFG_WDTWIN$PS25_0 000000                         start 00EE  
 __size_of_I2C1_Write_EEPROM 004E     __size_of_serviceSwitches 0150                __CFG_IESO$OFF 000000  
         __CFG_LS48MHZ$SYSX2 000000                 ___param_bank 000000                __CFG_WAIT$OFF 000000  
                      ?_main 0021              __end_of___awdiv 0F58                 main@dryLevel 007A  
            ___awdiv@divisor 0023                        _T2CON 000FCA                        _LATD0 007C60  
                      _LATB5 007C55                        _IOCF1 007E89                        _LATE0 007C68  
                      _IOCF2 007E8A                        _LATD2 007C62                        _LATD3 007C63  
                      _IOCF3 007E8B                        _LATE1 007C69                        _IOCF4 007E8C  
                      _IOCF5 007E8D                        _IOCF6 007E8E                        _LATF2 007C72  
                      _LATE4 007C6C                        _IOCF7 007E8F                        _LATE5 007C6D  
                      _LATH0 007C80                        _LATF5 007C75                        _LATH1 007C81  
                      _LATE7 007C6F                        _LATF6 007C76                        _LATG4 007C7C  
                      _LATH2 007C82                        _LATH7 007C87                        i2l110 00A2  
                      i2l105 005C                        i2l114 129C                        i2l106 006A  
                      i2l108 0090                        i2l109 0092                        i2l600 0AC2  
                      i2l601 0B7A                        i2l602 0B02                        i2l620 0D0C  
                      i2l604 0B4C                        i2l700 0F82                        i2l621 0D1E  
                      i2l605 0B78                        i2l622 0D30                        i2l702 0F98  
                      i2l630 085C                        i2l616 0CC0                        i2l704 0FAE  
                      i2l640 08B6                        i2l617 0CD2                        i2l641 08C2  
                      i2l633 087C                        i2l609 0E8A                        i2l618 0CE4  
                      i2l706 0FC4                        i2l650 0906                        i2l634 0888  
                      i2l619 0CF8                        i2l651 090A                        i2l643 08CC  
                      i2l644 08D0                        i2l636 0892                        i2l653 0934  
                      i2l637 0896                        i2l654 092A                        i2l647 08F0  
                      i2l648 08FC                        i2l657 0954                        i2l594 10EE  
                      i2l658 0958                        i2l698 0F6C                        i2l891 0FD6  
            ___awdiv@counter 0025                        i2l893 0FF0                        i2l895 1004  
                      i2l897 1016                __CFG_WPSA$128 000000               __CFG_EASHFT$ON 000000  
                      main@i 006A                        pclath 000FFA                        tablat 000FF5  
                      status 000FD8                        wtemp6 0042   __size_of_mapPeripheralPins 0054  
            __initialization 107A   I2C1_Write_EEPROM@wrDevAddr 0063                 __end_of_main 080E  
__size_of_I2C1_Write_DigiPot 0042                       ??_main 0066                __activetblptr 000000  
          ?_I2C1_Read_EEPROM 0060          __CFG_WPEND$WPENDMEM 000000               __CFG_RETEN$OFF 000000  
         ??_I2C1_Read_EEPROM 003F                       _CCPR4H 000F12                       _CCPR4L 000F11  
           ___awdiv@dividend 0021     __size_of_startupSequence 0390         __size_of_clockSwitch 0024  
                     _LCDSE0 000ECE                       _LCDSE1 000ECF                       _LCDSE2 000ED0  
                     _LCDSE3 000ED1                       _LCDSE4 000ED2                       _LCDSE5 000ED3  
                     _LCDSE6 000ED4                       _LCDSE7 000ED5     __size_of_highPriorityISR 00E6  
                     i2l1070 0F0E                       i2l1073 0F36                       i2l1074 0F40  
                     i2l1066 0EE8                       i2l1075 0F4E                       i2l1067 0EF8  
                     i2l1069 0F16                       i2l2540 0B02                       _OSCCON 000FD3  
                     _TMR0IF 007F92                       _TMR2IF 007CF1                       _TMR4IF 007DC0  
                     _TMR2ON 007E52                       _SSP2IF 007D0E               __CFG_XINST$OFF 000000  
               _CCPTMRS1bits 000F35                       _absVal 127E             __end_of_killLEDs 12EA  
                     ___wmul 11EA                    ??___awdiv 0025               __CFG_STVREN$ON 000000  
   __end_of_updatePresetLEDs 0DC6            ??_serviceSwitches 002D              ADC_Read@channel 0060  
                     _tapLED 0E50                       _bypass 001C                       _muxADC 008C  
                     clear_0 10B0                       clear_1 10BC             ___awdiv@quotient 0027  
             _RPINR20_21bits 000E34              __CFG_CLKOEN$OFF 000000                       _preset 001B  
             _RPINR22_23bits 000E35                 __pdataCOMRAM 003F               _RPINR24_25bits 000E36  
           __end_of_setupADC 0CAA                    ?_ADC_Read 0060               _RPINR18_19bits 000E33  
         processTaps@tapDiff 002B                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                 ?_processTaps 0021         __size_of_maxTapCheck 0050  
                 __accesstop 0060      __end_of__initialization 10C2           __CFG_DSWDTOSC$LPRC 000000  
              ___rparam_used 000001              __CFG_T5GSEL$T5G 000000              __CFG_IOL1WAY$ON 000000  
             __pcstackCOMRAM 0021                 __pidataBANK0 1338            __CFG_PLLDIV$PLL8X 000000  
                 ??_ADC_Read 003F                   _dataTarget 000D                   __pbssBANK0 007E  
     __size_of_interfaceInit 0096           i2_updatePresetLEDs 0F58            ??_startupSequence 0060  
          ??_highPriorityISR 002D                      ?_absVal 0021                      ?___wmul 0060  
         __size_of_sendParam 0056                      _ADCBUF0 000FC2                      _ADCBUF1 000E48  
                    _ADCBUF2 000E4A                      _ADCBUF3 000E4C                      _ADCBUF4 000E4E  
                    _ADCBUF5 000E50                      _ADCBUF6 000E52                      _ADCBUF8 000E56  
                    _ADCBUF9 000E58          ?i2_updatePresetLEDs 0021                      ?_tapLED 0021  
            __CFG_VBTBOR$OFF 000000                   _disableLCD 11AC           __size_of_setupTMR0 0018  
         __size_of_setupTMR1 000E           __size_of_setupTMR2 0010           __size_of_setupTMR4 0016  
            __CFG_WDTCLK$FRC 000000                      _SSP1ADD 000FC8                      _SSP2ADD 000F02  
                    _SSP1BUF 000FC9                      _SSP2BUF 000F03                      _SSP2MSK 000F17  
       ??i2_updatePresetLEDs 0023                    ?_killLEDs 0021       __size_of_interruptInit 0030  
                    __Hparam 0000                      __Lparam 0000                    ?_setupADC 0021  
     __size_of_checkSwitches 0090                      ___awdiv 0ED4              __size_of_absVal 0028  
            __size_of___wmul 0036                   _levelValue 0009                      _dataPtr 0088  
            __size_of_tapLED 0084                      __pcinit 107A                      __ramtop 0E00  
                    __ptext0 0482                      __ptext1 0D3A                      __ptext2 1250  
                    __ptext3 00F2                      __ptext4 1302                      __ptext5 1318  
                    __ptext6 1328                      __ptext7 12EA                      __ptext8 0C1A  
                    __ptext9 1026                _interfaceInit 0B84                    _T0CONbits 000FD5  
                  _T1CONbits 000FCD                    _T2CONbits 000FCA                    _T3CONbits 000FB1  
                    _tapTime 0086                      _tapPrev 0003                    _T4CONbits 000F04  
                  _T5CONbits 000F14                      main@dir 0078                      _switch1 0019  
                    _switch2 0017                      _switch3 0015                      _switch4 0013  
                    _switch5 0011            __end_of_sendParam 1026         end_of_initialization 10C2  
                 ??_killLEDs 003F            checkSwitches@flag 0021    __size_of_I2C1_Read_EEPROM 008A  
       __size_of_processTaps 00FA              _serviceSwitches 080E            __end_of_setupTMR0 1302  
          __end_of_setupTMR1 1336            __end_of_setupTMR2 1328            __end_of_setupTMR4 1318  
                 ??_setupADC 003F     I2C1_Write_EEPROM@devAddr 0062                      postinc0 000FEE  
 __end_of_I2C1_Write_DigiPot 11AC             __CFG_FSCM$CSECMD 000000             __CFG_DSBITEN$OFF 000000  
              _interruptInit 1220            ?_updatePresetLEDs 0060                  ?_disableLCD 0021  
             ?_interfaceInit 0021             __CFG_DSBOREN$OFF 000000                  _ADCHS0Lbits 000E86  
         ??_updatePresetLEDs 003F             __CFG_FOSC$FRCDIV 000000                  _ADCON1Hbits 000FC1  
                _ADCON2Hbits 000E8D                  _ADCON1Lbits 000FC0                  _ADCON3Hbits 000E8B  
                  _TRISAbits 000F92                    _TRISBbits 000F93                    _TRISCbits 000F94  
              ??_clockSwitch 003F                    _TRISDbits 000F95                  _ADCON3Lbits 000E8A  
                _ADCON5Hbits 000E89                    _TRISEbits 000F96                    _TRISFbits 000F97  
                  _TRISGbits 000F98                    _TRISHbits 000F99                    _TRISJbits 000F9A  
              _checkSwitches 0CAA            __size_of_ADC_Read 012C         __CFG_CINASEL$DEFAULT 000000  
                _CCP4CONbits 000F10                   main@result 0068            __CFG_WPFP$WPFP255 000000  
             ?_interruptInit 0021               __end_of_absVal 12A6               __end_of___wmul 1220  
              __pidataCOMRAM 1336    I2C1_Write_EEPROM@memValue 0060               __end_of_tapLED 0ED4  
           __CFG_DSWDTEN$OFF 000000          start_initialization 107A                   _systemInit 1250  
             ?_checkSwitches 0021              _startupSequence 00F2                ??_maxTapCheck 0021  
    __end_of_serviceSwitches 095E              _highPriorityISR 0008                _feedbackValue 000B  
        __end_of_clockSwitch 12CA          __size_of_disableLCD 003E      I2C1_Write_DigiPot@value 0060  
                   ??_absVal 0023                     ??___wmul 003F               _currentTapTime 0092  
            ??_interfaceInit 003F                  __pdataBANK0 0092                     ??_tapLED 0021  
   I2C1_Read_EEPROM@memValue 0060                  __pbssCOMRAM 0001                __pcstackBANK0 0060  
           _I2C1_Read_EEPROM 0DC6            __size_of_killLEDs 0020        updatePresetLEDs@psNum 0060  
        __end_of_maxTapCheck 111C              ??_interruptInit 003F                    __pintcode 0008  
                  absVal@val 0021                     ?___awdiv 0021            __size_of_setupADC 0090  
                   _ADCBUF14 000E62                 _tapDispCount 000F      __end_of_startupSequence 0482  
    __end_of_highPriorityISR 00EE             __CFG_POSCMD$NONE 000000              ??_checkSwitches 0021  
                   _ADC_Read 095E                  ?_systemInit 0021                  _clockSwitch 12A6  
           ?_serviceSwitches 0021  __size_ofi2_updatePresetLEDs 0078                    _tapOnTime 003F  
 I2C1_Read_EEPROM@dummyWrite 0061               ___wmul@product 0064                     _IOCFbits 000FD1  
                  _sendParam 0FD0                     _IOCNbits 000F55                     _PIE1bits 000F9D  
                   _PIE2bits 000FA0                     _PIE5bits 000FB7                     i2u164_40 0F1A  
                   i2u167_40 0AA0                     i2u168_40 0AE8                     i2u192_40 0834  
                   _PIR1bits 000F9E                     i2u193_45 0836                     i2u194_40 083E  
                   _PIR2bits 000FA1                     i2u195_45 0840                    _timeValue 0007  
           __CFG_WDTPS$32768 000000                    _setupTMR0 12EA                    _setupTMR1 1328  
                  _setupTMR2 1318                    _setupTMR4 1302                     _UCONbits 000F75  
               _tapTimeCount 0005                 ??_disableLCD 003F            ___wmul@multiplier 0060  
           __CFG_SOSCSEL$DIG 000000  I2C1_Write_DigiPot@wrCommand 0061                   _CM1CONbits 000F53  
         _I2C1_Write_DigiPot 116A                   _CM2CONbits 000F38                   _CM3CONbits 000F37  
           __CFG_WPDIS$WPDIS 000000                  _maxTapCheck 10CC                ??_processTaps 0029  
  __size_of_updatePresetLEDs 008C          ?_I2C1_Write_DigiPot 0021                   ?_sendParam 0021  
         __end_of_disableLCD 11EA                   _ANCON1bits 000E47                   _ANCON2bits 000E46  
                 _ANCON3bits 000E45                     __Hrparam 0000                     __Lrparam 0000  
        __size_of_systemInit 002E      I2C1_Read_EEPROM@devAddr 0064                   ?_setupTMR0 0021  
                 ?_setupTMR1 0021                   ?_setupTMR2 0021                   ?_setupTMR4 0021  
              ADC_Read@value 0062             __size_of___awdiv 0084         ??_I2C1_Write_DigiPot 003F  
           ?_startupSequence 0021             ?_highPriorityISR 0021                     __ptext10 12CA  
                   __ptext11 0B84                     __ptext12 11AC                     __ptext21 0E50  
                   __ptext13 12A6                     __ptext22 080E                     __ptext14 1220  
                   __ptext23 0F58                     __ptext15 11EA                     __ptext24 0A8A  
                   __ptext16 111C                     __ptext25 10CC                     __ptext17 116A  
                   __ptext26 127E                     __ptext18 0DC6                     __ptext27 0ED4  
                   __ptext19 095E                     __ptext28 0FD0                     __ptext29 0CAA  
               _SSP1CON1bits 000FC6                 _SSP1CON2bits 000FC5                   _LCDCONbits 000ED9  
               _SSP2CON1bits 000F19                 _SSP2CON2bits 000F18                 _SSP2CON3bits 000F39  
                   _killLEDs 12CA                  _OSCCON2bits 000F66                  _OSCCON3bits 000F65  
                _OSCCON4bits 000F64      i2updatePresetLEDs@psNum 0021                __size_of_main 038C  
                   _tapAccum 007E                     _newTempo 0084                     _tapFlash 008A  
         __CFG_MSSPMSK1$MSK7 000000           __CFG_MSSPMSK2$MSK7 000000          __end_of_processTaps 0B84  
                   _setupADC 0C1A            _I2C1_Write_EEPROM 111C       I2C1_Write_EEPROM@value 0061  
                   int$flags 0041                   _MEMCONbits 000EE3           ?_I2C1_Write_EEPROM 0060  
                   main@bitA 006C                     main@bitB 006E                     main@bitC 0070  
                   main@diff 0076                 _SSP1STATbits 000FC7                     main@byte 0072  
                   main@temp 007C                 _SSP2STATbits 000F1A     __end_of_I2C1_Read_EEPROM 0E50  
        ??_I2C1_Write_EEPROM 003F           __CFG_WDTEN$SWDTDIS 000000                   _INTCONbits 000FF2  
     I2C1_Read_EEPROM@rdAddr 0062                     intlevel2 0000                  ??_sendParam 0021  
  __end_of_I2C1_Write_EEPROM 116A                   _OSCCONbits 000FD3                  ??_setupTMR0 003F  
                ??_setupTMR1 003F                  ??_setupTMR2 003F                  ??_setupTMR4 003F  
          _mapPeripheralPins 1026           ?_mapPeripheralPins 0021        __end_of_interfaceInit 0C1A  
               _timeoutCount 0082        I2C1_Read_EEPROM@value 0063          ??_mapPeripheralPins 003F  
               ??_systemInit 003F                 ?_clockSwitch 0021             _updatePresetLEDs 0D3A  
        __CFG_WPCFG$WPCFGDIS 000000                  _processTaps 0A8A           __CFG_WINDIS$WDTSTD 000000  
     __CFG_DSWDTPS$DSWDTPS1F 000000    __end_of_mapPeripheralPins 107A  
