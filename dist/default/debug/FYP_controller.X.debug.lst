

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Oct 13 22:01:11 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F85J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           ; Version 1.43
    63                           ; Generated 25/07/2017 GMT
    64                           ; 
    65                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F85J94 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     
    97                           	psect	idataCOMRAM
    98  001966                     __pidataCOMRAM:
    99                           	opt stack 0
   100                           
   101                           ;initializer for _tapOnTime
   102  001966  0005               	dw	5
   103                           
   104                           ;initializer for _swX
   105  001968  0001               	dw	1
   106                           
   107                           	psect	idataBANK0
   108  00193E                     __pidataBANK0:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _presetAdd
   112  00193E  0000               	dw	0
   113  001940  0010               	dw	16
   114  001942  0020               	dw	32
   115  001944  0030               	dw	48
   116  001946  0040               	dw	64
   117                           
   118                           ;initializer for _currentTapTime
   119  001948  01F4               	dw	500
   120                           
   121                           ;initializer for _bypMode
   122  00194A  0001               	dw	1
   123                           
   124                           	psect	idataBANK1
   125  001694                     __pidataBANK1:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _paramAddress
   129  001694  00A1               	dw	161
   130  001696  00A3               	dw	163
   131  001698  00A5               	dw	165
   132  00169A  00A7               	dw	167
   133  00169C  00A9               	dw	169
   134  00169E  00AB               	dw	171
   135  0016A0  00AD               	dw	173
   136  0016A2  00AF               	dw	175
   137  0016A4  00B1               	dw	177
   138  0016A6  00B3               	dw	179
   139  0016A8  00B5               	dw	181
   140  0016AA  00B7               	dw	183
   141  0016AC  00BF               	dw	191
   142                           
   143                           ;initializer for main@F13907
   144  0016AE  00FF               	dw	255
   145  0016B0  00AA               	dw	170
   146  0016B2  00FF               	dw	255
   147  0016B4  00AA               	dw	170
   148  0016B6  00FF               	dw	255
   149  0016B8  00AA               	dw	170
   150  0016BA  00FF               	dw	255
   151  0016BC  00AA               	dw	170
   152  0016BE  00FF               	dw	255
   153  0016C0  00AA               	dw	170
   154  0016C2  00FF               	dw	255
   155  0016C4  00AA               	dw	170
   156                           
   157                           ;initializer for _presetParams
   158  0016C6  0000               	dw	0
   159  0016C8  00FF               	dw	255
   160  0016CA  007F               	dw	127
   161  0016CC  007F               	dw	127
   162  0016CE  0000               	dw	0
   163  0016D0  0000               	dw	0
   164  0016D2  0000               	dw	0
   165  0016D4  0000               	dw	0
   166  0016D6  0000               	dw	0
   167  0016D8  0000               	dw	0
   168  0016DA  0000               	dw	0
   169  0016DC  0000               	dw	0
   170  0000                     _ADCBUF9	set	3672
   171  0000                     _ADCBUF8	set	3670
   172  0000                     _ADCBUF14	set	3682
   173  0000                     _ADCBUF6	set	3666
   174  0000                     _ADCBUF5	set	3664
   175  0000                     _ADCBUF4	set	3662
   176  0000                     _ADCBUF3	set	3660
   177  0000                     _ADCBUF2	set	3658
   178  0000                     _ADCBUF1	set	3656
   179  0000                     _MEMCONbits	set	3811
   180  0000                     _LCDSE7	set	3797
   181  0000                     _LCDSE6	set	3796
   182  0000                     _LCDSE5	set	3795
   183  0000                     _LCDSE4	set	3794
   184  0000                     _LCDSE3	set	3793
   185  0000                     _LCDSE2	set	3792
   186  0000                     _LCDSE1	set	3791
   187  0000                     _LCDSE0	set	3790
   188  0000                     _LCDCONbits	set	3801
   189  0000                     _RPINR22_23bits	set	3637
   190  0000                     _RPINR18_19bits	set	3635
   191  0000                     _RPINR24_25bits	set	3638
   192  0000                     _RPINR20_21bits	set	3636
   193  0000                     _ANCON3bits	set	3653
   194  0000                     _ANCON2bits	set	3654
   195  0000                     _ANCON1bits	set	3655
   196  0000                     _ADCHS0Lbits	set	3718
   197  0000                     _ADCON5Hbits	set	3721
   198  0000                     _ADCON3Lbits	set	3722
   199  0000                     _ADCON3Hbits	set	3723
   200  0000                     _ADCON2Hbits	set	3725
   201  0000                     _IOCPbits	set	3926
   202  0000                     _IOCNbits	set	3925
   203  0000                     _PADCFG1bits	set	3924
   204  0000                     _T5CONbits	set	3860
   205  0000                     _CM3CONbits	set	3895
   206  0000                     _CM2CONbits	set	3896
   207  0000                     _CM1CONbits	set	3923
   208  0000                     _SSP2BUF	set	3843
   209  0000                     _SSP2CON3bits	set	3897
   210  0000                     _SSP2CON2bits	set	3864
   211  0000                     _SSP2MSK	set	3863
   212  0000                     _SSP2ADD	set	3842
   213  0000                     _SSP2CON1bits	set	3865
   214  0000                     _CCPR4H	set	3858
   215  0000                     _CCPTMRS1bits	set	3893
   216  0000                     _CCP4CONbits	set	3856
   217  0000                     _CCPR4L	set	3857
   218  0000                     _T4CONbits	set	3844
   219  0000                     _ADCBUF0	set	4034
   220  0000                     _SSP1STATbits	set	4039
   221  0000                     _PIR1bits	set	3998
   222  0000                     _SSP1CON2bits	set	4037
   223  0000                     _IOCFbits	set	4049
   224  0000                     _PIE5bits	set	4023
   225  0000                     _PIE2bits	set	4000
   226  0000                     _PIE1bits	set	3997
   227  0000                     _INTCONbits	set	4082
   228  0000                     _TRISBbits	set	3987
   229  0000                     _TRISJbits	set	3994
   230  0000                     _TRISEbits	set	3990
   231  0000                     _T3CONbits	set	4017
   232  0000                     _UCONbits	set	3957
   233  0000                     _OSCCON	set	4051
   234  0000                     _TRISGbits	set	3992
   235  0000                     _TRISHbits	set	3993
   236  0000                     _TRISFbits	set	3991
   237  0000                     _TRISAbits	set	3986
   238  0000                     _ADCON1Lbits	set	4032
   239  0000                     _ADCON1Hbits	set	4033
   240  0000                     _TRISDbits	set	3989
   241  0000                     _SSP1BUF	set	4041
   242  0000                     _SSP1ADD	set	4040
   243  0000                     _SSP1CON1bits	set	4038
   244  0000                     _T2CON	set	4042
   245  0000                     _TRISCbits	set	3988
   246  0000                     _PR2	set	4043
   247  0000                     _OSCCONbits	set	4051
   248  0000                     _OSCCON2bits	set	3942
   249  0000                     _OSCCON3bits	set	3941
   250  0000                     _OSCCON4bits	set	3940
   251  0000                     _T1CONbits	set	4045
   252  0000                     _T0CONbits	set	4053
   253  0000                     _T2CONbits	set	4042
   254  0000                     _PIR2bits	set	4001
   255  0000                     _RD7	set	31775
   256  0000                     _RJ0	set	31808
   257  0000                     _RJ1	set	31809
   258  0000                     _RH4	set	31804
   259  0000                     _RH5	set	31805
   260  0000                     _RF3	set	31787
   261  0000                     _RC6	set	31766
   262  0000                     _RC0	set	31760
   263  0000                     _RC1	set	31761
   264  0000                     _RJ5	set	31813
   265  0000                     _RJ4	set	31812
   266  0000                     _RC7	set	31767
   267  0000                     _RG3	set	31795
   268  0000                     _RD1	set	31769
   269  0000                     _RE6	set	31782
   270  0000                     _RG2	set	31794
   271  0000                     _RG1	set	31793
   272  0000                     _RE3	set	31779
   273  0000                     _RD4	set	31772
   274  0000                     _IOCF7	set	32399
   275  0000                     _IOCF6	set	32398
   276  0000                     _IOCF5	set	32397
   277  0000                     _IOCF4	set	32396
   278  0000                     _IOCF3	set	32395
   279  0000                     _IOCF2	set	32394
   280  0000                     _IOCF1	set	32393
   281  0000                     _LATE0	set	31848
   282  0000                     _LATD2	set	31842
   283  0000                     _LATH1	set	31873
   284  0000                     _LATE1	set	31849
   285  0000                     _LATH2	set	31874
   286  0000                     _LATE4	set	31852
   287  0000                     _LATE5	set	31853
   288  0000                     _LATE7	set	31855
   289  0000                     _LATD0	set	31840
   290  0000                     _LATH0	set	31872
   291  0000                     _LATG4	set	31868
   292  0000                     _LATF6	set	31862
   293  0000                     _LATF5	set	31861
   294  0000                     _LATF2	set	31858
   295  0000                     _LATH7	set	31879
   296  0000                     _LATD3	set	31843
   297  0000                     _LATB5	set	31829
   298  0000                     _TMR2ON	set	32338
   299  0000                     _TMR0IF	set	32658
   300  0000                     _TMR2IF	set	31985
   301  0000                     _TMR4IF	set	32192
   302  0000                     _SSP2IF	set	32014
   303                           
   304                           ; #config settings
   305  0000                     
   306                           	psect	cinit
   307  00135E                     __pcinit:
   308                           	opt stack 0
   309  00135E                     start_initialization:
   310                           	opt stack 0
   311  00135E                     __initialization:
   312                           	opt stack 0
   313                           
   314                           ; Initialize objects allocated to BANK1 (74 bytes)
   315                           ; load TBLPTR registers with __pidataBANK1
   316  00135E  0E94               	movlw	low __pidataBANK1
   317  001360  6EF6               	movwf	tblptrl,c
   318  001362  0E16               	movlw	high __pidataBANK1
   319  001364  6EF7               	movwf	tblptrh,c
   320  001366  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   321  001368  6EF8               	movwf	tblptru,c
   322  00136A  EE01  F078         	lfsr	0,__pdataBANK1
   323  00136E  EE10 F04A          	lfsr	1,74
   324  001372                     copy_data0:
   325  001372  0009               	tblrd		*+
   326  001374  CFF5 FFEE          	movff	tablat,postinc0
   327  001378  50E5               	movf	postdec1,w,c
   328  00137A  50E1               	movf	fsr1l,w,c
   329  00137C  E1FA               	bnz	copy_data0
   330                           
   331                           ; Initialize objects allocated to BANK0 (14 bytes)
   332                           ; load TBLPTR registers with __pidataBANK0
   333  00137E  0E3E               	movlw	low __pidataBANK0
   334  001380  6EF6               	movwf	tblptrl,c
   335  001382  0E19               	movlw	high __pidataBANK0
   336  001384  6EF7               	movwf	tblptrh,c
   337  001386  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   338  001388  6EF8               	movwf	tblptru,c
   339  00138A  EE00  F0E5         	lfsr	0,__pdataBANK0
   340  00138E  EE10 F00E          	lfsr	1,14
   341  001392                     copy_data1:
   342  001392  0009               	tblrd		*+
   343  001394  CFF5 FFEE          	movff	tablat,postinc0
   344  001398  50E5               	movf	postdec1,w,c
   345  00139A  50E1               	movf	fsr1l,w,c
   346  00139C  E1FA               	bnz	copy_data1
   347                           
   348                           ; Initialize objects allocated to COMRAM (4 bytes)
   349                           ; load TBLPTR registers with __pidataCOMRAM
   350  00139E  0E66               	movlw	low __pidataCOMRAM
   351  0013A0  6EF6               	movwf	tblptrl,c
   352  0013A2  0E19               	movlw	high __pidataCOMRAM
   353  0013A4  6EF7               	movwf	tblptrh,c
   354  0013A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   355  0013A8  6EF8               	movwf	tblptru,c
   356  0013AA  EE00  F049         	lfsr	0,__pdataCOMRAM
   357  0013AE  EE10 F004          	lfsr	1,4
   358  0013B2                     copy_data2:
   359  0013B2  0009               	tblrd		*+
   360  0013B4  CFF5 FFEE          	movff	tablat,postinc0
   361  0013B8  50E5               	movf	postdec1,w,c
   362  0013BA  50E1               	movf	fsr1l,w,c
   363  0013BC  E1FA               	bnz	copy_data2
   364                           
   365                           ; Clear objects allocated to BANK1 (120 bytes)
   366  0013BE  EE01  F000         	lfsr	0,__pbssBANK1
   367  0013C2  0E78               	movlw	120
   368  0013C4                     clear_0:
   369  0013C4  6AEE               	clrf	postinc0,c
   370  0013C6  06E8               	decf	wreg,f,c
   371  0013C8  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK0 (88 bytes)
   374  0013CA  EE00  F060         	lfsr	0,__pbssBANK0
   375  0013CE  0E58               	movlw	88
   376  0013D0                     clear_1:
   377  0013D0  6AEE               	clrf	postinc0,c
   378  0013D2  06E8               	decf	wreg,f,c
   379  0013D4  E1FD               	bnz	clear_1
   380                           
   381                           ; Clear objects allocated to COMRAM (40 bytes)
   382  0013D6  EE00  F001         	lfsr	0,__pbssCOMRAM
   383  0013DA  0E28               	movlw	40
   384  0013DC                     clear_2:
   385  0013DC  6AEE               	clrf	postinc0,c
   386  0013DE  06E8               	decf	wreg,f,c
   387  0013E0  E1FD               	bnz	clear_2
   388  0013E2                     end_of_initialization:
   389                           	opt stack 0
   390  0013E2                     __end_of__initialization:
   391                           	opt stack 0
   392  0013E2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   393  0013E4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394  0013E6  0100               	movlb	0
   395  0013E8  EF33  F004         	goto	_main	;jump to C main() function
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           wreg	equ	0xFE8
   402                           postdec1	equ	0xFE5
   403                           fsr1l	equ	0xFE1
   404                           
   405                           	psect	bssCOMRAM
   406  000001                     __pbssCOMRAM:
   407                           	opt stack 0
   408  000001                     _tap:
   409                           	opt stack 0
   410  000001                     	ds	2
   411  000003                     _tapPrev:
   412                           	opt stack 0
   413  000003                     	ds	2
   414  000005                     _tapTimeCount:
   415                           	opt stack 0
   416  000005                     	ds	2
   417  000007                     _timeC:
   418                           	opt stack 0
   419  000007                     	ds	2
   420  000009                     _timeB:
   421                           	opt stack 0
   422  000009                     	ds	2
   423  00000B                     _timeA:
   424                           	opt stack 0
   425  00000B                     	ds	2
   426  00000D                     _armC:
   427                           	opt stack 0
   428  00000D                     	ds	2
   429  00000F                     _armB:
   430                           	opt stack 0
   431  00000F                     	ds	2
   432  000011                     _armA:
   433                           	opt stack 0
   434  000011                     	ds	2
   435  000013                     _shift:
   436                           	opt stack 0
   437  000013                     	ds	2
   438  000015                     _tapDispCount:
   439                           	opt stack 0
   440  000015                     	ds	2
   441  000017                     _presetPend:
   442                           	opt stack 0
   443  000017                     	ds	2
   444  000019                     _targPreset:
   445                           	opt stack 0
   446  000019                     	ds	2
   447  00001B                     _bypass:
   448                           	opt stack 0
   449  00001B                     	ds	2
   450  00001D                     _switch2:
   451                           	opt stack 0
   452  00001D                     	ds	2
   453  00001F                     _switch1:
   454                           	opt stack 0
   455  00001F                     	ds	2
   456  000021                     _shiftAction:
   457                           	opt stack 0
   458  000021                     	ds	2
   459  000023                     _intC:
   460                           	opt stack 0
   461  000023                     	ds	2
   462  000025                     _intB:
   463                           	opt stack 0
   464  000025                     	ds	2
   465  000027                     _intA:
   466                           	opt stack 0
   467  000027                     	ds	2
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	dataCOMRAM
   478  000049                     __pdataCOMRAM:
   479                           	opt stack 0
   480  000049                     _tapOnTime:
   481                           	opt stack 0
   482  000049                     	ds	2
   483  00004B                     _swX:
   484                           	opt stack 0
   485  00004B                     	ds	2
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           postdec1	equ	0xFE5
   493                           fsr1l	equ	0xFE1
   494                           
   495                           	psect	bssBANK0
   496  000060                     __pbssBANK0:
   497                           	opt stack 0
   498  000060                     _tapAccum:
   499                           	opt stack 0
   500  000060                     	ds	4
   501  000064                     _sync:
   502                           	opt stack 0
   503  000064                     	ds	2
   504  000066                     _setupComplete:
   505                           	opt stack 0
   506  000066                     	ds	2
   507  000068                     _timeoutCount:
   508                           	opt stack 0
   509  000068                     	ds	2
   510  00006A                     _newTempo:
   511                           	opt stack 0
   512  00006A                     	ds	2
   513  00006C                     _tapTime:
   514                           	opt stack 0
   515  00006C                     	ds	2
   516  00006E                     _lvlC:
   517                           	opt stack 0
   518  00006E                     	ds	2
   519  000070                     _fbkC:
   520                           	opt stack 0
   521  000070                     	ds	2
   522  000072                     _lvlB:
   523                           	opt stack 0
   524  000072                     	ds	2
   525  000074                     _fbkB:
   526                           	opt stack 0
   527  000074                     	ds	2
   528  000076                     _lvlA:
   529                           	opt stack 0
   530  000076                     	ds	2
   531  000078                     _fbkA:
   532                           	opt stack 0
   533  000078                     	ds	2
   534  00007A                     _dataPtr:
   535                           	opt stack 0
   536  00007A                     	ds	2
   537  00007C                     _dataTarget:
   538                           	opt stack 0
   539  00007C                     	ds	2
   540  00007E                     _linesArmed:
   541                           	opt stack 0
   542  00007E                     	ds	2
   543  000080                     _armFlashToggle:
   544                           	opt stack 0
   545  000080                     	ds	2
   546  000082                     _armFlash:
   547                           	opt stack 0
   548  000082                     	ds	2
   549  000084                     _armFlashCount:
   550                           	opt stack 0
   551  000084                     	ds	2
   552  000086                     _tapFlash:
   553                           	opt stack 0
   554  000086                     	ds	2
   555  000088                     _pFlash:
   556                           	opt stack 0
   557  000088                     	ds	2
   558  00008A                     _pFlashCount:
   559                           	opt stack 0
   560  00008A                     	ds	2
   561  00008C                     _slotUsed:
   562                           	opt stack 0
   563  00008C                     	ds	2
   564  00008E                     _savePend:
   565                           	opt stack 0
   566  00008E                     	ds	2
   567  000090                     _preset:
   568                           	opt stack 0
   569  000090                     	ds	2
   570  000092                     _muxADC:
   571                           	opt stack 0
   572  000092                     	ds	2
   573  000094                     _bounceCount:
   574                           	opt stack 0
   575  000094                     	ds	2
   576  000096                     _fsw2:
   577                           	opt stack 0
   578  000096                     	ds	2
   579  000098                     _fsw1:
   580                           	opt stack 0
   581  000098                     	ds	2
   582  00009A                     _switch5:
   583                           	opt stack 0
   584  00009A                     	ds	2
   585  00009C                     _switch4:
   586                           	opt stack 0
   587  00009C                     	ds	2
   588  00009E                     _switch3:
   589                           	opt stack 0
   590  00009E                     	ds	2
   591  0000A0                     _parameter:
   592                           	opt stack 0
   593  0000A0                     	ds	24
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK0
   604  0000E5                     __pdataBANK0:
   605                           	opt stack 0
   606  0000E5                     _presetAdd:
   607                           	opt stack 0
   608  0000E5                     	ds	10
   609  0000EF                     _currentTapTime:
   610                           	opt stack 0
   611  0000EF                     	ds	2
   612  0000F1                     _bypMode:
   613                           	opt stack 0
   614  0000F1                     	ds	2
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	bssBANK1
   625  000100                     __pbssBANK1:
   626                           	opt stack 0
   627  000100                     _userParams:
   628                           	opt stack 0
   629  000100                     	ds	120
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	dataBANK1
   640  000178                     __pdataBANK1:
   641                           	opt stack 0
   642  000178                     _paramAddress:
   643                           	opt stack 0
   644  000178                     	ds	26
   645  000192                     main@F13907:
   646                           	opt stack 0
   647  000192                     	ds	24
   648  0001AA                     _presetParams:
   649                           	opt stack 0
   650  0001AA                     	ds	24
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           postdec1	equ	0xFE5
   658                           fsr1l	equ	0xFE1
   659                           
   660                           	psect	cstackBANK1
   661  0001C2                     __pcstackBANK1:
   662                           	opt stack 0
   663  0001C2                     main@testWrite:
   664                           	opt stack 0
   665                           
   666                           ; 24 bytes @ 0x0
   667  0001C2                     	ds	24
   668  0001DA                     main@prevDry:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x18
   672  0001DA                     	ds	2
   673  0001DC                     main@diff:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x1A
   677  0001DC                     	ds	2
   678  0001DE                     main@dryLevel:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x1C
   682  0001DE                     	ds	2
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1l	equ	0xFE1
   691                           
   692                           	psect	cstackBANK0
   693  0000B8                     __pcstackBANK0:
   694                           	opt stack 0
   695  0000B8                     ??_startupSequence:
   696  0000B8                     ?_ADC_Read:
   697                           	opt stack 0
   698  0000B8                     ?_absVal:
   699                           	opt stack 0
   700  0000B8                     ?___wmul:
   701                           	opt stack 0
   702  0000B8                     I2C1_Write_DigiPot@value:
   703                           	opt stack 0
   704  0000B8                     absVal@val:
   705                           	opt stack 0
   706  0000B8                     ADC_Read@channel:
   707                           	opt stack 0
   708  0000B8                     I2C1_Page_Write_EEPROM@slot:
   709                           	opt stack 0
   710  0000B8                     I2C1_Block_Read_EERPOM@slot:
   711                           	opt stack 0
   712  0000B8                     ___wmul@multiplier:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  0000B8                     	ds	1
   717  0000B9                     I2C1_Write_DigiPot@wrCommand:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x1
   721  0000B9                     	ds	1
   722  0000BA                     ??_absVal:
   723  0000BA                     ADC_Read@value:
   724                           	opt stack 0
   725  0000BA                     I2C1_Page_Write_EEPROM@data:
   726                           	opt stack 0
   727  0000BA                     I2C1_Block_Read_EERPOM@data:
   728                           	opt stack 0
   729  0000BA                     ___wmul@multiplicand:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x2
   733  0000BA                     	ds	2
   734  0000BC                     ??_readControls:
   735  0000BC                     I2C1_Page_Write_EEPROM@bytes:
   736                           	opt stack 0
   737  0000BC                     I2C1_Block_Read_EERPOM@bytes:
   738                           	opt stack 0
   739  0000BC                     ___wmul@product:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x4
   743  0000BC                     	ds	2
   744  0000BE                     ??_I2C1_Block_Read_EERPOM:
   745  0000BE                     ??_I2C1_Page_Write_EEPROM:
   746  0000BE                     updatePreset@slot:
   747                           	opt stack 0
   748  0000BE                     updateParams@slot:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x6
   752  0000BE                     	ds	1
   753  0000BF                     I2C1_Page_Write_EEPROM@wrDevAddr:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x7
   757  0000BF                     	ds	1
   758  0000C0                     ??_updateParams:
   759  0000C0                     I2C1_Page_Write_EEPROM@memValue:
   760                           	opt stack 0
   761  0000C0                     I2C1_Block_Read_EERPOM@rdAddr:
   762                           	opt stack 0
   763  0000C0                     updatePreset@values:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x8
   767  0000C0                     	ds	1
   768  0000C1                     I2C1_Block_Read_EERPOM@memValue:
   769                           	opt stack 0
   770  0000C1                     I2C1_Page_Write_EEPROM@n:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x9
   774  0000C1                     	ds	1
   775  0000C2                     ??_updatePreset:
   776  0000C2                     I2C1_Block_Read_EERPOM@dummyWrite:
   777                           	opt stack 0
   778  0000C2                     updateParams@i:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0xA
   782  0000C2                     	ds	1
   783  0000C3                     I2C1_Block_Read_EERPOM@n:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0xB
   787  0000C3                     	ds	1
   788  0000C4                     updatePreset@i:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0xC
   792  0000C4                     	ds	2
   793  0000C6                     fetchPreset@values:
   794                           	opt stack 0
   795                           
   796                           ; 24 bytes @ 0xE
   797  0000C6                     	ds	24
   798  0000DE                     fetchPreset@test:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x26
   802  0000DE                     	ds	2
   803  0000E0                     fetchPreset@i:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x28
   807  0000E0                     	ds	2
   808  0000E2                     ??_main:
   809                           
   810                           ; 1 bytes @ 0x2A
   811  0000E2                     	ds	3
   812                           tblptru	equ	0xFF8
   813                           tblptrh	equ	0xFF7
   814                           tblptrl	equ	0xFF6
   815                           tablat	equ	0xFF5
   816                           postinc0	equ	0xFEE
   817                           wreg	equ	0xFE8
   818                           postdec1	equ	0xFE5
   819                           fsr1l	equ	0xFE1
   820                           
   821                           	psect	cstackCOMRAM
   822  000029                     __pcstackCOMRAM:
   823                           	opt stack 0
   824  000029                     ??_tapLED:
   825  000029                     ?___awdiv:
   826                           	opt stack 0
   827  000029                     ?i2_absVal:
   828                           	opt stack 0
   829  000029                     ?i2___wmul:
   830                           	opt stack 0
   831  000029                     checkSwitches@flag:
   832                           	opt stack 0
   833  000029                     updatePresetLEDs@psNum:
   834                           	opt stack 0
   835  000029                     ___awdiv@dividend:
   836                           	opt stack 0
   837  000029                     i2absVal@val:
   838                           	opt stack 0
   839  000029                     i2___wmul@multiplier:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x0
   843  000029                     	ds	2
   844  00002B                     ??i2_absVal:
   845  00002B                     sendParam@n:
   846                           	opt stack 0
   847  00002B                     ___awdiv@divisor:
   848                           	opt stack 0
   849  00002B                     i2___wmul@multiplicand:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x2
   853  00002B                     	ds	2
   854  00002D                     ___awdiv@counter:
   855                           	opt stack 0
   856  00002D                     i2___wmul@product:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x4
   860  00002D                     	ds	1
   861  00002E                     ___awdiv@sign:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x5
   865  00002E                     	ds	1
   866  00002F                     updateLineLEDs@lineA:
   867                           	opt stack 0
   868  00002F                     ___awdiv@quotient:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x6
   872  00002F                     	ds	2
   873  000031                     ??_processTaps:
   874  000031                     updateLineLEDs@lineB:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x8
   878  000031                     	ds	2
   879  000033                     processTaps@tapDiff:
   880                           	opt stack 0
   881  000033                     updateLineLEDs@lineC:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0xA
   885  000033                     	ds	2
   886  000035                     ??_flashLED:
   887  000035                     
   888                           ; 1 bytes @ 0xC
   889  000035                     	ds	2
   890  000037                     ??_highPriorityISR:
   891                           
   892                           ; 1 bytes @ 0xE
   893  000037                     	ds	18
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 251 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  testWrite      24    0[BANK1 ] int [12]
   913 ;;  values         24    0        int [12]
   914 ;;  dryLevel        2   28[BANK1 ] int 
   915 ;;  diff            2   26[BANK1 ] int 
   916 ;;  prevDry         2   24[BANK1 ] int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Totals:         0       3      30       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;Total ram usage:       33 bytes
   931 ;; Hardware stack levels required when called:    7
   932 ;; This function calls:
   933 ;;		_ADC_Read
   934 ;;		_I2C1_Page_Write_EEPROM
   935 ;;		_I2C1_Write_DigiPot
   936 ;;		_absVal
   937 ;;		_fetchPreset
   938 ;;		_readControls
   939 ;;		_systemInit
   940 ;;		_updateParams
   941 ;;		_updatePreset
   942 ;; This function is called by:
   943 ;;		Startup code after reset
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text0
   948  000866                     __ptext0:
   949                           	opt stack 0
   950  000866                     _main:
   951                           	opt stack 24
   952                           
   953                           ;main.c: 254: int dryLevel = 0;
   954                           
   955                           ;incstack = 0
   956  000866  0E00               	movlw	0
   957  000868  0101               	movlb	1	; () banked
   958  00086A  6FDF               	movwf	(main@dryLevel+1)& (0+255),b
   959  00086C  0E00               	movlw	0
   960  00086E  6FDE               	movwf	main@dryLevel& (0+255),b
   961                           
   962                           ;main.c: 255: int prevDry = 0;
   963  000870  0E00               	movlw	0
   964  000872  0101               	movlb	1	; () banked
   965  000874  6FDB               	movwf	(main@prevDry+1)& (0+255),b
   966  000876  0E00               	movlw	0
   967  000878  6FDA               	movwf	main@prevDry& (0+255),b
   968                           
   969                           ;main.c: 256: int diff = 0;
   970  00087A  0E00               	movlw	0
   971  00087C  0101               	movlb	1	; () banked
   972  00087E  6FDD               	movwf	(main@diff+1)& (0+255),b
   973  000880  0E00               	movlw	0
   974  000882  6FDC               	movwf	main@diff& (0+255),b
   975                           
   976                           ; BSR set to: 1
   977                           ;main.c: 257: int values[12];
   978                           ;main.c: 258: int testWrite[] =
   979                           ;main.c: 259: {
   980                           ;main.c: 260: 0xFF, 0xAA, 0xFF, 0xAA, 0xFF, 0xAA,
   981                           ;main.c: 261: 0xFF, 0xAA, 0xFF, 0xAA, 0xFF, 0xAA,
   982                           ;main.c: 262: };
   983  000884  EE21  F092         	lfsr	2,main@F13907
   984  000888  EE11  F0C2         	lfsr	1,main@testWrite
   985  00088C  0E17               	movlw	23
   986  00088E                     u4491:
   987  00088E  CFDB FFE3          	movff	plusw2,plusw1
   988  000892  06E8               	decf	wreg,f,c
   989  000894  E2FC               	bc	u4491
   990                           
   991                           ; BSR set to: 1
   992                           ;main.c: 264: systemInit();
   993  000896  EC6F  F00B         	call	_systemInit	;wreg free
   994                           
   995                           ;main.c: 266: fetchPreset();
   996  00089A  ECF6  F009         	call	_fetchPreset	;wreg free
   997                           
   998                           ;main.c: 268: T4CONbits.TMR4ON = 1;
   999  00089E  010F               	movlb	15	; () banked
  1000  0008A0  8504               	bsf	4,2,b	;volatile
  1001                           
  1002                           ; BSR set to: 15
  1003                           ;main.c: 270: I2C1_Write_DigiPot(0);
  1004  0008A2  0E00               	movlw	0
  1005  0008A4  ECB4  F00B         	call	_I2C1_Write_DigiPot
  1006  0008A8                     
  1007                           ;main.c: 273: {
  1008                           ;main.c: 274: if (savePend)
  1009  0008A8  0100               	movlb	0	; () banked
  1010  0008AA  518E               	movf	_savePend& (0+255),w,b
  1011  0008AC  0100               	movlb	0	; () banked
  1012  0008AE  118F               	iorwf	(_savePend+1)& (0+255),w,b
  1013  0008B0  B4D8               	btfsc	status,2,c
  1014  0008B2  D028               	goto	l196
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;main.c: 275: {
  1018                           ;main.c: 276: I2C1_Page_Write_EEPROM((preset-1), parameter, 12);
  1019  0008B4  0EFF               	movlw	255
  1020  0008B6  0100               	movlb	0	; () banked
  1021  0008B8  2590               	addwf	_preset& (0+255),w,b
  1022  0008BA  0100               	movlb	0	; () banked
  1023  0008BC  6FB8               	movwf	I2C1_Page_Write_EEPROM@slot& (0+255),b
  1024  0008BE  0EFF               	movlw	255
  1025  0008C0  0100               	movlb	0	; () banked
  1026  0008C2  2191               	addwfc	(_preset+1)& (0+255),w,b
  1027  0008C4  0100               	movlb	0	; () banked
  1028  0008C6  6FB9               	movwf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),b
  1029  0008C8  0EA0               	movlw	low _parameter
  1030  0008CA  0100               	movlb	0	; () banked
  1031  0008CC  6FBA               	movwf	I2C1_Page_Write_EEPROM@data& (0+255),b
  1032  0008CE  0E00               	movlw	high _parameter
  1033  0008D0  0100               	movlb	0	; () banked
  1034  0008D2  6FBB               	movwf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),b
  1035  0008D4  0E00               	movlw	0
  1036  0008D6  0100               	movlb	0	; () banked
  1037  0008D8  6FBD               	movwf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),b
  1038  0008DA  0E0C               	movlw	12
  1039  0008DC  6FBC               	movwf	I2C1_Page_Write_EEPROM@bytes& (0+255),b
  1040  0008DE  EC45  F007         	call	_I2C1_Page_Write_EEPROM	;wreg free
  1041                           
  1042                           ;main.c: 277: updatePreset(preset, parameter);
  1043  0008E2  C090  F0BE         	movff	_preset,updatePreset@slot
  1044  0008E6  C091  F0BF         	movff	_preset+1,updatePreset@slot+1
  1045  0008EA  0EA0               	movlw	low _parameter
  1046  0008EC  0100               	movlb	0	; () banked
  1047  0008EE  6FC0               	movwf	updatePreset@values& (0+255),b
  1048  0008F0  0E00               	movlw	high _parameter
  1049  0008F2  0100               	movlb	0	; () banked
  1050  0008F4  6FC1               	movwf	(updatePreset@values+1)& (0+255),b
  1051  0008F6  ECF3  F007         	call	_updatePreset	;wreg free
  1052                           
  1053                           ;main.c: 278: savePend = 0;
  1054  0008FA  0E00               	movlw	0
  1055  0008FC  0100               	movlb	0	; () banked
  1056  0008FE  6F8F               	movwf	(_savePend+1)& (0+255),b
  1057  000900  0E00               	movlw	0
  1058  000902  6F8E               	movwf	_savePend& (0+255),b
  1059  000904                     l196:
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;main.c: 279: }
  1063                           ;main.c: 281: if (preset > 0)
  1064                           
  1065                           ; BSR set to: 0
  1066  000904  0100               	movlb	0	; () banked
  1067  000906  BF91               	btfsc	(_preset+1)& (0+255),7,b
  1068  000908  D00E               	goto	l197
  1069  00090A  0100               	movlb	0	; () banked
  1070  00090C  5191               	movf	(_preset+1)& (0+255),w,b
  1071  00090E  E104               	bnz	u4510
  1072  000910  0100               	movlb	0	; () banked
  1073  000912  0590               	decf	_preset& (0+255),w,b
  1074  000914  A0D8               	btfss	status,0,c
  1075  000916  D007               	goto	l197
  1076  000918                     u4510:
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;main.c: 282: {
  1080                           ;main.c: 283: updateParams(preset);
  1081  000918  C090  F0BE         	movff	_preset,updateParams@slot
  1082  00091C  C091  F0BF         	movff	_preset+1,updateParams@slot+1
  1083  000920  ECD5  F008         	call	_updateParams	;wreg free
  1084                           
  1085                           ;main.c: 284: }
  1086  000924  D051               	goto	l199
  1087  000926                     l197:
  1088                           
  1089                           ;main.c: 285: else
  1090                           ;main.c: 286: {
  1091                           ;main.c: 287: readControls();
  1092  000926  EC39  F003         	call	_readControls	;wreg free
  1093                           
  1094                           ;main.c: 288: dryLevel = ADC_Read(8);
  1095  00092A  0E00               	movlw	0
  1096  00092C  0100               	movlb	0	; () banked
  1097  00092E  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  1098  000930  0E08               	movlw	8
  1099  000932  6FB8               	movwf	ADC_Read@channel& (0+255),b
  1100  000934  EC32  F006         	call	_ADC_Read	;wreg free
  1101  000938  C0B8  F1DE         	movff	?_ADC_Read,main@dryLevel
  1102  00093C  C0B9  F1DF         	movff	?_ADC_Read+1,main@dryLevel+1
  1103                           
  1104                           ;main.c: 289: dryLevel = dryLevel>>5;
  1105  000940  C1DE  F0E2         	movff	main@dryLevel,??_main
  1106  000944  C1DF  F0E3         	movff	main@dryLevel+1,??_main+1
  1107  000948  0E05               	movlw	5
  1108  00094A  0100               	movlb	0	; () banked
  1109  00094C  6FE4               	movwf	(??_main+2)& (0+255),b
  1110  00094E                     u4525:
  1111  00094E  0100               	movlb	0	; () banked
  1112  000950  35E3               	rlcf	(??_main+1)& (0+255),w,b
  1113  000952  33E3               	rrcf	(??_main+1)& (0+255),f,b
  1114  000954  33E2               	rrcf	??_main& (0+255),f,b
  1115  000956  0100               	movlb	0	; () banked
  1116  000958  2FE4               	decfsz	(??_main+2)& (0+255),f,b
  1117  00095A  D7F9               	goto	u4525
  1118  00095C  C0E2  F1DE         	movff	??_main,main@dryLevel
  1119  000960  C0E3  F1DF         	movff	??_main+1,main@dryLevel+1
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;main.c: 290: diff = dryLevel - prevDry;
  1123  000964  C1DA  F0E2         	movff	main@prevDry,??_main
  1124  000968  C1DB  F0E3         	movff	main@prevDry+1,??_main+1
  1125  00096C  0100               	movlb	0	; () banked
  1126  00096E  1FE2               	comf	??_main& (0+255),f,b
  1127  000970  1FE3               	comf	(??_main+1)& (0+255),f,b
  1128  000972  4BE2               	infsnz	??_main& (0+255),f,b
  1129  000974  2BE3               	incf	(??_main+1)& (0+255),f,b
  1130  000976  0101               	movlb	1	; () banked
  1131  000978  51DE               	movf	main@dryLevel& (0+255),w,b
  1132  00097A  0100               	movlb	0	; () banked
  1133  00097C  25E2               	addwf	??_main& (0+255),w,b
  1134  00097E  0101               	movlb	1	; () banked
  1135  000980  6FDC               	movwf	main@diff& (0+255),b
  1136  000982  0101               	movlb	1	; () banked
  1137  000984  51DF               	movf	(main@dryLevel+1)& (0+255),w,b
  1138  000986  0100               	movlb	0	; () banked
  1139  000988  21E3               	addwfc	(??_main+1)& (0+255),w,b
  1140  00098A  0101               	movlb	1	; () banked
  1141  00098C  6FDD               	movwf	(main@diff+1)& (0+255),b
  1142                           
  1143                           ;main.c: 291: diff = absVal(diff);
  1144  00098E  C1DC  F0B8         	movff	main@diff,absVal@val
  1145  000992  C1DD  F0B9         	movff	main@diff+1,absVal@val+1
  1146  000996  EC08  F00C         	call	_absVal	;wreg free
  1147  00099A  C0B8  F1DC         	movff	?_absVal,main@diff
  1148  00099E  C0B9  F1DD         	movff	?_absVal+1,main@diff+1
  1149                           
  1150                           ;main.c: 293: if (diff >= 2)
  1151  0009A2  0101               	movlb	1	; () banked
  1152  0009A4  BFDD               	btfsc	(main@diff+1)& (0+255),7,b
  1153  0009A6  D010               	goto	l199
  1154  0009A8  0101               	movlb	1	; () banked
  1155  0009AA  51DD               	movf	(main@diff+1)& (0+255),w,b
  1156  0009AC  E105               	bnz	u4530
  1157  0009AE  0E02               	movlw	2
  1158  0009B0  0101               	movlb	1	; () banked
  1159  0009B2  5DDC               	subwf	main@diff& (0+255),w,b
  1160  0009B4  A0D8               	btfss	status,0,c
  1161  0009B6  D008               	goto	l199
  1162  0009B8                     u4530:
  1163                           
  1164                           ; BSR set to: 1
  1165                           ;main.c: 294: {
  1166                           ;main.c: 295: I2C1_Write_DigiPot(dryLevel);
  1167  0009B8  0101               	movlb	1	; () banked
  1168  0009BA  51DE               	movf	main@dryLevel& (0+255),w,b
  1169  0009BC  ECB4  F00B         	call	_I2C1_Write_DigiPot
  1170                           
  1171                           ;main.c: 296: prevDry = dryLevel;
  1172  0009C0  C1DE  F1DA         	movff	main@dryLevel,main@prevDry
  1173  0009C4  C1DF  F1DB         	movff	main@dryLevel+1,main@prevDry+1
  1174  0009C8                     l199:
  1175                           
  1176                           ;main.c: 297: }
  1177                           ;main.c: 298: }
  1178                           ;main.c: 301: if (!setupComplete)
  1179  0009C8  0100               	movlb	0	; () banked
  1180  0009CA  5166               	movf	_setupComplete& (0+255),w,b
  1181  0009CC  0100               	movlb	0	; () banked
  1182  0009CE  1167               	iorwf	(_setupComplete+1)& (0+255),w,b
  1183  0009D0  A4D8               	btfss	status,2,c
  1184  0009D2  D76A               	goto	l195
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;main.c: 302: {
  1188                           ;main.c: 303: setupComplete = 1;
  1189  0009D4  0E00               	movlw	0
  1190  0009D6  0100               	movlb	0	; () banked
  1191  0009D8  6F67               	movwf	(_setupComplete+1)& (0+255),b
  1192  0009DA  0E01               	movlw	1
  1193  0009DC  6F66               	movwf	_setupComplete& (0+255),b
  1194                           
  1195                           ; BSR set to: 0
  1196                           
  1197                           ; BSR set to: 0
  1198  0009DE  D764               	goto	l195
  1199  0009E0                     __end_of_main:
  1200                           	opt stack 0
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           plusw1	equ	0xFE3
  1209                           fsr1l	equ	0xFE1
  1210                           plusw2	equ	0xFDB
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _updateParams *****************
  1214 ;; Defined at:
  1215 ;;		line 228 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  slot            2    6[BANK0 ] int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  i               2   10[BANK0 ] int 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;Total ram usage:        6 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    5
  1236 ;; This function calls:
  1237 ;;		___wmul
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text1
  1244  0011AA                     __ptext1:
  1245                           	opt stack 0
  1246  0011AA                     _updateParams:
  1247                           	opt stack 25
  1248                           
  1249                           ;main.c: 230: int i;
  1250                           ;main.c: 232: for (i = 0; i < 12; i++)
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;incstack = 0
  1254  0011AA  0E00               	movlw	0
  1255  0011AC  0100               	movlb	0	; () banked
  1256  0011AE  6FC3               	movwf	(updateParams@i+1)& (0+255),b
  1257  0011B0  0E00               	movlw	0
  1258  0011B2  6FC2               	movwf	updateParams@i& (0+255),b
  1259  0011B4                     l4181:
  1260                           
  1261                           ; BSR set to: 0
  1262  0011B4  0100               	movlb	0	; () banked
  1263  0011B6  BFC3               	btfsc	(updateParams@i+1)& (0+255),7,b
  1264  0011B8  D008               	goto	l181
  1265  0011BA  0100               	movlb	0	; () banked
  1266  0011BC  51C3               	movf	(updateParams@i+1)& (0+255),w,b
  1267  0011BE  E13E               	bnz	l183
  1268  0011C0  0E0C               	movlw	12
  1269  0011C2  0100               	movlb	0	; () banked
  1270  0011C4  5DC2               	subwf	updateParams@i& (0+255),w,b
  1271  0011C6  B0D8               	btfsc	status,0,c
  1272  0011C8  0012               	return	
  1273  0011CA                     l181:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;main.c: 233: {
  1277                           ;main.c: 234: parameter[i] = userParams[slot][i];
  1278                           
  1279                           ; BSR set to: 0
  1280  0011CA  C0BE  F0B8         	movff	updateParams@slot,___wmul@multiplier
  1281  0011CE  C0BF  F0B9         	movff	updateParams@slot+1,___wmul@multiplier+1
  1282  0011D2  0E00               	movlw	0
  1283  0011D4  0100               	movlb	0	; () banked
  1284  0011D6  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1285  0011D8  0E18               	movlw	24
  1286  0011DA  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  1287  0011DC  ECD5  F00B         	call	___wmul	;wreg free
  1288  0011E0  0E00               	movlw	low _userParams
  1289  0011E2  0100               	movlb	0	; () banked
  1290  0011E4  6FC0               	movwf	??_updateParams& (0+255),b
  1291  0011E6  0E01               	movlw	high _userParams
  1292  0011E8  0100               	movlb	0	; () banked
  1293  0011EA  6FC1               	movwf	(??_updateParams+1)& (0+255),b
  1294  0011EC  0100               	movlb	0	; () banked
  1295  0011EE  51B8               	movf	?___wmul& (0+255),w,b
  1296  0011F0  0100               	movlb	0	; () banked
  1297  0011F2  27C0               	addwf	??_updateParams& (0+255),f,b
  1298  0011F4  0100               	movlb	0	; () banked
  1299  0011F6  51B9               	movf	(?___wmul+1)& (0+255),w,b
  1300  0011F8  0100               	movlb	0	; () banked
  1301  0011FA  23C1               	addwfc	(??_updateParams+1)& (0+255),f,b
  1302  0011FC  90D8               	bcf	status,0,c
  1303  0011FE  0100               	movlb	0	; () banked
  1304  001200  35C2               	rlcf	updateParams@i& (0+255),w,b
  1305  001202  6ED9               	movwf	fsr2l,c
  1306  001204  0100               	movlb	0	; () banked
  1307  001206  35C3               	rlcf	(updateParams@i+1)& (0+255),w,b
  1308  001208  6EDA               	movwf	fsr2h,c
  1309  00120A  0100               	movlb	0	; () banked
  1310  00120C  51C0               	movf	??_updateParams& (0+255),w,b
  1311  00120E  26D9               	addwf	fsr2l,f,c
  1312  001210  0100               	movlb	0	; () banked
  1313  001212  51C1               	movf	(??_updateParams+1)& (0+255),w,b
  1314  001214  22DA               	addwfc	fsr2h,f,c
  1315  001216  90D8               	bcf	status,0,c
  1316  001218  0100               	movlb	0	; () banked
  1317  00121A  35C2               	rlcf	updateParams@i& (0+255),w,b
  1318  00121C  6EE1               	movwf	fsr1l,c
  1319  00121E  0100               	movlb	0	; () banked
  1320  001220  35C3               	rlcf	(updateParams@i+1)& (0+255),w,b
  1321  001222  6EE2               	movwf	fsr1h,c
  1322  001224  0EA0               	movlw	low _parameter
  1323  001226  26E1               	addwf	fsr1l,f,c
  1324  001228  0E00               	movlw	high _parameter
  1325  00122A  22E2               	addwfc	fsr1h,f,c
  1326  00122C  CFDE FFE6          	movff	postinc2,postinc1
  1327  001230  CFDD FFE5          	movff	postdec2,postdec1
  1328                           
  1329                           ; BSR set to: 0
  1330  001234  0100               	movlb	0	; () banked
  1331  001236  4BC2               	infsnz	updateParams@i& (0+255),f,b
  1332  001238  2BC3               	incf	(updateParams@i+1)& (0+255),f,b
  1333  00123A  D7BC               	goto	l4181
  1334  00123C                     l183:
  1335                           
  1336                           ; BSR set to: 0
  1337  00123C  0012               	return		;funcret
  1338  00123E                     __end_of_updateParams:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           postinc1	equ	0xFE6
  1347                           postdec1	equ	0xFE5
  1348                           plusw1	equ	0xFE3
  1349                           fsr1h	equ	0xFE2
  1350                           fsr1l	equ	0xFE1
  1351                           postinc2	equ	0xFDE
  1352                           postdec2	equ	0xFDD
  1353                           plusw2	equ	0xFDB
  1354                           fsr2h	equ	0xFDA
  1355                           fsr2l	equ	0xFD9
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _systemInit *****************
  1359 ;; Defined at:
  1360 ;;		line 338 in file "systemConfig.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    5
  1381 ;; This function calls:
  1382 ;;		_bypassSetup
  1383 ;;		_clockSwitch
  1384 ;;		_defaultLED
  1385 ;;		_interfaceInit
  1386 ;;		_interruptInit
  1387 ;;		_killLEDs
  1388 ;;		_mapPeripheralPins
  1389 ;;		_setupADC
  1390 ;;		_setupI2C1
  1391 ;;		_setupI2C2
  1392 ;;		_setupTMR0
  1393 ;;		_setupTMR1
  1394 ;;		_setupTMR2
  1395 ;;		_setupTMR4
  1396 ;;		_startupSequence
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text2
  1403  0016DE                     __ptext2:
  1404                           	opt stack 0
  1405  0016DE                     _systemInit:
  1406                           	opt stack 25
  1407                           
  1408                           ;systemConfig.c: 340: clockSwitch();
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;incstack = 0
  1412  0016DE  EC45  F00C         	call	_clockSwitch	;wreg free
  1413                           
  1414                           ;systemConfig.c: 342: setupTMR0();
  1415  0016E2  EC74  F00C         	call	_setupTMR0	;wreg free
  1416                           
  1417                           ;systemConfig.c: 343: setupTMR1();
  1418  0016E6  ECA6  F00C         	call	_setupTMR1	;wreg free
  1419                           
  1420                           ;systemConfig.c: 344: setupTMR2();
  1421  0016EA  EC97  F00C         	call	_setupTMR2	;wreg free
  1422                           
  1423                           ;systemConfig.c: 345: setupTMR4();
  1424  0016EE  EC8C  F00C         	call	_setupTMR4	;wreg free
  1425                           
  1426                           ;systemConfig.c: 347: setupI2C1();
  1427  0016F2  EC67  F00C         	call	_setupI2C1	;wreg free
  1428                           
  1429                           ;systemConfig.c: 348: setupI2C2();
  1430  0016F6  EC92  F00B         	call	_setupI2C2	;wreg free
  1431                           
  1432                           ;systemConfig.c: 350: setupADC();
  1433  0016FA  EC1F  F009         	call	_setupADC	;wreg free
  1434                           
  1435                           ;systemConfig.c: 353: mapPeripheralPins();
  1436  0016FE  ECF8  F00A         	call	_mapPeripheralPins	;wreg free
  1437                           
  1438                           ;systemConfig.c: 354: interfaceInit();
  1439  001702  ECA4  F007         	call	_interfaceInit	;wreg free
  1440                           
  1441                           ;systemConfig.c: 355: bypassSetup();
  1442  001706  ECAD  F00C         	call	_bypassSetup	;wreg free
  1443                           
  1444                           ;systemConfig.c: 356: killLEDs();
  1445  00170A  EC57  F00C         	call	_killLEDs	;wreg free
  1446                           
  1447                           ;systemConfig.c: 357: startupSequence();
  1448  00170E  ECEE  F001         	call	_startupSequence	;wreg free
  1449                           
  1450                           ;systemConfig.c: 358: defaultLED();
  1451  001712  EC80  F00C         	call	_defaultLED	;wreg free
  1452                           
  1453                           ;systemConfig.c: 359: killLEDs();
  1454  001716  EC57  F00C         	call	_killLEDs	;wreg free
  1455                           
  1456                           ;systemConfig.c: 360: bypassSetup();
  1457  00171A  ECAD  F00C         	call	_bypassSetup	;wreg free
  1458                           
  1459                           ;systemConfig.c: 361: interruptInit();
  1460  00171E  ECF0  F00B         	call	_interruptInit	;wreg free
  1461  001722  0012               	return		;funcret
  1462  001724                     __end_of_systemInit:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postinc1	equ	0xFE6
  1471                           postdec1	equ	0xFE5
  1472                           plusw1	equ	0xFE3
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           postinc2	equ	0xFDE
  1476                           postdec2	equ	0xFDD
  1477                           plusw2	equ	0xFDB
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8
  1481                           
  1482 ;; *************** function _startupSequence *****************
  1483 ;; Defined at:
  1484 ;;		line 450 in file "hardware.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;Total ram usage:        2 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    4
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_systemInit
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text3
  1513  0003DC                     __ptext3:
  1514                           	opt stack 0
  1515  0003DC                     _startupSequence:
  1516                           	opt stack 25
  1517                           
  1518                           ;hardware.c: 455: LATD0 = 1;
  1519                           
  1520                           ;incstack = 0
  1521  0003DC  808C               	bsf	3980,0,c	;volatile
  1522                           
  1523                           ;hardware.c: 456: _delay((unsigned long)((75)*(32000000/4000.0)));
  1524  0003DE  0E04               	movlw	4
  1525  0003E0  0100               	movlb	0	; () banked
  1526  0003E2  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1527  0003E4  0E0C               	movlw	12
  1528  0003E6  0100               	movlb	0	; () banked
  1529  0003E8  6FB8               	movwf	??_startupSequence& (0+255),b
  1530  0003EA  0E33               	movlw	51
  1531  0003EC                     u4557:
  1532  0003EC  2EE8               	decfsz	wreg,f,c
  1533  0003EE  D7FE               	bra	u4557
  1534  0003F0  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1535  0003F2  D7FC               	bra	u4557
  1536  0003F4  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1537  0003F6  D7FA               	bra	u4557
  1538  0003F8  D000               	nop2	
  1539                           
  1540                           ;hardware.c: 457: LATE7 = 1;
  1541  0003FA  8E8D               	bsf	3981,7,c	;volatile
  1542                           
  1543                           ;hardware.c: 458: _delay((unsigned long)((75)*(32000000/4000.0)));
  1544  0003FC  0E04               	movlw	4
  1545  0003FE  0100               	movlb	0	; () banked
  1546  000400  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1547  000402  0E0C               	movlw	12
  1548  000404  0100               	movlb	0	; () banked
  1549  000406  6FB8               	movwf	??_startupSequence& (0+255),b
  1550  000408  0E33               	movlw	51
  1551  00040A                     u4567:
  1552  00040A  2EE8               	decfsz	wreg,f,c
  1553  00040C  D7FE               	bra	u4567
  1554  00040E  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1555  000410  D7FC               	bra	u4567
  1556  000412  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1557  000414  D7FA               	bra	u4567
  1558  000416  D000               	nop2	
  1559                           
  1560                           ;hardware.c: 459: LATE5 = 1;
  1561  000418  8A8D               	bsf	3981,5,c	;volatile
  1562                           
  1563                           ;hardware.c: 460: _delay((unsigned long)((75)*(32000000/4000.0)));
  1564  00041A  0E04               	movlw	4
  1565  00041C  0100               	movlb	0	; () banked
  1566  00041E  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1567  000420  0E0C               	movlw	12
  1568  000422  0100               	movlb	0	; () banked
  1569  000424  6FB8               	movwf	??_startupSequence& (0+255),b
  1570  000426  0E33               	movlw	51
  1571  000428                     u4577:
  1572  000428  2EE8               	decfsz	wreg,f,c
  1573  00042A  D7FE               	bra	u4577
  1574  00042C  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1575  00042E  D7FC               	bra	u4577
  1576  000430  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1577  000432  D7FA               	bra	u4577
  1578  000434  D000               	nop2	
  1579                           
  1580                           ;hardware.c: 461: LATE4 = 1;
  1581  000436  888D               	bsf	3981,4,c	;volatile
  1582                           
  1583                           ;hardware.c: 462: _delay((unsigned long)((75)*(32000000/4000.0)));
  1584  000438  0E04               	movlw	4
  1585  00043A  0100               	movlb	0	; () banked
  1586  00043C  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1587  00043E  0E0C               	movlw	12
  1588  000440  0100               	movlb	0	; () banked
  1589  000442  6FB8               	movwf	??_startupSequence& (0+255),b
  1590  000444  0E33               	movlw	51
  1591  000446                     u4587:
  1592  000446  2EE8               	decfsz	wreg,f,c
  1593  000448  D7FE               	bra	u4587
  1594  00044A  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1595  00044C  D7FC               	bra	u4587
  1596  00044E  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1597  000450  D7FA               	bra	u4587
  1598  000452  D000               	nop2	
  1599                           
  1600                           ;hardware.c: 463: LATH2 = 1;
  1601  000454  8490               	bsf	3984,2,c	;volatile
  1602                           
  1603                           ;hardware.c: 464: _delay((unsigned long)((75)*(32000000/4000.0)));
  1604  000456  0E04               	movlw	4
  1605  000458  0100               	movlb	0	; () banked
  1606  00045A  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1607  00045C  0E0C               	movlw	12
  1608  00045E  0100               	movlb	0	; () banked
  1609  000460  6FB8               	movwf	??_startupSequence& (0+255),b
  1610  000462  0E33               	movlw	51
  1611  000464                     u4597:
  1612  000464  2EE8               	decfsz	wreg,f,c
  1613  000466  D7FE               	bra	u4597
  1614  000468  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1615  00046A  D7FC               	bra	u4597
  1616  00046C  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1617  00046E  D7FA               	bra	u4597
  1618  000470  D000               	nop2	
  1619                           
  1620                           ;hardware.c: 465: LATH2 = 0;
  1621  000472  9490               	bcf	3984,2,c	;volatile
  1622                           
  1623                           ;hardware.c: 466: _delay((unsigned long)((75)*(32000000/4000.0)));
  1624  000474  0E04               	movlw	4
  1625  000476  0100               	movlb	0	; () banked
  1626  000478  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1627  00047A  0E0C               	movlw	12
  1628  00047C  0100               	movlb	0	; () banked
  1629  00047E  6FB8               	movwf	??_startupSequence& (0+255),b
  1630  000480  0E33               	movlw	51
  1631  000482                     u4607:
  1632  000482  2EE8               	decfsz	wreg,f,c
  1633  000484  D7FE               	bra	u4607
  1634  000486  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1635  000488  D7FC               	bra	u4607
  1636  00048A  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1637  00048C  D7FA               	bra	u4607
  1638  00048E  D000               	nop2	
  1639                           
  1640                           ;hardware.c: 467: LATE4 = 0;
  1641  000490  988D               	bcf	3981,4,c	;volatile
  1642                           
  1643                           ;hardware.c: 468: _delay((unsigned long)((75)*(32000000/4000.0)));
  1644  000492  0E04               	movlw	4
  1645  000494  0100               	movlb	0	; () banked
  1646  000496  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1647  000498  0E0C               	movlw	12
  1648  00049A  0100               	movlb	0	; () banked
  1649  00049C  6FB8               	movwf	??_startupSequence& (0+255),b
  1650  00049E  0E33               	movlw	51
  1651  0004A0                     u4617:
  1652  0004A0  2EE8               	decfsz	wreg,f,c
  1653  0004A2  D7FE               	bra	u4617
  1654  0004A4  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1655  0004A6  D7FC               	bra	u4617
  1656  0004A8  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1657  0004AA  D7FA               	bra	u4617
  1658  0004AC  D000               	nop2	
  1659                           
  1660                           ;hardware.c: 469: LATE5 = 0;
  1661  0004AE  9A8D               	bcf	3981,5,c	;volatile
  1662                           
  1663                           ;hardware.c: 470: _delay((unsigned long)((75)*(32000000/4000.0)));
  1664  0004B0  0E04               	movlw	4
  1665  0004B2  0100               	movlb	0	; () banked
  1666  0004B4  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1667  0004B6  0E0C               	movlw	12
  1668  0004B8  0100               	movlb	0	; () banked
  1669  0004BA  6FB8               	movwf	??_startupSequence& (0+255),b
  1670  0004BC  0E33               	movlw	51
  1671  0004BE                     u4627:
  1672  0004BE  2EE8               	decfsz	wreg,f,c
  1673  0004C0  D7FE               	bra	u4627
  1674  0004C2  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1675  0004C4  D7FC               	bra	u4627
  1676  0004C6  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1677  0004C8  D7FA               	bra	u4627
  1678  0004CA  D000               	nop2	
  1679                           
  1680                           ;hardware.c: 471: LATE7 = 0;
  1681  0004CC  9E8D               	bcf	3981,7,c	;volatile
  1682                           
  1683                           ;hardware.c: 472: _delay((unsigned long)((75)*(32000000/4000.0)));
  1684  0004CE  0E04               	movlw	4
  1685  0004D0  0100               	movlb	0	; () banked
  1686  0004D2  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1687  0004D4  0E0C               	movlw	12
  1688  0004D6  0100               	movlb	0	; () banked
  1689  0004D8  6FB8               	movwf	??_startupSequence& (0+255),b
  1690  0004DA  0E33               	movlw	51
  1691  0004DC                     u4637:
  1692  0004DC  2EE8               	decfsz	wreg,f,c
  1693  0004DE  D7FE               	bra	u4637
  1694  0004E0  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1695  0004E2  D7FC               	bra	u4637
  1696  0004E4  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1697  0004E6  D7FA               	bra	u4637
  1698  0004E8  D000               	nop2	
  1699                           
  1700                           ;hardware.c: 473: LATD0 = 0;
  1701  0004EA  908C               	bcf	3980,0,c	;volatile
  1702                           
  1703                           ;hardware.c: 474: _delay((unsigned long)((75)*(32000000/4000.0)));
  1704  0004EC  0E04               	movlw	4
  1705  0004EE  0100               	movlb	0	; () banked
  1706  0004F0  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1707  0004F2  0E0C               	movlw	12
  1708  0004F4  0100               	movlb	0	; () banked
  1709  0004F6  6FB8               	movwf	??_startupSequence& (0+255),b
  1710  0004F8  0E33               	movlw	51
  1711  0004FA                     u4647:
  1712  0004FA  2EE8               	decfsz	wreg,f,c
  1713  0004FC  D7FE               	bra	u4647
  1714  0004FE  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1715  000500  D7FC               	bra	u4647
  1716  000502  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1717  000504  D7FA               	bra	u4647
  1718  000506  D000               	nop2	
  1719                           
  1720                           ;hardware.c: 477: LATH7 = 1;
  1721  000508  8E90               	bsf	3984,7,c	;volatile
  1722                           
  1723                           ;hardware.c: 478: _delay((unsigned long)((75)*(32000000/4000.0)));
  1724  00050A  0E04               	movlw	4
  1725  00050C  0100               	movlb	0	; () banked
  1726  00050E  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1727  000510  0E0C               	movlw	12
  1728  000512  0100               	movlb	0	; () banked
  1729  000514  6FB8               	movwf	??_startupSequence& (0+255),b
  1730  000516  0E33               	movlw	51
  1731  000518                     u4657:
  1732  000518  2EE8               	decfsz	wreg,f,c
  1733  00051A  D7FE               	bra	u4657
  1734  00051C  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1735  00051E  D7FC               	bra	u4657
  1736  000520  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1737  000522  D7FA               	bra	u4657
  1738  000524  D000               	nop2	
  1739                           
  1740                           ;hardware.c: 479: LATF2 = 1;
  1741  000526  848E               	bsf	3982,2,c	;volatile
  1742                           
  1743                           ;hardware.c: 480: _delay((unsigned long)((75)*(32000000/4000.0)));
  1744  000528  0E04               	movlw	4
  1745  00052A  0100               	movlb	0	; () banked
  1746  00052C  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1747  00052E  0E0C               	movlw	12
  1748  000530  0100               	movlb	0	; () banked
  1749  000532  6FB8               	movwf	??_startupSequence& (0+255),b
  1750  000534  0E33               	movlw	51
  1751  000536                     u4667:
  1752  000536  2EE8               	decfsz	wreg,f,c
  1753  000538  D7FE               	bra	u4667
  1754  00053A  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1755  00053C  D7FC               	bra	u4667
  1756  00053E  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1757  000540  D7FA               	bra	u4667
  1758  000542  D000               	nop2	
  1759                           
  1760                           ;hardware.c: 481: LATF5 = 1;
  1761  000544  8A8E               	bsf	3982,5,c	;volatile
  1762                           
  1763                           ;hardware.c: 482: _delay((unsigned long)((75)*(32000000/4000.0)));
  1764  000546  0E04               	movlw	4
  1765  000548  0100               	movlb	0	; () banked
  1766  00054A  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1767  00054C  0E0C               	movlw	12
  1768  00054E  0100               	movlb	0	; () banked
  1769  000550  6FB8               	movwf	??_startupSequence& (0+255),b
  1770  000552  0E33               	movlw	51
  1771  000554                     u4677:
  1772  000554  2EE8               	decfsz	wreg,f,c
  1773  000556  D7FE               	bra	u4677
  1774  000558  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1775  00055A  D7FC               	bra	u4677
  1776  00055C  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1777  00055E  D7FA               	bra	u4677
  1778  000560  D000               	nop2	
  1779                           
  1780                           ;hardware.c: 483: LATF6 = 1;
  1781  000562  8C8E               	bsf	3982,6,c	;volatile
  1782                           
  1783                           ;hardware.c: 484: _delay((unsigned long)((75)*(32000000/4000.0)));
  1784  000564  0E04               	movlw	4
  1785  000566  0100               	movlb	0	; () banked
  1786  000568  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1787  00056A  0E0C               	movlw	12
  1788  00056C  0100               	movlb	0	; () banked
  1789  00056E  6FB8               	movwf	??_startupSequence& (0+255),b
  1790  000570  0E33               	movlw	51
  1791  000572                     u4687:
  1792  000572  2EE8               	decfsz	wreg,f,c
  1793  000574  D7FE               	bra	u4687
  1794  000576  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1795  000578  D7FC               	bra	u4687
  1796  00057A  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1797  00057C  D7FA               	bra	u4687
  1798  00057E  D000               	nop2	
  1799                           
  1800                           ;hardware.c: 485: LATG4 = 1;
  1801  000580  888F               	bsf	3983,4,c	;volatile
  1802                           
  1803                           ;hardware.c: 486: _delay((unsigned long)((75)*(32000000/4000.0)));
  1804  000582  0E04               	movlw	4
  1805  000584  0100               	movlb	0	; () banked
  1806  000586  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1807  000588  0E0C               	movlw	12
  1808  00058A  0100               	movlb	0	; () banked
  1809  00058C  6FB8               	movwf	??_startupSequence& (0+255),b
  1810  00058E  0E33               	movlw	51
  1811  000590                     u4697:
  1812  000590  2EE8               	decfsz	wreg,f,c
  1813  000592  D7FE               	bra	u4697
  1814  000594  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1815  000596  D7FC               	bra	u4697
  1816  000598  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1817  00059A  D7FA               	bra	u4697
  1818  00059C  D000               	nop2	
  1819                           
  1820                           ;hardware.c: 487: LATH0 = 1;
  1821  00059E  8090               	bsf	3984,0,c	;volatile
  1822                           
  1823                           ;hardware.c: 488: _delay((unsigned long)((75)*(32000000/4000.0)));
  1824  0005A0  0E04               	movlw	4
  1825  0005A2  0100               	movlb	0	; () banked
  1826  0005A4  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1827  0005A6  0E0C               	movlw	12
  1828  0005A8  0100               	movlb	0	; () banked
  1829  0005AA  6FB8               	movwf	??_startupSequence& (0+255),b
  1830  0005AC  0E33               	movlw	51
  1831  0005AE                     u4707:
  1832  0005AE  2EE8               	decfsz	wreg,f,c
  1833  0005B0  D7FE               	bra	u4707
  1834  0005B2  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1835  0005B4  D7FC               	bra	u4707
  1836  0005B6  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1837  0005B8  D7FA               	bra	u4707
  1838  0005BA  D000               	nop2	
  1839                           
  1840                           ;hardware.c: 489: LATH7 = 0;
  1841  0005BC  9E90               	bcf	3984,7,c	;volatile
  1842                           
  1843                           ;hardware.c: 490: _delay((unsigned long)((75)*(32000000/4000.0)));
  1844  0005BE  0E04               	movlw	4
  1845  0005C0  0100               	movlb	0	; () banked
  1846  0005C2  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1847  0005C4  0E0C               	movlw	12
  1848  0005C6  0100               	movlb	0	; () banked
  1849  0005C8  6FB8               	movwf	??_startupSequence& (0+255),b
  1850  0005CA  0E33               	movlw	51
  1851  0005CC                     u4717:
  1852  0005CC  2EE8               	decfsz	wreg,f,c
  1853  0005CE  D7FE               	bra	u4717
  1854  0005D0  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1855  0005D2  D7FC               	bra	u4717
  1856  0005D4  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1857  0005D6  D7FA               	bra	u4717
  1858  0005D8  D000               	nop2	
  1859                           
  1860                           ;hardware.c: 491: LATF2 = 0;
  1861  0005DA  948E               	bcf	3982,2,c	;volatile
  1862                           
  1863                           ;hardware.c: 492: _delay((unsigned long)((75)*(32000000/4000.0)));
  1864  0005DC  0E04               	movlw	4
  1865  0005DE  0100               	movlb	0	; () banked
  1866  0005E0  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1867  0005E2  0E0C               	movlw	12
  1868  0005E4  0100               	movlb	0	; () banked
  1869  0005E6  6FB8               	movwf	??_startupSequence& (0+255),b
  1870  0005E8  0E33               	movlw	51
  1871  0005EA                     u4727:
  1872  0005EA  2EE8               	decfsz	wreg,f,c
  1873  0005EC  D7FE               	bra	u4727
  1874  0005EE  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1875  0005F0  D7FC               	bra	u4727
  1876  0005F2  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1877  0005F4  D7FA               	bra	u4727
  1878  0005F6  D000               	nop2	
  1879                           
  1880                           ;hardware.c: 493: LATF5 = 0;
  1881  0005F8  9A8E               	bcf	3982,5,c	;volatile
  1882                           
  1883                           ;hardware.c: 494: _delay((unsigned long)((75)*(32000000/4000.0)));
  1884  0005FA  0E04               	movlw	4
  1885  0005FC  0100               	movlb	0	; () banked
  1886  0005FE  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1887  000600  0E0C               	movlw	12
  1888  000602  0100               	movlb	0	; () banked
  1889  000604  6FB8               	movwf	??_startupSequence& (0+255),b
  1890  000606  0E33               	movlw	51
  1891  000608                     u4737:
  1892  000608  2EE8               	decfsz	wreg,f,c
  1893  00060A  D7FE               	bra	u4737
  1894  00060C  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1895  00060E  D7FC               	bra	u4737
  1896  000610  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1897  000612  D7FA               	bra	u4737
  1898  000614  D000               	nop2	
  1899                           
  1900                           ;hardware.c: 495: LATF6 = 0;
  1901  000616  9C8E               	bcf	3982,6,c	;volatile
  1902                           
  1903                           ;hardware.c: 496: _delay((unsigned long)((75)*(32000000/4000.0)));
  1904  000618  0E04               	movlw	4
  1905  00061A  0100               	movlb	0	; () banked
  1906  00061C  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1907  00061E  0E0C               	movlw	12
  1908  000620  0100               	movlb	0	; () banked
  1909  000622  6FB8               	movwf	??_startupSequence& (0+255),b
  1910  000624  0E33               	movlw	51
  1911  000626                     u4747:
  1912  000626  2EE8               	decfsz	wreg,f,c
  1913  000628  D7FE               	bra	u4747
  1914  00062A  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1915  00062C  D7FC               	bra	u4747
  1916  00062E  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1917  000630  D7FA               	bra	u4747
  1918  000632  D000               	nop2	
  1919                           
  1920                           ;hardware.c: 497: LATG4 = 0;
  1921  000634  988F               	bcf	3983,4,c	;volatile
  1922                           
  1923                           ;hardware.c: 498: _delay((unsigned long)((75)*(32000000/4000.0)));
  1924  000636  0E04               	movlw	4
  1925  000638  0100               	movlb	0	; () banked
  1926  00063A  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1927  00063C  0E0C               	movlw	12
  1928  00063E  0100               	movlb	0	; () banked
  1929  000640  6FB8               	movwf	??_startupSequence& (0+255),b
  1930  000642  0E33               	movlw	51
  1931  000644                     u4757:
  1932  000644  2EE8               	decfsz	wreg,f,c
  1933  000646  D7FE               	bra	u4757
  1934  000648  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1935  00064A  D7FC               	bra	u4757
  1936  00064C  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1937  00064E  D7FA               	bra	u4757
  1938  000650  D000               	nop2	
  1939                           
  1940                           ;hardware.c: 499: LATH0 = 0;
  1941  000652  9090               	bcf	3984,0,c	;volatile
  1942                           
  1943                           ;hardware.c: 500: _delay((unsigned long)((75)*(32000000/4000.0)));
  1944  000654  0E04               	movlw	4
  1945  000656  0100               	movlb	0	; () banked
  1946  000658  6FB9               	movwf	(??_startupSequence+1)& (0+255),b
  1947  00065A  0E0C               	movlw	12
  1948  00065C  0100               	movlb	0	; () banked
  1949  00065E  6FB8               	movwf	??_startupSequence& (0+255),b
  1950  000660  0E33               	movlw	51
  1951  000662                     u4767:
  1952  000662  2EE8               	decfsz	wreg,f,c
  1953  000664  D7FE               	bra	u4767
  1954  000666  2FB8               	decfsz	??_startupSequence& (0+255),f,b
  1955  000668  D7FC               	bra	u4767
  1956  00066A  2FB9               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1957  00066C  D7FA               	bra	u4767
  1958  00066E  D000               	nop2	
  1959  000670  0012               	return		;funcret
  1960  000672                     __end_of_startupSequence:
  1961                           	opt stack 0
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postinc1	equ	0xFE6
  1969                           postdec1	equ	0xFE5
  1970                           plusw1	equ	0xFE3
  1971                           fsr1h	equ	0xFE2
  1972                           fsr1l	equ	0xFE1
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           plusw2	equ	0xFDB
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _setupTMR4 *****************
  1981 ;; Defined at:
  1982 ;;		line 43 in file "systemConfig.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    4
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_systemInit
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text4
  2011  001918                     __ptext4:
  2012                           	opt stack 0
  2013  001918                     _setupTMR4:
  2014                           	opt stack 25
  2015                           
  2016                           ;systemConfig.c: 46: T4CONbits.TMR4ON = 0x0;
  2017                           
  2018                           ;incstack = 0
  2019  001918  010F               	movlb	15	; () banked
  2020  00191A  9504               	bcf	4,2,b	;volatile
  2021                           
  2022                           ; BSR set to: 15
  2023                           ;systemConfig.c: 47: T4CONbits.T4CKPS = 0x3;
  2024  00191C  0E03               	movlw	3
  2025  00191E  010F               	movlb	15	; () banked
  2026  001920  1304               	iorwf	4,f,b	;volatile
  2027                           
  2028                           ;systemConfig.c: 48: T4CONbits.T4OUTPS = 0x1;
  2029  001922  010F               	movlb	15	; () banked
  2030  001924  5104               	movf	4,w,b	;volatile
  2031  001926  0B87               	andlw	-121
  2032  001928  0908               	iorlw	8
  2033  00192A  6F04               	movwf	4,b	;volatile
  2034                           
  2035                           ; BSR set to: 15
  2036  00192C  0012               	return		;funcret
  2037  00192E                     __end_of_setupTMR4:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           postinc1	equ	0xFE6
  2046                           postdec1	equ	0xFE5
  2047                           plusw1	equ	0xFE3
  2048                           fsr1h	equ	0xFE2
  2049                           fsr1l	equ	0xFE1
  2050                           postinc2	equ	0xFDE
  2051                           postdec2	equ	0xFDD
  2052                           plusw2	equ	0xFDB
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _setupTMR2 *****************
  2058 ;; Defined at:
  2059 ;;		line 34 in file "systemConfig.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    4
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_systemInit
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text5
  2088  00192E                     __ptext5:
  2089                           	opt stack 0
  2090  00192E                     _setupTMR2:
  2091                           	opt stack 25
  2092                           
  2093                           ;systemConfig.c: 37: T2CONbits.TMR2ON = 0x0;
  2094                           
  2095                           ; BSR set to: 15
  2096                           ;incstack = 0
  2097  00192E  94CA               	bcf	4042,2,c	;volatile
  2098                           
  2099                           ;systemConfig.c: 38: T2CONbits.T2CKPS = 0x3;
  2100  001930  0E03               	movlw	3
  2101  001932  12CA               	iorwf	4042,f,c	;volatile
  2102                           
  2103                           ;systemConfig.c: 39: T2CONbits.T2OUTPS = 0x1;
  2104  001934  50CA               	movf	4042,w,c	;volatile
  2105  001936  0B87               	andlw	-121
  2106  001938  0908               	iorlw	8
  2107  00193A  6ECA               	movwf	4042,c	;volatile
  2108  00193C  0012               	return		;funcret
  2109  00193E                     __end_of_setupTMR2:
  2110                           	opt stack 0
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           postinc0	equ	0xFEE
  2116                           wreg	equ	0xFE8
  2117                           postinc1	equ	0xFE6
  2118                           postdec1	equ	0xFE5
  2119                           plusw1	equ	0xFE3
  2120                           fsr1h	equ	0xFE2
  2121                           fsr1l	equ	0xFE1
  2122                           postinc2	equ	0xFDE
  2123                           postdec2	equ	0xFDD
  2124                           plusw2	equ	0xFDB
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _setupTMR1 *****************
  2130 ;; Defined at:
  2131 ;;		line 25 in file "systemConfig.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    4
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_systemInit
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text6
  2160  00194C                     __ptext6:
  2161                           	opt stack 0
  2162  00194C                     _setupTMR1:
  2163                           	opt stack 25
  2164                           
  2165                           ;systemConfig.c: 27: T1CONbits.TMR1ON = 0x0;
  2166                           
  2167                           ;incstack = 0
  2168  00194C  90CD               	bcf	4045,0,c	;volatile
  2169                           
  2170                           ;systemConfig.c: 28: T1CONbits.TMR1CS = 0x0;
  2171  00194E  0E3F               	movlw	-193
  2172  001950  16CD               	andwf	4045,f,c	;volatile
  2173                           
  2174                           ;systemConfig.c: 29: T1CONbits.TCKPS = 0x3;
  2175  001952  0E30               	movlw	48
  2176  001954  12CD               	iorwf	4045,f,c	;volatile
  2177                           
  2178                           ;systemConfig.c: 30: T1CONbits.RD16 = 0x1;
  2179  001956  82CD               	bsf	4045,1,c	;volatile
  2180  001958  0012               	return		;funcret
  2181  00195A                     __end_of_setupTMR1:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           postinc1	equ	0xFE6
  2190                           postdec1	equ	0xFE5
  2191                           plusw1	equ	0xFE3
  2192                           fsr1h	equ	0xFE2
  2193                           fsr1l	equ	0xFE1
  2194                           postinc2	equ	0xFDE
  2195                           postdec2	equ	0xFDD
  2196                           plusw2	equ	0xFDB
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function _setupTMR0 *****************
  2202 ;; Defined at:
  2203 ;;		line 16 in file "systemConfig.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    4
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_systemInit
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text7
  2232  0018E8                     __ptext7:
  2233                           	opt stack 0
  2234  0018E8                     _setupTMR0:
  2235                           	opt stack 25
  2236                           
  2237                           ;systemConfig.c: 18: T0CONbits.TMR0ON = 0x0;
  2238                           
  2239                           ;incstack = 0
  2240  0018E8  9ED5               	bcf	4053,7,c	;volatile
  2241                           
  2242                           ;systemConfig.c: 19: T0CONbits.T08BIT = 0x1;
  2243  0018EA  8CD5               	bsf	4053,6,c	;volatile
  2244                           
  2245                           ;systemConfig.c: 20: T0CONbits.T0CS = 0x1;
  2246  0018EC  50D5               	movf	4053,w,c	;volatile
  2247  0018EE  0BCF               	andlw	-49
  2248  0018F0  0910               	iorlw	16
  2249  0018F2  6ED5               	movwf	4053,c	;volatile
  2250                           
  2251                           ;systemConfig.c: 21: T0CONbits.PSA = 0x0;
  2252  0018F4  96D5               	bcf	4053,3,c	;volatile
  2253                           
  2254                           ;systemConfig.c: 22: T0CONbits.T0PS = 0x6;
  2255  0018F6  50D5               	movf	4053,w,c	;volatile
  2256  0018F8  0BF8               	andlw	-8
  2257  0018FA  0906               	iorlw	6
  2258  0018FC  6ED5               	movwf	4053,c	;volatile
  2259  0018FE  0012               	return		;funcret
  2260  001900                     __end_of_setupTMR0:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           postinc1	equ	0xFE6
  2269                           postdec1	equ	0xFE5
  2270                           plusw1	equ	0xFE3
  2271                           fsr1h	equ	0xFE2
  2272                           fsr1l	equ	0xFE1
  2273                           postinc2	equ	0xFDE
  2274                           postdec2	equ	0xFDD
  2275                           plusw2	equ	0xFDB
  2276                           fsr2h	equ	0xFDA
  2277                           fsr2l	equ	0xFD9
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _setupI2C2 *****************
  2281 ;; Defined at:
  2282 ;;		line 92 in file "systemConfig.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    4
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_systemInit
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text8
  2311  001724                     __ptext8:
  2312                           	opt stack 0
  2313  001724                     _setupI2C2:
  2314                           	opt stack 25
  2315                           
  2316                           ;systemConfig.c: 94: SSP2CON1bits.SSPEN = 0x0;
  2317                           
  2318                           ;incstack = 0
  2319  001724  010F               	movlb	15	; () banked
  2320  001726  9B19               	bcf	25,5,b	;volatile
  2321                           
  2322                           ;systemConfig.c: 96: TRISDbits.TRISD5 = 0x1;
  2323  001728  8A95               	bsf	3989,5,c	;volatile
  2324                           
  2325                           ;systemConfig.c: 97: TRISDbits.TRISD6 = 0x1;
  2326  00172A  8C95               	bsf	3989,6,c	;volatile
  2327                           
  2328                           ; BSR set to: 15
  2329                           ;systemConfig.c: 100: SSP2CON1bits.SSPM = 0x9;
  2330  00172C  010F               	movlb	15	; () banked
  2331  00172E  5119               	movf	25,w,b	;volatile
  2332  001730  0BF0               	andlw	-16
  2333  001732  0909               	iorlw	9
  2334  001734  6F19               	movwf	25,b	;volatile
  2335                           
  2336                           ;systemConfig.c: 103: SSP2ADD = 0b10100000;
  2337  001736  0EA0               	movlw	160
  2338  001738  010F               	movlb	15	; () banked
  2339  00173A  6F02               	movwf	2,b	;volatile
  2340                           
  2341                           ;systemConfig.c: 104: SSP2MSK = 0b11000000;
  2342  00173C  0EC0               	movlw	192
  2343  00173E  010F               	movlb	15	; () banked
  2344  001740  6F17               	movwf	23,b	;volatile
  2345                           
  2346                           ;systemConfig.c: 105: SSP2CON1bits.SSPM = 0x6;
  2347  001742  010F               	movlb	15	; () banked
  2348  001744  5119               	movf	25,w,b	;volatile
  2349  001746  0BF0               	andlw	-16
  2350  001748  0906               	iorlw	6
  2351  00174A  6F19               	movwf	25,b	;volatile
  2352                           
  2353                           ; BSR set to: 15
  2354                           ;systemConfig.c: 107: SSP2CON1bits.CKP = 0x1;
  2355  00174C  010F               	movlb	15	; () banked
  2356  00174E  8919               	bsf	25,4,b	;volatile
  2357                           
  2358                           ; BSR set to: 15
  2359                           ;systemConfig.c: 108: SSP2CON2bits.SEN = 0x1;
  2360  001750  010F               	movlb	15	; () banked
  2361  001752  8118               	bsf	24,0,b	;volatile
  2362                           
  2363                           ; BSR set to: 15
  2364                           ;systemConfig.c: 109: SSP2CON2bits.GCEN = 0x0;
  2365  001754  010F               	movlb	15	; () banked
  2366  001756  9F18               	bcf	24,7,b	;volatile
  2367                           
  2368                           ; BSR set to: 15
  2369                           ;systemConfig.c: 110: SSP2CON3bits.SCIE = 0x0;
  2370  001758  010F               	movlb	15	; () banked
  2371  00175A  9B39               	bcf	57,5,b	;volatile
  2372                           
  2373                           ;systemConfig.c: 112: SSP2BUF = 0x00;
  2374  00175C  0E00               	movlw	0
  2375  00175E  010F               	movlb	15	; () banked
  2376  001760  6F03               	movwf	3,b	;volatile
  2377                           
  2378                           ; BSR set to: 15
  2379                           ;systemConfig.c: 113: SSP2CON1bits.SSPEN = 0x1;
  2380  001762  010F               	movlb	15	; () banked
  2381  001764  8B19               	bsf	25,5,b	;volatile
  2382                           
  2383                           ; BSR set to: 15
  2384  001766  0012               	return		;funcret
  2385  001768                     __end_of_setupI2C2:
  2386                           	opt stack 0
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           postinc0	equ	0xFEE
  2392                           wreg	equ	0xFE8
  2393                           postinc1	equ	0xFE6
  2394                           postdec1	equ	0xFE5
  2395                           plusw1	equ	0xFE3
  2396                           fsr1h	equ	0xFE2
  2397                           fsr1l	equ	0xFE1
  2398                           postinc2	equ	0xFDE
  2399                           postdec2	equ	0xFDD
  2400                           plusw2	equ	0xFDB
  2401                           fsr2h	equ	0xFDA
  2402                           fsr2l	equ	0xFD9
  2403                           status	equ	0xFD8
  2404                           
  2405 ;; *************** function _setupI2C1 *****************
  2406 ;; Defined at:
  2407 ;;		line 76 in file "systemConfig.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    4
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_systemInit
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text9
  2436  0018CE                     __ptext9:
  2437                           	opt stack 0
  2438  0018CE                     _setupI2C1:
  2439                           	opt stack 25
  2440                           
  2441                           ;systemConfig.c: 78: SSP1CON1bits.SSPEN = 0x0;
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;incstack = 0
  2445  0018CE  9AC6               	bcf	4038,5,c	;volatile
  2446                           
  2447                           ;systemConfig.c: 80: TRISCbits.TRISC3 = 0x1;
  2448  0018D0  8694               	bsf	3988,3,c	;volatile
  2449                           
  2450                           ;systemConfig.c: 81: TRISCbits.TRISC4 = 0x1;
  2451  0018D2  8894               	bsf	3988,4,c	;volatile
  2452                           
  2453                           ;systemConfig.c: 84: SSP1ADD = 0x13;
  2454  0018D4  0E13               	movlw	19
  2455  0018D6  6EC8               	movwf	4040,c	;volatile
  2456                           
  2457                           ;systemConfig.c: 85: SSP1CON1bits.SSPM = 0x8;
  2458  0018D8  50C6               	movf	4038,w,c	;volatile
  2459  0018DA  0BF0               	andlw	-16
  2460  0018DC  0908               	iorlw	8
  2461  0018DE  6EC6               	movwf	4038,c	;volatile
  2462                           
  2463                           ;systemConfig.c: 87: SSP1BUF = 0x00;
  2464  0018E0  0E00               	movlw	0
  2465  0018E2  6EC9               	movwf	4041,c	;volatile
  2466                           
  2467                           ;systemConfig.c: 89: SSP1CON1bits.SSPEN = 0x1;
  2468  0018E4  8AC6               	bsf	4038,5,c	;volatile
  2469  0018E6  0012               	return		;funcret
  2470  0018E8                     __end_of_setupI2C1:
  2471                           	opt stack 0
  2472                           tblptru	equ	0xFF8
  2473                           tblptrh	equ	0xFF7
  2474                           tblptrl	equ	0xFF6
  2475                           tablat	equ	0xFF5
  2476                           postinc0	equ	0xFEE
  2477                           wreg	equ	0xFE8
  2478                           postinc1	equ	0xFE6
  2479                           postdec1	equ	0xFE5
  2480                           plusw1	equ	0xFE3
  2481                           fsr1h	equ	0xFE2
  2482                           fsr1l	equ	0xFE1
  2483                           postinc2	equ	0xFDE
  2484                           postdec2	equ	0xFDD
  2485                           plusw2	equ	0xFDB
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8
  2489                           
  2490 ;; *************** function _setupADC *****************
  2491 ;; Defined at:
  2492 ;;		line 116 in file "systemConfig.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg, status,2
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used:    1
  2512 ;; Hardware stack levels required when called:    4
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_systemInit
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           	psect	text10
  2521  00123E                     __ptext10:
  2522                           	opt stack 0
  2523  00123E                     _setupADC:
  2524                           	opt stack 25
  2525                           
  2526                           ;systemConfig.c: 118: ADCON1Hbits.ADON = 0;
  2527                           
  2528                           ;incstack = 0
  2529  00123E  9EC1               	bcf	4033,7,c	;volatile
  2530                           
  2531                           ;systemConfig.c: 119: ADCON1Hbits.MODE12 = 1;
  2532  001240  84C1               	bsf	4033,2,c	;volatile
  2533                           
  2534                           ;systemConfig.c: 120: ADCON1Hbits.FORM = 0;
  2535  001242  0EFC               	movlw	-4
  2536  001244  16C1               	andwf	4033,f,c	;volatile
  2537                           
  2538                           ;systemConfig.c: 121: ADCON1Lbits.SSRC = 0;
  2539  001246  98C0               	bcf	4032,4,c	;volatile
  2540  001248  9AC0               	bcf	4032,5,c	;volatile
  2541  00124A  9CC0               	bcf	4032,6,c	;volatile
  2542  00124C  9EC0               	bcf	4032,7,c	;volatile
  2543                           
  2544                           ;systemConfig.c: 122: ADCON1Lbits.ASAM = 0;
  2545  00124E  94C0               	bcf	4032,2,c	;volatile
  2546                           
  2547                           ;systemConfig.c: 124: ADCON2Hbits.PVCFG = 0;
  2548  001250  0E3F               	movlw	-193
  2549  001252  010E               	movlb	14	; () banked
  2550  001254  178D               	andwf	141,f,b	;volatile
  2551                           
  2552                           ; BSR set to: 14
  2553                           ;systemConfig.c: 125: ADCON2Hbits.NVCFG0 = 0;
  2554  001256  010E               	movlb	14	; () banked
  2555  001258  9B8D               	bcf	141,5,b	;volatile
  2556                           
  2557                           ; BSR set to: 14
  2558                           ;systemConfig.c: 126: ADCON2Hbits.BUFREGEN = 1;
  2559  00125A  010E               	movlb	14	; () banked
  2560  00125C  878D               	bsf	141,3,b	;volatile
  2561                           
  2562                           ; BSR set to: 14
  2563                           ;systemConfig.c: 128: ADCON3Hbits.ADRC = 0;
  2564  00125E  010E               	movlb	14	; () banked
  2565  001260  9F8B               	bcf	139,7,b	;volatile
  2566                           
  2567                           ; BSR set to: 14
  2568                           ;systemConfig.c: 129: ADCON3Hbits.PUMPEN = 0;
  2569  001262  010E               	movlb	14	; () banked
  2570  001264  9B8B               	bcf	139,5,b	;volatile
  2571                           
  2572                           ;systemConfig.c: 130: ADCON3Lbits.ADCS = 0x20;
  2573  001266  0E20               	movlw	32
  2574  001268  010E               	movlb	14	; () banked
  2575  00126A  6F8A               	movwf	138,b	;volatile
  2576                           
  2577                           ; BSR set to: 14
  2578                           ;systemConfig.c: 132: ADCON5Hbits.ASENA = 0;
  2579  00126C  010E               	movlb	14	; () banked
  2580  00126E  9F89               	bcf	137,7,b	;volatile
  2581                           
  2582                           ; BSR set to: 14
  2583                           ;systemConfig.c: 133: ADCHS0Lbits.CH0SA = 0;
  2584  001270  010E               	movlb	14	; () banked
  2585  001272  9186               	bcf	134,0,b	;volatile
  2586  001274  9386               	bcf	134,1,b	;volatile
  2587  001276  9586               	bcf	134,2,b	;volatile
  2588  001278  9786               	bcf	134,3,b	;volatile
  2589  00127A  9986               	bcf	134,4,b	;volatile
  2590                           
  2591                           ; BSR set to: 14
  2592                           ;systemConfig.c: 134: ADCHS0Lbits.CH0NA = 0;
  2593  00127C  010E               	movlb	14	; () banked
  2594  00127E  9B86               	bcf	134,5,b	;volatile
  2595  001280  9D86               	bcf	134,6,b	;volatile
  2596  001282  9F86               	bcf	134,7,b	;volatile
  2597                           
  2598                           ; BSR set to: 14
  2599                           ;systemConfig.c: 137: CM1CONbits.CON = 0;
  2600  001284  010F               	movlb	15	; () banked
  2601  001286  9F53               	bcf	83,7,b	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;systemConfig.c: 138: CM2CONbits.CON = 0;
  2605  001288  010F               	movlb	15	; () banked
  2606  00128A  9F38               	bcf	56,7,b	;volatile
  2607                           
  2608                           ; BSR set to: 15
  2609                           ;systemConfig.c: 139: CM3CONbits.CON = 0;
  2610  00128C  010F               	movlb	15	; () banked
  2611  00128E  9F37               	bcf	55,7,b	;volatile
  2612                           
  2613                           ; BSR set to: 15
  2614                           ;systemConfig.c: 141: ANCON1bits.ANSEL0 = 1;
  2615  001290  010E               	movlb	14	; () banked
  2616  001292  8147               	bsf	71,0,b	;volatile
  2617                           
  2618                           ; BSR set to: 14
  2619                           ;systemConfig.c: 142: ANCON1bits.ANSEL1 = 1;
  2620  001294  010E               	movlb	14	; () banked
  2621  001296  8347               	bsf	71,1,b	;volatile
  2622                           
  2623                           ; BSR set to: 14
  2624                           ;systemConfig.c: 143: ANCON1bits.ANSEL2 = 1;
  2625  001298  010E               	movlb	14	; () banked
  2626  00129A  8547               	bsf	71,2,b	;volatile
  2627                           
  2628                           ; BSR set to: 14
  2629                           ;systemConfig.c: 144: ANCON1bits.ANSEL3 = 1;
  2630  00129C  010E               	movlb	14	; () banked
  2631  00129E  8747               	bsf	71,3,b	;volatile
  2632                           
  2633                           ; BSR set to: 14
  2634                           ;systemConfig.c: 145: ANCON1bits.ANSEL4 = 1;
  2635  0012A0  010E               	movlb	14	; () banked
  2636  0012A2  8947               	bsf	71,4,b	;volatile
  2637                           
  2638                           ; BSR set to: 14
  2639                           ;systemConfig.c: 146: ANCON1bits.ANSEL5 = 1;
  2640  0012A4  010E               	movlb	14	; () banked
  2641  0012A6  8B47               	bsf	71,5,b	;volatile
  2642                           
  2643                           ; BSR set to: 14
  2644                           ;systemConfig.c: 147: ANCON2bits.ANSEL11 = 1;
  2645  0012A8  010E               	movlb	14	; () banked
  2646  0012AA  8746               	bsf	70,3,b	;volatile
  2647                           
  2648                           ; BSR set to: 14
  2649                           ;systemConfig.c: 148: ANCON1bits.ANSEL7 = 1;
  2650  0012AC  010E               	movlb	14	; () banked
  2651  0012AE  8F47               	bsf	71,7,b	;volatile
  2652                           
  2653                           ; BSR set to: 14
  2654                           ;systemConfig.c: 149: ANCON2bits.ANSEL8 = 1;
  2655  0012B0  010E               	movlb	14	; () banked
  2656  0012B2  8146               	bsf	70,0,b	;volatile
  2657                           
  2658                           ; BSR set to: 14
  2659                           ;systemConfig.c: 150: ANCON3bits.ANSEL22 = 1;
  2660  0012B4  010E               	movlb	14	; () banked
  2661  0012B6  8D45               	bsf	69,6,b	;volatile
  2662                           
  2663                           ; BSR set to: 14
  2664                           ;systemConfig.c: 152: TRISAbits.TRISA0 = 1;
  2665  0012B8  8092               	bsf	3986,0,c	;volatile
  2666                           
  2667                           ; BSR set to: 14
  2668                           ;systemConfig.c: 153: TRISAbits.TRISA1 = 1;
  2669  0012BA  8292               	bsf	3986,1,c	;volatile
  2670                           
  2671                           ; BSR set to: 14
  2672                           ;systemConfig.c: 154: TRISAbits.TRISA2 = 1;
  2673  0012BC  8492               	bsf	3986,2,c	;volatile
  2674                           
  2675                           ; BSR set to: 14
  2676                           ;systemConfig.c: 155: TRISAbits.TRISA3 = 1;
  2677  0012BE  8692               	bsf	3986,3,c	;volatile
  2678                           
  2679                           ; BSR set to: 14
  2680                           ;systemConfig.c: 156: TRISAbits.TRISA5 = 1;
  2681  0012C0  8A92               	bsf	3986,5,c	;volatile
  2682                           
  2683                           ; BSR set to: 14
  2684                           ;systemConfig.c: 157: TRISFbits.TRISF7 = 1;
  2685  0012C2  8E97               	bsf	3991,7,c	;volatile
  2686                           
  2687                           ; BSR set to: 14
  2688                           ;systemConfig.c: 158: TRISAbits.TRISA4 = 1;
  2689  0012C4  8892               	bsf	3986,4,c	;volatile
  2690                           
  2691                           ; BSR set to: 14
  2692                           ;systemConfig.c: 159: TRISHbits.TRISH6 = 1;
  2693  0012C6  8C99               	bsf	3993,6,c	;volatile
  2694                           
  2695                           ; BSR set to: 14
  2696                           ;systemConfig.c: 160: TRISGbits.TRISG0 = 1;
  2697  0012C8  8098               	bsf	3992,0,c	;volatile
  2698                           
  2699                           ; BSR set to: 14
  2700                           ;systemConfig.c: 161: TRISCbits.TRISC2 = 1;
  2701  0012CA  8494               	bsf	3988,2,c	;volatile
  2702                           
  2703                           ; BSR set to: 14
  2704  0012CC  0012               	return		;funcret
  2705  0012CE                     __end_of_setupADC:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           postinc0	equ	0xFEE
  2712                           wreg	equ	0xFE8
  2713                           postinc1	equ	0xFE6
  2714                           postdec1	equ	0xFE5
  2715                           plusw1	equ	0xFE3
  2716                           fsr1h	equ	0xFE2
  2717                           fsr1l	equ	0xFE1
  2718                           postinc2	equ	0xFDE
  2719                           postdec2	equ	0xFDD
  2720                           plusw2	equ	0xFDB
  2721                           fsr2h	equ	0xFDA
  2722                           fsr2l	equ	0xFD9
  2723                           status	equ	0xFD8
  2724                           
  2725 ;; *************** function _mapPeripheralPins *****************
  2726 ;; Defined at:
  2727 ;;		line 164 in file "systemConfig.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;Total ram usage:        0 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    4
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_systemInit
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text11
  2756  0015F0                     __ptext11:
  2757                           	opt stack 0
  2758  0015F0                     _mapPeripheralPins:
  2759                           	opt stack 25
  2760                           
  2761                           ;systemConfig.c: 167: OSCCON = (OSCCON & 0x5F);
  2762                           
  2763                           ; BSR set to: 14
  2764                           ;incstack = 0
  2765  0015F0  50D3               	movf	4051,w,c	;volatile
  2766  0015F2  0B5F               	andlw	95
  2767  0015F4  6ED3               	movwf	4051,c	;volatile
  2768                           
  2769                           ;systemConfig.c: 168: RPINR20_21bits.IOC3R = 0x9;
  2770  0015F6  010E               	movlb	14	; () banked
  2771  0015F8  5134               	movf	52,w,b	;volatile
  2772  0015FA  0B0F               	andlw	-241
  2773  0015FC  0990               	iorlw	144
  2774  0015FE  6F34               	movwf	52,b	;volatile
  2775                           
  2776                           ; BSR set to: 14
  2777                           ;systemConfig.c: 169: RPINR20_21bits.IOC2R = 0xA;
  2778  001600  010E               	movlb	14	; () banked
  2779  001602  5134               	movf	52,w,b	;volatile
  2780  001604  0BF0               	andlw	-16
  2781  001606  090A               	iorlw	10
  2782  001608  6F34               	movwf	52,b	;volatile
  2783                           
  2784                           ; BSR set to: 14
  2785                           ;systemConfig.c: 170: RPINR24_25bits.IOC6R = 0x8;
  2786  00160A  010E               	movlb	14	; () banked
  2787  00160C  5136               	movf	54,w,b	;volatile
  2788  00160E  0BF0               	andlw	-16
  2789  001610  0908               	iorlw	8
  2790  001612  6F36               	movwf	54,b	;volatile
  2791                           
  2792                           ; BSR set to: 14
  2793                           ;systemConfig.c: 171: RPINR18_19bits.IOC1R = 0x5;
  2794  001614  010E               	movlb	14	; () banked
  2795  001616  5133               	movf	51,w,b	;volatile
  2796  001618  0B0F               	andlw	-241
  2797  00161A  0950               	iorlw	80
  2798  00161C  6F33               	movwf	51,b	;volatile
  2799                           
  2800                           ; BSR set to: 14
  2801                           ;systemConfig.c: 172: RPINR24_25bits.IOC7R = 0xA;
  2802  00161E  010E               	movlb	14	; () banked
  2803  001620  5136               	movf	54,w,b	;volatile
  2804  001622  0B0F               	andlw	-241
  2805  001624  09A0               	iorlw	160
  2806  001626  6F36               	movwf	54,b	;volatile
  2807                           
  2808                           ; BSR set to: 14
  2809                           ;systemConfig.c: 173: RPINR22_23bits.IOC4R = 0x6;
  2810  001628  010E               	movlb	14	; () banked
  2811  00162A  5135               	movf	53,w,b	;volatile
  2812  00162C  0BF0               	andlw	-16
  2813  00162E  0906               	iorlw	6
  2814  001630  6F35               	movwf	53,b	;volatile
  2815                           
  2816                           ; BSR set to: 14
  2817                           ;systemConfig.c: 174: RPINR22_23bits.IOC5R = 0x8;
  2818  001632  010E               	movlb	14	; () banked
  2819  001634  5135               	movf	53,w,b	;volatile
  2820  001636  0B0F               	andlw	-241
  2821  001638  0980               	iorlw	128
  2822  00163A  6F35               	movwf	53,b	;volatile
  2823                           
  2824                           ; BSR set to: 14
  2825                           ;systemConfig.c: 175: OSCCON = (OSCCON | 0x40);
  2826  00163C  50D3               	movf	4051,w,c	;volatile
  2827  00163E  0940               	iorlw	64
  2828  001640  6ED3               	movwf	4051,c	;volatile
  2829                           
  2830                           ; BSR set to: 14
  2831  001642  0012               	return		;funcret
  2832  001644                     __end_of_mapPeripheralPins:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postinc1	equ	0xFE6
  2841                           postdec1	equ	0xFE5
  2842                           plusw1	equ	0xFE3
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           plusw2	equ	0xFDB
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _killLEDs *****************
  2853 ;; Defined at:
  2854 ;;		line 665 in file "hardware.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		None
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    4
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_systemInit
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text12
  2883  0018AE                     __ptext12:
  2884                           	opt stack 0
  2885  0018AE                     _killLEDs:
  2886                           	opt stack 25
  2887                           
  2888                           ;hardware.c: 667: LATE0 = 0;
  2889                           
  2890                           ; BSR set to: 14
  2891                           ;incstack = 0
  2892  0018AE  908D               	bcf	3981,0,c	;volatile
  2893                           
  2894                           ;hardware.c: 668: LATD2 = 0;
  2895  0018B0  948C               	bcf	3980,2,c	;volatile
  2896                           
  2897                           ;hardware.c: 669: LATH7 = 0;
  2898  0018B2  9E90               	bcf	3984,7,c	;volatile
  2899                           
  2900                           ;hardware.c: 670: LATF2 = 0;
  2901  0018B4  948E               	bcf	3982,2,c	;volatile
  2902                           
  2903                           ;hardware.c: 671: LATF5 = 0;
  2904  0018B6  9A8E               	bcf	3982,5,c	;volatile
  2905                           
  2906                           ;hardware.c: 672: LATF6 = 0;
  2907  0018B8  9C8E               	bcf	3982,6,c	;volatile
  2908                           
  2909                           ;hardware.c: 673: LATG4 = 0;
  2910  0018BA  988F               	bcf	3983,4,c	;volatile
  2911                           
  2912                           ;hardware.c: 674: LATH0 = 0;
  2913  0018BC  9090               	bcf	3984,0,c	;volatile
  2914                           
  2915                           ;hardware.c: 675: LATE1 = 0;
  2916  0018BE  928D               	bcf	3981,1,c	;volatile
  2917                           
  2918                           ;hardware.c: 676: LATH1 = 0;
  2919  0018C0  9290               	bcf	3984,1,c	;volatile
  2920                           
  2921                           ;hardware.c: 677: LATD0 = 0;
  2922  0018C2  908C               	bcf	3980,0,c	;volatile
  2923                           
  2924                           ;hardware.c: 678: LATE7 = 0;
  2925  0018C4  9E8D               	bcf	3981,7,c	;volatile
  2926                           
  2927                           ;hardware.c: 679: LATE5 = 0;
  2928  0018C6  9A8D               	bcf	3981,5,c	;volatile
  2929                           
  2930                           ;hardware.c: 680: LATE4 = 0;
  2931  0018C8  988D               	bcf	3981,4,c	;volatile
  2932                           
  2933                           ;hardware.c: 681: LATH2 = 0;
  2934  0018CA  9490               	bcf	3984,2,c	;volatile
  2935  0018CC  0012               	return		;funcret
  2936  0018CE                     __end_of_killLEDs:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           postinc0	equ	0xFEE
  2943                           wreg	equ	0xFE8
  2944                           postinc1	equ	0xFE6
  2945                           postdec1	equ	0xFE5
  2946                           plusw1	equ	0xFE3
  2947                           fsr1h	equ	0xFE2
  2948                           fsr1l	equ	0xFE1
  2949                           postinc2	equ	0xFDE
  2950                           postdec2	equ	0xFDD
  2951                           plusw2	equ	0xFDB
  2952                           fsr2h	equ	0xFDA
  2953                           fsr2l	equ	0xFD9
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _interruptInit *****************
  2957 ;; Defined at:
  2958 ;;		line 291 in file "systemConfig.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		None
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    4
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_systemInit
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text13
  2987  0017E0                     __ptext13:
  2988                           	opt stack 0
  2989  0017E0                     _interruptInit:
  2990                           	opt stack 25
  2991                           
  2992                           ;systemConfig.c: 293: INTCONbits.T0IE = 0x1;
  2993                           
  2994                           ;incstack = 0
  2995  0017E0  8AF2               	bsf	intcon,5,c	;volatile
  2996                           
  2997                           ;systemConfig.c: 294: PIE1bits.TMR1IE = 0x1;
  2998  0017E2  809D               	bsf	3997,0,c	;volatile
  2999                           
  3000                           ;systemConfig.c: 295: PIE1bits.TMR2IE = 0x1;
  3001  0017E4  829D               	bsf	3997,1,c	;volatile
  3002                           
  3003                           ;systemConfig.c: 296: PIE2bits.TMR3IE = 0x1;
  3004  0017E6  82A0               	bsf	4000,1,c	;volatile
  3005                           
  3006                           ;systemConfig.c: 297: PIE5bits.TMR4IE = 0x1;
  3007  0017E8  80B7               	bsf	4023,0,c	;volatile
  3008                           
  3009                           ;systemConfig.c: 299: PIE2bits.SSP2IE = 0x1;
  3010  0017EA  8CA0               	bsf	4000,6,c	;volatile
  3011                           
  3012                           ;systemConfig.c: 301: INTCONbits.IOCIE = 0x1;
  3013  0017EC  86F2               	bsf	intcon,3,c	;volatile
  3014                           
  3015                           ;systemConfig.c: 302: IOCNbits.IOCN1 = 0x1;
  3016  0017EE  010F               	movlb	15	; () banked
  3017  0017F0  8355               	bsf	85,1,b	;volatile
  3018                           
  3019                           ;systemConfig.c: 303: IOCNbits.IOCN2 = 0x1;
  3020  0017F2  010F               	movlb	15	; () banked
  3021  0017F4  8555               	bsf	85,2,b	;volatile
  3022                           
  3023                           ;systemConfig.c: 304: IOCNbits.IOCN3 = 0x1;
  3024  0017F6  010F               	movlb	15	; () banked
  3025  0017F8  8755               	bsf	85,3,b	;volatile
  3026                           
  3027                           ;systemConfig.c: 305: IOCNbits.IOCN4 = 0x1;
  3028  0017FA  010F               	movlb	15	; () banked
  3029  0017FC  8955               	bsf	85,4,b	;volatile
  3030                           
  3031                           ;systemConfig.c: 306: IOCNbits.IOCN5 = 0x1;
  3032  0017FE  010F               	movlb	15	; () banked
  3033  001800  8B55               	bsf	85,5,b	;volatile
  3034                           
  3035                           ;systemConfig.c: 307: IOCNbits.IOCN6 = 0x1;
  3036  001802  010F               	movlb	15	; () banked
  3037  001804  8D55               	bsf	85,6,b	;volatile
  3038                           
  3039                           ;systemConfig.c: 308: IOCNbits.IOCN7 = 0x1;
  3040  001806  010F               	movlb	15	; () banked
  3041  001808  8F55               	bsf	85,7,b	;volatile
  3042                           
  3043                           ;systemConfig.c: 310: INTCONbits.PEIE = 0x1;
  3044  00180A  8CF2               	bsf	intcon,6,c	;volatile
  3045                           
  3046                           ;systemConfig.c: 311: INTCONbits.GIE = 0x1;
  3047  00180C  8EF2               	bsf	intcon,7,c	;volatile
  3048                           
  3049                           ; BSR set to: 15
  3050  00180E  0012               	return		;funcret
  3051  001810                     __end_of_interruptInit:
  3052                           	opt stack 0
  3053                           tblptru	equ	0xFF8
  3054                           tblptrh	equ	0xFF7
  3055                           tblptrl	equ	0xFF6
  3056                           tablat	equ	0xFF5
  3057                           intcon	equ	0xFF2
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postinc1	equ	0xFE6
  3061                           postdec1	equ	0xFE5
  3062                           plusw1	equ	0xFE3
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           postinc2	equ	0xFDE
  3066                           postdec2	equ	0xFDD
  3067                           plusw2	equ	0xFDB
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _interfaceInit *****************
  3073 ;; Defined at:
  3074 ;;		line 193 in file "systemConfig.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		None
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    4
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_systemInit
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text14
  3103  000F48                     __ptext14:
  3104                           	opt stack 0
  3105  000F48                     _interfaceInit:
  3106                           	opt stack 25
  3107                           
  3108                           ;systemConfig.c: 196: MEMCONbits.EBDIS = 1;
  3109                           
  3110                           ; BSR set to: 15
  3111                           ;incstack = 0
  3112  000F48  010E               	movlb	14	; () banked
  3113  000F4A  8FE3               	bsf	227,7,b	;volatile
  3114                           
  3115                           ;systemConfig.c: 197: UCONbits.USBEN = 0;
  3116  000F4C  9675               	bcf	3957,3,c	;volatile
  3117                           
  3118                           ;systemConfig.c: 200: OSCCON2bits.SOSCGO = 0;
  3119  000F4E  9266               	bcf	3942,1,c	;volatile
  3120                           
  3121                           ;systemConfig.c: 201: T1CONbits.SOSCEN = 0;
  3122  000F50  96CD               	bcf	4045,3,c	;volatile
  3123                           
  3124                           ;systemConfig.c: 202: T3CONbits.SOSCEN = 0;
  3125  000F52  96B1               	bcf	4017,3,c	;volatile
  3126                           
  3127                           ;systemConfig.c: 203: T5CONbits.SOSCEN = 0;
  3128  000F54  010F               	movlb	15	; () banked
  3129  000F56  9714               	bcf	20,3,b	;volatile
  3130                           
  3131                           ;systemConfig.c: 208: ANCON2bits.ANSEL12 = 0;
  3132  000F58  010E               	movlb	14	; () banked
  3133  000F5A  9946               	bcf	70,4,b	;volatile
  3134                           
  3135                           ;systemConfig.c: 209: TRISGbits.TRISG1 = 1;
  3136  000F5C  8298               	bsf	3992,1,c	;volatile
  3137                           
  3138                           ;systemConfig.c: 210: PADCFG1bits.RGPU = 1;
  3139  000F5E  010F               	movlb	15	; () banked
  3140  000F60  8954               	bsf	84,4,b	;volatile
  3141                           
  3142                           ;systemConfig.c: 212: ANCON2bits.ANSEL13 = 0;
  3143  000F62  010E               	movlb	14	; () banked
  3144  000F64  9B46               	bcf	70,5,b	;volatile
  3145                           
  3146                           ;systemConfig.c: 213: TRISGbits.TRISG2 = 1;
  3147  000F66  8498               	bsf	3992,2,c	;volatile
  3148                           
  3149                           ;systemConfig.c: 215: TRISEbits.TRISE6 = 1;
  3150  000F68  8C96               	bsf	3990,6,c	;volatile
  3151                           
  3152                           ;systemConfig.c: 217: TRISDbits.TRISD1 = 1;
  3153  000F6A  8295               	bsf	3989,1,c	;volatile
  3154                           
  3155                           ;systemConfig.c: 218: PADCFG1bits.RDPU = 1;
  3156  000F6C  010F               	movlb	15	; () banked
  3157  000F6E  8F54               	bsf	84,7,b	;volatile
  3158                           
  3159                           ;systemConfig.c: 220: ANCON2bits.ANSEL14 = 0;
  3160  000F70  010E               	movlb	14	; () banked
  3161  000F72  9D46               	bcf	70,6,b	;volatile
  3162                           
  3163                           ;systemConfig.c: 221: TRISGbits.TRISG3 = 1;
  3164  000F74  8698               	bsf	3992,3,c	;volatile
  3165                           
  3166                           ;systemConfig.c: 223: PADCFG1bits.REPU = 1;
  3167  000F76  010F               	movlb	15	; () banked
  3168  000F78  8D54               	bsf	84,6,b	;volatile
  3169                           
  3170                           ;systemConfig.c: 224: TRISDbits.TRISD4 = 1;
  3171  000F7A  8895               	bsf	3989,4,c	;volatile
  3172                           
  3173                           ;systemConfig.c: 225: TRISEbits.TRISE3 = 1;
  3174  000F7C  8696               	bsf	3990,3,c	;volatile
  3175                           
  3176                           ;systemConfig.c: 228: TRISEbits.TRISE0 = 0;
  3177  000F7E  9096               	bcf	3990,0,c	;volatile
  3178                           
  3179                           ;systemConfig.c: 229: TRISDbits.TRISD2 = 0;
  3180  000F80  9495               	bcf	3989,2,c	;volatile
  3181                           
  3182                           ;systemConfig.c: 232: TRISEbits.TRISE1 = 0;
  3183  000F82  9296               	bcf	3990,1,c	;volatile
  3184                           
  3185                           ;systemConfig.c: 233: ANCON3bits.ANSEL17 = 0;
  3186  000F84  010E               	movlb	14	; () banked
  3187  000F86  9345               	bcf	69,1,b	;volatile
  3188                           
  3189                           ;systemConfig.c: 234: TRISHbits.TRISH1 = 0;
  3190  000F88  9299               	bcf	3993,1,c	;volatile
  3191                           
  3192                           ;systemConfig.c: 237: TRISDbits.TRISD0 = 0;
  3193  000F8A  9095               	bcf	3989,0,c	;volatile
  3194                           
  3195                           ;systemConfig.c: 238: TRISEbits.TRISE7 = 0;
  3196  000F8C  9E96               	bcf	3990,7,c	;volatile
  3197                           
  3198                           ;systemConfig.c: 239: TRISEbits.TRISE5 = 0;
  3199  000F8E  9A96               	bcf	3990,5,c	;volatile
  3200                           
  3201                           ;systemConfig.c: 240: TRISEbits.TRISE4 = 0;
  3202  000F90  9896               	bcf	3990,4,c	;volatile
  3203                           
  3204                           ;systemConfig.c: 241: ANCON3bits.ANSEL18 = 0;
  3205  000F92  010E               	movlb	14	; () banked
  3206  000F94  9545               	bcf	69,2,b	;volatile
  3207                           
  3208                           ;systemConfig.c: 242: TRISHbits.TRISH2 = 0;
  3209  000F96  9499               	bcf	3993,2,c	;volatile
  3210                           
  3211                           ;systemConfig.c: 245: ANCON1bits.ANSEL6 = 0;
  3212  000F98  010E               	movlb	14	; () banked
  3213  000F9A  9D47               	bcf	71,6,b	;volatile
  3214                           
  3215                           ;systemConfig.c: 246: TRISFbits.TRISF2 = 0;
  3216  000F9C  9497               	bcf	3991,2,c	;volatile
  3217                           
  3218                           ;systemConfig.c: 247: ANCON3bits.ANSEL23 = 0;
  3219  000F9E  010E               	movlb	14	; () banked
  3220  000FA0  9F45               	bcf	69,7,b	;volatile
  3221                           
  3222                           ;systemConfig.c: 248: TRISHbits.TRISH7 = 0;
  3223  000FA2  9E99               	bcf	3993,7,c	;volatile
  3224                           
  3225                           ;systemConfig.c: 251: ANCON2bits.ANSEL10 = 0;
  3226  000FA4  010E               	movlb	14	; () banked
  3227  000FA6  9546               	bcf	70,2,b	;volatile
  3228                           
  3229                           ;systemConfig.c: 252: TRISFbits.TRISF6 = 0;
  3230  000FA8  9C97               	bcf	3991,6,c	;volatile
  3231                           
  3232                           ;systemConfig.c: 253: ANCON2bits.ANSEL9 = 0;
  3233  000FAA  010E               	movlb	14	; () banked
  3234  000FAC  9346               	bcf	70,1,b	;volatile
  3235                           
  3236                           ;systemConfig.c: 254: TRISFbits.TRISF5 = 0;
  3237  000FAE  9A97               	bcf	3991,5,c	;volatile
  3238                           
  3239                           ;systemConfig.c: 257: ANCON3bits.ANSEL16 = 0;
  3240  000FB0  010E               	movlb	14	; () banked
  3241  000FB2  9145               	bcf	69,0,b	;volatile
  3242                           
  3243                           ;systemConfig.c: 258: TRISHbits.TRISH0 = 0;
  3244  000FB4  9099               	bcf	3993,0,c	;volatile
  3245                           
  3246                           ;systemConfig.c: 259: TRISGbits.TRISG4 = 0;
  3247  000FB6  9898               	bcf	3992,4,c	;volatile
  3248                           
  3249                           ;systemConfig.c: 260: ANCON2bits.ANSEL15 = 0;
  3250  000FB8  010E               	movlb	14	; () banked
  3251  000FBA  9F46               	bcf	70,7,b	;volatile
  3252                           
  3253                           ;systemConfig.c: 263: TRISCbits.TRISC7 = 1;
  3254  000FBC  8E94               	bsf	3988,7,c	;volatile
  3255                           
  3256                           ;systemConfig.c: 264: TRISJbits.TRISJ4 = 1;
  3257  000FBE  889A               	bsf	3994,4,c	;volatile
  3258                           
  3259                           ;systemConfig.c: 265: TRISJbits.TRISJ5 = 1;
  3260  000FC0  8A9A               	bsf	3994,5,c	;volatile
  3261                           
  3262                           ;systemConfig.c: 268: TRISCbits.TRISC1 = 1;
  3263  000FC2  8294               	bsf	3988,1,c	;volatile
  3264                           
  3265                           ;systemConfig.c: 269: TRISCbits.TRISC0 = 1;
  3266  000FC4  8094               	bsf	3988,0,c	;volatile
  3267                           
  3268                           ;systemConfig.c: 270: TRISCbits.TRISC6 = 1;
  3269  000FC6  8C94               	bsf	3988,6,c	;volatile
  3270                           
  3271                           ;systemConfig.c: 273: ANCON3bits.ANSEL21 = 0;
  3272  000FC8  010E               	movlb	14	; () banked
  3273  000FCA  9B45               	bcf	69,5,b	;volatile
  3274                           
  3275                           ;systemConfig.c: 274: ANCON3bits.ANSEL20 = 0;
  3276  000FCC  010E               	movlb	14	; () banked
  3277  000FCE  9945               	bcf	69,4,b	;volatile
  3278                           
  3279                           ;systemConfig.c: 275: TRISFbits.TRISF3 = 1;
  3280  000FD0  8697               	bsf	3991,3,c	;volatile
  3281                           
  3282                           ;systemConfig.c: 276: TRISHbits.TRISH5 = 1;
  3283  000FD2  8A99               	bsf	3993,5,c	;volatile
  3284                           
  3285                           ;systemConfig.c: 277: TRISHbits.TRISH4 = 1;
  3286  000FD4  8899               	bsf	3993,4,c	;volatile
  3287                           
  3288                           ;systemConfig.c: 280: TRISBbits.TRISB5 = 0;
  3289  000FD6  9A93               	bcf	3987,5,c	;volatile
  3290                           
  3291                           ;systemConfig.c: 281: TRISDbits.TRISD3 = 0;
  3292  000FD8  9695               	bcf	3989,3,c	;volatile
  3293                           
  3294                           ;systemConfig.c: 282: LATB5 = 1;
  3295  000FDA  8A8A               	bsf	3978,5,c	;volatile
  3296                           
  3297                           ;systemConfig.c: 283: LATD3 = 0;
  3298  000FDC  968C               	bcf	3980,3,c	;volatile
  3299                           
  3300                           ;systemConfig.c: 286: TRISJbits.TRISJ0 = 1;
  3301  000FDE  809A               	bsf	3994,0,c	;volatile
  3302                           
  3303                           ;systemConfig.c: 287: TRISJbits.TRISJ1 = 1;
  3304  000FE0  829A               	bsf	3994,1,c	;volatile
  3305                           
  3306                           ;systemConfig.c: 288: TRISDbits.TRISD7 = 1;
  3307  000FE2  8E95               	bsf	3989,7,c	;volatile
  3308                           
  3309                           ; BSR set to: 14
  3310  000FE4  0012               	return		;funcret
  3311  000FE6                     __end_of_interfaceInit:
  3312                           	opt stack 0
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           postinc1	equ	0xFE6
  3321                           postdec1	equ	0xFE5
  3322                           plusw1	equ	0xFE3
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           postinc2	equ	0xFDE
  3326                           postdec2	equ	0xFDD
  3327                           plusw2	equ	0xFDB
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function _defaultLED *****************
  3333 ;; Defined at:
  3334 ;;		line 314 in file "systemConfig.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		None
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    4
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_systemInit
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text15
  3363  001900                     __ptext15:
  3364                           	opt stack 0
  3365  001900                     _defaultLED:
  3366                           	opt stack 25
  3367                           
  3368                           ;systemConfig.c: 316: LATH7 = 1;
  3369                           
  3370                           ; BSR set to: 14
  3371                           ;incstack = 0
  3372  001900  8E90               	bsf	3984,7,c	;volatile
  3373                           
  3374                           ;systemConfig.c: 317: LATF2 = 1;
  3375  001902  848E               	bsf	3982,2,c	;volatile
  3376                           
  3377                           ;systemConfig.c: 318: LATF5 = 1;
  3378  001904  8A8E               	bsf	3982,5,c	;volatile
  3379                           
  3380                           ;systemConfig.c: 319: LATF6 = 1;
  3381  001906  8C8E               	bsf	3982,6,c	;volatile
  3382                           
  3383                           ;systemConfig.c: 320: LATG4 = 1;
  3384  001908  888F               	bsf	3983,4,c	;volatile
  3385                           
  3386                           ;systemConfig.c: 321: LATH0 = 1;
  3387  00190A  8090               	bsf	3984,0,c	;volatile
  3388                           
  3389                           ;systemConfig.c: 322: LATD0 = 1;
  3390  00190C  808C               	bsf	3980,0,c	;volatile
  3391                           
  3392                           ;systemConfig.c: 323: LATE7 = 1;
  3393  00190E  8E8D               	bsf	3981,7,c	;volatile
  3394                           
  3395                           ;systemConfig.c: 324: LATE5 = 1;
  3396  001910  8A8D               	bsf	3981,5,c	;volatile
  3397                           
  3398                           ;systemConfig.c: 325: LATE4 = 1;
  3399  001912  888D               	bsf	3981,4,c	;volatile
  3400                           
  3401                           ;systemConfig.c: 326: LATH2 = 1;
  3402  001914  8490               	bsf	3984,2,c	;volatile
  3403  001916  0012               	return		;funcret
  3404  001918                     __end_of_defaultLED:
  3405                           	opt stack 0
  3406                           tblptru	equ	0xFF8
  3407                           tblptrh	equ	0xFF7
  3408                           tblptrl	equ	0xFF6
  3409                           tablat	equ	0xFF5
  3410                           intcon	equ	0xFF2
  3411                           postinc0	equ	0xFEE
  3412                           wreg	equ	0xFE8
  3413                           postinc1	equ	0xFE6
  3414                           postdec1	equ	0xFE5
  3415                           plusw1	equ	0xFE3
  3416                           fsr1h	equ	0xFE2
  3417                           fsr1l	equ	0xFE1
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           plusw2	equ	0xFDB
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _clockSwitch *****************
  3426 ;; Defined at:
  3427 ;;		line 52 in file "systemConfig.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    4
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_systemInit
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text16
  3456  00188A                     __ptext16:
  3457                           	opt stack 0
  3458  00188A                     _clockSwitch:
  3459                           	opt stack 25
  3460                           
  3461                           ;systemConfig.c: 54: OSCCON4bits.PLLEN = 0x1;
  3462                           
  3463                           ;incstack = 0
  3464  00188A  8A64               	bsf	3940,5,c	;volatile
  3465                           
  3466                           ;systemConfig.c: 55: OSCCON3bits.IRCF = 0x1;
  3467  00188C  5065               	movf	3941,w,c	;volatile
  3468  00188E  0BF8               	andlw	-8
  3469  001890  0901               	iorlw	1
  3470  001892  6E65               	movwf	3941,c	;volatile
  3471                           
  3472                           ;systemConfig.c: 56: OSCCON2bits.CLKLOCK = 0x0;
  3473  001894  9E66               	bcf	3942,7,c	;volatile
  3474                           
  3475                           ;systemConfig.c: 57: OSCCONbits.NOSC = 0x1;
  3476  001896  50D3               	movf	4051,w,c	;volatile
  3477  001898  0BF8               	andlw	-8
  3478  00189A  0901               	iorlw	1
  3479  00189C  6ED3               	movwf	4051,c	;volatile
  3480  00189E  38D3               	swapf	4051,w,c	;volatile
  3481  0018A0  0B07               	andlw	7
  3482  0018A2  06E8               	decf	wreg,f,c
  3483  0018A4  A4D8               	btfss	status,2,c
  3484  0018A6  D7FB               	goto	l507
  3485  0018A8                     u4210:
  3486                           
  3487                           ;systemConfig.c: 60: while (!OSCCON2bits.LOCK);
  3488  0018A8  BA66               	btfsc	3942,5,c	;volatile
  3489  0018AA  0012               	return	
  3490  0018AC  D7FD               	goto	u4210
  3491  0018AE                     __end_of_clockSwitch:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           intcon	equ	0xFF2
  3498                           postinc0	equ	0xFEE
  3499                           wreg	equ	0xFE8
  3500                           postinc1	equ	0xFE6
  3501                           postdec1	equ	0xFE5
  3502                           plusw1	equ	0xFE3
  3503                           fsr1h	equ	0xFE2
  3504                           fsr1l	equ	0xFE1
  3505                           postinc2	equ	0xFDE
  3506                           postdec2	equ	0xFDD
  3507                           plusw2	equ	0xFDB
  3508                           fsr2h	equ	0xFDA
  3509                           fsr2l	equ	0xFD9
  3510                           status	equ	0xFD8
  3511                           
  3512 ;; *************** function _bypassSetup *****************
  3513 ;; Defined at:
  3514 ;;		line 329 in file "systemConfig.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_systemInit
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text17
  3543  00195A                     __ptext17:
  3544                           	opt stack 0
  3545  00195A                     _bypassSetup:
  3546                           	opt stack 25
  3547                           
  3548                           ;systemConfig.c: 331: LATB5 = 1;
  3549                           
  3550                           ;incstack = 0
  3551  00195A  8A8A               	bsf	3978,5,c	;volatile
  3552                           
  3553                           ;systemConfig.c: 332: LATD3 = 1;
  3554  00195C  868C               	bsf	3980,3,c	;volatile
  3555                           
  3556                           ;systemConfig.c: 333: LATE1 = 1;
  3557  00195E  828D               	bsf	3981,1,c	;volatile
  3558                           
  3559                           ;systemConfig.c: 334: LATH1 = 0;
  3560  001960  9290               	bcf	3984,1,c	;volatile
  3561                           
  3562                           ;systemConfig.c: 335: LATD2 = 0;
  3563  001962  948C               	bcf	3980,2,c	;volatile
  3564  001964  0012               	return		;funcret
  3565  001966                     __end_of_bypassSetup:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           postinc1	equ	0xFE6
  3575                           postdec1	equ	0xFE5
  3576                           plusw1	equ	0xFE3
  3577                           fsr1h	equ	0xFE2
  3578                           fsr1l	equ	0xFE1
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           plusw2	equ	0xFDB
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function _readControls *****************
  3587 ;; Defined at:
  3588 ;;		line 182 in file "main.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;Total ram usage:        3 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    5
  3609 ;; This function calls:
  3610 ;;		_ADC_Read
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text18
  3617  000672                     __ptext18:
  3618                           	opt stack 0
  3619  000672                     _readControls:
  3620                           	opt stack 25
  3621                           
  3622                           ;main.c: 185: timeA = ADC_Read(14);
  3623                           
  3624                           ;incstack = 0
  3625  000672  0E00               	movlw	0
  3626  000674  0100               	movlb	0	; () banked
  3627  000676  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3628  000678  0E0E               	movlw	14
  3629  00067A  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3630  00067C  EC32  F006         	call	_ADC_Read	;wreg free
  3631  000680  C0B8  F00B         	movff	?_ADC_Read,_timeA
  3632  000684  C0B9  F00C         	movff	?_ADC_Read+1,_timeA+1
  3633                           
  3634                           ;main.c: 186: parameter[0] = timeA >> 8;
  3635  000688  C00C  F0BC         	movff	_timeA+1,??_readControls
  3636  00068C  0100               	movlb	0	; () banked
  3637  00068E  6BBD               	clrf	(??_readControls+1)& (0+255),b
  3638  000690  BFBC               	btfsc	??_readControls& (0+255),7,b
  3639  000692  69BD               	setf	(??_readControls+1)& (0+255),b
  3640  000694  C0BC  F0A0         	movff	??_readControls,_parameter
  3641  000698  C0BD  F0A1         	movff	??_readControls+1,_parameter+1
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;main.c: 187: parameter[1] = (timeA & 0xFF);
  3645  00069C  500B               	movf	_timeA,w,c
  3646  00069E  0100               	movlb	0	; () banked
  3647  0006A0  6FA2               	movwf	(_parameter+2)& (0+255),b
  3648  0006A2  6BA3               	clrf	(_parameter+3)& (0+255),b
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;main.c: 189: fbkA = ADC_Read(4);
  3652  0006A4  0E00               	movlw	0
  3653  0006A6  0100               	movlb	0	; () banked
  3654  0006A8  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3655  0006AA  0E04               	movlw	4
  3656  0006AC  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3657  0006AE  EC32  F006         	call	_ADC_Read	;wreg free
  3658  0006B2  C0B8  F078         	movff	?_ADC_Read,_fbkA
  3659  0006B6  C0B9  F079         	movff	?_ADC_Read+1,_fbkA+1
  3660                           
  3661                           ;main.c: 190: parameter[2] = fbkA>>4;
  3662  0006BA  C078  F0BC         	movff	_fbkA,??_readControls
  3663  0006BE  C079  F0BD         	movff	_fbkA+1,??_readControls+1
  3664  0006C2  0E04               	movlw	4
  3665  0006C4  0100               	movlb	0	; () banked
  3666  0006C6  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3667  0006C8                     u4245:
  3668  0006C8  0100               	movlb	0	; () banked
  3669  0006CA  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3670  0006CC  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3671  0006CE  33BC               	rrcf	??_readControls& (0+255),f,b
  3672  0006D0  0100               	movlb	0	; () banked
  3673  0006D2  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3674  0006D4  D7F9               	goto	u4245
  3675  0006D6  C0BC  F0A4         	movff	??_readControls,_parameter+4
  3676  0006DA  C0BD  F0A5         	movff	??_readControls+1,_parameter+5
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 192: lvlA = ADC_Read(3);
  3680  0006DE  0E00               	movlw	0
  3681  0006E0  0100               	movlb	0	; () banked
  3682  0006E2  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3683  0006E4  0E03               	movlw	3
  3684  0006E6  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3685  0006E8  EC32  F006         	call	_ADC_Read	;wreg free
  3686  0006EC  C0B8  F076         	movff	?_ADC_Read,_lvlA
  3687  0006F0  C0B9  F077         	movff	?_ADC_Read+1,_lvlA+1
  3688                           
  3689                           ;main.c: 193: parameter[3] = lvlA>>4;
  3690  0006F4  C076  F0BC         	movff	_lvlA,??_readControls
  3691  0006F8  C077  F0BD         	movff	_lvlA+1,??_readControls+1
  3692  0006FC  0E04               	movlw	4
  3693  0006FE  0100               	movlb	0	; () banked
  3694  000700  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3695  000702                     u4255:
  3696  000702  0100               	movlb	0	; () banked
  3697  000704  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3698  000706  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3699  000708  33BC               	rrcf	??_readControls& (0+255),f,b
  3700  00070A  0100               	movlb	0	; () banked
  3701  00070C  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3702  00070E  D7F9               	goto	u4255
  3703  000710  C0BC  F0A6         	movff	??_readControls,_parameter+6
  3704  000714  C0BD  F0A7         	movff	??_readControls+1,_parameter+7
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;main.c: 196: timeB = ADC_Read(6);
  3708  000718  0E00               	movlw	0
  3709  00071A  0100               	movlb	0	; () banked
  3710  00071C  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3711  00071E  0E06               	movlw	6
  3712  000720  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3713  000722  EC32  F006         	call	_ADC_Read	;wreg free
  3714  000726  C0B8  F009         	movff	?_ADC_Read,_timeB
  3715  00072A  C0B9  F00A         	movff	?_ADC_Read+1,_timeB+1
  3716                           
  3717                           ;main.c: 197: parameter[4] = timeB >> 8;
  3718  00072E  C00A  F0BC         	movff	_timeB+1,??_readControls
  3719  000732  0100               	movlb	0	; () banked
  3720  000734  6BBD               	clrf	(??_readControls+1)& (0+255),b
  3721  000736  BFBC               	btfsc	??_readControls& (0+255),7,b
  3722  000738  69BD               	setf	(??_readControls+1)& (0+255),b
  3723  00073A  C0BC  F0A8         	movff	??_readControls,_parameter+8
  3724  00073E  C0BD  F0A9         	movff	??_readControls+1,_parameter+9
  3725                           
  3726                           ;main.c: 198: parameter[5] = (timeB & 0xFF);
  3727  000742  5009               	movf	_timeB,w,c
  3728  000744  0100               	movlb	0	; () banked
  3729  000746  6FAA               	movwf	(_parameter+10)& (0+255),b
  3730  000748  6BAB               	clrf	(_parameter+11)& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;main.c: 200: fbkB = ADC_Read(2);
  3734  00074A  0E00               	movlw	0
  3735  00074C  0100               	movlb	0	; () banked
  3736  00074E  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3737  000750  0E02               	movlw	2
  3738  000752  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3739  000754  EC32  F006         	call	_ADC_Read	;wreg free
  3740  000758  C0B8  F074         	movff	?_ADC_Read,_fbkB
  3741  00075C  C0B9  F075         	movff	?_ADC_Read+1,_fbkB+1
  3742                           
  3743                           ;main.c: 201: parameter[6] = fbkB>>4;
  3744  000760  C074  F0BC         	movff	_fbkB,??_readControls
  3745  000764  C075  F0BD         	movff	_fbkB+1,??_readControls+1
  3746  000768  0E04               	movlw	4
  3747  00076A  0100               	movlb	0	; () banked
  3748  00076C  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3749  00076E                     u4265:
  3750  00076E  0100               	movlb	0	; () banked
  3751  000770  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3752  000772  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3753  000774  33BC               	rrcf	??_readControls& (0+255),f,b
  3754  000776  0100               	movlb	0	; () banked
  3755  000778  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3756  00077A  D7F9               	goto	u4265
  3757  00077C  C0BC  F0AC         	movff	??_readControls,_parameter+12
  3758  000780  C0BD  F0AD         	movff	??_readControls+1,_parameter+13
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;main.c: 203: lvlB = ADC_Read(9);
  3762  000784  0E00               	movlw	0
  3763  000786  0100               	movlb	0	; () banked
  3764  000788  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3765  00078A  0E09               	movlw	9
  3766  00078C  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3767  00078E  EC32  F006         	call	_ADC_Read	;wreg free
  3768  000792  C0B8  F072         	movff	?_ADC_Read,_lvlB
  3769  000796  C0B9  F073         	movff	?_ADC_Read+1,_lvlB+1
  3770                           
  3771                           ;main.c: 204: parameter[7] = lvlB>>4;
  3772  00079A  C072  F0BC         	movff	_lvlB,??_readControls
  3773  00079E  C073  F0BD         	movff	_lvlB+1,??_readControls+1
  3774  0007A2  0E04               	movlw	4
  3775  0007A4  0100               	movlb	0	; () banked
  3776  0007A6  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3777  0007A8                     u4275:
  3778  0007A8  0100               	movlb	0	; () banked
  3779  0007AA  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3780  0007AC  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3781  0007AE  33BC               	rrcf	??_readControls& (0+255),f,b
  3782  0007B0  0100               	movlb	0	; () banked
  3783  0007B2  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3784  0007B4  D7F9               	goto	u4275
  3785  0007B6  C0BC  F0AE         	movff	??_readControls,_parameter+14
  3786  0007BA  C0BD  F0AF         	movff	??_readControls+1,_parameter+15
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;main.c: 207: timeC = ADC_Read(1);
  3790  0007BE  0E00               	movlw	0
  3791  0007C0  0100               	movlb	0	; () banked
  3792  0007C2  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3793  0007C4  0E01               	movlw	1
  3794  0007C6  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3795  0007C8  EC32  F006         	call	_ADC_Read	;wreg free
  3796  0007CC  C0B8  F007         	movff	?_ADC_Read,_timeC
  3797  0007D0  C0B9  F008         	movff	?_ADC_Read+1,_timeC+1
  3798                           
  3799                           ;main.c: 208: parameter[8] = timeC >> 8;
  3800  0007D4  C008  F0BC         	movff	_timeC+1,??_readControls
  3801  0007D8  0100               	movlb	0	; () banked
  3802  0007DA  6BBD               	clrf	(??_readControls+1)& (0+255),b
  3803  0007DC  BFBC               	btfsc	??_readControls& (0+255),7,b
  3804  0007DE  69BD               	setf	(??_readControls+1)& (0+255),b
  3805  0007E0  C0BC  F0B0         	movff	??_readControls,_parameter+16
  3806  0007E4  C0BD  F0B1         	movff	??_readControls+1,_parameter+17
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;main.c: 209: parameter[9] = (timeC & 0xFF);
  3810  0007E8  5007               	movf	_timeC,w,c
  3811  0007EA  0100               	movlb	0	; () banked
  3812  0007EC  6FB2               	movwf	(_parameter+18)& (0+255),b
  3813  0007EE  6BB3               	clrf	(_parameter+19)& (0+255),b
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 211: fbkC = ADC_Read(5);
  3817  0007F0  0E00               	movlw	0
  3818  0007F2  0100               	movlb	0	; () banked
  3819  0007F4  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3820  0007F6  0E05               	movlw	5
  3821  0007F8  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3822  0007FA  EC32  F006         	call	_ADC_Read	;wreg free
  3823  0007FE  C0B8  F070         	movff	?_ADC_Read,_fbkC
  3824  000802  C0B9  F071         	movff	?_ADC_Read+1,_fbkC+1
  3825                           
  3826                           ;main.c: 212: parameter[10] = fbkC>>4;
  3827  000806  C070  F0BC         	movff	_fbkC,??_readControls
  3828  00080A  C071  F0BD         	movff	_fbkC+1,??_readControls+1
  3829  00080E  0E04               	movlw	4
  3830  000810  0100               	movlb	0	; () banked
  3831  000812  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3832  000814                     u4285:
  3833  000814  0100               	movlb	0	; () banked
  3834  000816  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3835  000818  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3836  00081A  33BC               	rrcf	??_readControls& (0+255),f,b
  3837  00081C  0100               	movlb	0	; () banked
  3838  00081E  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3839  000820  D7F9               	goto	u4285
  3840  000822  C0BC  F0B4         	movff	??_readControls,_parameter+20
  3841  000826  C0BD  F0B5         	movff	??_readControls+1,_parameter+21
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;main.c: 214: lvlC = ADC_Read(0);
  3845  00082A  0E00               	movlw	0
  3846  00082C  0100               	movlb	0	; () banked
  3847  00082E  6FB9               	movwf	(ADC_Read@channel+1)& (0+255),b
  3848  000830  0E00               	movlw	0
  3849  000832  6FB8               	movwf	ADC_Read@channel& (0+255),b
  3850  000834  EC32  F006         	call	_ADC_Read	;wreg free
  3851  000838  C0B8  F06E         	movff	?_ADC_Read,_lvlC
  3852  00083C  C0B9  F06F         	movff	?_ADC_Read+1,_lvlC+1
  3853                           
  3854                           ;main.c: 215: parameter[11] = lvlC>>4;
  3855  000840  C06E  F0BC         	movff	_lvlC,??_readControls
  3856  000844  C06F  F0BD         	movff	_lvlC+1,??_readControls+1
  3857  000848  0E04               	movlw	4
  3858  00084A  0100               	movlb	0	; () banked
  3859  00084C  6FBE               	movwf	(??_readControls+2)& (0+255),b
  3860  00084E                     u4295:
  3861  00084E  0100               	movlb	0	; () banked
  3862  000850  35BD               	rlcf	(??_readControls+1)& (0+255),w,b
  3863  000852  33BD               	rrcf	(??_readControls+1)& (0+255),f,b
  3864  000854  33BC               	rrcf	??_readControls& (0+255),f,b
  3865  000856  0100               	movlb	0	; () banked
  3866  000858  2FBE               	decfsz	(??_readControls+2)& (0+255),f,b
  3867  00085A  D7F9               	goto	u4295
  3868  00085C  C0BC  F0B6         	movff	??_readControls,_parameter+22
  3869  000860  C0BD  F0B7         	movff	??_readControls+1,_parameter+23
  3870                           
  3871                           ; BSR set to: 0
  3872  000864  0012               	return		;funcret
  3873  000866                     __end_of_readControls:
  3874                           	opt stack 0
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           intcon	equ	0xFF2
  3880                           postinc0	equ	0xFEE
  3881                           wreg	equ	0xFE8
  3882                           postinc1	equ	0xFE6
  3883                           postdec1	equ	0xFE5
  3884                           plusw1	equ	0xFE3
  3885                           fsr1h	equ	0xFE2
  3886                           fsr1l	equ	0xFE1
  3887                           postinc2	equ	0xFDE
  3888                           postdec2	equ	0xFDD
  3889                           plusw2	equ	0xFDB
  3890                           fsr2h	equ	0xFDA
  3891                           fsr2l	equ	0xFD9
  3892                           status	equ	0xFD8
  3893                           
  3894 ;; *************** function _ADC_Read *****************
  3895 ;; Defined at:
  3896 ;;		line 393 in file "hardware.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  channel         2    0[BANK0 ] int 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  value           2    2[BANK0 ] int 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  2    0[BANK0 ] int 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3910 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;Total ram usage:        4 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    4
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_readControls
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text19
  3926  000C64                     __ptext19:
  3927                           	opt stack 0
  3928  000C64                     _ADC_Read:
  3929                           	opt stack 25
  3930                           
  3931                           ;hardware.c: 395: int value;
  3932                           ;hardware.c: 396: ADCHS0Lbits.CH0SA = channel;
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;incstack = 0
  3936  000C64  010E               	movlb	14	; () banked
  3937  000C66  5186               	movf	134,w,b	;volatile
  3938  000C68  0100               	movlb	0	; () banked
  3939  000C6A  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  3940  000C6C  0BE0               	andlw	-32
  3941  000C6E  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  3942  000C70  010E               	movlb	14	; () banked
  3943  000C72  6F86               	movwf	134,b	;volatile
  3944                           
  3945                           ; BSR set to: 14
  3946                           ;hardware.c: 397: _delay((unsigned long)((100)*(32000000/4000000.0)));
  3947  000C74  0EA0               	movlw	160
  3948  000C76                     u4777:
  3949  000C76  D000               	nop2	
  3950  000C78  2EE8               	decfsz	wreg,f,c
  3951  000C7A  D7FD               	bra	u4777
  3952                           
  3953                           ;hardware.c: 398: ADCON1Hbits.ADON = 1;
  3954  000C7C  8EC1               	bsf	4033,7,c	;volatile
  3955                           
  3956                           ;hardware.c: 399: ADCON1Lbits.SAMP = 1;
  3957  000C7E  82C0               	bsf	4032,1,c	;volatile
  3958                           
  3959                           ;hardware.c: 400: _delay((unsigned long)((100)*(32000000/4000000.0)));
  3960  000C80  0EA0               	movlw	160
  3961  000C82                     u4787:
  3962  000C82  D000               	nop2	
  3963  000C84  2EE8               	decfsz	wreg,f,c
  3964  000C86  D7FD               	bra	u4787
  3965                           
  3966                           ;hardware.c: 401: ADCON1Lbits.SAMP = 0;
  3967  000C88  92C0               	bcf	4032,1,c	;volatile
  3968  000C8A  A0C0               	btfss	4032,0,c	;volatile
  3969  000C8C  D7FE               	goto	l878
  3970                           
  3971                           ;hardware.c: 403: ADCON1Hbits.ADON = 0;
  3972  000C8E  9EC1               	bcf	4033,7,c	;volatile
  3973                           
  3974                           ;hardware.c: 406: if (channel == 0)
  3975  000C90  0100               	movlb	0	; () banked
  3976  000C92  51B8               	movf	ADC_Read@channel& (0+255),w,b
  3977  000C94  0100               	movlb	0	; () banked
  3978  000C96  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  3979  000C98  A4D8               	btfss	status,2,c
  3980  000C9A  D005               	goto	l880
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;hardware.c: 407: {
  3984                           ;hardware.c: 408: value = ADCBUF0;
  3985  000C9C  CFC2 F0BA          	movff	4034,ADC_Read@value	;volatile
  3986  000CA0  CFC3 F0BB          	movff	4035,ADC_Read@value+1	;volatile
  3987                           
  3988                           ;hardware.c: 409: }
  3989  000CA4  D070               	goto	l899
  3990  000CA6                     l880:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;hardware.c: 410: else if (channel == 1)
  3994                           
  3995                           ; BSR set to: 0
  3996  000CA6  0100               	movlb	0	; () banked
  3997  000CA8  05B8               	decf	ADC_Read@channel& (0+255),w,b
  3998  000CAA  0100               	movlb	0	; () banked
  3999  000CAC  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4000  000CAE  A4D8               	btfss	status,2,c
  4001  000CB0  D005               	goto	l882
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;hardware.c: 411: {
  4005                           ;hardware.c: 412: value = ADCBUF1;
  4006  000CB2  CE48 F0BA          	movff	3656,ADC_Read@value	;volatile
  4007  000CB6  CE49 F0BB          	movff	3657,ADC_Read@value+1	;volatile
  4008                           
  4009                           ;hardware.c: 413: }
  4010  000CBA  D065               	goto	l899
  4011  000CBC                     l882:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;hardware.c: 414: else if (channel == 2)
  4015                           
  4016                           ; BSR set to: 0
  4017  000CBC  0E02               	movlw	2
  4018  000CBE  0100               	movlb	0	; () banked
  4019  000CC0  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4020  000CC2  0100               	movlb	0	; () banked
  4021  000CC4  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4022  000CC6  A4D8               	btfss	status,2,c
  4023  000CC8  D005               	goto	l884
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;hardware.c: 415: {
  4027                           ;hardware.c: 416: value = ADCBUF2;
  4028  000CCA  CE4A F0BA          	movff	3658,ADC_Read@value	;volatile
  4029  000CCE  CE4B F0BB          	movff	3659,ADC_Read@value+1	;volatile
  4030                           
  4031                           ;hardware.c: 417: }
  4032  000CD2  D059               	goto	l899
  4033  000CD4                     l884:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;hardware.c: 418: else if (channel == 3)
  4037                           
  4038                           ; BSR set to: 0
  4039  000CD4  0E03               	movlw	3
  4040  000CD6  0100               	movlb	0	; () banked
  4041  000CD8  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4042  000CDA  0100               	movlb	0	; () banked
  4043  000CDC  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4044  000CDE  A4D8               	btfss	status,2,c
  4045  000CE0  D005               	goto	l886
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;hardware.c: 419: {
  4049                           ;hardware.c: 420: value = ADCBUF3;
  4050  000CE2  CE4C F0BA          	movff	3660,ADC_Read@value	;volatile
  4051  000CE6  CE4D F0BB          	movff	3661,ADC_Read@value+1	;volatile
  4052                           
  4053                           ;hardware.c: 421: }
  4054  000CEA  D04D               	goto	l899
  4055  000CEC                     l886:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;hardware.c: 422: else if (channel == 4)
  4059                           
  4060                           ; BSR set to: 0
  4061  000CEC  0E04               	movlw	4
  4062  000CEE  0100               	movlb	0	; () banked
  4063  000CF0  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4064  000CF2  0100               	movlb	0	; () banked
  4065  000CF4  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4066  000CF6  A4D8               	btfss	status,2,c
  4067  000CF8  D005               	goto	l888
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;hardware.c: 423: {
  4071                           ;hardware.c: 424: value = ADCBUF4;
  4072  000CFA  CE4E F0BA          	movff	3662,ADC_Read@value	;volatile
  4073  000CFE  CE4F F0BB          	movff	3663,ADC_Read@value+1	;volatile
  4074                           
  4075                           ;hardware.c: 425: }
  4076  000D02  D041               	goto	l899
  4077  000D04                     l888:
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;hardware.c: 426: else if (channel == 5)
  4081                           
  4082                           ; BSR set to: 0
  4083  000D04  0E05               	movlw	5
  4084  000D06  0100               	movlb	0	; () banked
  4085  000D08  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4086  000D0A  0100               	movlb	0	; () banked
  4087  000D0C  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4088  000D0E  A4D8               	btfss	status,2,c
  4089  000D10  D005               	goto	l890
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;hardware.c: 427: {
  4093                           ;hardware.c: 428: value = ADCBUF5;
  4094  000D12  CE50 F0BA          	movff	3664,ADC_Read@value	;volatile
  4095  000D16  CE51 F0BB          	movff	3665,ADC_Read@value+1	;volatile
  4096                           
  4097                           ;hardware.c: 429: }
  4098  000D1A  D035               	goto	l899
  4099  000D1C                     l890:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;hardware.c: 430: else if (channel == 6)
  4103                           
  4104                           ; BSR set to: 0
  4105  000D1C  0E06               	movlw	6
  4106  000D1E  0100               	movlb	0	; () banked
  4107  000D20  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4108  000D22  0100               	movlb	0	; () banked
  4109  000D24  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4110  000D26  A4D8               	btfss	status,2,c
  4111  000D28  D005               	goto	l892
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;hardware.c: 431: {
  4115                           ;hardware.c: 432: value = ADCBUF6;
  4116  000D2A  CE52 F0BA          	movff	3666,ADC_Read@value	;volatile
  4117  000D2E  CE53 F0BB          	movff	3667,ADC_Read@value+1	;volatile
  4118                           
  4119                           ;hardware.c: 433: }
  4120  000D32  D029               	goto	l899
  4121  000D34                     l892:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;hardware.c: 434: else if (channel == 14)
  4125                           
  4126                           ; BSR set to: 0
  4127  000D34  0E0E               	movlw	14
  4128  000D36  0100               	movlb	0	; () banked
  4129  000D38  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4130  000D3A  0100               	movlb	0	; () banked
  4131  000D3C  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4132  000D3E  A4D8               	btfss	status,2,c
  4133  000D40  D005               	goto	l894
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;hardware.c: 435: {
  4137                           ;hardware.c: 436: value = ADCBUF14;
  4138  000D42  CE62 F0BA          	movff	3682,ADC_Read@value	;volatile
  4139  000D46  CE63 F0BB          	movff	3683,ADC_Read@value+1	;volatile
  4140                           
  4141                           ;hardware.c: 437: }
  4142  000D4A  D01D               	goto	l899
  4143  000D4C                     l894:
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;hardware.c: 438: else if (channel == 8)
  4147                           
  4148                           ; BSR set to: 0
  4149  000D4C  0E08               	movlw	8
  4150  000D4E  0100               	movlb	0	; () banked
  4151  000D50  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4152  000D52  0100               	movlb	0	; () banked
  4153  000D54  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4154  000D56  A4D8               	btfss	status,2,c
  4155  000D58  D005               	goto	l896
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;hardware.c: 439: {
  4159                           ;hardware.c: 440: value = ADCBUF8;
  4160  000D5A  CE56 F0BA          	movff	3670,ADC_Read@value	;volatile
  4161  000D5E  CE57 F0BB          	movff	3671,ADC_Read@value+1	;volatile
  4162                           
  4163                           ;hardware.c: 441: }
  4164  000D62  D011               	goto	l899
  4165  000D64                     l896:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;hardware.c: 442: else if (channel == 9)
  4169                           
  4170                           ; BSR set to: 0
  4171  000D64  0E09               	movlw	9
  4172  000D66  0100               	movlb	0	; () banked
  4173  000D68  19B8               	xorwf	ADC_Read@channel& (0+255),w,b
  4174  000D6A  0100               	movlb	0	; () banked
  4175  000D6C  11B9               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4176  000D6E  A4D8               	btfss	status,2,c
  4177  000D70  D005               	goto	l898
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;hardware.c: 443: {
  4181                           ;hardware.c: 444: value = ADCBUF9;
  4182  000D72  CE58 F0BA          	movff	3672,ADC_Read@value	;volatile
  4183  000D76  CE59 F0BB          	movff	3673,ADC_Read@value+1	;volatile
  4184                           
  4185                           ;hardware.c: 445: }
  4186  000D7A  D005               	goto	l899
  4187  000D7C                     l898:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;hardware.c: 446: else value = 0;
  4191                           
  4192                           ; BSR set to: 0
  4193  000D7C  0E00               	movlw	0
  4194  000D7E  0100               	movlb	0	; () banked
  4195  000D80  6FBB               	movwf	(ADC_Read@value+1)& (0+255),b
  4196  000D82  0E00               	movlw	0
  4197  000D84  6FBA               	movwf	ADC_Read@value& (0+255),b
  4198  000D86                     l899:
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;hardware.c: 447: return (value);
  4202                           
  4203                           ; BSR set to: 0
  4204                           
  4205                           ; BSR set to: 0
  4206                           
  4207                           ; BSR set to: 0
  4208                           
  4209                           ; BSR set to: 0
  4210                           
  4211                           ; BSR set to: 0
  4212                           
  4213                           ; BSR set to: 0
  4214                           
  4215                           ; BSR set to: 0
  4216                           
  4217                           ; BSR set to: 0
  4218                           
  4219                           ; BSR set to: 0
  4220                           
  4221                           ; BSR set to: 0
  4222  000D86  C0BA  F0B8         	movff	ADC_Read@value,?_ADC_Read
  4223  000D8A  C0BB  F0B9         	movff	ADC_Read@value+1,?_ADC_Read+1
  4224  000D8E  0012               	return	
  4225  000D90                     __end_of_ADC_Read:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           intcon	equ	0xFF2
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           postinc1	equ	0xFE6
  4235                           postdec1	equ	0xFE5
  4236                           plusw1	equ	0xFE3
  4237                           fsr1h	equ	0xFE2
  4238                           fsr1l	equ	0xFE1
  4239                           postinc2	equ	0xFDE
  4240                           postdec2	equ	0xFDD
  4241                           plusw2	equ	0xFDB
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _fetchPreset *****************
  4247 ;; Defined at:
  4248 ;;		line 238 in file "main.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  values         24   14[BANK0 ] int [12]
  4253 ;;  i               2   40[BANK0 ] int 
  4254 ;;  test            2   38[BANK0 ] int 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;Total ram usage:       28 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    6
  4271 ;; This function calls:
  4272 ;;		_I2C1_Block_Read_EERPOM
  4273 ;;		_updatePreset
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text20
  4280  0013EC                     __ptext20:
  4281                           	opt stack 0
  4282  0013EC                     _fetchPreset:
  4283                           	opt stack 24
  4284                           
  4285                           ;main.c: 240: int test = 0;
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;incstack = 0
  4289  0013EC  0E00               	movlw	0
  4290  0013EE  0100               	movlb	0	; () banked
  4291  0013F0  6FDF               	movwf	(fetchPreset@test+1)& (0+255),b
  4292  0013F2  0E00               	movlw	0
  4293  0013F4  6FDE               	movwf	fetchPreset@test& (0+255),b
  4294                           
  4295                           ;main.c: 241: int i = 0;
  4296  0013F6  0E00               	movlw	0
  4297  0013F8  0100               	movlb	0	; () banked
  4298  0013FA  6FE1               	movwf	(fetchPreset@i+1)& (0+255),b
  4299  0013FC  0E00               	movlw	0
  4300  0013FE  6FE0               	movwf	fetchPreset@i& (0+255),b
  4301                           
  4302                           ;main.c: 242: int values[12];
  4303                           ;main.c: 244: for (i = 0; i < 5; i++)
  4304  001400  0E00               	movlw	0
  4305  001402  0100               	movlb	0	; () banked
  4306  001404  6FE1               	movwf	(fetchPreset@i+1)& (0+255),b
  4307  001406  0E00               	movlw	0
  4308  001408  6FE0               	movwf	fetchPreset@i& (0+255),b
  4309  00140A                     l4193:
  4310                           
  4311                           ; BSR set to: 0
  4312  00140A  0100               	movlb	0	; () banked
  4313  00140C  BFE1               	btfsc	(fetchPreset@i+1)& (0+255),7,b
  4314  00140E  D008               	goto	l186
  4315  001410  0100               	movlb	0	; () banked
  4316  001412  51E1               	movf	(fetchPreset@i+1)& (0+255),w,b
  4317  001414  E12C               	bnz	l188
  4318  001416  0E05               	movlw	5
  4319  001418  0100               	movlb	0	; () banked
  4320  00141A  5DE0               	subwf	fetchPreset@i& (0+255),w,b
  4321  00141C  B0D8               	btfsc	status,0,c
  4322  00141E  0012               	return	
  4323  001420                     l186:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;main.c: 245: {
  4327                           ;main.c: 246: I2C1_Block_Read_EERPOM(i, values, 12);
  4328                           
  4329                           ; BSR set to: 0
  4330  001420  C0E0  F0B8         	movff	fetchPreset@i,I2C1_Block_Read_EERPOM@slot
  4331  001424  C0E1  F0B9         	movff	fetchPreset@i+1,I2C1_Block_Read_EERPOM@slot+1
  4332  001428  0EC6               	movlw	low fetchPreset@values
  4333  00142A  0100               	movlb	0	; () banked
  4334  00142C  6FBA               	movwf	I2C1_Block_Read_EERPOM@data& (0+255),b
  4335  00142E  0E00               	movlw	high fetchPreset@values
  4336  001430  0100               	movlb	0	; () banked
  4337  001432  6FBB               	movwf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),b
  4338  001434  0E00               	movlw	0
  4339  001436  0100               	movlb	0	; () banked
  4340  001438  6FBD               	movwf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),b
  4341  00143A  0E0C               	movlw	12
  4342  00143C  6FBC               	movwf	I2C1_Block_Read_EERPOM@bytes& (0+255),b
  4343  00143E  EC95  F005         	call	_I2C1_Block_Read_EERPOM	;wreg free
  4344                           
  4345                           ;main.c: 247: updatePreset(i+1, values);
  4346  001442  0E01               	movlw	1
  4347  001444  0100               	movlb	0	; () banked
  4348  001446  25E0               	addwf	fetchPreset@i& (0+255),w,b
  4349  001448  0100               	movlb	0	; () banked
  4350  00144A  6FBE               	movwf	updatePreset@slot& (0+255),b
  4351  00144C  0E00               	movlw	0
  4352  00144E  0100               	movlb	0	; () banked
  4353  001450  21E1               	addwfc	(fetchPreset@i+1)& (0+255),w,b
  4354  001452  0100               	movlb	0	; () banked
  4355  001454  6FBF               	movwf	(updatePreset@slot+1)& (0+255),b
  4356  001456  0EC6               	movlw	low fetchPreset@values
  4357  001458  0100               	movlb	0	; () banked
  4358  00145A  6FC0               	movwf	updatePreset@values& (0+255),b
  4359  00145C  0E00               	movlw	high fetchPreset@values
  4360  00145E  0100               	movlb	0	; () banked
  4361  001460  6FC1               	movwf	(updatePreset@values+1)& (0+255),b
  4362  001462  ECF3  F007         	call	_updatePreset	;wreg free
  4363  001466  0100               	movlb	0	; () banked
  4364  001468  4BE0               	infsnz	fetchPreset@i& (0+255),f,b
  4365  00146A  2BE1               	incf	(fetchPreset@i+1)& (0+255),f,b
  4366  00146C  D7CE               	goto	l4193
  4367  00146E                     l188:
  4368                           
  4369                           ; BSR set to: 0
  4370  00146E  0012               	return		;funcret
  4371  001470                     __end_of_fetchPreset:
  4372                           	opt stack 0
  4373                           tblptru	equ	0xFF8
  4374                           tblptrh	equ	0xFF7
  4375                           tblptrl	equ	0xFF6
  4376                           tablat	equ	0xFF5
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           postinc1	equ	0xFE6
  4381                           postdec1	equ	0xFE5
  4382                           plusw1	equ	0xFE3
  4383                           fsr1h	equ	0xFE2
  4384                           fsr1l	equ	0xFE1
  4385                           postinc2	equ	0xFDE
  4386                           postdec2	equ	0xFDD
  4387                           plusw2	equ	0xFDB
  4388                           fsr2h	equ	0xFDA
  4389                           fsr2l	equ	0xFD9
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _updatePreset *****************
  4393 ;; Defined at:
  4394 ;;		line 218 in file "main.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  slot            2    6[BANK0 ] int 
  4397 ;;  values          2    8[BANK0 ] PTR int 
  4398 ;;		 -> fetchPreset@values(24), parameter(24), 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  i               2   12[BANK0 ] int 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4410 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;Total ram usage:        8 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    5
  4417 ;; This function calls:
  4418 ;;		___wmul
  4419 ;; This function is called by:
  4420 ;;		_fetchPreset
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text21
  4426  000FE6                     __ptext21:
  4427                           	opt stack 0
  4428  000FE6                     _updatePreset:
  4429                           	opt stack 25
  4430                           
  4431                           ;main.c: 220: int i;
  4432                           ;main.c: 222: for (i = 0; i < 12; i++)
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;incstack = 0
  4436  000FE6  0E00               	movlw	0
  4437  000FE8  0100               	movlb	0	; () banked
  4438  000FEA  6FC5               	movwf	(updatePreset@i+1)& (0+255),b
  4439  000FEC  0E00               	movlw	0
  4440  000FEE  6FC4               	movwf	updatePreset@i& (0+255),b
  4441  000FF0                     l3909:
  4442                           
  4443                           ; BSR set to: 0
  4444  000FF0  0100               	movlb	0	; () banked
  4445  000FF2  BFC5               	btfsc	(updatePreset@i+1)& (0+255),7,b
  4446  000FF4  D008               	goto	l176
  4447  000FF6  0100               	movlb	0	; () banked
  4448  000FF8  51C5               	movf	(updatePreset@i+1)& (0+255),w,b
  4449  000FFA  E140               	bnz	l178
  4450  000FFC  0E0C               	movlw	12
  4451  000FFE  0100               	movlb	0	; () banked
  4452  001000  5DC4               	subwf	updatePreset@i& (0+255),w,b
  4453  001002  B0D8               	btfsc	status,0,c
  4454  001004  0012               	return	
  4455  001006                     l176:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;main.c: 223: {
  4459                           ;main.c: 224: userParams[slot][i] = values[i];
  4460                           
  4461                           ; BSR set to: 0
  4462  001006  90D8               	bcf	status,0,c
  4463  001008  0100               	movlb	0	; () banked
  4464  00100A  35C4               	rlcf	updatePreset@i& (0+255),w,b
  4465  00100C  6ED9               	movwf	fsr2l,c
  4466  00100E  0100               	movlb	0	; () banked
  4467  001010  35C5               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4468  001012  6EDA               	movwf	fsr2h,c
  4469  001014  0100               	movlb	0	; () banked
  4470  001016  51C0               	movf	updatePreset@values& (0+255),w,b
  4471  001018  26D9               	addwf	fsr2l,f,c
  4472  00101A  0100               	movlb	0	; () banked
  4473  00101C  51C1               	movf	(updatePreset@values+1)& (0+255),w,b
  4474  00101E  22DA               	addwfc	fsr2h,f,c
  4475  001020  C0BE  F0B8         	movff	updatePreset@slot,___wmul@multiplier
  4476  001024  C0BF  F0B9         	movff	updatePreset@slot+1,___wmul@multiplier+1
  4477  001028  0E00               	movlw	0
  4478  00102A  0100               	movlb	0	; () banked
  4479  00102C  6FBB               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4480  00102E  0E18               	movlw	24
  4481  001030  6FBA               	movwf	___wmul@multiplicand& (0+255),b
  4482  001032  ECD5  F00B         	call	___wmul	;wreg free
  4483  001036  0E00               	movlw	low _userParams
  4484  001038  0100               	movlb	0	; () banked
  4485  00103A  6FC2               	movwf	??_updatePreset& (0+255),b
  4486  00103C  0E01               	movlw	high _userParams
  4487  00103E  0100               	movlb	0	; () banked
  4488  001040  6FC3               	movwf	(??_updatePreset+1)& (0+255),b
  4489  001042  0100               	movlb	0	; () banked
  4490  001044  51B8               	movf	?___wmul& (0+255),w,b
  4491  001046  0100               	movlb	0	; () banked
  4492  001048  27C2               	addwf	??_updatePreset& (0+255),f,b
  4493  00104A  0100               	movlb	0	; () banked
  4494  00104C  51B9               	movf	(?___wmul+1)& (0+255),w,b
  4495  00104E  0100               	movlb	0	; () banked
  4496  001050  23C3               	addwfc	(??_updatePreset+1)& (0+255),f,b
  4497  001052  90D8               	bcf	status,0,c
  4498  001054  0100               	movlb	0	; () banked
  4499  001056  35C4               	rlcf	updatePreset@i& (0+255),w,b
  4500  001058  6EE1               	movwf	fsr1l,c
  4501  00105A  0100               	movlb	0	; () banked
  4502  00105C  35C5               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4503  00105E  6EE2               	movwf	fsr1h,c
  4504  001060  0100               	movlb	0	; () banked
  4505  001062  51C2               	movf	??_updatePreset& (0+255),w,b
  4506  001064  26E1               	addwf	fsr1l,f,c
  4507  001066  0100               	movlb	0	; () banked
  4508  001068  51C3               	movf	(??_updatePreset+1)& (0+255),w,b
  4509  00106A  22E2               	addwfc	fsr1h,f,c
  4510  00106C  CFDE FFE6          	movff	postinc2,postinc1
  4511  001070  CFDD FFE5          	movff	postdec2,postdec1
  4512                           
  4513                           ; BSR set to: 0
  4514  001074  0100               	movlb	0	; () banked
  4515  001076  4BC4               	infsnz	updatePreset@i& (0+255),f,b
  4516  001078  2BC5               	incf	(updatePreset@i+1)& (0+255),f,b
  4517  00107A  D7BA               	goto	l3909
  4518  00107C                     l178:
  4519                           
  4520                           ; BSR set to: 0
  4521  00107C  0012               	return		;funcret
  4522  00107E                     __end_of_updatePreset:
  4523                           	opt stack 0
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           intcon	equ	0xFF2
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           postinc1	equ	0xFE6
  4532                           postdec1	equ	0xFE5
  4533                           plusw1	equ	0xFE3
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           postinc2	equ	0xFDE
  4537                           postdec2	equ	0xFDD
  4538                           plusw2	equ	0xFDB
  4539                           fsr2h	equ	0xFDA
  4540                           fsr2l	equ	0xFD9
  4541                           status	equ	0xFD8
  4542                           
  4543 ;; *************** function ___wmul *****************
  4544 ;; Defined at:
  4545 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4548 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  product         2    4[BANK0 ] unsigned int 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  2    0[BANK0 ] unsigned int 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, prodl, prodh
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;Total ram usage:        6 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    4
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_updatePreset
  4571 ;;		_updateParams
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text22
  4576  0017AA                     __ptext22:
  4577                           	opt stack 0
  4578  0017AA                     ___wmul:
  4579                           	opt stack 25
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;incstack = 0
  4583  0017AA  0100               	movlb	0	; () banked
  4584  0017AC  51B8               	movf	___wmul@multiplier& (0+255),w,b
  4585  0017AE  0100               	movlb	0	; () banked
  4586  0017B0  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  4587  0017B2  CFF3 F0BC          	movff	prodl,___wmul@product
  4588  0017B6  CFF4 F0BD          	movff	prodh,___wmul@product+1
  4589  0017BA  0100               	movlb	0	; () banked
  4590  0017BC  51B8               	movf	___wmul@multiplier& (0+255),w,b
  4591  0017BE  0100               	movlb	0	; () banked
  4592  0017C0  03BB               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4593  0017C2  50F3               	movf	prodl,w,c
  4594  0017C4  0100               	movlb	0	; () banked
  4595  0017C6  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  4596  0017C8  0100               	movlb	0	; () banked
  4597  0017CA  51B9               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4598  0017CC  0100               	movlb	0	; () banked
  4599  0017CE  03BA               	mulwf	___wmul@multiplicand& (0+255),b
  4600  0017D0  50F3               	movf	prodl,w,c
  4601  0017D2  0100               	movlb	0	; () banked
  4602  0017D4  27BD               	addwf	(___wmul@product+1)& (0+255),f,b
  4603                           
  4604                           ; BSR set to: 0
  4605  0017D6  C0BC  F0B8         	movff	___wmul@product,?___wmul
  4606  0017DA  C0BD  F0B9         	movff	___wmul@product+1,?___wmul+1
  4607  0017DE  0012               	return	
  4608  0017E0                     __end_of___wmul:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           prodh	equ	0xFF4
  4615                           prodl	equ	0xFF3
  4616                           intcon	equ	0xFF2
  4617                           postinc0	equ	0xFEE
  4618                           wreg	equ	0xFE8
  4619                           postinc1	equ	0xFE6
  4620                           postdec1	equ	0xFE5
  4621                           plusw1	equ	0xFE3
  4622                           fsr1h	equ	0xFE2
  4623                           fsr1l	equ	0xFE1
  4624                           postinc2	equ	0xFDE
  4625                           postdec2	equ	0xFDD
  4626                           plusw2	equ	0xFDB
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _I2C1_Block_Read_EERPOM *****************
  4632 ;; Defined at:
  4633 ;;		line 102 in file "serial.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  slot            2    0[BANK0 ] int 
  4636 ;;  data            2    2[BANK0 ] PTR PTR int 
  4637 ;;		 -> fetchPreset@values(24), 
  4638 ;;  bytes           2    4[BANK0 ] int 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  n               2   11[BANK0 ] int 
  4641 ;;  dummyWrite      1   10[BANK0 ] unsigned char 
  4642 ;;  memValue        1    9[BANK0 ] unsigned char 
  4643 ;;  rdAddr          1    8[BANK0 ] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4653 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;Total ram usage:       13 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    4
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_fetchPreset
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text23
  4668  000B2A                     __ptext23:
  4669                           	opt stack 0
  4670  000B2A                     _I2C1_Block_Read_EERPOM:
  4671                           	opt stack 25
  4672                           
  4673                           ;serial.c: 104: char dummyWrite = 0b10100000;
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;incstack = 0
  4677  000B2A  0EA0               	movlw	160
  4678  000B2C  0100               	movlb	0	; () banked
  4679  000B2E  6FC2               	movwf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),b
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;serial.c: 105: char rdAddr = (dummyWrite|0x01);
  4683  000B30  0100               	movlb	0	; () banked
  4684  000B32  51C2               	movf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),w,b
  4685  000B34  0901               	iorlw	1
  4686  000B36  0100               	movlb	0	; () banked
  4687  000B38  6FC0               	movwf	I2C1_Block_Read_EERPOM@rdAddr& (0+255),b
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;serial.c: 106: char memValue = presetAdd[slot];
  4691  000B3A  90D8               	bcf	status,0,c
  4692  000B3C  0100               	movlb	0	; () banked
  4693  000B3E  35B8               	rlcf	I2C1_Block_Read_EERPOM@slot& (0+255),w,b
  4694  000B40  6ED9               	movwf	fsr2l,c
  4695  000B42  0100               	movlb	0	; () banked
  4696  000B44  35B9               	rlcf	(I2C1_Block_Read_EERPOM@slot+1)& (0+255),w,b
  4697  000B46  6EDA               	movwf	fsr2h,c
  4698  000B48  0EE5               	movlw	low _presetAdd
  4699  000B4A  26D9               	addwf	fsr2l,f,c
  4700  000B4C  0E00               	movlw	high _presetAdd
  4701  000B4E  22DA               	addwfc	fsr2h,f,c
  4702  000B50  50DF               	movf	indf2,w,c
  4703  000B52  0100               	movlb	0	; () banked
  4704  000B54  6FC1               	movwf	I2C1_Block_Read_EERPOM@memValue& (0+255),b
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;serial.c: 107: int n = 0;
  4708  000B56  0E00               	movlw	0
  4709  000B58  0100               	movlb	0	; () banked
  4710  000B5A  6FC4               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4711  000B5C  0E00               	movlw	0
  4712  000B5E  6FC3               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;serial.c: 109: SSP1CON1bits.SSPEN = 0x1;
  4716  000B60  8AC6               	bsf	4038,5,c	;volatile
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;serial.c: 110: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4720  000B62  0E0D               	movlw	13
  4721  000B64                     u4797:
  4722  000B64  2EE8               	decfsz	wreg,f,c
  4723  000B66  D7FE               	bra	u4797
  4724  000B68  F000               	nop	
  4725                           
  4726                           ;serial.c: 112: SSP1CON2bits.SEN = 0x1;
  4727  000B6A  80C5               	bsf	4037,0,c	;volatile
  4728  000B6C  B0C5               	btfsc	4037,0,c	;volatile
  4729  000B6E  D7FE               	goto	l1147
  4730  000B70                     u4040:
  4731                           
  4732                           ;serial.c: 114: while(!PIR1bits.SSP1IF);
  4733  000B70  A69E               	btfss	3998,3,c	;volatile
  4734  000B72  D7FE               	goto	u4040
  4735                           
  4736                           ;serial.c: 115: PIR1bits.SSP1IF = 0x0;
  4737  000B74  969E               	bcf	3998,3,c	;volatile
  4738                           
  4739                           ;serial.c: 116: SSP1BUF = dummyWrite;
  4740  000B76  C0C2  FFC9         	movff	I2C1_Block_Read_EERPOM@dummyWrite,4041	;volatile
  4741                           
  4742                           ;serial.c: 118: if(SSP1CON2bits.ACKSTAT);
  4743  000B7A  50C5               	movf	4037,w,c	;volatile
  4744  000B7C                     
  4745                           ;serial.c: 119: while(!PIR1bits.SSP1IF);
  4746  000B7C  A69E               	btfss	3998,3,c	;volatile
  4747  000B7E  D7FE               	goto	l1152
  4748                           
  4749                           ;serial.c: 120: PIR1bits.SSP1IF = 0x0;
  4750  000B80  969E               	bcf	3998,3,c	;volatile
  4751                           
  4752                           ;serial.c: 121: SSP1BUF = memValue;
  4753  000B82  C0C1  FFC9         	movff	I2C1_Block_Read_EERPOM@memValue,4041	;volatile
  4754  000B86  BCC5               	btfsc	4037,6,c	;volatile
  4755  000B88  D7FE               	goto	l1157
  4756  000B8A                     u4070:
  4757                           
  4758                           ;serial.c: 124: while(!PIR1bits.SSP1IF);
  4759  000B8A  A69E               	btfss	3998,3,c	;volatile
  4760  000B8C  D7FE               	goto	u4070
  4761                           
  4762                           ;serial.c: 125: PIR1bits.SSP1IF = 0x0;
  4763  000B8E  969E               	bcf	3998,3,c	;volatile
  4764                           
  4765                           ;serial.c: 126: SSP1CON2bits.RSEN = 0x1;
  4766  000B90  82C5               	bsf	4037,1,c	;volatile
  4767  000B92  B2C5               	btfsc	4037,1,c	;volatile
  4768  000B94  D7FE               	goto	l1163
  4769  000B96                     u4090:
  4770                           
  4771                           ;serial.c: 129: while(!PIR1bits.SSP1IF);
  4772  000B96  A69E               	btfss	3998,3,c	;volatile
  4773  000B98  D7FE               	goto	u4090
  4774                           
  4775                           ;serial.c: 130: PIR1bits.SSP1IF = 0x0;
  4776  000B9A  969E               	bcf	3998,3,c	;volatile
  4777                           
  4778                           ;serial.c: 131: SSP1BUF = rdAddr;
  4779  000B9C  C0C0  FFC9         	movff	I2C1_Block_Read_EERPOM@rdAddr,4041	;volatile
  4780  000BA0  BCC5               	btfsc	4037,6,c	;volatile
  4781  000BA2  D7FE               	goto	l1169
  4782  000BA4                     u4110:
  4783                           
  4784                           ;serial.c: 134: while(!PIR1bits.SSP1IF);
  4785  000BA4  A69E               	btfss	3998,3,c	;volatile
  4786  000BA6  D7FE               	goto	u4110
  4787                           
  4788                           ;serial.c: 135: PIR1bits.SSP1IF = 0x0;
  4789  000BA8  969E               	bcf	3998,3,c	;volatile
  4790                           
  4791                           ;serial.c: 137: SSP1CON2bits.RCEN = 0x1;
  4792  000BAA  86C5               	bsf	4037,3,c	;volatile
  4793  000BAC  A0C7               	btfss	4039,0,c	;volatile
  4794  000BAE  D7FE               	goto	l1175
  4795  000BB0                     u4130:
  4796                           
  4797                           ;serial.c: 140: while (!PIR1bits.SSP1IF);
  4798  000BB0  A69E               	btfss	3998,3,c	;volatile
  4799  000BB2  D7FE               	goto	u4130
  4800                           
  4801                           ;serial.c: 141: data[n] = SSP1BUF;
  4802  000BB4  50C9               	movf	4041,w,c	;volatile
  4803  000BB6  0100               	movlb	0	; () banked
  4804  000BB8  6FBE               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4805  000BBA  6BBF               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4806  000BBC  90D8               	bcf	status,0,c
  4807  000BBE  0100               	movlb	0	; () banked
  4808  000BC0  35C3               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4809  000BC2  6ED9               	movwf	fsr2l,c
  4810  000BC4  0100               	movlb	0	; () banked
  4811  000BC6  35C4               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4812  000BC8  6EDA               	movwf	fsr2h,c
  4813  000BCA  0100               	movlb	0	; () banked
  4814  000BCC  51BA               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4815  000BCE  26D9               	addwf	fsr2l,f,c
  4816  000BD0  0100               	movlb	0	; () banked
  4817  000BD2  51BB               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4818  000BD4  22DA               	addwfc	fsr2h,f,c
  4819  000BD6  C0BE  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4820  000BDA  C0BF  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;serial.c: 143: for (n = 1; n < bytes; n++)
  4824  000BDE  0E00               	movlw	0
  4825  000BE0  0100               	movlb	0	; () banked
  4826  000BE2  6FC4               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4827  000BE4  0E01               	movlw	1
  4828  000BE6  6FC3               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4829  000BE8  D022               	goto	l1180
  4830  000BEA                     l1181:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;serial.c: 144: {
  4834                           ;serial.c: 145: SSP1CON2bits.ACKDT = 0x0;
  4835  000BEA  9AC5               	bcf	4037,5,c	;volatile
  4836                           
  4837                           ;serial.c: 146: SSP1CON2bits.ACKEN = 0x1;
  4838  000BEC  88C5               	bsf	4037,4,c	;volatile
  4839  000BEE                     
  4840                           ; BSR set to: 0
  4841  000BEE  B8C5               	btfsc	4037,4,c	;volatile
  4842  000BF0  D7FE               	goto	l1183
  4843                           
  4844                           ;serial.c: 148: PIR1bits.SSP1IF = 0x0;
  4845  000BF2  969E               	bcf	3998,3,c	;volatile
  4846                           
  4847                           ;serial.c: 149: SSP1CON2bits.RCEN = 0x1;
  4848  000BF4  86C5               	bsf	4037,3,c	;volatile
  4849  000BF6  A0C7               	btfss	4039,0,c	;volatile
  4850  000BF8  D7FE               	goto	l1186
  4851  000BFA                     u4160:
  4852                           
  4853                           ;serial.c: 152: while (!PIR1bits.SSP1IF);
  4854  000BFA  A69E               	btfss	3998,3,c	;volatile
  4855  000BFC  D7FE               	goto	u4160
  4856                           
  4857                           ;serial.c: 153: data[n] = SSP1BUF;
  4858  000BFE  50C9               	movf	4041,w,c	;volatile
  4859  000C00  0100               	movlb	0	; () banked
  4860  000C02  6FBE               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4861  000C04  6BBF               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4862  000C06  90D8               	bcf	status,0,c
  4863  000C08  0100               	movlb	0	; () banked
  4864  000C0A  35C3               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4865  000C0C  6ED9               	movwf	fsr2l,c
  4866  000C0E  0100               	movlb	0	; () banked
  4867  000C10  35C4               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4868  000C12  6EDA               	movwf	fsr2h,c
  4869  000C14  0100               	movlb	0	; () banked
  4870  000C16  51BA               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4871  000C18  26D9               	addwf	fsr2l,f,c
  4872  000C1A  0100               	movlb	0	; () banked
  4873  000C1C  51BB               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4874  000C1E  22DA               	addwfc	fsr2h,f,c
  4875  000C20  C0BE  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4876  000C24  C0BF  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4877                           
  4878                           ; BSR set to: 0
  4879  000C28  0100               	movlb	0	; () banked
  4880  000C2A  4BC3               	infsnz	I2C1_Block_Read_EERPOM@n& (0+255),f,b
  4881  000C2C  2BC4               	incf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),f,b
  4882  000C2E                     l1180:
  4883                           
  4884                           ; BSR set to: 0
  4885                           
  4886                           ; BSR set to: 0
  4887  000C2E  0100               	movlb	0	; () banked
  4888  000C30  51BC               	movf	I2C1_Block_Read_EERPOM@bytes& (0+255),w,b
  4889  000C32  0100               	movlb	0	; () banked
  4890  000C34  5DC3               	subwf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4891  000C36  0100               	movlb	0	; () banked
  4892  000C38  51C4               	movf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4893  000C3A  0A80               	xorlw	128
  4894  000C3C  0100               	movlb	0	; () banked
  4895  000C3E  6FBE               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4896  000C40  0100               	movlb	0	; () banked
  4897  000C42  51BD               	movf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),w,b
  4898  000C44  0A80               	xorlw	128
  4899  000C46  0100               	movlb	0	; () banked
  4900  000C48  59BE               	subwfb	??_I2C1_Block_Read_EERPOM& (0+255),w,b
  4901  000C4A  A0D8               	btfss	status,0,c
  4902  000C4C  D7CE               	goto	l1181
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;serial.c: 154: }
  4906                           ;serial.c: 156: SSP1CON2bits.ACKDT = 0x1;
  4907  000C4E  8AC5               	bsf	4037,5,c	;volatile
  4908                           
  4909                           ;serial.c: 157: SSP1CON2bits.ACKEN = 0x1;
  4910  000C50  88C5               	bsf	4037,4,c	;volatile
  4911  000C52                     
  4912                           ; BSR set to: 0
  4913  000C52  B8C5               	btfsc	4037,4,c	;volatile
  4914  000C54  D7FE               	goto	l1193
  4915                           
  4916                           ;serial.c: 160: PIR1bits.SSP1IF = 0x0;
  4917  000C56  969E               	bcf	3998,3,c	;volatile
  4918                           
  4919                           ;serial.c: 161: SSP1CON2bits.PEN = 0x1;
  4920  000C58  84C5               	bsf	4037,2,c	;volatile
  4921  000C5A  B4C5               	btfsc	4037,2,c	;volatile
  4922  000C5C  D7FE               	goto	l1196
  4923                           
  4924                           ;serial.c: 165: PIR1bits.SSP1IF = 0x0;
  4925  000C5E  969E               	bcf	3998,3,c	;volatile
  4926                           
  4927                           ;serial.c: 166: SSP1CON1bits.SSPEN = 0x1;
  4928  000C60  8AC6               	bsf	4038,5,c	;volatile
  4929  000C62  0012               	return		;funcret
  4930  000C64                     __end_of_I2C1_Block_Read_EERPOM:
  4931                           	opt stack 0
  4932                           tblptru	equ	0xFF8
  4933                           tblptrh	equ	0xFF7
  4934                           tblptrl	equ	0xFF6
  4935                           tablat	equ	0xFF5
  4936                           prodh	equ	0xFF4
  4937                           prodl	equ	0xFF3
  4938                           intcon	equ	0xFF2
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postinc1	equ	0xFE6
  4942                           postdec1	equ	0xFE5
  4943                           plusw1	equ	0xFE3
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           indf2	equ	0xFDF
  4947                           postinc2	equ	0xFDE
  4948                           postdec2	equ	0xFDD
  4949                           plusw2	equ	0xFDB
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function _absVal *****************
  4955 ;; Defined at:
  4956 ;;		line 175 in file "main.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  val             2    0[BANK0 ] int 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  2    0[BANK0 ] int 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4970 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4972 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4973 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    4
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_main
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text24
  4985  001810                     __ptext24:
  4986                           	opt stack 0
  4987  001810                     _absVal:
  4988                           	opt stack 26
  4989                           
  4990                           ;main.c: 177: if (val < 0)
  4991                           
  4992                           ;incstack = 0
  4993  001810  0100               	movlb	0	; () banked
  4994  001812  AFB9               	btfss	(absVal@val+1)& (0+255),7,b
  4995  001814  D00E               	goto	l168
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;main.c: 178: return -val;
  4999  001816  C0B8  F0BA         	movff	absVal@val,??_absVal
  5000  00181A  C0B9  F0BB         	movff	absVal@val+1,??_absVal+1
  5001  00181E  0100               	movlb	0	; () banked
  5002  001820  1FBA               	comf	??_absVal& (0+255),f,b
  5003  001822  1FBB               	comf	(??_absVal+1)& (0+255),f,b
  5004  001824  4BBA               	infsnz	??_absVal& (0+255),f,b
  5005  001826  2BBB               	incf	(??_absVal+1)& (0+255),f,b
  5006  001828  C0BA  F0B8         	movff	??_absVal,?_absVal
  5007  00182C  C0BB  F0B9         	movff	??_absVal+1,?_absVal+1
  5008                           
  5009                           ; BSR set to: 0
  5010  001830  0012               	return	
  5011  001832                     l168:
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;main.c: 179: else return val;
  5015  001832  C0B8  F0B8         	movff	absVal@val,?_absVal
  5016  001836  C0B9  F0B9         	movff	absVal@val+1,?_absVal+1
  5017  00183A  0012               	return	
  5018  00183C                     __end_of_absVal:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           prodh	equ	0xFF4
  5025                           prodl	equ	0xFF3
  5026                           intcon	equ	0xFF2
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postinc1	equ	0xFE6
  5030                           postdec1	equ	0xFE5
  5031                           plusw1	equ	0xFE3
  5032                           fsr1h	equ	0xFE2
  5033                           fsr1l	equ	0xFE1
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           plusw2	equ	0xFDB
  5038                           fsr2h	equ	0xFDA
  5039                           fsr2l	equ	0xFD9
  5040                           status	equ	0xFD8
  5041                           
  5042 ;; *************** function _I2C1_Write_DigiPot *****************
  5043 ;; Defined at:
  5044 ;;		line 235 in file "serial.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  value           1    wreg     unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  value           1    0[BANK0 ] unsigned char 
  5049 ;;  wrCommand       1    1[BANK0 ] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  1    wreg      void 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;Total ram usage:        2 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    4
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_main
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text25
  5074  001768                     __ptext25:
  5075                           	opt stack 0
  5076  001768                     _I2C1_Write_DigiPot:
  5077                           	opt stack 26
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;incstack = 0
  5081                           ;I2C1_Write_DigiPot@value stored from wreg
  5082  001768  0100               	movlb	0	; () banked
  5083  00176A  6FB8               	movwf	I2C1_Write_DigiPot@value& (0+255),b
  5084                           
  5085                           ;serial.c: 237: char wrCommand = (0b00101111 << 1);
  5086  00176C  0E5E               	movlw	94
  5087  00176E  0100               	movlb	0	; () banked
  5088  001770  6FB9               	movwf	I2C1_Write_DigiPot@wrCommand& (0+255),b
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;serial.c: 239: SSP1CON1bits.SSPEN = 0x1;
  5092  001772  8AC6               	bsf	4038,5,c	;volatile
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;serial.c: 240: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5096  001774  0E0D               	movlw	13
  5097  001776                     u4807:
  5098  001776  2EE8               	decfsz	wreg,f,c
  5099  001778  D7FE               	bra	u4807
  5100  00177A  F000               	nop	
  5101                           
  5102                           ;serial.c: 242: SSP1CON2bits.SEN = 0x1;
  5103  00177C  80C5               	bsf	4037,0,c	;volatile
  5104  00177E  B0C5               	btfsc	4037,0,c	;volatile
  5105  001780  D7FE               	goto	l1248
  5106                           
  5107                           ;serial.c: 244: PIR1bits.SSP1IF = 0x0;
  5108  001782  969E               	bcf	3998,3,c	;volatile
  5109                           
  5110                           ;serial.c: 245: SSP1BUF = wrCommand;
  5111  001784  C0B9  FFC9         	movff	I2C1_Write_DigiPot@wrCommand,4041	;volatile
  5112  001788  BCC5               	btfsc	4037,6,c	;volatile
  5113  00178A  D7FE               	goto	l1251
  5114  00178C                     u4350:
  5115                           
  5116                           ;serial.c: 248: while(!PIR1bits.SSP1IF);
  5117  00178C  A69E               	btfss	3998,3,c	;volatile
  5118  00178E  D7FE               	goto	u4350
  5119                           
  5120                           ;serial.c: 249: PIR1bits.SSP1IF = 0x0;
  5121  001790  969E               	bcf	3998,3,c	;volatile
  5122                           
  5123                           ;serial.c: 250: SSP1BUF = value;
  5124  001792  C0B8  FFC9         	movff	I2C1_Write_DigiPot@value,4041	;volatile
  5125  001796  BCC5               	btfsc	4037,6,c	;volatile
  5126  001798  D7FE               	goto	l1257
  5127  00179A                     u4370:
  5128                           
  5129                           ;serial.c: 253: while(!PIR1bits.SSP1IF);
  5130  00179A  A69E               	btfss	3998,3,c	;volatile
  5131  00179C  D7FE               	goto	u4370
  5132                           
  5133                           ;serial.c: 254: SSP1CON2bits.PEN = 0x1;
  5134  00179E  84C5               	bsf	4037,2,c	;volatile
  5135  0017A0  B4C5               	btfsc	4037,2,c	;volatile
  5136  0017A2  D7FE               	goto	l1263
  5137                           
  5138                           ;serial.c: 257: PIR1bits.SSP1IF = 0x0;
  5139  0017A4  969E               	bcf	3998,3,c	;volatile
  5140                           
  5141                           ;serial.c: 258: SSP1CON1bits.SSPEN = 0x1;
  5142  0017A6  8AC6               	bsf	4038,5,c	;volatile
  5143  0017A8  0012               	return		;funcret
  5144  0017AA                     __end_of_I2C1_Write_DigiPot:
  5145                           	opt stack 0
  5146                           tblptru	equ	0xFF8
  5147                           tblptrh	equ	0xFF7
  5148                           tblptrl	equ	0xFF6
  5149                           tablat	equ	0xFF5
  5150                           prodh	equ	0xFF4
  5151                           prodl	equ	0xFF3
  5152                           intcon	equ	0xFF2
  5153                           postinc0	equ	0xFEE
  5154                           wreg	equ	0xFE8
  5155                           postinc1	equ	0xFE6
  5156                           postdec1	equ	0xFE5
  5157                           plusw1	equ	0xFE3
  5158                           fsr1h	equ	0xFE2
  5159                           fsr1l	equ	0xFE1
  5160                           indf2	equ	0xFDF
  5161                           postinc2	equ	0xFDE
  5162                           postdec2	equ	0xFDD
  5163                           plusw2	equ	0xFDB
  5164                           fsr2h	equ	0xFDA
  5165                           fsr2l	equ	0xFD9
  5166                           status	equ	0xFD8
  5167                           
  5168 ;; *************** function _I2C1_Page_Write_EEPROM *****************
  5169 ;; Defined at:
  5170 ;;		line 66 in file "serial.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  slot            2    0[BANK0 ] int 
  5173 ;;  data            2    2[BANK0 ] PTR PTR int 
  5174 ;;		 -> parameter(24), 
  5175 ;;  bytes           2    4[BANK0 ] int 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  n               2    9[BANK0 ] int 
  5178 ;;  memValue        1    8[BANK0 ] unsigned char 
  5179 ;;  wrDevAddr       1    7[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5189 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5190 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;Total ram usage:       11 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    4
  5196 ;; This function calls:
  5197 ;;		Nothing
  5198 ;; This function is called by:
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text26
  5204  000E8A                     __ptext26:
  5205                           	opt stack 0
  5206  000E8A                     _I2C1_Page_Write_EEPROM:
  5207                           	opt stack 26
  5208                           
  5209                           ;serial.c: 68: char wrDevAddr = 0b10100000;
  5210                           
  5211                           ;incstack = 0
  5212  000E8A  0EA0               	movlw	160
  5213  000E8C  0100               	movlb	0	; () banked
  5214  000E8E  6FBF               	movwf	I2C1_Page_Write_EEPROM@wrDevAddr& (0+255),b
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;serial.c: 69: char memValue = presetAdd[slot];
  5218  000E90  90D8               	bcf	status,0,c
  5219  000E92  0100               	movlb	0	; () banked
  5220  000E94  35B8               	rlcf	I2C1_Page_Write_EEPROM@slot& (0+255),w,b
  5221  000E96  6ED9               	movwf	fsr2l,c
  5222  000E98  0100               	movlb	0	; () banked
  5223  000E9A  35B9               	rlcf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),w,b
  5224  000E9C  6EDA               	movwf	fsr2h,c
  5225  000E9E  0EE5               	movlw	low _presetAdd
  5226  000EA0  26D9               	addwf	fsr2l,f,c
  5227  000EA2  0E00               	movlw	high _presetAdd
  5228  000EA4  22DA               	addwfc	fsr2h,f,c
  5229  000EA6  50DF               	movf	indf2,w,c
  5230  000EA8  0100               	movlb	0	; () banked
  5231  000EAA  6FC0               	movwf	I2C1_Page_Write_EEPROM@memValue& (0+255),b
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;serial.c: 70: int n = 0;
  5235  000EAC  0E00               	movlw	0
  5236  000EAE  0100               	movlb	0	; () banked
  5237  000EB0  6FC2               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5238  000EB2  0E00               	movlw	0
  5239  000EB4  6FC1               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;serial.c: 72: SSP1CON1bits.SSPEN = 0x1;
  5243  000EB6  8AC6               	bsf	4038,5,c	;volatile
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;serial.c: 73: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5247  000EB8  0E0D               	movlw	13
  5248  000EBA                     u4817:
  5249  000EBA  2EE8               	decfsz	wreg,f,c
  5250  000EBC  D7FE               	bra	u4817
  5251  000EBE  F000               	nop	
  5252                           
  5253                           ;serial.c: 75: SSP1CON2bits.SEN = 0x1;
  5254  000EC0  80C5               	bsf	4037,0,c	;volatile
  5255  000EC2  B0C5               	btfsc	4037,0,c	;volatile
  5256  000EC4  D7FE               	goto	l1117
  5257                           
  5258                           ;serial.c: 77: PIR1bits.SSP1IF = 0x0;
  5259  000EC6  969E               	bcf	3998,3,c	;volatile
  5260                           
  5261                           ;serial.c: 78: SSP1BUF = wrDevAddr;
  5262  000EC8  C0BF  FFC9         	movff	I2C1_Page_Write_EEPROM@wrDevAddr,4041	;volatile
  5263  000ECC  BCC5               	btfsc	4037,6,c	;volatile
  5264  000ECE  D7FE               	goto	l1120
  5265  000ED0                     u4410:
  5266                           
  5267                           ;serial.c: 81: while(!PIR1bits.SSP1IF);
  5268  000ED0  A69E               	btfss	3998,3,c	;volatile
  5269  000ED2  D7FE               	goto	u4410
  5270                           
  5271                           ;serial.c: 82: PIR1bits.SSP1IF = 0x0;
  5272  000ED4  969E               	bcf	3998,3,c	;volatile
  5273                           
  5274                           ;serial.c: 83: SSP1BUF = memValue;
  5275  000ED6  C0C0  FFC9         	movff	I2C1_Page_Write_EEPROM@memValue,4041	;volatile
  5276                           
  5277                           ;serial.c: 85: for (n = 0; n < bytes; n++)
  5278  000EDA  0E00               	movlw	0
  5279  000EDC  0100               	movlb	0	; () banked
  5280  000EDE  6FC2               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5281  000EE0  0E00               	movlw	0
  5282  000EE2  6FC1               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5283  000EE4  D017               	goto	l1125
  5284  000EE6                     
  5285                           ; BSR set to: 0
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;serial.c: 86: {
  5289                           ;serial.c: 87: while (SSP1CON2bits.ACKSTAT);
  5290  000EE6  BCC5               	btfsc	4037,6,c	;volatile
  5291  000EE8  D7FE               	goto	l1126
  5292  000EEA                     u4430:
  5293                           
  5294                           ;serial.c: 88: while(!PIR1bits.SSP1IF);
  5295  000EEA  A69E               	btfss	3998,3,c	;volatile
  5296  000EEC  D7FE               	goto	u4430
  5297                           
  5298                           ;serial.c: 89: PIR1bits.SSP1IF = 0x0;
  5299  000EEE  969E               	bcf	3998,3,c	;volatile
  5300                           
  5301                           ;serial.c: 90: SSP1BUF = data[n];
  5302  000EF0  90D8               	bcf	status,0,c
  5303  000EF2  0100               	movlb	0	; () banked
  5304  000EF4  35C1               	rlcf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5305  000EF6  6ED9               	movwf	fsr2l,c
  5306  000EF8  0100               	movlb	0	; () banked
  5307  000EFA  35C2               	rlcf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5308  000EFC  6EDA               	movwf	fsr2h,c
  5309  000EFE  0100               	movlb	0	; () banked
  5310  000F00  51BA               	movf	I2C1_Page_Write_EEPROM@data& (0+255),w,b
  5311  000F02  26D9               	addwf	fsr2l,f,c
  5312  000F04  0100               	movlb	0	; () banked
  5313  000F06  51BB               	movf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),w,b
  5314  000F08  22DA               	addwfc	fsr2h,f,c
  5315  000F0A  50DF               	movf	indf2,w,c
  5316  000F0C  6EC9               	movwf	4041,c	;volatile
  5317                           
  5318                           ; BSR set to: 0
  5319  000F0E  0100               	movlb	0	; () banked
  5320  000F10  4BC1               	infsnz	I2C1_Page_Write_EEPROM@n& (0+255),f,b
  5321  000F12  2BC2               	incf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),f,b
  5322  000F14                     l1125:
  5323                           
  5324                           ; BSR set to: 0
  5325                           
  5326                           ; BSR set to: 0
  5327  000F14  0100               	movlb	0	; () banked
  5328  000F16  51BC               	movf	I2C1_Page_Write_EEPROM@bytes& (0+255),w,b
  5329  000F18  0100               	movlb	0	; () banked
  5330  000F1A  5DC1               	subwf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5331  000F1C  0100               	movlb	0	; () banked
  5332  000F1E  51C2               	movf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5333  000F20  0A80               	xorlw	128
  5334  000F22  0100               	movlb	0	; () banked
  5335  000F24  6FBE               	movwf	??_I2C1_Page_Write_EEPROM& (0+255),b
  5336  000F26  0100               	movlb	0	; () banked
  5337  000F28  51BD               	movf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),w,b
  5338  000F2A  0A80               	xorlw	128
  5339  000F2C  0100               	movlb	0	; () banked
  5340  000F2E  59BE               	subwfb	??_I2C1_Page_Write_EEPROM& (0+255),w,b
  5341  000F30  A0D8               	btfss	status,0,c
  5342  000F32  D7D9               	goto	l1126
  5343  000F34                     u4450:
  5344                           
  5345                           ; BSR set to: 0
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;serial.c: 91: }
  5349                           ;serial.c: 93: while (SSP1CON2bits.ACKSTAT);
  5350  000F34  BCC5               	btfsc	4037,6,c	;volatile
  5351  000F36  D7FE               	goto	u4450
  5352  000F38                     u4460:
  5353                           
  5354                           ;serial.c: 94: while(!PIR1bits.SSP1IF);
  5355  000F38  A69E               	btfss	3998,3,c	;volatile
  5356  000F3A  D7FE               	goto	u4460
  5357                           
  5358                           ;serial.c: 95: SSP1CON2bits.PEN = 0x1;
  5359  000F3C  84C5               	bsf	4037,2,c	;volatile
  5360  000F3E  B4C5               	btfsc	4037,2,c	;volatile
  5361  000F40  D7FE               	goto	l1141
  5362                           
  5363                           ;serial.c: 98: PIR1bits.SSP1IF = 0x0;
  5364  000F42  969E               	bcf	3998,3,c	;volatile
  5365                           
  5366                           ;serial.c: 99: SSP1CON1bits.SSPEN = 0x1;
  5367  000F44  8AC6               	bsf	4038,5,c	;volatile
  5368  000F46  0012               	return		;funcret
  5369  000F48                     __end_of_I2C1_Page_Write_EEPROM:
  5370                           	opt stack 0
  5371                           tblptru	equ	0xFF8
  5372                           tblptrh	equ	0xFF7
  5373                           tblptrl	equ	0xFF6
  5374                           tablat	equ	0xFF5
  5375                           prodh	equ	0xFF4
  5376                           prodl	equ	0xFF3
  5377                           intcon	equ	0xFF2
  5378                           postinc0	equ	0xFEE
  5379                           wreg	equ	0xFE8
  5380                           postinc1	equ	0xFE6
  5381                           postdec1	equ	0xFE5
  5382                           plusw1	equ	0xFE3
  5383                           fsr1h	equ	0xFE2
  5384                           fsr1l	equ	0xFE1
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           plusw2	equ	0xFDB
  5389                           fsr2h	equ	0xFDA
  5390                           fsr2l	equ	0xFD9
  5391                           status	equ	0xFD8
  5392                           
  5393 ;; *************** function _highPriorityISR *****************
  5394 ;; Defined at:
  5395 ;;		line 127 in file "main.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;Total ram usage:       18 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    3
  5416 ;; This function calls:
  5417 ;;		_checkSwitches
  5418 ;;		_flashLED
  5419 ;;		_sendParam
  5420 ;;		_serviceSwitches
  5421 ;;		_tapLED
  5422 ;; This function is called by:
  5423 ;;		Interrupt level 2
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	intcode
  5428  000008                     __pintcode:
  5429                           	opt stack 0
  5430  000008                     _highPriorityISR:
  5431                           	opt stack 24
  5432                           
  5433                           ;incstack = 0
  5434  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5435  00000A  CFFA F037          	movff	pclath,??_highPriorityISR
  5436  00000E  CFFB F038          	movff	pclatu,??_highPriorityISR+1
  5437  000012  CFE9 F039          	movff	fsr0l,??_highPriorityISR+2
  5438  000016  CFEA F03A          	movff	fsr0h,??_highPriorityISR+3
  5439  00001A  CFE1 F03B          	movff	fsr1l,??_highPriorityISR+4
  5440  00001E  CFE2 F03C          	movff	fsr1h,??_highPriorityISR+5
  5441  000022  CFD9 F03D          	movff	fsr2l,??_highPriorityISR+6
  5442  000026  CFDA F03E          	movff	fsr2h,??_highPriorityISR+7
  5443  00002A  CFF3 F03F          	movff	prodl,??_highPriorityISR+8
  5444  00002E  CFF4 F040          	movff	prodh,??_highPriorityISR+9
  5445  000032  CFF6 F041          	movff	tblptrl,??_highPriorityISR+10
  5446  000036  CFF7 F042          	movff	tblptrh,??_highPriorityISR+11
  5447  00003A  CFF8 F043          	movff	tblptru,??_highPriorityISR+12
  5448  00003E  CFF5 F044          	movff	tablat,??_highPriorityISR+13
  5449  000042  C04D  F045         	movff	btemp,??_highPriorityISR+14
  5450  000046  C04E  F046         	movff	btemp+1,??_highPriorityISR+15
  5451  00004A  C04F  F047         	movff	btemp+2,??_highPriorityISR+16
  5452  00004E  C050  F048         	movff	btemp+3,??_highPriorityISR+17
  5453                           
  5454                           ;main.c: 130: if(SSP2IF)
  5455  000052  ACA1               	btfss	4001,6,c	;volatile
  5456  000054  D003               	goto	i2l157
  5457                           
  5458                           ;main.c: 131: {
  5459                           ;main.c: 132: PIR2bits.SSP2IF = 0x0;
  5460  000056  9CA1               	bcf	4001,6,c	;volatile
  5461                           
  5462                           ;main.c: 133: sendParam();
  5463  000058  EC3F  F008         	call	_sendParam	;wreg free
  5464  00005C                     i2l157:
  5465                           
  5466                           ;main.c: 134: }
  5467                           ;main.c: 136: if (TMR4IF)
  5468  00005C  A0B8               	btfss	4024,0,c	;volatile
  5469  00005E  D007               	goto	i2l158
  5470                           
  5471                           ;main.c: 137: {
  5472                           ;main.c: 138: TMR4IF = 0;
  5473  000060  90B8               	bcf	4024,0,c	;volatile
  5474                           
  5475                           ;main.c: 139: tapLED();
  5476  000062  EC38  F00A         	call	_tapLED	;wreg free
  5477                           
  5478                           ;main.c: 140: flashLED();
  5479  000066  ECF0  F004         	call	_flashLED	;wreg free
  5480                           
  5481                           ;main.c: 141: T4CONbits.TMR4ON = 1;
  5482  00006A  010F               	movlb	15	; () banked
  5483  00006C  8504               	bsf	4,2,b	;volatile
  5484  00006E                     i2l158:
  5485                           
  5486                           ;main.c: 142: }
  5487                           ;main.c: 144: if (TMR2IF)
  5488                           
  5489                           ; BSR set to: 15
  5490  00006E  A29E               	btfss	3998,1,c	;volatile
  5491  000070  D012               	goto	i2l161
  5492                           
  5493                           ;main.c: 145: {
  5494                           ;main.c: 146: TMR2IF = 0;
  5495  000072  929E               	bcf	3998,1,c	;volatile
  5496                           
  5497                           ;main.c: 147: tapTimeCount++;
  5498  000074  4A05               	infsnz	_tapTimeCount,f,c
  5499  000076  2A06               	incf	_tapTimeCount+1,f,c
  5500                           
  5501                           ;main.c: 148: if (tapTimeCount >= 3000)
  5502  000078  BE06               	btfsc	_tapTimeCount+1,7,c
  5503  00007A  D00C               	goto	i2l160
  5504  00007C  0EB8               	movlw	184
  5505  00007E  5C05               	subwf	_tapTimeCount,w,c
  5506  000080  0E0B               	movlw	11
  5507  000082  5806               	subwfb	_tapTimeCount+1,w,c
  5508  000084  A0D8               	btfss	status,0,c
  5509  000086  D006               	goto	i2l160
  5510                           
  5511                           ;main.c: 149: {
  5512                           ;main.c: 150: tapTimeCount = 3000;
  5513  000088  0E0B               	movlw	11
  5514  00008A  6E06               	movwf	_tapTimeCount+1,c
  5515  00008C  0EB8               	movlw	184
  5516  00008E  6E05               	movwf	_tapTimeCount,c
  5517                           
  5518                           ;main.c: 151: T2CONbits.TMR2ON = 0;
  5519  000090  94CA               	bcf	4042,2,c	;volatile
  5520                           
  5521                           ;main.c: 152: }
  5522  000092  D001               	goto	i2l161
  5523  000094                     i2l160:
  5524                           
  5525                           ;main.c: 153: else T2CONbits.TMR2ON = 1;
  5526  000094  84CA               	bsf	4042,2,c	;volatile
  5527  000096                     i2l161:
  5528                           
  5529                           ;main.c: 154: }
  5530                           ;main.c: 156: checkSwitches();
  5531  000096  EC8A  F008         	call	_checkSwitches	;wreg free
  5532                           
  5533                           ;main.c: 158: if (TMR0IF)
  5534  00009A  A4F2               	btfss	intcon,2,c	;volatile
  5535  00009C  D019               	goto	i2l164
  5536                           
  5537                           ;main.c: 159: {
  5538                           ;main.c: 160: TMR0IF = 0;
  5539  00009E  94F2               	bcf	intcon,2,c	;volatile
  5540                           
  5541                           ;main.c: 161: bounceCount++;
  5542  0000A0  0100               	movlb	0	; () banked
  5543  0000A2  4B94               	infsnz	_bounceCount& (0+255),f,b
  5544  0000A4  2B95               	incf	(_bounceCount+1)& (0+255),f,b
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;main.c: 162: if (bounceCount < 2)
  5548  0000A6  0100               	movlb	0	; () banked
  5549  0000A8  BF95               	btfsc	(_bounceCount+1)& (0+255),7,b
  5550  0000AA  D008               	goto	i2u384_40
  5551  0000AC  0100               	movlb	0	; () banked
  5552  0000AE  5195               	movf	(_bounceCount+1)& (0+255),w,b
  5553  0000B0  E107               	bnz	i2l3793
  5554  0000B2  0E02               	movlw	2
  5555  0000B4  0100               	movlb	0	; () banked
  5556  0000B6  5D94               	subwf	_bounceCount& (0+255),w,b
  5557  0000B8  B0D8               	btfsc	status,0,c
  5558  0000BA  D002               	goto	i2l163
  5559  0000BC                     i2u384_40:
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;main.c: 163: {
  5563                           ;main.c: 164: T0CONbits.TMR0ON = 0x1;
  5564  0000BC  8ED5               	bsf	4053,7,c	;volatile
  5565                           
  5566                           ;main.c: 165: }
  5567  0000BE  D008               	goto	i2l164
  5568  0000C0                     i2l163:
  5569  0000C0                     i2l3793:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;main.c: 166: else
  5573                           ;main.c: 167: {
  5574                           ;main.c: 168: bounceCount = 0;
  5575  0000C0  0E00               	movlw	0
  5576  0000C2  0100               	movlb	0	; () banked
  5577  0000C4  6F95               	movwf	(_bounceCount+1)& (0+255),b
  5578  0000C6  0E00               	movlw	0
  5579  0000C8  6F94               	movwf	_bounceCount& (0+255),b
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;main.c: 169: serviceSwitches();
  5583  0000CA  EC90  F000         	call	_serviceSwitches	;wreg free
  5584                           
  5585                           ;main.c: 170: T0CONbits.TMR0ON = 0x0;
  5586  0000CE  9ED5               	bcf	4053,7,c	;volatile
  5587  0000D0                     i2l164:
  5588  0000D0  C048  F050         	movff	??_highPriorityISR+17,btemp+3
  5589  0000D4  C047  F04F         	movff	??_highPriorityISR+16,btemp+2
  5590  0000D8  C046  F04E         	movff	??_highPriorityISR+15,btemp+1
  5591  0000DC  C045  F04D         	movff	??_highPriorityISR+14,btemp
  5592  0000E0  C044  FFF5         	movff	??_highPriorityISR+13,tablat
  5593  0000E4  C043  FFF8         	movff	??_highPriorityISR+12,tblptru
  5594  0000E8  C042  FFF7         	movff	??_highPriorityISR+11,tblptrh
  5595  0000EC  C041  FFF6         	movff	??_highPriorityISR+10,tblptrl
  5596  0000F0  C040  FFF4         	movff	??_highPriorityISR+9,prodh
  5597  0000F4  C03F  FFF3         	movff	??_highPriorityISR+8,prodl
  5598  0000F8  C03E  FFDA         	movff	??_highPriorityISR+7,fsr2h
  5599  0000FC  C03D  FFD9         	movff	??_highPriorityISR+6,fsr2l
  5600  000100  C03C  FFE2         	movff	??_highPriorityISR+5,fsr1h
  5601  000104  C03B  FFE1         	movff	??_highPriorityISR+4,fsr1l
  5602  000108  C03A  FFEA         	movff	??_highPriorityISR+3,fsr0h
  5603  00010C  C039  FFE9         	movff	??_highPriorityISR+2,fsr0l
  5604  000110  C038  FFFB         	movff	??_highPriorityISR+1,pclatu
  5605  000114  C037  FFFA         	movff	??_highPriorityISR,pclath
  5606  000118  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5607  00011A  0011               	retfie		f
  5608  00011C                     __end_of_highPriorityISR:
  5609                           	opt stack 0
  5610                           pclatu	equ	0xFFB
  5611                           pclath	equ	0xFFA
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           postinc0	equ	0xFEE
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           postinc1	equ	0xFE6
  5624                           postdec1	equ	0xFE5
  5625                           plusw1	equ	0xFE3
  5626                           fsr1h	equ	0xFE2
  5627                           fsr1l	equ	0xFE1
  5628                           indf2	equ	0xFDF
  5629                           postinc2	equ	0xFDE
  5630                           postdec2	equ	0xFDD
  5631                           plusw2	equ	0xFDB
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function _tapLED *****************
  5637 ;; Defined at:
  5638 ;;		line 75 in file "hardware.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;Total ram usage:        3 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; This function calls:
  5659 ;;		Nothing
  5660 ;; This function is called by:
  5661 ;;		_highPriorityISR
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text28
  5666  001470                     __ptext28:
  5667                           	opt stack 0
  5668  001470                     _tapLED:
  5669                           	opt stack 26
  5670                           
  5671                           ;hardware.c: 84: if(tapFlash)
  5672                           
  5673                           ;incstack = 0
  5674  001470  0100               	movlb	0	; () banked
  5675  001472  5186               	movf	_tapFlash& (0+255),w,b
  5676  001474  0100               	movlb	0	; () banked
  5677  001476  1187               	iorwf	(_tapFlash+1)& (0+255),w,b
  5678  001478  B4D8               	btfsc	status,2,c
  5679  00147A  D017               	goto	i2l805
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;hardware.c: 85: {
  5683                           ;hardware.c: 86: tapDispCount++;
  5684  00147C  4A15               	infsnz	_tapDispCount,f,c
  5685  00147E  2A16               	incf	_tapDispCount+1,f,c
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;hardware.c: 87: if (tapDispCount >= tapOnTime)
  5689  001480  5049               	movf	_tapOnTime,w,c
  5690  001482  5C15               	subwf	_tapDispCount,w,c
  5691  001484  5016               	movf	_tapDispCount+1,w,c
  5692  001486  0A80               	xorlw	128
  5693  001488  6E29               	movwf	??_tapLED& (0+255),c
  5694  00148A  504A               	movf	_tapOnTime+1,w,c
  5695  00148C  0A80               	xorlw	128
  5696  00148E  5829               	subwfb	??_tapLED& (0+255),w,c
  5697  001490  A0D8               	btfss	status,0,c
  5698  001492  0012               	return	
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;hardware.c: 88: {
  5702                           ;hardware.c: 89: tapDispCount = 0;
  5703  001494  0E00               	movlw	0
  5704  001496  6E16               	movwf	_tapDispCount+1,c
  5705  001498  0E00               	movlw	0
  5706  00149A  6E15               	movwf	_tapDispCount,c
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;hardware.c: 90: LATE0 = 0;
  5710  00149C  908D               	bcf	3981,0,c	;volatile
  5711                           
  5712                           ;hardware.c: 91: tapFlash = 0;
  5713  00149E  0E00               	movlw	0
  5714  0014A0  0100               	movlb	0	; () banked
  5715  0014A2  6F87               	movwf	(_tapFlash+1)& (0+255),b
  5716  0014A4  0E00               	movlw	0
  5717  0014A6  6F86               	movwf	_tapFlash& (0+255),b
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;hardware.c: 92: }
  5721                           ;hardware.c: 93: }
  5722  0014A8  0012               	return	
  5723  0014AA                     i2l805:
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;hardware.c: 94: else
  5727                           ;hardware.c: 95: {
  5728                           ;hardware.c: 96: tapDispCount++;
  5729                           
  5730                           ; BSR set to: 0
  5731  0014AA  4A15               	infsnz	_tapDispCount,f,c
  5732  0014AC  2A16               	incf	_tapDispCount+1,f,c
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;hardware.c: 97: if (tapDispCount >= (currentTapTime-tapOnTime))
  5736  0014AE  C049  F029         	movff	_tapOnTime,??_tapLED
  5737  0014B2  C04A  F02A         	movff	_tapOnTime+1,??_tapLED+1
  5738  0014B6  1E29               	comf	??_tapLED,f,c
  5739  0014B8  1E2A               	comf	??_tapLED+1,f,c
  5740  0014BA  4A29               	infsnz	??_tapLED,f,c
  5741  0014BC  2A2A               	incf	??_tapLED+1,f,c
  5742  0014BE  0100               	movlb	0	; () banked
  5743  0014C0  51EF               	movf	_currentTapTime& (0+255),w,b
  5744  0014C2  2629               	addwf	??_tapLED,f,c
  5745  0014C4  0100               	movlb	0	; () banked
  5746  0014C6  51F0               	movf	(_currentTapTime+1)& (0+255),w,b
  5747  0014C8  222A               	addwfc	??_tapLED+1,f,c
  5748  0014CA  5029               	movf	??_tapLED,w,c
  5749  0014CC  5C15               	subwf	_tapDispCount,w,c
  5750  0014CE  5016               	movf	_tapDispCount+1,w,c
  5751  0014D0  0A80               	xorlw	128
  5752  0014D2  6E2B               	movwf	(??_tapLED+2)& (0+255),c
  5753  0014D4  502A               	movf	??_tapLED+1,w,c
  5754  0014D6  0A80               	xorlw	128
  5755  0014D8  582B               	subwfb	(??_tapLED+2)& (0+255),w,c
  5756  0014DA  A0D8               	btfss	status,0,c
  5757  0014DC  0012               	return	
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;hardware.c: 98: {
  5761                           ;hardware.c: 99: tapDispCount = 0;
  5762  0014DE  0E00               	movlw	0
  5763  0014E0  6E16               	movwf	_tapDispCount+1,c
  5764  0014E2  0E00               	movlw	0
  5765  0014E4  6E15               	movwf	_tapDispCount,c
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;hardware.c: 100: LATE0 = 1;
  5769  0014E6  808D               	bsf	3981,0,c	;volatile
  5770                           
  5771                           ;hardware.c: 101: tapFlash = 1;
  5772  0014E8  0E00               	movlw	0
  5773  0014EA  0100               	movlb	0	; () banked
  5774  0014EC  6F87               	movwf	(_tapFlash+1)& (0+255),b
  5775  0014EE  0E01               	movlw	1
  5776  0014F0  6F86               	movwf	_tapFlash& (0+255),b
  5777                           
  5778                           ; BSR set to: 0
  5779  0014F2  0012               	return	
  5780  0014F4                     __end_of_tapLED:
  5781                           	opt stack 0
  5782                           pclatu	equ	0xFFB
  5783                           pclath	equ	0xFFA
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           postinc0	equ	0xFEE
  5792                           fsr0h	equ	0xFEA
  5793                           fsr0l	equ	0xFE9
  5794                           wreg	equ	0xFE8
  5795                           postinc1	equ	0xFE6
  5796                           postdec1	equ	0xFE5
  5797                           plusw1	equ	0xFE3
  5798                           fsr1h	equ	0xFE2
  5799                           fsr1l	equ	0xFE1
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           plusw2	equ	0xFDB
  5804                           fsr2h	equ	0xFDA
  5805                           fsr2l	equ	0xFD9
  5806                           status	equ	0xFD8
  5807                           
  5808 ;; *************** function _serviceSwitches *****************
  5809 ;; Defined at:
  5810 ;;		line 200 in file "hardware.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;		None
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0, cstack
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;Total ram usage:        0 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    2
  5831 ;; This function calls:
  5832 ;;		_processTaps
  5833 ;;		_updateLineLEDs
  5834 ;;		_updatePresetLEDs
  5835 ;; This function is called by:
  5836 ;;		_highPriorityISR
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text29
  5841  000120                     __ptext29:
  5842                           	opt stack 0
  5843  000120                     _serviceSwitches:
  5844                           	opt stack 24
  5845                           
  5846                           ;hardware.c: 202: if (fsw1)
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;incstack = 0
  5850  000120  0100               	movlb	0	; () banked
  5851  000122  5198               	movf	_fsw1& (0+255),w,b
  5852  000124  0100               	movlb	0	; () banked
  5853  000126  1199               	iorwf	(_fsw1+1)& (0+255),w,b
  5854  000128  B4D8               	btfsc	status,2,c
  5855  00012A  D023               	goto	i2u316_45
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;hardware.c: 203: {
  5859                           ;hardware.c: 204: fsw1 = 0;
  5860  00012C  0E00               	movlw	0
  5861  00012E  0100               	movlb	0	; () banked
  5862  000130  6F99               	movwf	(_fsw1+1)& (0+255),b
  5863  000132  0E00               	movlw	0
  5864  000134  6F98               	movwf	_fsw1& (0+255),b
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;hardware.c: 205: if (!RD4)
  5868  000136  B883               	btfsc	3971,4,c	;volatile
  5869  000138  D01C               	goto	i2u316_45
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;hardware.c: 206: {
  5873                           ;hardware.c: 207: bypass ^= 1;
  5874  00013A  0E01               	movlw	1
  5875  00013C  1A1B               	xorwf	_bypass,f,c
  5876                           
  5877                           ;hardware.c: 208: if (bypMode)
  5878  00013E  0100               	movlb	0	; () banked
  5879  000140  51F1               	movf	_bypMode& (0+255),w,b
  5880  000142  0100               	movlb	0	; () banked
  5881  000144  11F2               	iorwf	(_bypMode+1)& (0+255),w,b
  5882  000146  B4D8               	btfsc	status,2,c
  5883  000148  D00B               	goto	i2l836
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;hardware.c: 209: {
  5887                           ;hardware.c: 210: LATD3 = !bypass;
  5888  00014A  501B               	movf	_bypass,w,c
  5889  00014C  101C               	iorwf	_bypass+1,w,c
  5890  00014E  A4D8               	btfss	status,2,c
  5891  000150  D002               	goto	i2u309_40
  5892  000152  868C               	bsf	3980,3,c	;volatile
  5893  000154  D001               	goto	i2u310_45
  5894  000156                     i2u309_40:
  5895  000156  968C               	bcf	3980,3,c	;volatile
  5896  000158                     i2u310_45:
  5897                           
  5898                           ;hardware.c: 211: LATB5 = bypass;
  5899  000158  A01B               	btfss	_bypass,0,c
  5900  00015A  D005               	goto	L6
  5901  00015C                     i2u311_41:
  5902  00015C  8A8A               	bsf	3978,5,c	;volatile
  5903  00015E  D004               	goto	i2u314_45
  5904  000160                     i2l836:
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;hardware.c: 213: else
  5908                           ;hardware.c: 214: {
  5909                           ;hardware.c: 215: LATD3 = 0;
  5910  000160  968C               	bcf	3980,3,c	;volatile
  5911                           
  5912                           ;hardware.c: 216: LATB5 = bypass;
  5913  000162  B01B               	btfsc	_bypass,0,c
  5914  000164  D7FB               	goto	i2u311_41
  5915  000166                     L6:
  5916  000166  9A8A               	bcf	3978,5,c	;volatile
  5917  000168                     i2u314_45:
  5918                           
  5919                           ;hardware.c: 217: }
  5920                           ;hardware.c: 218: LATD2 = bypass;
  5921  000168  A01B               	btfss	_bypass,0,c
  5922  00016A  D002               	goto	i2u315_40
  5923  00016C  848C               	bsf	3980,2,c	;volatile
  5924  00016E  D001               	goto	i2u316_45
  5925  000170                     i2u315_40:
  5926  000170  948C               	bcf	3980,2,c	;volatile
  5927  000172                     i2u316_45:
  5928                           
  5929                           ;hardware.c: 219: }
  5930                           ;hardware.c: 220: }
  5931                           ;hardware.c: 222: if (fsw2)
  5932  000172  0100               	movlb	0	; () banked
  5933  000174  5196               	movf	_fsw2& (0+255),w,b
  5934  000176  0100               	movlb	0	; () banked
  5935  000178  1197               	iorwf	(_fsw2+1)& (0+255),w,b
  5936  00017A  B4D8               	btfsc	status,2,c
  5937  00017C  D008               	goto	i2l839
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;hardware.c: 223: {
  5941                           ;hardware.c: 224: fsw2 = 0;
  5942  00017E  0E00               	movlw	0
  5943  000180  0100               	movlb	0	; () banked
  5944  000182  6F97               	movwf	(_fsw2+1)& (0+255),b
  5945  000184  0E00               	movlw	0
  5946  000186  6F96               	movwf	_fsw2& (0+255),b
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;hardware.c: 225: if (RE3)
  5950  000188  B684               	btfsc	3972,3,c	;volatile
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;hardware.c: 226: {
  5954                           ;hardware.c: 227: processTaps();
  5955  00018A  ECC8  F006         	call	_processTaps	;wreg free
  5956  00018E                     i2l839:
  5957                           
  5958                           ;hardware.c: 228: }
  5959                           ;hardware.c: 229: }
  5960                           ;hardware.c: 231: if (switch1)
  5961  00018E  501F               	movf	_switch1,w,c
  5962  000190  1020               	iorwf	_switch1+1,w,c
  5963  000192  B4D8               	btfsc	status,2,c
  5964  000194  D01F               	goto	i2l844
  5965                           
  5966                           ;hardware.c: 232: {
  5967                           ;hardware.c: 233: switch1 = 0;
  5968  000196  0E00               	movlw	0
  5969  000198  6E20               	movwf	_switch1+1,c
  5970  00019A  0E00               	movlw	0
  5971  00019C  6E1F               	movwf	_switch1,c
  5972                           
  5973                           ;hardware.c: 234: if (!RG1)
  5974  00019E  B286               	btfsc	3974,1,c	;volatile
  5975  0001A0  D019               	goto	i2l844
  5976                           
  5977                           ;hardware.c: 235: {
  5978                           ;hardware.c: 236: if (!shift)
  5979  0001A2  5013               	movf	_shift,w,c
  5980  0001A4  1014               	iorwf	_shift+1,w,c
  5981  0001A6  A4D8               	btfss	status,2,c
  5982  0001A8  D00F               	goto	i2l842
  5983                           
  5984                           ;hardware.c: 237: {
  5985                           ;hardware.c: 238: intA++;
  5986  0001AA  4A27               	infsnz	_intA,f,c
  5987  0001AC  2A28               	incf	_intA+1,f,c
  5988                           
  5989                           ;hardware.c: 239: if (intA > 3)
  5990  0001AE  BE28               	btfsc	_intA+1,7,c
  5991  0001B0  D011               	goto	i2l844
  5992  0001B2  5028               	movf	_intA+1,w,c
  5993  0001B4  E104               	bnz	i2u322_40
  5994  0001B6  0E04               	movlw	4
  5995  0001B8  5C27               	subwf	_intA,w,c
  5996  0001BA  A0D8               	btfss	status,0,c
  5997  0001BC  D00B               	goto	i2l844
  5998  0001BE                     i2u322_40:
  5999                           
  6000                           ;hardware.c: 240: {
  6001                           ;hardware.c: 241: intA = 0;
  6002  0001BE  0E00               	movlw	0
  6003  0001C0  6E28               	movwf	_intA+1,c
  6004  0001C2  0E00               	movlw	0
  6005  0001C4  6E27               	movwf	_intA,c
  6006                           
  6007                           ;hardware.c: 242: }
  6008                           ;hardware.c: 243: }
  6009  0001C6  D006               	goto	i2l844
  6010  0001C8                     i2l842:
  6011                           
  6012                           ;hardware.c: 244: else
  6013                           ;hardware.c: 245: {
  6014                           ;hardware.c: 246: armA ^= 1;
  6015  0001C8  0E01               	movlw	1
  6016  0001CA  1A11               	xorwf	_armA,f,c
  6017                           
  6018                           ;hardware.c: 247: shiftAction = 1;
  6019  0001CC  0E00               	movlw	0
  6020  0001CE  6E22               	movwf	_shiftAction+1,c
  6021  0001D0  0E01               	movlw	1
  6022  0001D2  6E21               	movwf	_shiftAction,c
  6023  0001D4                     i2l844:
  6024                           
  6025                           ;hardware.c: 248: }
  6026                           ;hardware.c: 249: }
  6027                           ;hardware.c: 250: }
  6028                           ;hardware.c: 252: if (switch2)
  6029  0001D4  501D               	movf	_switch2,w,c
  6030  0001D6  101E               	iorwf	_switch2+1,w,c
  6031  0001D8  B4D8               	btfsc	status,2,c
  6032  0001DA  D01F               	goto	i2l849
  6033                           
  6034                           ;hardware.c: 253: {
  6035                           ;hardware.c: 254: switch2 = 0;
  6036  0001DC  0E00               	movlw	0
  6037  0001DE  6E1E               	movwf	_switch2+1,c
  6038  0001E0  0E00               	movlw	0
  6039  0001E2  6E1D               	movwf	_switch2,c
  6040                           
  6041                           ;hardware.c: 255: if (!RG2)
  6042  0001E4  B486               	btfsc	3974,2,c	;volatile
  6043  0001E6  D019               	goto	i2l849
  6044                           
  6045                           ;hardware.c: 256: {
  6046                           ;hardware.c: 257: if (!shift)
  6047  0001E8  5013               	movf	_shift,w,c
  6048  0001EA  1014               	iorwf	_shift+1,w,c
  6049  0001EC  A4D8               	btfss	status,2,c
  6050  0001EE  D00F               	goto	i2l847
  6051                           
  6052                           ;hardware.c: 258: {
  6053                           ;hardware.c: 259: intB++;
  6054  0001F0  4A25               	infsnz	_intB,f,c
  6055  0001F2  2A26               	incf	_intB+1,f,c
  6056                           
  6057                           ;hardware.c: 260: if (intB > 3)
  6058  0001F4  BE26               	btfsc	_intB+1,7,c
  6059  0001F6  D011               	goto	i2l849
  6060  0001F8  5026               	movf	_intB+1,w,c
  6061  0001FA  E104               	bnz	i2u326_40
  6062  0001FC  0E04               	movlw	4
  6063  0001FE  5C25               	subwf	_intB,w,c
  6064  000200  A0D8               	btfss	status,0,c
  6065  000202  D00B               	goto	i2l849
  6066  000204                     i2u326_40:
  6067                           
  6068                           ;hardware.c: 261: {
  6069                           ;hardware.c: 262: intB = 0;
  6070  000204  0E00               	movlw	0
  6071  000206  6E26               	movwf	_intB+1,c
  6072  000208  0E00               	movlw	0
  6073  00020A  6E25               	movwf	_intB,c
  6074                           
  6075                           ;hardware.c: 263: }
  6076                           ;hardware.c: 264: }
  6077  00020C  D006               	goto	i2l849
  6078  00020E                     i2l847:
  6079                           
  6080                           ;hardware.c: 265: else
  6081                           ;hardware.c: 266: {
  6082                           ;hardware.c: 267: armB ^= 1;
  6083  00020E  0E01               	movlw	1
  6084  000210  1A0F               	xorwf	_armB,f,c
  6085                           
  6086                           ;hardware.c: 268: shiftAction = 1;
  6087  000212  0E00               	movlw	0
  6088  000214  6E22               	movwf	_shiftAction+1,c
  6089  000216  0E01               	movlw	1
  6090  000218  6E21               	movwf	_shiftAction,c
  6091  00021A                     i2l849:
  6092                           
  6093                           ;hardware.c: 269: }
  6094                           ;hardware.c: 270: }
  6095                           ;hardware.c: 271: }
  6096                           ;hardware.c: 273: if (switch3)
  6097  00021A  0100               	movlb	0	; () banked
  6098  00021C  519E               	movf	_switch3& (0+255),w,b
  6099  00021E  0100               	movlb	0	; () banked
  6100  000220  119F               	iorwf	(_switch3+1)& (0+255),w,b
  6101  000222  B4D8               	btfsc	status,2,c
  6102  000224  D020               	goto	i2l854
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;hardware.c: 274: {
  6106                           ;hardware.c: 275: switch3 = 0;
  6107  000226  0E00               	movlw	0
  6108  000228  0100               	movlb	0	; () banked
  6109  00022A  6F9F               	movwf	(_switch3+1)& (0+255),b
  6110  00022C  0E00               	movlw	0
  6111  00022E  6F9E               	movwf	_switch3& (0+255),b
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;hardware.c: 276: if (!RE6)
  6115  000230  BC84               	btfsc	3972,6,c	;volatile
  6116  000232  D019               	goto	i2l854
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;hardware.c: 277: {
  6120                           ;hardware.c: 278: if (!shift)
  6121  000234  5013               	movf	_shift,w,c
  6122  000236  1014               	iorwf	_shift+1,w,c
  6123  000238  A4D8               	btfss	status,2,c
  6124  00023A  D00F               	goto	i2l852
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;hardware.c: 279: {
  6128                           ;hardware.c: 280: intC++;
  6129  00023C  4A23               	infsnz	_intC,f,c
  6130  00023E  2A24               	incf	_intC+1,f,c
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;hardware.c: 281: if (intC > 3)
  6134  000240  BE24               	btfsc	_intC+1,7,c
  6135  000242  D011               	goto	i2l854
  6136  000244  5024               	movf	_intC+1,w,c
  6137  000246  E104               	bnz	i2u330_40
  6138  000248  0E04               	movlw	4
  6139  00024A  5C23               	subwf	_intC,w,c
  6140  00024C  A0D8               	btfss	status,0,c
  6141  00024E  D00B               	goto	i2l854
  6142  000250                     i2u330_40:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;hardware.c: 282: {
  6146                           ;hardware.c: 283: intC = 0;
  6147  000250  0E00               	movlw	0
  6148  000252  6E24               	movwf	_intC+1,c
  6149  000254  0E00               	movlw	0
  6150  000256  6E23               	movwf	_intC,c
  6151                           
  6152                           ; BSR set to: 0
  6153                           ;hardware.c: 284: }
  6154                           ;hardware.c: 285: }
  6155  000258  D006               	goto	i2l854
  6156  00025A                     i2l852:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;hardware.c: 286: else
  6160                           ;hardware.c: 287: {
  6161                           ;hardware.c: 288: armC ^= 1;
  6162                           
  6163                           ; BSR set to: 0
  6164  00025A  0E01               	movlw	1
  6165  00025C  1A0D               	xorwf	_armC,f,c
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;hardware.c: 289: shiftAction = 1;
  6169  00025E  0E00               	movlw	0
  6170  000260  6E22               	movwf	_shiftAction+1,c
  6171  000262  0E01               	movlw	1
  6172  000264  6E21               	movwf	_shiftAction,c
  6173  000266                     i2l854:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;hardware.c: 290: }
  6177                           ;hardware.c: 291: }
  6178                           ;hardware.c: 292: }
  6179                           ;hardware.c: 297: updateLineLEDs(intA, intB, intC);
  6180                           
  6181                           ; BSR set to: 0
  6182                           
  6183                           ; BSR set to: 0
  6184                           
  6185                           ; BSR set to: 0
  6186  000266  C027  F02F         	movff	_intA,updateLineLEDs@lineA
  6187  00026A  C028  F030         	movff	_intA+1,updateLineLEDs@lineA+1
  6188  00026E  C025  F031         	movff	_intB,updateLineLEDs@lineB
  6189  000272  C026  F032         	movff	_intB+1,updateLineLEDs@lineB+1
  6190  000276  C023  F033         	movff	_intC,updateLineLEDs@lineC
  6191  00027A  C024  F034         	movff	_intC+1,updateLineLEDs@lineC+1
  6192  00027E  EC67  F009         	call	_updateLineLEDs	;wreg free
  6193                           
  6194                           ;hardware.c: 299: if (switch4)
  6195  000282  0100               	movlb	0	; () banked
  6196  000284  519C               	movf	_switch4& (0+255),w,b
  6197  000286  0100               	movlb	0	; () banked
  6198  000288  119D               	iorwf	(_switch4+1)& (0+255),w,b
  6199  00028A  B4D8               	btfsc	status,2,c
  6200  00028C  D04D               	goto	i2l864
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;hardware.c: 300: {
  6204                           ;hardware.c: 301: switch4 = 0;
  6205  00028E  0E00               	movlw	0
  6206  000290  0100               	movlb	0	; () banked
  6207  000292  6F9D               	movwf	(_switch4+1)& (0+255),b
  6208  000294  0E00               	movlw	0
  6209  000296  6F9C               	movwf	_switch4& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;hardware.c: 302: if (!RD1)
  6213  000298  B283               	btfsc	3971,1,c	;volatile
  6214  00029A  D046               	goto	i2l864
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;hardware.c: 303: {
  6218                           ;hardware.c: 304: if (!shift)
  6219  00029C  5013               	movf	_shift,w,c
  6220  00029E  1014               	iorwf	_shift+1,w,c
  6221  0002A0  A4D8               	btfss	status,2,c
  6222  0002A2  D01A               	goto	i2l857
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;hardware.c: 305: {
  6226                           ;hardware.c: 306: preset++;
  6227  0002A4  0100               	movlb	0	; () banked
  6228  0002A6  4B90               	infsnz	_preset& (0+255),f,b
  6229  0002A8  2B91               	incf	(_preset+1)& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;hardware.c: 307: if (preset >= 6)
  6233  0002AA  0100               	movlb	0	; () banked
  6234  0002AC  BF91               	btfsc	(_preset+1)& (0+255),7,b
  6235  0002AE  D00D               	goto	i2l858
  6236  0002B0  0100               	movlb	0	; () banked
  6237  0002B2  5191               	movf	(_preset+1)& (0+255),w,b
  6238  0002B4  E105               	bnz	i2u334_40
  6239  0002B6  0E06               	movlw	6
  6240  0002B8  0100               	movlb	0	; () banked
  6241  0002BA  5D90               	subwf	_preset& (0+255),w,b
  6242  0002BC  A0D8               	btfss	status,0,c
  6243  0002BE  D005               	goto	i2l858
  6244  0002C0                     i2u334_40:
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;hardware.c: 308: {
  6248                           ;hardware.c: 309: preset = 0;
  6249  0002C0  0E00               	movlw	0
  6250  0002C2  0100               	movlb	0	; () banked
  6251  0002C4  6F91               	movwf	(_preset+1)& (0+255),b
  6252  0002C6  0E00               	movlw	0
  6253  0002C8  6F90               	movwf	_preset& (0+255),b
  6254  0002CA                     i2l858:
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;hardware.c: 310: }
  6258                           ;hardware.c: 311: updatePresetLEDs(preset);
  6259                           
  6260                           ; BSR set to: 0
  6261  0002CA  C090  F029         	movff	_preset,updatePresetLEDs@psNum
  6262  0002CE  C091  F02A         	movff	_preset+1,updatePresetLEDs@psNum+1
  6263  0002D2  ECBC  F00A         	call	_updatePresetLEDs	;wreg free
  6264                           
  6265                           ;hardware.c: 312: }
  6266  0002D6  D028               	goto	i2l864
  6267  0002D8                     i2l857:
  6268                           
  6269                           ;hardware.c: 313: else
  6270                           ;hardware.c: 314: {
  6271                           ;hardware.c: 315: if (!presetPend)
  6272  0002D8  5017               	movf	_presetPend,w,c
  6273  0002DA  1018               	iorwf	_presetPend+1,w,c
  6274  0002DC  A4D8               	btfss	status,2,c
  6275  0002DE  D016               	goto	i2l860
  6276                           
  6277                           ;hardware.c: 316: {
  6278                           ;hardware.c: 318: targPreset = preset;
  6279  0002E0  C090  F019         	movff	_preset,_targPreset
  6280  0002E4  C091  F01A         	movff	_preset+1,_targPreset+1
  6281                           
  6282                           ;hardware.c: 319: if (!targPreset)
  6283  0002E8  5019               	movf	_targPreset,w,c
  6284  0002EA  101A               	iorwf	_targPreset+1,w,c
  6285  0002EC  A4D8               	btfss	status,2,c
  6286  0002EE  D004               	goto	i2l861
  6287                           
  6288                           ;hardware.c: 320: {
  6289                           ;hardware.c: 321: targPreset = 1;
  6290  0002F0  0E00               	movlw	0
  6291  0002F2  6E1A               	movwf	_targPreset+1,c
  6292  0002F4  0E01               	movlw	1
  6293  0002F6  6E19               	movwf	_targPreset,c
  6294  0002F8                     i2l861:
  6295                           
  6296                           ;hardware.c: 322: }
  6297                           ;hardware.c: 323: presetPend = 1;
  6298  0002F8  0E00               	movlw	0
  6299  0002FA  6E18               	movwf	_presetPend+1,c
  6300  0002FC  0E01               	movlw	1
  6301  0002FE  6E17               	movwf	_presetPend,c
  6302                           
  6303                           ;hardware.c: 324: if (targPreset > 1)
  6304  000300  BE1A               	btfsc	_targPreset+1,7,c
  6305  000302  D012               	goto	i2l864
  6306  000304  501A               	movf	_targPreset+1,w,c
  6307  000306  E10C               	bnz	i2u338_40
  6308  000308  0E02               	movlw	2
  6309  00030A  D007               	goto	L7
  6310  00030C                     i2l860:
  6311                           
  6312                           ;hardware.c: 329: else
  6313                           ;hardware.c: 330: {
  6314                           ;hardware.c: 331: targPreset++;
  6315  00030C  4A19               	infsnz	_targPreset,f,c
  6316  00030E  2A1A               	incf	_targPreset+1,f,c
  6317                           
  6318                           ;hardware.c: 332: if (targPreset > 5)
  6319  000310  BE1A               	btfsc	_targPreset+1,7,c
  6320  000312  D00A               	goto	i2l864
  6321  000314  501A               	movf	_targPreset+1,w,c
  6322  000316  E104               	bnz	i2u338_40
  6323  000318  0E06               	movlw	6
  6324  00031A                     L7:
  6325  00031A  5C19               	subwf	_targPreset,w,c
  6326  00031C  A0D8               	btfss	status,0,c
  6327  00031E  D004               	goto	i2l864
  6328  000320                     i2u338_40:
  6329                           
  6330                           ;hardware.c: 333: {
  6331                           ;hardware.c: 334: targPreset = 1;
  6332  000320  0E00               	movlw	0
  6333  000322  6E1A               	movwf	_targPreset+1,c
  6334  000324  0E01               	movlw	1
  6335  000326  6E19               	movwf	_targPreset,c
  6336  000328                     i2l864:
  6337                           
  6338                           ;hardware.c: 335: }
  6339                           ;hardware.c: 336: }
  6340                           ;hardware.c: 337: }
  6341                           ;hardware.c: 338: }
  6342                           ;hardware.c: 339: }
  6343                           ;hardware.c: 341: if (switch5)
  6344  000328  0100               	movlb	0	; () banked
  6345  00032A  519A               	movf	_switch5& (0+255),w,b
  6346  00032C  0100               	movlb	0	; () banked
  6347  00032E  119B               	iorwf	(_switch5+1)& (0+255),w,b
  6348  000330  B4D8               	btfsc	status,2,c
  6349  000332  0012               	return	
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;hardware.c: 342: {
  6353                           ;hardware.c: 343: switch5 = 0;
  6354  000334  0E00               	movlw	0
  6355  000336  0100               	movlb	0	; () banked
  6356  000338  6F9B               	movwf	(_switch5+1)& (0+255),b
  6357  00033A  0E00               	movlw	0
  6358  00033C  6F9A               	movwf	_switch5& (0+255),b
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;hardware.c: 344: if (!shift)
  6362  00033E  5013               	movf	_shift,w,c
  6363  000340  1014               	iorwf	_shift+1,w,c
  6364  000342  A4D8               	btfss	status,2,c
  6365  000344  D00B               	goto	i2l866
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;hardware.c: 345: {
  6369                           ;hardware.c: 346: if (!RG3)
  6370  000346  B686               	btfsc	3974,3,c	;volatile
  6371  000348  0012               	return	
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;hardware.c: 347: {
  6375                           ;hardware.c: 348: shift = 1;
  6376  00034A  0E00               	movlw	0
  6377  00034C  6E14               	movwf	_shift+1,c
  6378  00034E  0E01               	movlw	1
  6379  000350  6E13               	movwf	_shift,c
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;hardware.c: 350: IOCNbits.IOCN7 = 0x0;
  6383  000352  010F               	movlb	15	; () banked
  6384  000354  9F55               	bcf	85,7,b	;volatile
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;hardware.c: 351: IOCPbits.IOCP7 = 0x1;
  6388  000356  010F               	movlb	15	; () banked
  6389  000358  8F56               	bsf	86,7,b	;volatile
  6390                           
  6391                           ; BSR set to: 15
  6392                           ;hardware.c: 352: }
  6393                           ;hardware.c: 353: }
  6394  00035A  0012               	return	
  6395  00035C                     i2l866:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;hardware.c: 354: else
  6399                           ;hardware.c: 355: {
  6400                           ;hardware.c: 356: if (RG3)
  6401  00035C  A686               	btfss	3974,3,c	;volatile
  6402  00035E  0012               	return	
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;hardware.c: 357: {
  6406                           ;hardware.c: 358: shift = 0;
  6407  000360  0E00               	movlw	0
  6408  000362  6E14               	movwf	_shift+1,c
  6409  000364  0E00               	movlw	0
  6410  000366  6E13               	movwf	_shift,c
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;hardware.c: 360: IOCNbits.IOCN7 = 0x1;
  6414  000368  010F               	movlb	15	; () banked
  6415  00036A  8F55               	bsf	85,7,b	;volatile
  6416                           
  6417                           ; BSR set to: 15
  6418                           ;hardware.c: 361: IOCPbits.IOCP7 = 0x0;
  6419  00036C  010F               	movlb	15	; () banked
  6420  00036E  9F56               	bcf	86,7,b	;volatile
  6421                           
  6422                           ; BSR set to: 15
  6423                           ;hardware.c: 363: if (!shiftAction)
  6424  000370  5021               	movf	_shiftAction,w,c
  6425  000372  1022               	iorwf	_shiftAction+1,w,c
  6426  000374  A4D8               	btfss	status,2,c
  6427  000376  D010               	goto	i2l870
  6428                           
  6429                           ; BSR set to: 15
  6430                           ;hardware.c: 364: {
  6431                           ;hardware.c: 365: swX ^= 1;
  6432  000378  0E01               	movlw	1
  6433  00037A  1A4B               	xorwf	_swX,f,c
  6434                           
  6435                           ; BSR set to: 15
  6436                           ;hardware.c: 366: bypMode = swX;
  6437  00037C  C04B  F0F1         	movff	_swX,_bypMode
  6438  000380  C04C  F0F2         	movff	_swX+1,_bypMode+1
  6439                           
  6440                           ;hardware.c: 367: if (swX)
  6441  000384  504B               	movf	_swX,w,c
  6442  000386  104C               	iorwf	_swX+1,w,c
  6443  000388  B4D8               	btfsc	status,2,c
  6444  00038A  D003               	goto	i2l871
  6445                           
  6446                           ; BSR set to: 15
  6447                           ;hardware.c: 368: {
  6448                           ;hardware.c: 369: LATE1 = 1;
  6449  00038C  828D               	bsf	3981,1,c	;volatile
  6450                           
  6451                           ;hardware.c: 370: LATH1 = 0;
  6452  00038E  9290               	bcf	3984,1,c	;volatile
  6453                           
  6454                           ;hardware.c: 371: }
  6455  000390  0012               	return	
  6456  000392                     i2l871:
  6457                           
  6458                           ; BSR set to: 15
  6459                           ;hardware.c: 372: else
  6460                           ;hardware.c: 373: {
  6461                           ;hardware.c: 374: LATE1 = 0;
  6462  000392  928D               	bcf	3981,1,c	;volatile
  6463                           
  6464                           ;hardware.c: 375: LATH1 = 1;
  6465  000394  8290               	bsf	3984,1,c	;volatile
  6466                           
  6467                           ; BSR set to: 15
  6468                           ;hardware.c: 376: }
  6469                           ;hardware.c: 377: }
  6470  000396  0012               	return	
  6471  000398                     i2l870:
  6472                           
  6473                           ; BSR set to: 15
  6474                           ;hardware.c: 378: else
  6475                           ;hardware.c: 379: {
  6476                           ;hardware.c: 380: presetPend = 0;
  6477                           
  6478                           ; BSR set to: 15
  6479  000398  0E00               	movlw	0
  6480  00039A  6E18               	movwf	_presetPend+1,c
  6481  00039C  0E00               	movlw	0
  6482  00039E  6E17               	movwf	_presetPend,c
  6483                           
  6484                           ;hardware.c: 381: shiftAction = 0;
  6485  0003A0  0E00               	movlw	0
  6486  0003A2  6E22               	movwf	_shiftAction+1,c
  6487  0003A4  0E00               	movlw	0
  6488  0003A6  6E21               	movwf	_shiftAction,c
  6489                           
  6490                           ; BSR set to: 15
  6491                           ;hardware.c: 382: preset = targPreset;
  6492  0003A8  C019  F090         	movff	_targPreset,_preset
  6493  0003AC  C01A  F091         	movff	_targPreset+1,_preset+1
  6494                           
  6495                           ;hardware.c: 383: pFlash = 0;
  6496  0003B0  0E00               	movlw	0
  6497  0003B2  0100               	movlb	0	; () banked
  6498  0003B4  6F89               	movwf	(_pFlash+1)& (0+255),b
  6499  0003B6  0E00               	movlw	0
  6500  0003B8  6F88               	movwf	_pFlash& (0+255),b
  6501                           
  6502                           ;hardware.c: 384: pFlashCount = 0;
  6503  0003BA  0E00               	movlw	0
  6504  0003BC  0100               	movlb	0	; () banked
  6505  0003BE  6F8B               	movwf	(_pFlashCount+1)& (0+255),b
  6506  0003C0  0E00               	movlw	0
  6507  0003C2  6F8A               	movwf	_pFlashCount& (0+255),b
  6508                           
  6509                           ;hardware.c: 385: savePend = 1;
  6510  0003C4  0E00               	movlw	0
  6511  0003C6  0100               	movlb	0	; () banked
  6512  0003C8  6F8F               	movwf	(_savePend+1)& (0+255),b
  6513  0003CA  0E01               	movlw	1
  6514  0003CC  6F8E               	movwf	_savePend& (0+255),b
  6515                           
  6516                           ; BSR set to: 0
  6517                           ;hardware.c: 386: updatePresetLEDs(preset);
  6518  0003CE  C090  F029         	movff	_preset,updatePresetLEDs@psNum
  6519  0003D2  C091  F02A         	movff	_preset+1,updatePresetLEDs@psNum+1
  6520  0003D6  ECBC  F00A         	call	_updatePresetLEDs	;wreg free
  6521  0003DA  0012               	return	
  6522  0003DC                     __end_of_serviceSwitches:
  6523                           	opt stack 0
  6524                           pclatu	equ	0xFFB
  6525                           pclath	equ	0xFFA
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           intcon	equ	0xFF2
  6533                           postinc0	equ	0xFEE
  6534                           fsr0h	equ	0xFEA
  6535                           fsr0l	equ	0xFE9
  6536                           wreg	equ	0xFE8
  6537                           postinc1	equ	0xFE6
  6538                           postdec1	equ	0xFE5
  6539                           plusw1	equ	0xFE3
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           plusw2	equ	0xFDB
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function _processTaps *****************
  6551 ;; Defined at:
  6552 ;;		line 30 in file "hardware.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;  tapDiff         2   10[COMRAM] int 
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		wreg, status,2, status,0, cstack
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;Total ram usage:        4 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    1
  6573 ;; This function calls:
  6574 ;;		___awdiv
  6575 ;;		_maxTapCheck
  6576 ;;		i2_absVal
  6577 ;; This function is called by:
  6578 ;;		_serviceSwitches
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text30
  6583  000D90                     __ptext30:
  6584                           	opt stack 0
  6585  000D90                     _processTaps:
  6586                           	opt stack 24
  6587                           
  6588                           ;hardware.c: 32: int tapDiff = 0;
  6589                           
  6590                           ;incstack = 0
  6591  000D90  0E00               	movlw	0
  6592  000D92  6E34               	movwf	processTaps@tapDiff+1,c
  6593  000D94  0E00               	movlw	0
  6594  000D96  6E33               	movwf	processTaps@tapDiff,c
  6595                           
  6596                           ;hardware.c: 34: if (tap < 1)
  6597  000D98  BE02               	btfsc	_tap+1,7,c
  6598  000D9A  D005               	goto	i2u262_40
  6599  000D9C  5002               	movf	_tap+1,w,c
  6600  000D9E  E114               	bnz	i2l796
  6601  000DA0  0401               	decf	_tap,w,c
  6602  000DA2  B0D8               	btfsc	status,0,c
  6603  000DA4  D011               	goto	i2l796
  6604  000DA6                     i2u262_40:
  6605                           
  6606                           ;hardware.c: 35: {
  6607                           ;hardware.c: 36: T2CONbits.TMR2ON = 0x1;
  6608  000DA6  84CA               	bsf	4042,2,c	;volatile
  6609                           
  6610                           ;hardware.c: 37: tapAccum = 0;
  6611  000DA8  0E00               	movlw	0
  6612  000DAA  0100               	movlb	0	; () banked
  6613  000DAC  6F60               	movwf	_tapAccum& (0+255),b
  6614  000DAE  0E00               	movlw	0
  6615  000DB0  6F61               	movwf	(_tapAccum+1)& (0+255),b
  6616  000DB2  0E00               	movlw	0
  6617  000DB4  6F62               	movwf	(_tapAccum+2)& (0+255),b
  6618  000DB6  0E00               	movlw	0
  6619  000DB8  6F63               	movwf	(_tapAccum+3)& (0+255),b
  6620                           
  6621                           ;hardware.c: 38: tapPrev = 0;
  6622  000DBA  0E00               	movlw	0
  6623  000DBC  6E04               	movwf	_tapPrev+1,c
  6624  000DBE  0E00               	movlw	0
  6625  000DC0  6E03               	movwf	_tapPrev,c
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;hardware.c: 39: tap++;
  6629  000DC2  4A01               	infsnz	_tap,f,c
  6630  000DC4  2A02               	incf	_tap+1,f,c
  6631                           
  6632                           ;hardware.c: 40: }
  6633  000DC6  D05C               	goto	i2l797
  6634  000DC8                     i2l796:
  6635                           
  6636                           ;hardware.c: 41: else
  6637                           ;hardware.c: 42: {
  6638                           ;hardware.c: 43: T2CONbits.TMR2ON = 0;
  6639  000DC8  94CA               	bcf	4042,2,c	;volatile
  6640                           
  6641                           ;hardware.c: 44: tapFlash = 1;
  6642  000DCA  0E00               	movlw	0
  6643  000DCC  0100               	movlb	0	; () banked
  6644  000DCE  6F87               	movwf	(_tapFlash+1)& (0+255),b
  6645  000DD0  0E01               	movlw	1
  6646  000DD2  6F86               	movwf	_tapFlash& (0+255),b
  6647                           
  6648                           ;hardware.c: 45: tapDispCount = 0;
  6649  000DD4  0E00               	movlw	0
  6650  000DD6  6E16               	movwf	_tapDispCount+1,c
  6651  000DD8  0E00               	movlw	0
  6652  000DDA  6E15               	movwf	_tapDispCount,c
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;hardware.c: 46: LATE0 = 0x1;
  6656  000DDC  808D               	bsf	3981,0,c	;volatile
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;hardware.c: 48: if (tap < 2)
  6660  000DDE  BE02               	btfsc	_tap+1,7,c
  6661  000DE0  D006               	goto	i2u263_40
  6662  000DE2  5002               	movf	_tap+1,w,c
  6663  000DE4  E111               	bnz	i2l3267
  6664  000DE6  0E02               	movlw	2
  6665  000DE8  5C01               	subwf	_tap,w,c
  6666  000DEA  B0D8               	btfsc	status,0,c
  6667  000DEC  D00D               	goto	i2l798
  6668  000DEE                     i2u263_40:
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;hardware.c: 49: {
  6672                           ;hardware.c: 50: currentTapTime = tapTimeCount;
  6673  000DEE  C005  F0EF         	movff	_tapTimeCount,_currentTapTime
  6674  000DF2  C006  F0F0         	movff	_tapTimeCount+1,_currentTapTime+1
  6675                           
  6676                           ;hardware.c: 51: tapPrev = tapTimeCount;
  6677  000DF6  C005  F003         	movff	_tapTimeCount,_tapPrev
  6678  000DFA  C006  F004         	movff	_tapTimeCount+1,_tapPrev+1
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;hardware.c: 52: tap++;
  6682  000DFE  4A01               	infsnz	_tap,f,c
  6683  000E00  2A02               	incf	_tap+1,f,c
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;hardware.c: 53: maxTapCheck();
  6687  000E02  EC22  F00B         	call	_maxTapCheck	;wreg free
  6688                           
  6689                           ;hardware.c: 54: }
  6690  000E06  D03B               	goto	i2l801
  6691  000E08                     i2l798:
  6692  000E08                     i2l3267:
  6693                           
  6694                           ;hardware.c: 55: else
  6695                           ;hardware.c: 56: {
  6696                           ;hardware.c: 57: tapDiff = tapTimeCount - tapPrev;
  6697  000E08  C003  F031         	movff	_tapPrev,??_processTaps
  6698  000E0C  C004  F032         	movff	_tapPrev+1,??_processTaps+1
  6699  000E10  1E31               	comf	??_processTaps,f,c
  6700  000E12  1E32               	comf	??_processTaps+1,f,c
  6701  000E14  4A31               	infsnz	??_processTaps,f,c
  6702  000E16  2A32               	incf	??_processTaps+1,f,c
  6703  000E18  5005               	movf	_tapTimeCount,w,c
  6704  000E1A  2431               	addwf	??_processTaps,w,c
  6705  000E1C  6E33               	movwf	processTaps@tapDiff,c
  6706  000E1E  5006               	movf	_tapTimeCount+1,w,c
  6707  000E20  2032               	addwfc	??_processTaps+1,w,c
  6708  000E22  6E34               	movwf	processTaps@tapDiff+1,c
  6709                           
  6710                           ;hardware.c: 58: tapDiff = absVal(tapDiff);
  6711  000E24  C033  F029         	movff	processTaps@tapDiff,i2absVal@val
  6712  000E28  C034  F02A         	movff	processTaps@tapDiff+1,i2absVal@val+1
  6713  000E2C  EC1E  F00C         	call	i2_absVal	;wreg free
  6714  000E30  C029  F033         	movff	?i2_absVal,processTaps@tapDiff
  6715  000E34  C02A  F034         	movff	?i2_absVal+1,processTaps@tapDiff+1
  6716                           
  6717                           ;hardware.c: 59: if (tapDiff >= 500)
  6718  000E38  BE34               	btfsc	processTaps@tapDiff+1,7,c
  6719  000E3A  D00B               	goto	i2l800
  6720  000E3C  0EF4               	movlw	244
  6721  000E3E  5C33               	subwf	processTaps@tapDiff,w,c
  6722  000E40  0E01               	movlw	1
  6723  000E42  5834               	subwfb	processTaps@tapDiff+1,w,c
  6724  000E44  A0D8               	btfss	status,0,c
  6725  000E46  D005               	goto	i2l800
  6726                           
  6727                           ;hardware.c: 60: {
  6728                           ;hardware.c: 61: tap = 1;
  6729  000E48  0E00               	movlw	0
  6730  000E4A  6E02               	movwf	_tap+1,c
  6731  000E4C  0E01               	movlw	1
  6732  000E4E  6E01               	movwf	_tap,c
  6733                           
  6734                           ;hardware.c: 62: }
  6735  000E50  D016               	goto	i2l801
  6736  000E52                     i2l800:
  6737                           
  6738                           ;hardware.c: 63: else
  6739                           ;hardware.c: 64: {
  6740                           ;hardware.c: 65: currentTapTime = (tapTimeCount + tapPrev)/2;
  6741  000E52  5003               	movf	_tapPrev,w,c
  6742  000E54  2405               	addwf	_tapTimeCount,w,c
  6743  000E56  6E29               	movwf	___awdiv@dividend,c
  6744  000E58  5004               	movf	_tapPrev+1,w,c
  6745  000E5A  2006               	addwfc	_tapTimeCount+1,w,c
  6746  000E5C  6E2A               	movwf	___awdiv@dividend+1,c
  6747  000E5E  0E00               	movlw	0
  6748  000E60  6E2C               	movwf	___awdiv@divisor+1,c
  6749  000E62  0E02               	movlw	2
  6750  000E64  6E2B               	movwf	___awdiv@divisor,c
  6751  000E66  EC7A  F00A         	call	___awdiv	;wreg free
  6752  000E6A  C029  F0EF         	movff	?___awdiv,_currentTapTime
  6753  000E6E  C02A  F0F0         	movff	?___awdiv+1,_currentTapTime+1
  6754                           
  6755                           ;hardware.c: 66: tapPrev = tapTimeCount;
  6756  000E72  C005  F003         	movff	_tapTimeCount,_tapPrev
  6757  000E76  C006  F004         	movff	_tapTimeCount+1,_tapPrev+1
  6758                           
  6759                           ;hardware.c: 67: tap++;
  6760  000E7A  4A01               	infsnz	_tap,f,c
  6761  000E7C  2A02               	incf	_tap+1,f,c
  6762  000E7E                     i2l801:
  6763                           
  6764                           ;hardware.c: 68: }
  6765                           ;hardware.c: 69: }
  6766                           ;hardware.c: 70: T2CONbits.TMR2ON = 1;
  6767  000E7E  84CA               	bsf	4042,2,c	;volatile
  6768  000E80                     i2l797:
  6769                           
  6770                           ;hardware.c: 71: }
  6771                           ;hardware.c: 72: tapTimeCount = 0;
  6772  000E80  0E00               	movlw	0
  6773  000E82  6E06               	movwf	_tapTimeCount+1,c
  6774  000E84  0E00               	movlw	0
  6775  000E86  6E05               	movwf	_tapTimeCount,c
  6776  000E88  0012               	return		;funcret
  6777  000E8A                     __end_of_processTaps:
  6778                           	opt stack 0
  6779                           pclatu	equ	0xFFB
  6780                           pclath	equ	0xFFA
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           postinc0	equ	0xFEE
  6789                           fsr0h	equ	0xFEA
  6790                           fsr0l	equ	0xFE9
  6791                           wreg	equ	0xFE8
  6792                           postinc1	equ	0xFE6
  6793                           postdec1	equ	0xFE5
  6794                           plusw1	equ	0xFE3
  6795                           fsr1h	equ	0xFE2
  6796                           fsr1l	equ	0xFE1
  6797                           indf2	equ	0xFDF
  6798                           postinc2	equ	0xFDE
  6799                           postdec2	equ	0xFDD
  6800                           plusw2	equ	0xFDB
  6801                           fsr2h	equ	0xFDA
  6802                           fsr2l	equ	0xFD9
  6803                           status	equ	0xFD8
  6804                           
  6805 ;; *************** function i2_absVal *****************
  6806 ;; Defined at:
  6807 ;;		line 175 in file "main.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  val             2    0[COMRAM] int 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2    0[COMRAM] int 
  6814 ;; Registers used:
  6815 ;;		wreg, status,2, status,0
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;Total ram usage:        4 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; This function calls:
  6828 ;;		Nothing
  6829 ;; This function is called by:
  6830 ;;		_processTaps
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text31
  6835  00183C                     __ptext31:
  6836                           	opt stack 0
  6837  00183C                     i2_absVal:
  6838                           	opt stack 24
  6839                           
  6840                           ;main.c: 177: if (val < 0)
  6841                           
  6842                           ;incstack = 0
  6843  00183C  AE2A               	btfss	i2absVal@val+1,7,c
  6844  00183E  D00D               	goto	i2l168
  6845                           
  6846                           ;main.c: 178: return -val;
  6847  001840  C029  F02B         	movff	i2absVal@val,??i2_absVal
  6848  001844  C02A  F02C         	movff	i2absVal@val+1,??i2_absVal+1
  6849  001848  1E2B               	comf	??i2_absVal,f,c
  6850  00184A  1E2C               	comf	??i2_absVal+1,f,c
  6851  00184C  4A2B               	infsnz	??i2_absVal,f,c
  6852  00184E  2A2C               	incf	??i2_absVal+1,f,c
  6853  001850  C02B  F029         	movff	??i2_absVal,?i2_absVal
  6854  001854  C02C  F02A         	movff	??i2_absVal+1,?i2_absVal+1
  6855  001858  0012               	return	
  6856  00185A                     i2l168:
  6857                           
  6858                           ;main.c: 179: else return val;
  6859  00185A  C029  F029         	movff	i2absVal@val,?i2_absVal
  6860  00185E  C02A  F02A         	movff	i2absVal@val+1,?i2_absVal+1
  6861  001862  0012               	return	
  6862  001864                     __end_ofi2_absVal:
  6863                           	opt stack 0
  6864                           pclatu	equ	0xFFB
  6865                           pclath	equ	0xFFA
  6866                           tblptru	equ	0xFF8
  6867                           tblptrh	equ	0xFF7
  6868                           tblptrl	equ	0xFF6
  6869                           tablat	equ	0xFF5
  6870                           prodh	equ	0xFF4
  6871                           prodl	equ	0xFF3
  6872                           intcon	equ	0xFF2
  6873                           postinc0	equ	0xFEE
  6874                           fsr0h	equ	0xFEA
  6875                           fsr0l	equ	0xFE9
  6876                           wreg	equ	0xFE8
  6877                           postinc1	equ	0xFE6
  6878                           postdec1	equ	0xFE5
  6879                           plusw1	equ	0xFE3
  6880                           fsr1h	equ	0xFE2
  6881                           fsr1l	equ	0xFE1
  6882                           indf2	equ	0xFDF
  6883                           postinc2	equ	0xFDE
  6884                           postdec2	equ	0xFDD
  6885                           plusw2	equ	0xFDB
  6886                           fsr2h	equ	0xFDA
  6887                           fsr2l	equ	0xFD9
  6888                           status	equ	0xFD8
  6889                           
  6890 ;; *************** function _maxTapCheck *****************
  6891 ;; Defined at:
  6892 ;;		line 15 in file "hardware.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;Total ram usage:        0 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_processTaps
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           	psect	text32
  6920  001644                     __ptext32:
  6921                           	opt stack 0
  6922  001644                     _maxTapCheck:
  6923                           	opt stack 24
  6924                           
  6925                           ;hardware.c: 17: if (tapTimeCount > 3000)
  6926                           
  6927                           ;incstack = 0
  6928  001644  BE06               	btfsc	_tapTimeCount+1,7,c
  6929  001646  D00F               	goto	i2l790
  6930  001648  0EB9               	movlw	185
  6931  00164A  5C05               	subwf	_tapTimeCount,w,c
  6932  00164C  0E0B               	movlw	11
  6933  00164E  5806               	subwfb	_tapTimeCount+1,w,c
  6934  001650  A0D8               	btfss	status,0,c
  6935  001652  D009               	goto	i2l790
  6936                           
  6937                           ;hardware.c: 18: {
  6938                           ;hardware.c: 19: tapTimeCount = 0;
  6939  001654  0E00               	movlw	0
  6940  001656  6E06               	movwf	_tapTimeCount+1,c
  6941  001658  0E00               	movlw	0
  6942  00165A  6E05               	movwf	_tapTimeCount,c
  6943                           
  6944                           ;hardware.c: 20: tap = 0;
  6945  00165C  0E00               	movlw	0
  6946  00165E  6E02               	movwf	_tap+1,c
  6947  001660  0E00               	movlw	0
  6948  001662  6E01               	movwf	_tap,c
  6949                           
  6950                           ;hardware.c: 21: }
  6951  001664  0012               	return	
  6952  001666                     i2l790:
  6953                           
  6954                           ;hardware.c: 22: else if (tapTimeCount >= 1500)
  6955  001666  BE06               	btfsc	_tapTimeCount+1,7,c
  6956  001668  0012               	return	
  6957  00166A  0EDC               	movlw	220
  6958  00166C  5C05               	subwf	_tapTimeCount,w,c
  6959  00166E  0E05               	movlw	5
  6960  001670  5806               	subwfb	_tapTimeCount+1,w,c
  6961  001672  A0D8               	btfss	status,0,c
  6962  001674  0012               	return	
  6963                           
  6964                           ;hardware.c: 23: {
  6965                           ;hardware.c: 24: newTempo = 1;
  6966  001676  0E00               	movlw	0
  6967  001678  0100               	movlb	0	; () banked
  6968  00167A  6F6B               	movwf	(_newTempo+1)& (0+255),b
  6969  00167C  0E01               	movlw	1
  6970  00167E  6F6A               	movwf	_newTempo& (0+255),b
  6971                           
  6972                           ;hardware.c: 25: tap = 0;
  6973  001680  0E00               	movlw	0
  6974  001682  6E02               	movwf	_tap+1,c
  6975  001684  0E00               	movlw	0
  6976  001686  6E01               	movwf	_tap,c
  6977                           
  6978                           ;hardware.c: 26: currentTapTime = 1500;
  6979  001688  0E05               	movlw	5
  6980  00168A  0100               	movlb	0	; () banked
  6981  00168C  6FF0               	movwf	(_currentTapTime+1)& (0+255),b
  6982  00168E  0EDC               	movlw	220
  6983  001690  6FEF               	movwf	_currentTapTime& (0+255),b
  6984                           
  6985                           ; BSR set to: 0
  6986  001692  0012               	return	
  6987  001694                     __end_of_maxTapCheck:
  6988                           	opt stack 0
  6989                           pclatu	equ	0xFFB
  6990                           pclath	equ	0xFFA
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodh	equ	0xFF4
  6996                           prodl	equ	0xFF3
  6997                           intcon	equ	0xFF2
  6998                           postinc0	equ	0xFEE
  6999                           fsr0h	equ	0xFEA
  7000                           fsr0l	equ	0xFE9
  7001                           wreg	equ	0xFE8
  7002                           postinc1	equ	0xFE6
  7003                           postdec1	equ	0xFE5
  7004                           plusw1	equ	0xFE3
  7005                           fsr1h	equ	0xFE2
  7006                           fsr1l	equ	0xFE1
  7007                           indf2	equ	0xFDF
  7008                           postinc2	equ	0xFDE
  7009                           postdec2	equ	0xFDD
  7010                           plusw2	equ	0xFDB
  7011                           fsr2h	equ	0xFDA
  7012                           fsr2l	equ	0xFD9
  7013                           status	equ	0xFD8
  7014                           
  7015 ;; *************** function ___awdiv *****************
  7016 ;; Defined at:
  7017 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/awdiv.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  dividend        2    0[COMRAM] int 
  7020 ;;  divisor         2    2[COMRAM] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  quotient        2    6[COMRAM] int 
  7023 ;;  sign            1    5[COMRAM] unsigned char 
  7024 ;;  counter         1    4[COMRAM] unsigned char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  2    0[COMRAM] int 
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;Total ram usage:        8 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_processTaps
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text33
  7048  0014F4                     __ptext33:
  7049                           	opt stack 0
  7050  0014F4                     ___awdiv:
  7051                           	opt stack 24
  7052                           
  7053                           ;incstack = 0
  7054  0014F4  0E00               	movlw	0
  7055  0014F6  6E2E               	movwf	___awdiv@sign,c
  7056  0014F8  AE2C               	btfss	___awdiv@divisor+1,7,c
  7057  0014FA  D006               	goto	i2l1441
  7058  0014FC  6C2B               	negf	___awdiv@divisor,c
  7059  0014FE  1E2C               	comf	___awdiv@divisor+1,f,c
  7060  001500  B0D8               	btfsc	status,0,c
  7061  001502  2A2C               	incf	___awdiv@divisor+1,f,c
  7062  001504  0E01               	movlw	1
  7063  001506  6E2E               	movwf	___awdiv@sign,c
  7064  001508                     i2l1441:
  7065  001508  AE2A               	btfss	___awdiv@dividend+1,7,c
  7066  00150A  D006               	goto	i2l1442
  7067  00150C  6C29               	negf	___awdiv@dividend,c
  7068  00150E  1E2A               	comf	___awdiv@dividend+1,f,c
  7069  001510  B0D8               	btfsc	status,0,c
  7070  001512  2A2A               	incf	___awdiv@dividend+1,f,c
  7071  001514  0E01               	movlw	1
  7072  001516  1A2E               	xorwf	___awdiv@sign,f,c
  7073  001518                     i2l1442:
  7074  001518  0E00               	movlw	0
  7075  00151A  6E30               	movwf	___awdiv@quotient+1,c
  7076  00151C  0E00               	movlw	0
  7077  00151E  6E2F               	movwf	___awdiv@quotient,c
  7078  001520  502B               	movf	___awdiv@divisor,w,c
  7079  001522  102C               	iorwf	___awdiv@divisor+1,w,c
  7080  001524  B4D8               	btfsc	status,2,c
  7081  001526  D01C               	goto	i2l1449
  7082  001528  0E01               	movlw	1
  7083  00152A  6E2D               	movwf	___awdiv@counter,c
  7084  00152C  D004               	goto	i2l1444
  7085  00152E  90D8               	bcf	status,0,c
  7086  001530  362B               	rlcf	___awdiv@divisor,f,c
  7087  001532  362C               	rlcf	___awdiv@divisor+1,f,c
  7088  001534  2A2D               	incf	___awdiv@counter,f,c
  7089  001536                     i2l1444:
  7090  001536  AE2C               	btfss	___awdiv@divisor+1,7,c
  7091  001538  D7FA               	goto	i2l1445
  7092  00153A                     i2u226_40:
  7093  00153A  90D8               	bcf	status,0,c
  7094  00153C  362F               	rlcf	___awdiv@quotient,f,c
  7095  00153E  3630               	rlcf	___awdiv@quotient+1,f,c
  7096  001540  502B               	movf	___awdiv@divisor,w,c
  7097  001542  5C29               	subwf	___awdiv@dividend,w,c
  7098  001544  502C               	movf	___awdiv@divisor+1,w,c
  7099  001546  582A               	subwfb	___awdiv@dividend+1,w,c
  7100  001548  A0D8               	btfss	status,0,c
  7101  00154A  D005               	goto	i2l1448
  7102  00154C  502B               	movf	___awdiv@divisor,w,c
  7103  00154E  5E29               	subwf	___awdiv@dividend,f,c
  7104  001550  502C               	movf	___awdiv@divisor+1,w,c
  7105  001552  5A2A               	subwfb	___awdiv@dividend+1,f,c
  7106  001554  802F               	bsf	___awdiv@quotient,0,c
  7107  001556                     i2l1448:
  7108  001556  90D8               	bcf	status,0,c
  7109  001558  322C               	rrcf	___awdiv@divisor+1,f,c
  7110  00155A  322B               	rrcf	___awdiv@divisor,f,c
  7111  00155C  2E2D               	decfsz	___awdiv@counter,f,c
  7112  00155E  D7ED               	goto	i2u226_40
  7113  001560                     i2l1449:
  7114  001560  502E               	movf	___awdiv@sign,w,c
  7115  001562  B4D8               	btfsc	status,2,c
  7116  001564  D004               	goto	i2l1450
  7117  001566  6C2F               	negf	___awdiv@quotient,c
  7118  001568  1E30               	comf	___awdiv@quotient+1,f,c
  7119  00156A  B0D8               	btfsc	status,0,c
  7120  00156C  2A30               	incf	___awdiv@quotient+1,f,c
  7121  00156E                     i2l1450:
  7122  00156E  C02F  F029         	movff	___awdiv@quotient,?___awdiv
  7123  001572  C030  F02A         	movff	___awdiv@quotient+1,?___awdiv+1
  7124  001576  0012               	return	
  7125  001578                     __end_of___awdiv:
  7126                           	opt stack 0
  7127                           pclatu	equ	0xFFB
  7128                           pclath	equ	0xFFA
  7129                           tblptru	equ	0xFF8
  7130                           tblptrh	equ	0xFF7
  7131                           tblptrl	equ	0xFF6
  7132                           tablat	equ	0xFF5
  7133                           prodh	equ	0xFF4
  7134                           prodl	equ	0xFF3
  7135                           intcon	equ	0xFF2
  7136                           postinc0	equ	0xFEE
  7137                           fsr0h	equ	0xFEA
  7138                           fsr0l	equ	0xFE9
  7139                           wreg	equ	0xFE8
  7140                           postinc1	equ	0xFE6
  7141                           postdec1	equ	0xFE5
  7142                           plusw1	equ	0xFE3
  7143                           fsr1h	equ	0xFE2
  7144                           fsr1l	equ	0xFE1
  7145                           indf2	equ	0xFDF
  7146                           postinc2	equ	0xFDE
  7147                           postdec2	equ	0xFDD
  7148                           plusw2	equ	0xFDB
  7149                           fsr2h	equ	0xFDA
  7150                           fsr2l	equ	0xFD9
  7151                           status	equ	0xFD8
  7152                           
  7153 ;; *************** function _sendParam *****************
  7154 ;; Defined at:
  7155 ;;		line 261 in file "serial.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  n               2    2[COMRAM] int 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;Total ram usage:        4 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_highPriorityISR
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text34
  7183  00107E                     __ptext34:
  7184                           	opt stack 0
  7185  00107E                     _sendParam:
  7186                           	opt stack 26
  7187                           
  7188                           ;serial.c: 263: int n = 0;
  7189                           
  7190                           ;incstack = 0
  7191  00107E  0E00               	movlw	0
  7192  001080  6E2C               	movwf	sendParam@n+1,c
  7193  001082  0E00               	movlw	0
  7194  001084  6E2B               	movwf	sendParam@n,c
  7195                           
  7196                           ;serial.c: 265: dataTarget = SSP2BUF;
  7197  001086  CF03 F07C          	movff	3843,_dataTarget	;volatile
  7198  00108A  0100               	movlb	0	; () banked
  7199  00108C  6B7D               	clrf	(_dataTarget+1)& (0+255),b
  7200                           
  7201                           ;serial.c: 267: for (n = 0; n < 13; n++)
  7202  00108E  0E00               	movlw	0
  7203  001090  6E2C               	movwf	sendParam@n+1,c
  7204  001092  0E00               	movlw	0
  7205  001094  6E2B               	movwf	sendParam@n,c
  7206                           
  7207                           ; BSR set to: 0
  7208  001096  BE2C               	btfsc	sendParam@n+1,7,c
  7209  001098  D003               	goto	i2l1268
  7210  00109A  502C               	movf	sendParam@n+1,w,c
  7211  00109C  E135               	bnz	i2l1269
  7212  00109E  D030               	goto	L1
  7213  0010A0                     i2l1268:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;serial.c: 268: {
  7217                           ;serial.c: 269: if (dataTarget == paramAddress[n])
  7218                           
  7219                           ; BSR set to: 0
  7220  0010A0  90D8               	bcf	status,0,c
  7221  0010A2  342B               	rlcf	sendParam@n,w,c
  7222  0010A4  6ED9               	movwf	fsr2l,c
  7223  0010A6  342C               	rlcf	sendParam@n+1,w,c
  7224  0010A8  6EDA               	movwf	fsr2h,c
  7225  0010AA  0E78               	movlw	low _paramAddress
  7226  0010AC  26D9               	addwf	fsr2l,f,c
  7227  0010AE  0E01               	movlw	high _paramAddress
  7228  0010B0  22DA               	addwfc	fsr2h,f,c
  7229  0010B2  0100               	movlb	0	; () banked
  7230  0010B4  517C               	movf	_dataTarget& (0+255),w,b
  7231  0010B6  18DE               	xorwf	postinc2,w,c
  7232  0010B8  E11D               	bnz	i2l3363
  7233  0010BA  0100               	movlb	0	; () banked
  7234  0010BC  517D               	movf	(_dataTarget+1)& (0+255),w,b
  7235  0010BE  18DE               	xorwf	postinc2,w,c
  7236  0010C0  A4D8               	btfss	status,2,c
  7237  0010C2  D018               	goto	i2l1270
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;serial.c: 270: {
  7241                           ;serial.c: 271: if (n == 12)
  7242  0010C4  0E0C               	movlw	12
  7243  0010C6  182B               	xorwf	sendParam@n,w,c
  7244  0010C8  102C               	iorwf	sendParam@n+1,w,c
  7245  0010CA  A4D8               	btfss	status,2,c
  7246  0010CC  D005               	goto	i2l1271
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;serial.c: 272: {
  7250                           ;serial.c: 273: dataPtr = setupComplete;
  7251  0010CE  C066  F07A         	movff	_setupComplete,_dataPtr
  7252  0010D2  C067  F07B         	movff	_setupComplete+1,_dataPtr+1
  7253                           
  7254                           ;serial.c: 274: }
  7255  0010D6  D018               	goto	i2u282_40
  7256  0010D8                     i2l1271:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;serial.c: 275: else dataPtr = parameter[n];
  7260                           
  7261                           ; BSR set to: 0
  7262  0010D8  90D8               	bcf	status,0,c
  7263  0010DA  342B               	rlcf	sendParam@n,w,c
  7264  0010DC  6ED9               	movwf	fsr2l,c
  7265  0010DE  342C               	rlcf	sendParam@n+1,w,c
  7266  0010E0  6EDA               	movwf	fsr2h,c
  7267  0010E2  0EA0               	movlw	low _parameter
  7268  0010E4  26D9               	addwf	fsr2l,f,c
  7269  0010E6  0E00               	movlw	high _parameter
  7270  0010E8  22DA               	addwfc	fsr2h,f,c
  7271  0010EA  CFDE F07A          	movff	postinc2,_dataPtr
  7272  0010EE  CFDD F07B          	movff	postdec2,_dataPtr+1
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;serial.c: 276: break;
  7276  0010F2  D00A               	goto	i2u282_40
  7277  0010F4                     i2l1270:
  7278  0010F4                     i2l3363:
  7279                           
  7280                           ; BSR set to: 0
  7281  0010F4  4A2B               	infsnz	sendParam@n,f,c
  7282  0010F6  2A2C               	incf	sendParam@n+1,f,c
  7283                           
  7284                           ; BSR set to: 0
  7285  0010F8  BE2C               	btfsc	sendParam@n+1,7,c
  7286  0010FA  D7D2               	goto	i2l1268
  7287  0010FC  502C               	movf	sendParam@n+1,w,c
  7288  0010FE  E104               	bnz	i2u282_40
  7289  001100                     L1:
  7290  001100  0E0D               	movlw	13
  7291  001102  5C2B               	subwf	sendParam@n,w,c
  7292  001104  A0D8               	btfss	status,0,c
  7293  001106  D7CC               	goto	i2l1268
  7294  001108                     i2u282_40:
  7295  001108                     i2l1269:
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;serial.c: 277: }
  7299                           ;serial.c: 278: }
  7300                           ;serial.c: 280: SSP2BUF = dataPtr;
  7301  001108  C07A  FF03         	movff	_dataPtr,3843	;volatile
  7302                           
  7303                           ;serial.c: 281: SSP2CON1bits.CKP = 0x1;
  7304  00110C  010F               	movlb	15	; () banked
  7305  00110E  8919               	bsf	25,4,b	;volatile
  7306                           
  7307                           ;serial.c: 282: PIR2bits.SSP2IF = 0x0;
  7308  001110  9CA1               	bcf	4001,6,c	;volatile
  7309                           
  7310                           ; BSR set to: 15
  7311  001112  0012               	return		;funcret
  7312  001114                     __end_of_sendParam:
  7313                           	opt stack 0
  7314                           pclatu	equ	0xFFB
  7315                           pclath	equ	0xFFA
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           postinc0	equ	0xFEE
  7324                           fsr0h	equ	0xFEA
  7325                           fsr0l	equ	0xFE9
  7326                           wreg	equ	0xFE8
  7327                           postinc1	equ	0xFE6
  7328                           postdec1	equ	0xFE5
  7329                           plusw1	equ	0xFE3
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           postdec2	equ	0xFDD
  7335                           plusw2	equ	0xFDB
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function _flashLED *****************
  7341 ;; Defined at:
  7342 ;;		line 106 in file "hardware.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;Total ram usage:        2 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    1
  7363 ;; This function calls:
  7364 ;;		_updateLineLEDs
  7365 ;;		_updatePresetLEDs
  7366 ;;		i2___wmul
  7367 ;; This function is called by:
  7368 ;;		_highPriorityISR
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text35
  7373  0009E0                     __ptext35:
  7374                           	opt stack 0
  7375  0009E0                     _flashLED:
  7376                           	opt stack 25
  7377                           
  7378                           ;hardware.c: 108: if (presetPend)
  7379                           
  7380                           ; BSR set to: 15
  7381                           ;incstack = 0
  7382  0009E0  5017               	movf	_presetPend,w,c
  7383  0009E2  1018               	iorwf	_presetPend+1,w,c
  7384  0009E4  B4D8               	btfsc	status,2,c
  7385  0009E6  D029               	goto	i2l813
  7386                           
  7387                           ;hardware.c: 109: {
  7388                           ;hardware.c: 110: pFlashCount++;
  7389  0009E8  0100               	movlb	0	; () banked
  7390  0009EA  4B8A               	infsnz	_pFlashCount& (0+255),f,b
  7391  0009EC  2B8B               	incf	(_pFlashCount+1)& (0+255),f,b
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;hardware.c: 111: if (pFlashCount > 150)
  7395  0009EE  0100               	movlb	0	; () banked
  7396  0009F0  BF8B               	btfsc	(_pFlashCount+1)& (0+255),7,b
  7397  0009F2  D023               	goto	i2l813
  7398  0009F4  0100               	movlb	0	; () banked
  7399  0009F6  518B               	movf	(_pFlashCount+1)& (0+255),w,b
  7400  0009F8  E105               	bnz	i2u287_40
  7401  0009FA  0E97               	movlw	151
  7402  0009FC  0100               	movlb	0	; () banked
  7403  0009FE  5D8A               	subwf	_pFlashCount& (0+255),w,b
  7404  000A00  A0D8               	btfss	status,0,c
  7405  000A02  D01B               	goto	i2l813
  7406  000A04                     i2u287_40:
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;hardware.c: 112: {
  7410                           ;hardware.c: 113: if (pFlash)
  7411  000A04  0100               	movlb	0	; () banked
  7412  000A06  5188               	movf	_pFlash& (0+255),w,b
  7413  000A08  0100               	movlb	0	; () banked
  7414  000A0A  1189               	iorwf	(_pFlash+1)& (0+255),w,b
  7415  000A0C  B4D8               	btfsc	status,2,c
  7416  000A0E  D007               	goto	i2l814
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;hardware.c: 114: {
  7420                           ;hardware.c: 115: updatePresetLEDs(targPreset);
  7421  000A10  C019  F029         	movff	_targPreset,updatePresetLEDs@psNum
  7422  000A14  C01A  F02A         	movff	_targPreset+1,updatePresetLEDs@psNum+1
  7423  000A18  ECBC  F00A         	call	_updatePresetLEDs	;wreg free
  7424                           
  7425                           ;hardware.c: 116: }
  7426  000A1C  D006               	goto	i2l815
  7427  000A1E                     i2l814:
  7428                           
  7429                           ;hardware.c: 117: else
  7430                           ;hardware.c: 118: {
  7431                           ;hardware.c: 119: updatePresetLEDs(0);
  7432  000A1E  0E00               	movlw	0
  7433  000A20  6E2A               	movwf	updatePresetLEDs@psNum+1,c
  7434  000A22  0E00               	movlw	0
  7435  000A24  6E29               	movwf	updatePresetLEDs@psNum,c
  7436  000A26  ECBC  F00A         	call	_updatePresetLEDs	;wreg free
  7437  000A2A                     i2l815:
  7438                           
  7439                           ;hardware.c: 120: }
  7440                           ;hardware.c: 121: pFlash ^= 1;
  7441  000A2A  0E01               	movlw	1
  7442  000A2C  0100               	movlb	0	; () banked
  7443  000A2E  1B88               	xorwf	_pFlash& (0+255),f,b
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;hardware.c: 122: pFlashCount = 0;
  7447  000A30  0E00               	movlw	0
  7448  000A32  0100               	movlb	0	; () banked
  7449  000A34  6F8B               	movwf	(_pFlashCount+1)& (0+255),b
  7450  000A36  0E00               	movlw	0
  7451  000A38  6F8A               	movwf	_pFlashCount& (0+255),b
  7452  000A3A                     i2l813:
  7453                           
  7454                           ;hardware.c: 123: }
  7455                           ;hardware.c: 124: }
  7456                           ;hardware.c: 125: if ((armA + armB + armC) > 0)
  7457                           
  7458                           ; BSR set to: 0
  7459                           
  7460                           ; BSR set to: 0
  7461  000A3A  500F               	movf	_armB,w,c
  7462  000A3C  2411               	addwf	_armA,w,c
  7463  000A3E  6E35               	movwf	??_flashLED& (0+255),c
  7464  000A40  5010               	movf	_armB+1,w,c
  7465  000A42  2012               	addwfc	_armA+1,w,c
  7466  000A44  6E36               	movwf	(??_flashLED+1)& (0+255),c
  7467  000A46  500D               	movf	_armC,w,c
  7468  000A48  2635               	addwf	??_flashLED,f,c
  7469  000A4A  500E               	movf	_armC+1,w,c
  7470  000A4C  2236               	addwfc	??_flashLED+1,f,c
  7471  000A4E  BE36               	btfsc	??_flashLED+1,7,c
  7472  000A50  0012               	return	
  7473  000A52  5036               	movf	??_flashLED+1,w,c
  7474  000A54  E103               	bnz	i2u289_40
  7475  000A56  0435               	decf	??_flashLED,w,c
  7476  000A58  A0D8               	btfss	status,0,c
  7477  000A5A  0012               	return	
  7478  000A5C                     i2u289_40:
  7479                           
  7480                           ;hardware.c: 126: {
  7481                           ;hardware.c: 127: armFlashCount++;
  7482  000A5C  0100               	movlb	0	; () banked
  7483  000A5E  4B84               	infsnz	_armFlashCount& (0+255),f,b
  7484  000A60  2B85               	incf	(_armFlashCount+1)& (0+255),f,b
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;hardware.c: 128: if (armFlashCount > 500)
  7488  000A62  0100               	movlb	0	; () banked
  7489  000A64  BF85               	btfsc	(_armFlashCount+1)& (0+255),7,b
  7490  000A66  0012               	return	
  7491  000A68  0EF5               	movlw	245
  7492  000A6A  0100               	movlb	0	; () banked
  7493  000A6C  5D84               	subwf	_armFlashCount& (0+255),w,b
  7494  000A6E  0E01               	movlw	1
  7495  000A70  0100               	movlb	0	; () banked
  7496  000A72  5985               	subwfb	(_armFlashCount+1)& (0+255),w,b
  7497  000A74  A0D8               	btfss	status,0,c
  7498  000A76  0012               	return	
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;hardware.c: 129: {
  7502                           ;hardware.c: 130: armFlashCount = 0;
  7503  000A78  0E00               	movlw	0
  7504  000A7A  0100               	movlb	0	; () banked
  7505  000A7C  6F85               	movwf	(_armFlashCount+1)& (0+255),b
  7506  000A7E  0E00               	movlw	0
  7507  000A80  6F84               	movwf	_armFlashCount& (0+255),b
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;hardware.c: 131: if (armFlashToggle)
  7511  000A82  0100               	movlb	0	; () banked
  7512  000A84  5180               	movf	_armFlashToggle& (0+255),w,b
  7513  000A86  0100               	movlb	0	; () banked
  7514  000A88  1181               	iorwf	(_armFlashToggle+1)& (0+255),w,b
  7515  000A8A  B4D8               	btfsc	status,2,c
  7516  000A8C  D00F               	goto	i2l818
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;hardware.c: 132: {
  7520                           ;hardware.c: 133: updateLineLEDs(intA, intB, intC);
  7521  000A8E  C027  F02F         	movff	_intA,updateLineLEDs@lineA
  7522  000A92  C028  F030         	movff	_intA+1,updateLineLEDs@lineA+1
  7523  000A96  C025  F031         	movff	_intB,updateLineLEDs@lineB
  7524  000A9A  C026  F032         	movff	_intB+1,updateLineLEDs@lineB+1
  7525  000A9E  C023  F033         	movff	_intC,updateLineLEDs@lineC
  7526  000AA2  C024  F034         	movff	_intC+1,updateLineLEDs@lineC+1
  7527  000AA6  EC67  F009         	call	_updateLineLEDs	;wreg free
  7528                           
  7529                           ;hardware.c: 134: }
  7530  000AAA  D03B               	goto	i2l819
  7531  000AAC                     i2l818:
  7532                           
  7533                           ;hardware.c: 135: else updateLineLEDs((!armA*intA), (!armB*intB), (!armC*intC));
  7534  000AAC  5011               	movf	_armA,w,c
  7535  000AAE  1012               	iorwf	_armA+1,w,c
  7536  000AB0  A4D8               	btfss	status,2,c
  7537  000AB2  D002               	goto	i2u292_40
  7538  000AB4  0E01               	movlw	1
  7539  000AB6  D001               	goto	i2u293_40
  7540  000AB8                     i2u292_40:
  7541  000AB8  0E00               	movlw	0
  7542  000ABA                     i2u293_40:
  7543  000ABA  6E29               	movwf	i2___wmul@multiplier,c
  7544  000ABC  6A2A               	clrf	i2___wmul@multiplier+1,c
  7545  000ABE  C027  F02B         	movff	_intA,i2___wmul@multiplicand
  7546  000AC2  C028  F02C         	movff	_intA+1,i2___wmul@multiplicand+1
  7547  000AC6  EC32  F00C         	call	i2___wmul	;wreg free
  7548  000ACA  C029  F02F         	movff	?i2___wmul,updateLineLEDs@lineA
  7549  000ACE  C02A  F030         	movff	?i2___wmul+1,updateLineLEDs@lineA+1
  7550  000AD2  500F               	movf	_armB,w,c
  7551  000AD4  1010               	iorwf	_armB+1,w,c
  7552  000AD6  A4D8               	btfss	status,2,c
  7553  000AD8  D002               	goto	i2u294_40
  7554  000ADA  0E01               	movlw	1
  7555  000ADC  D001               	goto	i2u295_40
  7556  000ADE                     i2u294_40:
  7557  000ADE  0E00               	movlw	0
  7558  000AE0                     i2u295_40:
  7559  000AE0  6E29               	movwf	i2___wmul@multiplier,c
  7560  000AE2  6A2A               	clrf	i2___wmul@multiplier+1,c
  7561  000AE4  C025  F02B         	movff	_intB,i2___wmul@multiplicand
  7562  000AE8  C026  F02C         	movff	_intB+1,i2___wmul@multiplicand+1
  7563  000AEC  EC32  F00C         	call	i2___wmul	;wreg free
  7564  000AF0  C029  F031         	movff	?i2___wmul,updateLineLEDs@lineB
  7565  000AF4  C02A  F032         	movff	?i2___wmul+1,updateLineLEDs@lineB+1
  7566  000AF8  500D               	movf	_armC,w,c
  7567  000AFA  100E               	iorwf	_armC+1,w,c
  7568  000AFC  A4D8               	btfss	status,2,c
  7569  000AFE  D002               	goto	i2u296_40
  7570  000B00  0E01               	movlw	1
  7571  000B02  D001               	goto	i2u297_40
  7572  000B04                     i2u296_40:
  7573  000B04  0E00               	movlw	0
  7574  000B06                     i2u297_40:
  7575  000B06  6E29               	movwf	i2___wmul@multiplier,c
  7576  000B08  6A2A               	clrf	i2___wmul@multiplier+1,c
  7577  000B0A  C023  F02B         	movff	_intC,i2___wmul@multiplicand
  7578  000B0E  C024  F02C         	movff	_intC+1,i2___wmul@multiplicand+1
  7579  000B12  EC32  F00C         	call	i2___wmul	;wreg free
  7580  000B16  C029  F033         	movff	?i2___wmul,updateLineLEDs@lineC
  7581  000B1A  C02A  F034         	movff	?i2___wmul+1,updateLineLEDs@lineC+1
  7582  000B1E  EC67  F009         	call	_updateLineLEDs	;wreg free
  7583  000B22                     i2l819:
  7584                           
  7585                           ;hardware.c: 136: armFlashToggle ^= 1;
  7586  000B22  0E01               	movlw	1
  7587  000B24  0100               	movlb	0	; () banked
  7588  000B26  1B80               	xorwf	_armFlashToggle& (0+255),f,b
  7589                           
  7590                           ; BSR set to: 0
  7591  000B28  0012               	return	
  7592  000B2A                     __end_of_flashLED:
  7593                           	opt stack 0
  7594                           pclatu	equ	0xFFB
  7595                           pclath	equ	0xFFA
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           intcon	equ	0xFF2
  7603                           postinc0	equ	0xFEE
  7604                           fsr0h	equ	0xFEA
  7605                           fsr0l	equ	0xFE9
  7606                           wreg	equ	0xFE8
  7607                           postinc1	equ	0xFE6
  7608                           postdec1	equ	0xFE5
  7609                           plusw1	equ	0xFE3
  7610                           fsr1h	equ	0xFE2
  7611                           fsr1l	equ	0xFE1
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           plusw2	equ	0xFDB
  7616                           fsr2h	equ	0xFDA
  7617                           fsr2l	equ	0xFD9
  7618                           status	equ	0xFD8
  7619                           
  7620 ;; *************** function i2___wmul *****************
  7621 ;; Defined at:
  7622 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  multiplier      2    0[COMRAM] unsigned int 
  7625 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  __wmul          2    4[COMRAM] unsigned int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  2    0[COMRAM] unsigned int 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, prodl, prodh
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;Total ram usage:        6 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_flashLED
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text36
  7651  001864                     __ptext36:
  7652                           	opt stack 0
  7653  001864                     i2___wmul:
  7654                           	opt stack 25
  7655                           
  7656                           ;incstack = 0
  7657  001864  5029               	movf	i2___wmul@multiplier,w,c
  7658  001866  022B               	mulwf	i2___wmul@multiplicand,c
  7659  001868  CFF3 F02D          	movff	prodl,i2___wmul@product
  7660  00186C  CFF4 F02E          	movff	prodh,i2___wmul@product+1
  7661  001870  5029               	movf	i2___wmul@multiplier,w,c
  7662  001872  022C               	mulwf	i2___wmul@multiplicand+1,c
  7663  001874  50F3               	movf	prodl,w,c
  7664  001876  262E               	addwf	i2___wmul@product+1,f,c
  7665  001878  502A               	movf	i2___wmul@multiplier+1,w,c
  7666  00187A  022B               	mulwf	i2___wmul@multiplicand,c
  7667  00187C  50F3               	movf	prodl,w,c
  7668  00187E  262E               	addwf	i2___wmul@product+1,f,c
  7669  001880  C02D  F029         	movff	i2___wmul@product,?i2___wmul
  7670  001884  C02E  F02A         	movff	i2___wmul@product+1,?i2___wmul+1
  7671  001888  0012               	return	
  7672  00188A                     __end_ofi2___wmul:
  7673                           	opt stack 0
  7674                           pclatu	equ	0xFFB
  7675                           pclath	equ	0xFFA
  7676                           tblptru	equ	0xFF8
  7677                           tblptrh	equ	0xFF7
  7678                           tblptrl	equ	0xFF6
  7679                           tablat	equ	0xFF5
  7680                           prodh	equ	0xFF4
  7681                           prodl	equ	0xFF3
  7682                           intcon	equ	0xFF2
  7683                           postinc0	equ	0xFEE
  7684                           fsr0h	equ	0xFEA
  7685                           fsr0l	equ	0xFE9
  7686                           wreg	equ	0xFE8
  7687                           postinc1	equ	0xFE6
  7688                           postdec1	equ	0xFE5
  7689                           plusw1	equ	0xFE3
  7690                           fsr1h	equ	0xFE2
  7691                           fsr1l	equ	0xFE1
  7692                           indf2	equ	0xFDF
  7693                           postinc2	equ	0xFDE
  7694                           postdec2	equ	0xFDD
  7695                           plusw2	equ	0xFDB
  7696                           fsr2h	equ	0xFDA
  7697                           fsr2l	equ	0xFD9
  7698                           status	equ	0xFD8
  7699                           
  7700 ;; *************** function _updatePresetLEDs *****************
  7701 ;; Defined at:
  7702 ;;		line 598 in file "hardware.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  psNum           2    0[COMRAM] int 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;Total ram usage:        2 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_flashLED
  7726 ;;		_serviceSwitches
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           	psect	text37
  7731  001578                     __ptext37:
  7732                           	opt stack 0
  7733  001578                     _updatePresetLEDs:
  7734                           	opt stack 25
  7735                           
  7736                           ;hardware.c: 600: if (psNum == 1)
  7737                           
  7738                           ;incstack = 0
  7739  001578  0429               	decf	updatePresetLEDs@psNum,w,c
  7740  00157A  102A               	iorwf	updatePresetLEDs@psNum+1,w,c
  7741  00157C  A4D8               	btfss	status,2,c
  7742  00157E  D006               	goto	i2l934
  7743                           
  7744                           ;hardware.c: 601: {
  7745                           ;hardware.c: 602: LATD0 = 1;
  7746  001580  808C               	bsf	3980,0,c	;volatile
  7747                           
  7748                           ;hardware.c: 603: LATE7 = 0;
  7749  001582  9E8D               	bcf	3981,7,c	;volatile
  7750                           
  7751                           ;hardware.c: 604: LATE5 = 0;
  7752  001584  9A8D               	bcf	3981,5,c	;volatile
  7753                           
  7754                           ;hardware.c: 605: LATE4 = 0;
  7755  001586  988D               	bcf	3981,4,c	;volatile
  7756                           
  7757                           ;hardware.c: 606: LATH2 = 0;
  7758  001588  9490               	bcf	3984,2,c	;volatile
  7759                           
  7760                           ;hardware.c: 607: }
  7761  00158A  0012               	return	
  7762  00158C                     i2l934:
  7763                           
  7764                           ;hardware.c: 608: else if (psNum == 2)
  7765  00158C  0E02               	movlw	2
  7766  00158E  1829               	xorwf	updatePresetLEDs@psNum,w,c
  7767  001590  102A               	iorwf	updatePresetLEDs@psNum+1,w,c
  7768  001592  A4D8               	btfss	status,2,c
  7769  001594  D006               	goto	i2l936
  7770                           
  7771                           ;hardware.c: 609: {
  7772                           ;hardware.c: 610: LATD0 = 0;
  7773  001596  908C               	bcf	3980,0,c	;volatile
  7774                           
  7775                           ;hardware.c: 611: LATE7 = 1;
  7776  001598  8E8D               	bsf	3981,7,c	;volatile
  7777                           
  7778                           ;hardware.c: 612: LATE5 = 0;
  7779  00159A  9A8D               	bcf	3981,5,c	;volatile
  7780                           
  7781                           ;hardware.c: 613: LATE4 = 0;
  7782  00159C  988D               	bcf	3981,4,c	;volatile
  7783                           
  7784                           ;hardware.c: 614: LATH2 = 0;
  7785  00159E  9490               	bcf	3984,2,c	;volatile
  7786                           
  7787                           ;hardware.c: 615: }
  7788  0015A0  0012               	return	
  7789  0015A2                     i2l936:
  7790                           
  7791                           ;hardware.c: 616: else if (psNum == 3)
  7792  0015A2  0E03               	movlw	3
  7793  0015A4  1829               	xorwf	updatePresetLEDs@psNum,w,c
  7794  0015A6  102A               	iorwf	updatePresetLEDs@psNum+1,w,c
  7795  0015A8  A4D8               	btfss	status,2,c
  7796  0015AA  D006               	goto	i2l938
  7797                           
  7798                           ;hardware.c: 617: {
  7799                           ;hardware.c: 618: LATD0 = 0;
  7800  0015AC  908C               	bcf	3980,0,c	;volatile
  7801                           
  7802                           ;hardware.c: 619: LATE7 = 0;
  7803  0015AE  9E8D               	bcf	3981,7,c	;volatile
  7804                           
  7805                           ;hardware.c: 620: LATE5 = 1;
  7806  0015B0  8A8D               	bsf	3981,5,c	;volatile
  7807                           
  7808                           ;hardware.c: 621: LATE4 = 0;
  7809  0015B2  988D               	bcf	3981,4,c	;volatile
  7810                           
  7811                           ;hardware.c: 622: LATH2 = 0;
  7812  0015B4  9490               	bcf	3984,2,c	;volatile
  7813                           
  7814                           ;hardware.c: 623: }
  7815  0015B6  0012               	return	
  7816  0015B8                     i2l938:
  7817                           
  7818                           ;hardware.c: 624: else if (psNum == 4)
  7819  0015B8  0E04               	movlw	4
  7820  0015BA  1829               	xorwf	updatePresetLEDs@psNum,w,c
  7821  0015BC  102A               	iorwf	updatePresetLEDs@psNum+1,w,c
  7822  0015BE  A4D8               	btfss	status,2,c
  7823  0015C0  D006               	goto	i2l940
  7824                           
  7825                           ;hardware.c: 625: {
  7826                           ;hardware.c: 626: LATD0 = 0;
  7827  0015C2  908C               	bcf	3980,0,c	;volatile
  7828                           
  7829                           ;hardware.c: 627: LATE7 = 0;
  7830  0015C4  9E8D               	bcf	3981,7,c	;volatile
  7831                           
  7832                           ;hardware.c: 628: LATE5 = 0;
  7833  0015C6  9A8D               	bcf	3981,5,c	;volatile
  7834                           
  7835                           ;hardware.c: 629: LATE4 = 1;
  7836  0015C8  888D               	bsf	3981,4,c	;volatile
  7837                           
  7838                           ;hardware.c: 630: LATH2 = 0;
  7839  0015CA  9490               	bcf	3984,2,c	;volatile
  7840                           
  7841                           ;hardware.c: 631: }
  7842  0015CC  0012               	return	
  7843  0015CE                     i2l940:
  7844                           
  7845                           ;hardware.c: 632: else if (psNum == 5)
  7846  0015CE  0E05               	movlw	5
  7847  0015D0  1829               	xorwf	updatePresetLEDs@psNum,w,c
  7848  0015D2  102A               	iorwf	updatePresetLEDs@psNum+1,w,c
  7849  0015D4  A4D8               	btfss	status,2,c
  7850  0015D6  D006               	goto	i2l942
  7851                           
  7852                           ;hardware.c: 633: {
  7853                           ;hardware.c: 634: LATD0 = 0;
  7854  0015D8  908C               	bcf	3980,0,c	;volatile
  7855                           
  7856                           ;hardware.c: 635: LATE7 = 0;
  7857  0015DA  9E8D               	bcf	3981,7,c	;volatile
  7858                           
  7859                           ;hardware.c: 636: LATE5 = 0;
  7860  0015DC  9A8D               	bcf	3981,5,c	;volatile
  7861                           
  7862                           ;hardware.c: 637: LATE4 = 0;
  7863  0015DE  988D               	bcf	3981,4,c	;volatile
  7864                           
  7865                           ;hardware.c: 638: LATH2 = 1;
  7866  0015E0  8490               	bsf	3984,2,c	;volatile
  7867                           
  7868                           ;hardware.c: 639: }
  7869  0015E2  0012               	return	
  7870  0015E4                     i2l942:
  7871                           
  7872                           ;hardware.c: 640: else
  7873                           ;hardware.c: 641: {
  7874                           ;hardware.c: 642: LATD0 = 0;
  7875  0015E4  908C               	bcf	3980,0,c	;volatile
  7876                           
  7877                           ;hardware.c: 643: LATE7 = 0;
  7878  0015E6  9E8D               	bcf	3981,7,c	;volatile
  7879                           
  7880                           ;hardware.c: 644: LATE5 = 0;
  7881  0015E8  9A8D               	bcf	3981,5,c	;volatile
  7882                           
  7883                           ;hardware.c: 645: LATE4 = 0;
  7884  0015EA  988D               	bcf	3981,4,c	;volatile
  7885                           
  7886                           ;hardware.c: 646: LATH2 = 0;
  7887  0015EC  9490               	bcf	3984,2,c	;volatile
  7888  0015EE  0012               	return	
  7889  0015F0                     __end_of_updatePresetLEDs:
  7890                           	opt stack 0
  7891                           pclatu	equ	0xFFB
  7892                           pclath	equ	0xFFA
  7893                           tblptru	equ	0xFF8
  7894                           tblptrh	equ	0xFF7
  7895                           tblptrl	equ	0xFF6
  7896                           tablat	equ	0xFF5
  7897                           prodh	equ	0xFF4
  7898                           prodl	equ	0xFF3
  7899                           intcon	equ	0xFF2
  7900                           postinc0	equ	0xFEE
  7901                           fsr0h	equ	0xFEA
  7902                           fsr0l	equ	0xFE9
  7903                           wreg	equ	0xFE8
  7904                           postinc1	equ	0xFE6
  7905                           postdec1	equ	0xFE5
  7906                           plusw1	equ	0xFE3
  7907                           fsr1h	equ	0xFE2
  7908                           fsr1l	equ	0xFE1
  7909                           indf2	equ	0xFDF
  7910                           postinc2	equ	0xFDE
  7911                           postdec2	equ	0xFDD
  7912                           plusw2	equ	0xFDB
  7913                           fsr2h	equ	0xFDA
  7914                           fsr2l	equ	0xFD9
  7915                           status	equ	0xFD8
  7916                           
  7917 ;; *************** function _updateLineLEDs *****************
  7918 ;; Defined at:
  7919 ;;		line 532 in file "hardware.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;  lineA           2    6[COMRAM] int 
  7922 ;;  lineB           2    8[COMRAM] int 
  7923 ;;  lineC           2   10[COMRAM] int 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7935 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;Total ram usage:        6 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_flashLED
  7945 ;;		_serviceSwitches
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text38
  7950  0012CE                     __ptext38:
  7951                           	opt stack 0
  7952  0012CE                     _updateLineLEDs:
  7953                           	opt stack 25
  7954                           
  7955                           ;hardware.c: 534: if (lineA == 1)
  7956                           
  7957                           ;incstack = 0
  7958  0012CE  042F               	decf	updateLineLEDs@lineA,w,c
  7959  0012D0  1030               	iorwf	updateLineLEDs@lineA+1,w,c
  7960  0012D2  A4D8               	btfss	status,2,c
  7961  0012D4  D002               	goto	i2l913
  7962                           
  7963                           ;hardware.c: 535: {
  7964                           ;hardware.c: 536: LATH7 = 1;
  7965  0012D6  8E90               	bsf	3984,7,c	;volatile
  7966  0012D8  D010               	goto	L2
  7967  0012DA                     i2l913:
  7968                           
  7969                           ;hardware.c: 539: else if (lineA == 2)
  7970  0012DA  0E02               	movlw	2
  7971  0012DC  182F               	xorwf	updateLineLEDs@lineA,w,c
  7972  0012DE  1030               	iorwf	updateLineLEDs@lineA+1,w,c
  7973  0012E0  A4D8               	btfss	status,2,c
  7974  0012E2  D002               	goto	i2l915
  7975                           
  7976                           ;hardware.c: 540: {
  7977                           ;hardware.c: 541: LATH7 = 0;
  7978  0012E4  9E90               	bcf	3984,7,c	;volatile
  7979  0012E6  D006               	goto	L3
  7980  0012E8                     i2l915:
  7981                           
  7982                           ;hardware.c: 544: else if (lineA == 3)
  7983  0012E8  0E03               	movlw	3
  7984  0012EA  182F               	xorwf	updateLineLEDs@lineA,w,c
  7985  0012EC  1030               	iorwf	updateLineLEDs@lineA+1,w,c
  7986  0012EE  A4D8               	btfss	status,2,c
  7987  0012F0  D003               	goto	i2l917
  7988                           
  7989                           ;hardware.c: 545: {
  7990                           ;hardware.c: 546: LATH7 = 1;
  7991  0012F2  8E90               	bsf	3984,7,c	;volatile
  7992  0012F4                     L3:
  7993                           
  7994                           ;hardware.c: 547: LATF2 = 1;
  7995  0012F4  848E               	bsf	3982,2,c	;volatile
  7996                           
  7997                           ;hardware.c: 548: }
  7998  0012F6  D002               	goto	i2l918
  7999  0012F8                     i2l917:
  8000                           
  8001                           ;hardware.c: 549: else
  8002                           ;hardware.c: 550: {
  8003                           ;hardware.c: 551: LATH7 = 0;
  8004  0012F8  9E90               	bcf	3984,7,c	;volatile
  8005  0012FA                     L2:
  8006                           
  8007                           ;hardware.c: 552: LATF2 = 0;
  8008  0012FA  948E               	bcf	3982,2,c	;volatile
  8009  0012FC                     i2l918:
  8010                           
  8011                           ;hardware.c: 553: }
  8012                           ;hardware.c: 555: if (lineB == 1)
  8013  0012FC  0431               	decf	updateLineLEDs@lineB,w,c
  8014  0012FE  1032               	iorwf	updateLineLEDs@lineB+1,w,c
  8015  001300  A4D8               	btfss	status,2,c
  8016  001302  D002               	goto	i2l919
  8017                           
  8018                           ;hardware.c: 556: {
  8019                           ;hardware.c: 557: LATF5 = 1;
  8020  001304  8A8E               	bsf	3982,5,c	;volatile
  8021  001306  D010               	goto	L4
  8022  001308                     i2l919:
  8023                           
  8024                           ;hardware.c: 560: else if (lineB == 2)
  8025  001308  0E02               	movlw	2
  8026  00130A  1831               	xorwf	updateLineLEDs@lineB,w,c
  8027  00130C  1032               	iorwf	updateLineLEDs@lineB+1,w,c
  8028  00130E  A4D8               	btfss	status,2,c
  8029  001310  D002               	goto	i2l921
  8030                           
  8031                           ;hardware.c: 561: {
  8032                           ;hardware.c: 562: LATF5 = 0;
  8033  001312  9A8E               	bcf	3982,5,c	;volatile
  8034  001314  D006               	goto	L5
  8035  001316                     i2l921:
  8036                           
  8037                           ;hardware.c: 565: else if (lineB == 3)
  8038  001316  0E03               	movlw	3
  8039  001318  1831               	xorwf	updateLineLEDs@lineB,w,c
  8040  00131A  1032               	iorwf	updateLineLEDs@lineB+1,w,c
  8041  00131C  A4D8               	btfss	status,2,c
  8042  00131E  D003               	goto	i2l923
  8043                           
  8044                           ;hardware.c: 566: {
  8045                           ;hardware.c: 567: LATF5 = 1;
  8046  001320  8A8E               	bsf	3982,5,c	;volatile
  8047  001322                     L5:
  8048                           
  8049                           ;hardware.c: 568: LATF6 = 1;
  8050  001322  8C8E               	bsf	3982,6,c	;volatile
  8051                           
  8052                           ;hardware.c: 569: }
  8053  001324  D002               	goto	i2l924
  8054  001326                     i2l923:
  8055                           
  8056                           ;hardware.c: 570: else
  8057                           ;hardware.c: 571: {
  8058                           ;hardware.c: 572: LATF5 = 0;
  8059  001326  9A8E               	bcf	3982,5,c	;volatile
  8060  001328                     L4:
  8061                           
  8062                           ;hardware.c: 573: LATF6 = 0;
  8063  001328  9C8E               	bcf	3982,6,c	;volatile
  8064  00132A                     i2l924:
  8065                           
  8066                           ;hardware.c: 574: }
  8067                           ;hardware.c: 576: if (lineC == 1)
  8068  00132A  0433               	decf	updateLineLEDs@lineC,w,c
  8069  00132C  1034               	iorwf	updateLineLEDs@lineC+1,w,c
  8070  00132E  A4D8               	btfss	status,2,c
  8071  001330  D003               	goto	i2l925
  8072                           
  8073                           ;hardware.c: 577: {
  8074                           ;hardware.c: 578: LATG4 = 1;
  8075  001332  888F               	bsf	3983,4,c	;volatile
  8076                           
  8077                           ;hardware.c: 579: LATH0 = 0;
  8078  001334  9090               	bcf	3984,0,c	;volatile
  8079                           
  8080                           ;hardware.c: 580: }
  8081  001336  0012               	return	
  8082  001338                     i2l925:
  8083                           
  8084                           ;hardware.c: 581: else if (lineC == 2)
  8085  001338  0E02               	movlw	2
  8086  00133A  1833               	xorwf	updateLineLEDs@lineC,w,c
  8087  00133C  1034               	iorwf	updateLineLEDs@lineC+1,w,c
  8088  00133E  A4D8               	btfss	status,2,c
  8089  001340  D003               	goto	i2l927
  8090                           
  8091                           ;hardware.c: 582: {
  8092                           ;hardware.c: 583: LATG4 = 0;
  8093  001342  988F               	bcf	3983,4,c	;volatile
  8094                           
  8095                           ;hardware.c: 584: LATH0 = 1;
  8096  001344  8090               	bsf	3984,0,c	;volatile
  8097                           
  8098                           ;hardware.c: 585: }
  8099  001346  0012               	return	
  8100  001348                     i2l927:
  8101                           
  8102                           ;hardware.c: 586: else if (lineC == 3)
  8103  001348  0E03               	movlw	3
  8104  00134A  1833               	xorwf	updateLineLEDs@lineC,w,c
  8105  00134C  1034               	iorwf	updateLineLEDs@lineC+1,w,c
  8106  00134E  A4D8               	btfss	status,2,c
  8107  001350  D003               	goto	i2l929
  8108                           
  8109                           ;hardware.c: 587: {
  8110                           ;hardware.c: 588: LATG4 = 1;
  8111  001352  888F               	bsf	3983,4,c	;volatile
  8112                           
  8113                           ;hardware.c: 589: LATH0 = 1;
  8114  001354  8090               	bsf	3984,0,c	;volatile
  8115                           
  8116                           ;hardware.c: 590: }
  8117  001356  0012               	return	
  8118  001358                     i2l929:
  8119                           
  8120                           ;hardware.c: 591: else
  8121                           ;hardware.c: 592: {
  8122                           ;hardware.c: 593: LATG4 = 0;
  8123  001358  988F               	bcf	3983,4,c	;volatile
  8124                           
  8125                           ;hardware.c: 594: LATH0 = 0;
  8126  00135A  9090               	bcf	3984,0,c	;volatile
  8127  00135C  0012               	return	
  8128  00135E                     __end_of_updateLineLEDs:
  8129                           	opt stack 0
  8130                           pclatu	equ	0xFFB
  8131                           pclath	equ	0xFFA
  8132                           tblptru	equ	0xFF8
  8133                           tblptrh	equ	0xFF7
  8134                           tblptrl	equ	0xFF6
  8135                           tablat	equ	0xFF5
  8136                           prodh	equ	0xFF4
  8137                           prodl	equ	0xFF3
  8138                           intcon	equ	0xFF2
  8139                           postinc0	equ	0xFEE
  8140                           fsr0h	equ	0xFEA
  8141                           fsr0l	equ	0xFE9
  8142                           wreg	equ	0xFE8
  8143                           postinc1	equ	0xFE6
  8144                           postdec1	equ	0xFE5
  8145                           plusw1	equ	0xFE3
  8146                           fsr1h	equ	0xFE2
  8147                           fsr1l	equ	0xFE1
  8148                           indf2	equ	0xFDF
  8149                           postinc2	equ	0xFDE
  8150                           postdec2	equ	0xFDD
  8151                           plusw2	equ	0xFDB
  8152                           fsr2h	equ	0xFDA
  8153                           fsr2l	equ	0xFD9
  8154                           status	equ	0xFD8
  8155                           
  8156 ;; *************** function _checkSwitches *****************
  8157 ;; Defined at:
  8158 ;;		line 141 in file "hardware.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  flag            1    0[COMRAM] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;Total ram usage:        1 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_highPriorityISR
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text39
  8186  001114                     __ptext39:
  8187                           	opt stack 0
  8188  001114                     _checkSwitches:
  8189                           	opt stack 26
  8190                           
  8191                           ;hardware.c: 143: char flag = 0;
  8192                           
  8193                           ;incstack = 0
  8194  001114  0E00               	movlw	0
  8195  001116  6E29               	movwf	checkSwitches@flag,c
  8196                           
  8197                           ;hardware.c: 145: if(IOCF1)
  8198  001118  A2D1               	btfss	4049,1,c	;volatile
  8199  00111A  D008               	goto	i2l823
  8200                           
  8201                           ;hardware.c: 146: {
  8202                           ;hardware.c: 147: switch4 = 1;
  8203  00111C  0E00               	movlw	0
  8204  00111E  0100               	movlb	0	; () banked
  8205  001120  6F9D               	movwf	(_switch4+1)& (0+255),b
  8206  001122  0E01               	movlw	1
  8207  001124  6F9C               	movwf	_switch4& (0+255),b
  8208                           
  8209                           ;hardware.c: 148: flag = 1;
  8210  001126  0E01               	movlw	1
  8211  001128  6E29               	movwf	checkSwitches@flag,c
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;hardware.c: 149: IOCFbits.IOCF1 = 0;
  8215  00112A  92D1               	bcf	4049,1,c	;volatile
  8216  00112C                     i2l823:
  8217                           
  8218                           ;hardware.c: 150: }
  8219                           ;hardware.c: 152: if (IOCF2)
  8220                           
  8221                           ; BSR set to: 0
  8222  00112C  A4D1               	btfss	4049,2,c	;volatile
  8223  00112E  D007               	goto	i2l824
  8224                           
  8225                           ;hardware.c: 153: {
  8226                           ;hardware.c: 154: switch2 = 1;
  8227  001130  0E00               	movlw	0
  8228  001132  6E1E               	movwf	_switch2+1,c
  8229  001134  0E01               	movlw	1
  8230  001136  6E1D               	movwf	_switch2,c
  8231                           
  8232                           ;hardware.c: 155: flag = 1;
  8233  001138  0E01               	movlw	1
  8234  00113A  6E29               	movwf	checkSwitches@flag,c
  8235                           
  8236                           ;hardware.c: 156: IOCFbits.IOCF2 = 0;
  8237  00113C  94D1               	bcf	4049,2,c	;volatile
  8238  00113E                     i2l824:
  8239                           
  8240                           ;hardware.c: 157: }
  8241                           ;hardware.c: 159: if (IOCF3)
  8242  00113E  A6D1               	btfss	4049,3,c	;volatile
  8243  001140  D007               	goto	i2l825
  8244                           
  8245                           ;hardware.c: 160: {
  8246                           ;hardware.c: 161: switch1 = 1;
  8247  001142  0E00               	movlw	0
  8248  001144  6E20               	movwf	_switch1+1,c
  8249  001146  0E01               	movlw	1
  8250  001148  6E1F               	movwf	_switch1,c
  8251                           
  8252                           ;hardware.c: 162: flag = 1;
  8253  00114A  0E01               	movlw	1
  8254  00114C  6E29               	movwf	checkSwitches@flag,c
  8255                           
  8256                           ;hardware.c: 163: IOCFbits.IOCF3 = 0;
  8257  00114E  96D1               	bcf	4049,3,c	;volatile
  8258  001150                     i2l825:
  8259                           
  8260                           ;hardware.c: 164: }
  8261                           ;hardware.c: 166: if (IOCF4)
  8262  001150  A8D1               	btfss	4049,4,c	;volatile
  8263  001152  D008               	goto	i2l826
  8264                           
  8265                           ;hardware.c: 167: {
  8266                           ;hardware.c: 168: fsw1 = 1;
  8267  001154  0E00               	movlw	0
  8268  001156  0100               	movlb	0	; () banked
  8269  001158  6F99               	movwf	(_fsw1+1)& (0+255),b
  8270  00115A  0E01               	movlw	1
  8271  00115C  6F98               	movwf	_fsw1& (0+255),b
  8272                           
  8273                           ;hardware.c: 169: flag = 1;
  8274  00115E  0E01               	movlw	1
  8275  001160  6E29               	movwf	checkSwitches@flag,c
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;hardware.c: 170: IOCFbits.IOCF4 = 0;
  8279  001162  98D1               	bcf	4049,4,c	;volatile
  8280  001164                     i2l826:
  8281                           
  8282                           ;hardware.c: 171: }
  8283                           ;hardware.c: 173: if (IOCF5)
  8284                           
  8285                           ; BSR set to: 0
  8286  001164  AAD1               	btfss	4049,5,c	;volatile
  8287  001166  D008               	goto	i2l827
  8288                           
  8289                           ;hardware.c: 174: {
  8290                           ;hardware.c: 175: fsw2 = 1;
  8291  001168  0E00               	movlw	0
  8292  00116A  0100               	movlb	0	; () banked
  8293  00116C  6F97               	movwf	(_fsw2+1)& (0+255),b
  8294  00116E  0E01               	movlw	1
  8295  001170  6F96               	movwf	_fsw2& (0+255),b
  8296                           
  8297                           ;hardware.c: 176: flag = 1;
  8298  001172  0E01               	movlw	1
  8299  001174  6E29               	movwf	checkSwitches@flag,c
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;hardware.c: 177: IOCFbits.IOCF5 = 0;
  8303  001176  9AD1               	bcf	4049,5,c	;volatile
  8304  001178                     i2l827:
  8305                           
  8306                           ;hardware.c: 178: }
  8307                           ;hardware.c: 180: if (IOCF6)
  8308                           
  8309                           ; BSR set to: 0
  8310  001178  ACD1               	btfss	4049,6,c	;volatile
  8311  00117A  D008               	goto	i2l828
  8312                           
  8313                           ;hardware.c: 181: {
  8314                           ;hardware.c: 182: switch3 = 1;
  8315  00117C  0E00               	movlw	0
  8316  00117E  0100               	movlb	0	; () banked
  8317  001180  6F9F               	movwf	(_switch3+1)& (0+255),b
  8318  001182  0E01               	movlw	1
  8319  001184  6F9E               	movwf	_switch3& (0+255),b
  8320                           
  8321                           ;hardware.c: 183: flag = 1;
  8322  001186  0E01               	movlw	1
  8323  001188  6E29               	movwf	checkSwitches@flag,c
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;hardware.c: 184: IOCFbits.IOCF6 = 0;
  8327  00118A  9CD1               	bcf	4049,6,c	;volatile
  8328  00118C                     i2l828:
  8329                           
  8330                           ;hardware.c: 185: }
  8331                           ;hardware.c: 187: if (IOCF7)
  8332                           
  8333                           ; BSR set to: 0
  8334  00118C  AED1               	btfss	4049,7,c	;volatile
  8335  00118E  D008               	goto	i2l829
  8336                           
  8337                           ;hardware.c: 188: {
  8338                           ;hardware.c: 189: switch5 = 1;
  8339  001190  0E00               	movlw	0
  8340  001192  0100               	movlb	0	; () banked
  8341  001194  6F9B               	movwf	(_switch5+1)& (0+255),b
  8342  001196  0E01               	movlw	1
  8343  001198  6F9A               	movwf	_switch5& (0+255),b
  8344                           
  8345                           ;hardware.c: 190: flag = 1;
  8346  00119A  0E01               	movlw	1
  8347  00119C  6E29               	movwf	checkSwitches@flag,c
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;hardware.c: 191: IOCFbits.IOCF7 = 0;
  8351  00119E  9ED1               	bcf	4049,7,c	;volatile
  8352  0011A0                     i2l829:
  8353                           
  8354                           ;hardware.c: 192: }
  8355                           ;hardware.c: 194: if (flag)
  8356  0011A0  5029               	movf	checkSwitches@flag,w,c
  8357  0011A2  B4D8               	btfsc	status,2,c
  8358  0011A4  0012               	return	
  8359                           
  8360                           ;hardware.c: 195: {
  8361                           ;hardware.c: 196: T0CONbits.TMR0ON = 0x1;
  8362  0011A6  8ED5               	bsf	4053,7,c	;volatile
  8363  0011A8  0012               	return	
  8364  0011AA                     __end_of_checkSwitches:
  8365                           	opt stack 0
  8366  0000                     pclatu	equ	0xFFB
  8367                           pclath	equ	0xFFA
  8368                           tblptru	equ	0xFF8
  8369                           tblptrh	equ	0xFF7
  8370                           tblptrl	equ	0xFF6
  8371                           tablat	equ	0xFF5
  8372                           prodh	equ	0xFF4
  8373                           prodl	equ	0xFF3
  8374                           intcon	equ	0xFF2
  8375                           postinc0	equ	0xFEE
  8376                           fsr0h	equ	0xFEA
  8377                           fsr0l	equ	0xFE9
  8378                           wreg	equ	0xFE8
  8379                           postinc1	equ	0xFE6
  8380                           postdec1	equ	0xFE5
  8381                           plusw1	equ	0xFE3
  8382                           fsr1h	equ	0xFE2
  8383                           fsr1l	equ	0xFE1
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           plusw2	equ	0xFDB
  8388                           fsr2h	equ	0xFDA
  8389                           fsr2l	equ	0xFD9
  8390                           status	equ	0xFD8
  8391                           pclatu	equ	0xFFB
  8392                           pclath	equ	0xFFA
  8393                           tblptru	equ	0xFF8
  8394                           tblptrh	equ	0xFF7
  8395                           tblptrl	equ	0xFF6
  8396                           tablat	equ	0xFF5
  8397                           prodh	equ	0xFF4
  8398                           prodl	equ	0xFF3
  8399                           intcon	equ	0xFF2
  8400                           postinc0	equ	0xFEE
  8401                           fsr0h	equ	0xFEA
  8402                           fsr0l	equ	0xFE9
  8403                           wreg	equ	0xFE8
  8404                           postinc1	equ	0xFE6
  8405                           postdec1	equ	0xFE5
  8406                           plusw1	equ	0xFE3
  8407                           fsr1h	equ	0xFE2
  8408                           fsr1l	equ	0xFE1
  8409                           indf2	equ	0xFDF
  8410                           postinc2	equ	0xFDE
  8411                           postdec2	equ	0xFDD
  8412                           plusw2	equ	0xFDB
  8413                           fsr2h	equ	0xFDA
  8414                           fsr2l	equ	0xFD9
  8415                           status	equ	0xFD8
  8416                           
  8417                           	psect	rparam
  8418  0000                     pclatu	equ	0xFFB
  8419                           pclath	equ	0xFFA
  8420                           tblptru	equ	0xFF8
  8421                           tblptrh	equ	0xFF7
  8422                           tblptrl	equ	0xFF6
  8423                           tablat	equ	0xFF5
  8424                           prodh	equ	0xFF4
  8425                           prodl	equ	0xFF3
  8426                           intcon	equ	0xFF2
  8427                           postinc0	equ	0xFEE
  8428                           fsr0h	equ	0xFEA
  8429                           fsr0l	equ	0xFE9
  8430                           wreg	equ	0xFE8
  8431                           postinc1	equ	0xFE6
  8432                           postdec1	equ	0xFE5
  8433                           plusw1	equ	0xFE3
  8434                           fsr1h	equ	0xFE2
  8435                           fsr1l	equ	0xFE1
  8436                           indf2	equ	0xFDF
  8437                           postinc2	equ	0xFDE
  8438                           postdec2	equ	0xFDD
  8439                           plusw2	equ	0xFDB
  8440                           fsr2h	equ	0xFDA
  8441                           fsr2l	equ	0xFD9
  8442                           status	equ	0xFD8
  8443                           
  8444                           	psect	temp
  8445  00004D                     btemp:
  8446                           	opt stack 0
  8447  00004D                     	ds	1
  8448  0000                     int$flags	set	btemp
  8449  0000                     wtemp6	set	btemp+1
  8450                           pclatu	equ	0xFFB
  8451                           pclath	equ	0xFFA
  8452                           tblptru	equ	0xFF8
  8453                           tblptrh	equ	0xFF7
  8454                           tblptrl	equ	0xFF6
  8455                           tablat	equ	0xFF5
  8456                           prodh	equ	0xFF4
  8457                           prodl	equ	0xFF3
  8458                           intcon	equ	0xFF2
  8459                           postinc0	equ	0xFEE
  8460                           fsr0h	equ	0xFEA
  8461                           fsr0l	equ	0xFE9
  8462                           wreg	equ	0xFE8
  8463                           postinc1	equ	0xFE6
  8464                           postdec1	equ	0xFE5
  8465                           plusw1	equ	0xFE3
  8466                           fsr1h	equ	0xFE2
  8467                           fsr1l	equ	0xFE1
  8468                           indf2	equ	0xFDF
  8469                           postinc2	equ	0xFDE
  8470                           postdec2	equ	0xFDD
  8471                           plusw2	equ	0xFDB
  8472                           fsr2h	equ	0xFDA
  8473                           fsr2l	equ	0xFD9
  8474                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        92
    BSS         248
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      76
    BANK0           160     45     147
    BANK1           256     30     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    dataPtr	PTR int  size(2) Largest target is 3577
		 -> NULL(NULL[0]), RAM(DATA[3577]), 

    I2C1_Block_Read_EERPOM@data	PTR PTR int  size(2) Largest target is 24
		 -> fetchPreset@values(BANK0[24]), 

    I2C1_Page_Write_EEPROM@data	PTR PTR int  size(2) Largest target is 24
		 -> parameter(BANK0[24]), 

    updatePreset@values	PTR int  size(2) Largest target is 24
		 -> fetchPreset@values(BANK0[24]), parameter(BANK0[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _highPriorityISR->_flashLED
    _serviceSwitches->_processTaps
    _serviceSwitches->_updateLineLEDs
    _processTaps->___awdiv
    _flashLED->_updateLineLEDs
    _updateLineLEDs->i2___wmul

Critical Paths under _main in BANK0

    _main->_fetchPreset
    _updateParams->___wmul
    _systemInit->_startupSequence
    _readControls->_ADC_Read
    _fetchPreset->_updatePreset
    _updatePreset->___wmul

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0    9630
                                             42 BANK0      3     3      0
                                              0 BANK1     30    30      0
                           _ADC_Read
             _I2C1_Page_Write_EEPROM
                 _I2C1_Write_DigiPot
                             _absVal
                        _fetchPreset
                       _readControls
                         _systemInit
                       _updateParams
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updateParams                                         6     4      2    1509
                                              6 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _systemInit                                           0     0      0       0
                        _bypassSetup
                        _clockSwitch
                         _defaultLED
                      _interfaceInit
                      _interruptInit
                           _killLEDs
                  _mapPeripheralPins
                           _setupADC
                          _setupI2C1
                          _setupI2C2
                          _setupTMR0
                          _setupTMR1
                          _setupTMR2
                          _setupTMR4
                    _startupSequence
 ---------------------------------------------------------------------------------
 (2) _startupSequence                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupTMR4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mapPeripheralPins                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _killLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interfaceInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _defaultLED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clockSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bypassSetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readControls                                         3     3      0    1305
                                              4 BANK0      3     3      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             4     2      2    1305
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fetchPreset                                         28    28      0    2652
                                             14 BANK0     28    28      0
             _I2C1_Block_Read_EERPOM
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updatePreset                                         8     4      4    1810
                                              6 BANK0      8     4      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1258
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C1_Block_Read_EERPOM                              13     7      6     629
                                              0 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (1) _absVal                                               4     2      2     238
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_DigiPot                                   2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Page_Write_EEPROM                              11     5      6     502
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highPriorityISR                                     18    18      0    3639
                                             14 COMRAM    18    18      0
                      _checkSwitches
                           _flashLED
                          _sendParam
                    _serviceSwitches
                             _tapLED
 ---------------------------------------------------------------------------------
 (5) _tapLED                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _serviceSwitches                                      0     0      0    1887
                        _processTaps
                     _updateLineLEDs
                   _updatePresetLEDs
 ---------------------------------------------------------------------------------
 (6) _processTaps                                          4     4      0     591
                                              8 COMRAM     4     4      0
                            ___awdiv
                        _maxTapCheck
                           i2_absVal
 ---------------------------------------------------------------------------------
 (7) i2_absVal                                             4     2      2      92
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _maxTapCheck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _sendParam                                            4     4      0     113
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) _flashLED                                             2     2      0    1609
                                             12 COMRAM     2     2      0
                     _updateLineLEDs
                   _updatePresetLEDs
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     313
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _updatePresetLEDs                                     2     0      2     414
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _updateLineLEDs                                       6     0      6     882
                                              6 COMRAM     6     0      6
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _checkSwitches                                        1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _I2C1_Page_Write_EEPROM
   _I2C1_Write_DigiPot
   _absVal
   _fetchPreset
     _I2C1_Block_Read_EERPOM
     _updatePreset
       ___wmul
   _readControls
     _ADC_Read
   _systemInit
     _bypassSetup
     _clockSwitch
     _defaultLED
     _interfaceInit
     _interruptInit
     _killLEDs
     _mapPeripheralPins
     _setupADC
     _setupI2C1
     _setupI2C2
     _setupTMR0
     _setupTMR1
     _setupTMR2
     _setupTMR4
     _startupSequence
   _updateParams
     ___wmul
   _updatePreset
     ___wmul

 _highPriorityISR (ROOT)
   _checkSwitches
   _flashLED
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
     i2___wmul
   _sendParam
   _serviceSwitches
     _processTaps
       ___awdiv
       _maxTapCheck
       i2_absVal
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
   _tapLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1E      E0       7       87.5%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      4C       1       80.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BF       8        0.0%
DATA                 0      0     1BF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Oct 13 22:01:11 2018

                      __CFG_BW$16 000000                __end_of_systemInit 1724  
           __end_of_interruptInit 1810                      ___awdiv@sign 002E  
  I2C1_Page_Write_EEPROM@memValue 00C0               ___wmul@multiplicand 00BA  
                     __CFG_BORV$1 000000                      __CFG_CP0$OFF 000000  
          _I2C1_Page_Write_EEPROM 0E8A                               l181 11CA  
                             l183 123C                               l168 1832  
                             l176 1006                               l178 107C  
                             l186 1420                               l507 189E  
                             l195 08A8                               l188 146E  
                             l196 0904                               l197 0926  
                             l199 09C8                               l880 0CA6  
                             l890 0D1C                               l882 0CBC  
                             l892 0D34                               l884 0CD4  
                             l894 0D4C                               l886 0CEC  
                             l878 0C8A                               l896 0D64  
                             l888 0D04                               l898 0D7C  
                             l899 0D86                               _RC0 007C10  
                             _RC1 007C11                               _RD1 007C19  
                             _RD4 007C1C                               _RC6 007C16  
                             _RE3 007C23                               _RC7 007C17  
                             _RG1 007C31                               _RF3 007C2B  
                             _RD7 007C1F                               _RG2 007C32  
                             _RE6 007C26                               _RG3 007C33  
                             _RH4 007C3C                               _RJ0 007C40  
                             _RH5 007C3D                               _RJ1 007C41  
                             _RJ4 007C44                               _RJ5 007C45  
                             _PR2 000FCB                               _tap 0001  
                             _swX 004B                               wreg 000FE8  
          __end_of_updateLineLEDs 135E             __end_of_checkSwitches 11AA  
 __size_of_I2C1_Block_Read_EERPOM 013A                     __CFG_ABW$XM16 000000  
                    ?_maxTapCheck 0029                              l1120 0ECC  
                            l1141 0F3E                              l1125 0F14  
                            l1117 0EC2                              l1126 0EE6  
                            l1152 0B7C                              l1251 1788  
                            l1163 0B92                              l1147 0B6C  
                            l1180 0C2E                              l1181 0BEA  
                            l1157 0B86                              l1263 17A0  
                            l1183 0BEE                              l1175 0BAC  
                            l1248 177E                              l1257 1796  
                            l1193 0C52                              l1169 0BA0  
                            l1186 0BF6                              l1196 0C5A  
                            l4181 11B4                              l4193 140A  
                            l3909 0FF0                              u4110 0BA4  
                            u4040 0B70                              u4130 0BB0  
                            u4210 18A8                              u4070 0B8A  
                            u4160 0BFA                              u4410 0ED0  
                            u4090 0B96                              u4245 06C8  
                            u4430 0EEA                              u4350 178C  
                            u4510 0918                              u4255 0702  
                            u4265 076E                              u4450 0F34  
                            u4370 179A                              u4530 09B8  
                            u4275 07A8                              u4460 0F38  
                            u4285 0814                              u4525 094E  
                            u4295 084E                              u4607 0482  
                            u4617 04A0                              u4707 05AE  
                            u4627 04BE                              u4491 088E  
                            u4717 05CC                              u4637 04DC  
                            u4557 03EC                              u4807 1776  
                            u4727 05EA                              u4647 04FA  
                            u4567 040A                              u4817 0EBA  
                            u4737 0608                              u4657 0518  
                            u4577 0428                              u4747 0626  
                            u4667 0536                              u4587 0446  
                            u4757 0644                              u4677 0554  
                            u4597 0464                              u4767 0662  
                            u4687 0572                              u4777 0C76  
                            u4697 0590                              u4787 0C82  
                            u4797 0B64                              _fbkA 0078  
                            _fbkB 0074                              _fbkC 0070  
                            _armA 0011                              _armB 000F  
                            _armC 000D                              _fsw1 0098  
                            _fsw2 0096                              _intA 0027  
                            _intB 0025                              _intC 0023  
                            _main 0866                              _lvlA 0076  
                            _lvlB 0072                              _lvlC 006E  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr2h 000FDA                              fsr0l 000FE9  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                       main@prevDry 01DA  
                            btemp 004D                              _sync 0064  
                __end_of_ADC_Read 0D90                              prodh 000FF4  
                            prodl 000FF3                __CFG_WDTWIN$PS25_0 000000  
                            start 011C          __size_of_serviceSwitches 02BC  
 I2C1_Page_Write_EEPROM@wrDevAddr 00BF                     __CFG_IESO$OFF 000000  
              __CFG_LS48MHZ$SYSX2 000000                      ___param_bank 000000  
                     i2absVal@val 0029                      ?_bypassSetup 0029  
                   __CFG_WAIT$OFF 000000                             ?_main 0029  
                 __end_of___awdiv 1578                      main@dryLevel 01DE  
         I2C1_Block_Read_EERPOM@n 00C3                   ___awdiv@divisor 002B  
                           _T2CON 000FCA                             _LATD0 007C60  
                           _LATB5 007C55                             _IOCF1 007E89  
                           _LATD2 007C62                             _LATE0 007C68  
                           _IOCF2 007E8A                             _LATD3 007C63  
                           _LATE1 007C69                             _IOCF3 007E8B  
                           _IOCF4 007E8C                             _IOCF5 007E8D  
                           _LATF2 007C72                             _LATE4 007C6C  
                           _IOCF6 007E8E                             _LATE5 007C6D  
                           _IOCF7 007E8F                             _LATH0 007C80  
                           _LATF5 007C75                             _LATE7 007C6F  
                           _LATH1 007C81                             _LATF6 007C76  
                           _LATG4 007C7C                             _LATH2 007C82  
                           _LATH7 007C87                             i2l160 0094  
                           i2l161 0096                             i2l163 00C0  
                           i2l164 00D0                             i2l157 005C  
                           i2l158 006E                             i2l168 185A  
                           i2l800 0E52                             i2l801 0E7E  
                           i2l813 0A3A                             i2l805 14AA  
                           i2l814 0A1E                             i2l823 112C  
                           i2l815 0A2A                             i2l824 113E  
                           i2l825 1150                             i2l921 1316  
                           i2l913 12DA                             i2l826 1164  
                           i2l818 0AAC                             i2l842 01C8  
                           i2l827 1178                             i2l923 1326  
                           i2l915 12E8                             i2l819 0B22  
                           i2l828 118C                             i2l924 132A  
                           i2l940 15CE                             i2l860 030C  
                           i2l852 025A                             i2l844 01D4  
                           i2l836 0160                             i2l829 11A0  
                           i2l925 1338                             i2l917 12F8  
                           i2l861 02F8                             i2l918 12FC  
                           i2l942 15E4                             i2l934 158C  
                           i2l790 1666                             i2l870 0398  
                           i2l854 0266                             i2l927 1348  
                           i2l919 1308                             i2l871 0392  
                           i2l847 020E                             i2l839 018E  
                           i2l936 15A2                             i2l864 0328  
                           i2l929 1358                             i2l857 02D8  
                           i2l849 021A                             i2l938 15B8  
                           i2l866 035C                             i2l858 02CA  
                           i2l796 0DC8                   ___awdiv@counter 002D  
                           i2l797 0E80                             i2l798 0E08  
                   __CFG_WPSA$128 000000                   ?_updateLineLEDs 002F  
                  __CFG_EASHFT$ON 000000                             _timeA 000B  
                           _timeB 0009                             _timeC 0007  
                           _shift 0013                    __CFG_BOREN$OFF 000000  
                           pclath 000FFA                             tablat 000FF5  
                __end_ofi2_absVal 1864                  __end_ofi2___wmul 188A  
                           plusw1 000FE3                             plusw2 000FDB  
                           status 000FD8                  updatePreset@slot 00BE  
                           wtemp6 004E        __size_of_mapPeripheralPins 0054  
          _I2C1_Block_Read_EERPOM 0B2A                   __initialization 135E  
                    __end_of_main 09E0       __size_of_I2C1_Write_DigiPot 0042  
                          ??_main 00E2                     ?_readControls 0029  
                   __activetblptr 000000               __CFG_WPEND$WPENDMEM 000000  
                  __CFG_RETEN$OFF 000000                            _CCPR4H 000F12  
                          _CCPR4L 000F11                  ___awdiv@dividend 0029  
        __size_of_startupSequence 0296              __size_of_clockSwitch 0024  
                          _LCDSE0 000ECE                            _LCDSE1 000ECF  
                          _LCDSE2 000ED0                            _LCDSE3 000ED1  
                          _LCDSE4 000ED2                            _LCDSE5 000ED3  
                          _LCDSE6 000ED4                            _LCDSE7 000ED5  
        __size_of_highPriorityISR 0114                            i2l1270 10F4  
                          i2l1271 10D8                            i2l1441 1508  
                          i2l1450 156E                            i2l1442 1518  
                          i2l1268 10A0                            i2l1444 1536  
                          i2l1269 1108                            i2l1445 152E  
                          i2l1448 1556                            i2l1449 1560  
                  __CFG_WDTEN$OFF 000000                            i2l3363 10F4  
                          i2l3267 0E08                            i2l3793 00C0  
                          _OSCCON 000FD3              __size_of_fetchPreset 0084  
                          _TMR0IF 007F92                            _TMR2IF 007CF1  
                          _TMR4IF 007DC0                            _TMR2ON 007E52  
                          _SSP2IF 007D0E                    __CFG_XINST$OFF 000000  
                __end_of_flashLED 0B2A                      _CCPTMRS1bits 000F35  
                          _absVal 1810                  __end_of_killLEDs 18CE  
                          _pFlash 0088                            ___wmul 17AA  
                       ??___awdiv 002D          __end_of_updatePresetLEDs 15F0  
               ??_serviceSwitches 0035                   ADC_Read@channel 00B8  
                          _tapLED 1470                            _bypass 001B  
                          _muxADC 0092                            clear_0 13C4  
                          clear_1 13D0                            clear_2 13DC  
                ___awdiv@quotient 002F                    _RPINR20_21bits 000E34  
                 __CFG_CLKOEN$OFF 000000                            _preset 0090  
                  ??_readControls 00BC                    _RPINR22_23bits 000E35  
                    __pdataCOMRAM 0049                    _RPINR24_25bits 000E36  
                   main@testWrite 01C2                  __end_of_setupADC 12CE  
                       ?_ADC_Read 00B8                    _RPINR18_19bits 000E33  
              processTaps@tapDiff 0033                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                  _armFlashToggle 0080                      ?_processTaps 0029  
                   updateParams@i 00C2              __size_of_maxTapCheck 0050  
                      __accesstop 0060           __end_of__initialization 13E2  
              __CFG_DSWDTOSC$LPRC 000000                     ___rparam_used 000001  
                 __CFG_T5GSEL$T5G 000000                   __CFG_IOL1WAY$ON 000000  
                   updatePreset@i 00C4                    __pcstackCOMRAM 0029  
                    __pidataBANK0 193E                      __pidataBANK1 1694  
         ?_I2C1_Page_Write_EEPROM 00B8        I2C1_Page_Write_EEPROM@data 00BA  
      I2C1_Page_Write_EEPROM@slot 00B8              __size_of_bypassSetup 000C  
                       ?i2_absVal 0029                         ?i2___wmul 0029  
               __CFG_PLLDIV$PLL8X 000000                        ??_ADC_Read 00BA  
                      _dataTarget 007C                        __pbssBANK0 0060  
                      __pbssBANK1 0100                        _defaultLED 1900  
          __size_of_interfaceInit 009E                 ??_startupSequence 00B8  
               ??_highPriorityISR 0037    __end_of_I2C1_Page_Write_EEPROM 0F48  
                         ?_absVal 00B8                           ?___wmul 00B8  
              __size_of_sendParam 0096                           _ADCBUF0 000FC2  
                         _ADCBUF1 000E48                           _ADCBUF2 000E4A  
                         _ADCBUF3 000E4C                           _ADCBUF4 000E4E  
                         _ADCBUF5 000E50                           _ADCBUF6 000E52  
                         _ADCBUF8 000E56                           _ADCBUF9 000E58  
                         ?_tapLED 0029                   __CFG_VBTBOR$OFF 000000  
                ??_updateLineLEDs 0035                        ??i2_absVal 002B  
              __size_of_setupI2C1 001A                __size_of_setupI2C2 0044  
                      ??i2___wmul 002D                __size_of_setupTMR0 0018  
              __size_of_setupTMR1 000E                __size_of_setupTMR2 0010  
              __size_of_setupTMR4 0016                   __CFG_WDTCLK$FRC 000000  
                         _SSP1ADD 000FC8                           _SSP2ADD 000F02  
                         _SSP1BUF 000FC9                           _SSP2BUF 000F03  
                       ?_flashLED 0029                           _SSP2MSK 000F17  
                       ?_killLEDs 0029            __size_of_interruptInit 0030  
         ?_I2C1_Block_Read_EERPOM 00B8              __end_of_readControls 0866  
                         __Hparam 0000                           __Lparam 0000  
                       ?_setupADC 0029            __size_of_checkSwitches 0096  
                         ___awdiv 14F4                   __size_of_absVal 002C  
                 __size_of___wmul 0036                        _linesArmed 007E  
                 __CFG_STVREN$OFF 000000                           _dataPtr 007A  
                 __size_of_tapLED 0084                           __pcinit 135E  
                         __ramtop 0E00                           __ptext0 0866  
                         __ptext1 11AA                           __ptext2 16DE  
                         __ptext3 03DC                           __ptext4 1918  
                         __ptext5 192E                           __ptext6 194C  
                         __ptext7 18E8                           __ptext8 1724  
                         __ptext9 18CE                     _interfaceInit 0F48  
                       _T0CONbits 000FD5                           _bypMode 00F1  
                       _T1CONbits 000FCD                         _T2CONbits 000FCA  
                       _T3CONbits 000FB1                           _tapTime 006C  
                         _tapPrev 0003                         _T4CONbits 000F04  
                       _T5CONbits 000F14                        ??_flashLED 0035  
                         _switch1 001F                           _switch2 001D  
                         _switch3 009E                           _switch4 009C  
                         _switch5 009A                 __end_of_sendParam 1114  
            end_of_initialization 13E2                        ??_killLEDs 00B8  
  __end_of_I2C1_Block_Read_EERPOM 0C64                 checkSwitches@flag 0029  
                     ?_defaultLED 0029                        _targPreset 0019  
             updateLineLEDs@lineA 002F               updateLineLEDs@lineB 0031  
             updateLineLEDs@lineC 0033               i2___wmul@multiplier 0029  
            __size_of_processTaps 00FA                   _serviceSwitches 0120  
               __end_of_setupI2C1 18E8                 __end_of_setupI2C2 1768  
               __end_of_setupTMR0 1900                 __end_of_setupTMR1 195A  
               __end_of_setupTMR2 193E                 __end_of_setupTMR4 192E  
                      ??_setupADC 00B8                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
      __end_of_I2C1_Write_DigiPot 17AA                        main@F13907 0192  
                __CFG_FSCM$CSECMD 000000                  __CFG_DSBITEN$OFF 000000  
                   _interruptInit 17E0                updatePreset@values 00C0  
               ?_updatePresetLEDs 0029                        _presetPend 0017  
                  ?_interfaceInit 0029                  __CFG_DSBOREN$OFF 000000  
                     _ADCHS0Lbits 000E86                ??_updatePresetLEDs 002B  
                __CFG_FOSC$FRCDIV 000000                       _ADCON1Hbits 000FC1  
                     _ADCON2Hbits 000E8D                       _ADCON1Lbits 000FC0  
                     _ADCON3Hbits 000E8B                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                   ??_clockSwitch 00B8                         _TRISDbits 000F95  
                     _ADCON3Lbits 000E8A                       _ADCON5Hbits 000E89  
                       _TRISEbits 000F96                         _TRISFbits 000F97  
                       _TRISGbits 000F98                         _TRISHbits 000F99  
                       _TRISJbits 000F9A                     _checkSwitches 1114  
               __size_of_ADC_Read 012C                     ??_fetchPreset 00C6  
            __CFG_CINASEL$DEFAULT 000000                        _userParams 0100  
                     _CCP4CONbits 000F10                     ?_updateParams 00BE  
                   ?_updatePreset 00BE      I2C1_Block_Read_EERPOM@rdAddr 00C0  
               __CFG_WPFP$WPFP255 000000                    ?_interruptInit 0029  
                  __end_of_absVal 183C                    __end_of___wmul 17E0  
                   __pidataCOMRAM 1966                    __end_of_tapLED 14F4  
     I2C1_Page_Write_EEPROM@bytes 00BC               __size_of_defaultLED 0018  
                __CFG_DSWDTEN$OFF 000000                  i2___wmul@product 002D  
             start_initialization 135E                 __size_ofi2_absVal 0028  
               __size_ofi2___wmul 0026                        _systemInit 16DE  
                  ?_checkSwitches 0029                   _startupSequence 03DC  
                   ??_maxTapCheck 0029           __end_of_serviceSwitches 03DC  
                 _highPriorityISR 0008             __size_of_readControls 01F4  
             __end_of_clockSwitch 18AE           I2C1_Write_DigiPot@value 00B8  
                  ??_updateParams 00C0               __end_of_fetchPreset 1470  
                     _pFlashCount 008A                    ??_updatePreset 00C2  
                        ??_absVal 00BA                          ??___wmul 00BC  
                  _currentTapTime 00EF                     ??_bypassSetup 00B8  
                 ??_interfaceInit 00B8                       __pdataBANK0 00E5  
                     __pdataBANK1 0178                          ??_tapLED 0029  
                   _armFlashCount 0084                      _readControls 0672  
                     __pbssCOMRAM 0001                     __pcstackBANK0 00B8  
                   __pcstackBANK1 01C2           I2C1_Page_Write_EEPROM@n 00C1  
               __size_of_flashLED 014A                      _paramAddress 0178  
               __size_of_killLEDs 0020             updatePresetLEDs@psNum 0029  
             __end_of_maxTapCheck 1694                   ??_interruptInit 00B8  
                       __pintcode 0008                        sendParam@n 002B  
                       absVal@val 00B8                          ?___awdiv 0029  
               __size_of_setupADC 0090                          _ADCBUF14 000E62  
                    _tapDispCount 0015           __end_of_startupSequence 0672  
         __end_of_highPriorityISR 011C                  __CFG_POSCMD$NONE 000000  
                 ??_checkSwitches 0029               __end_of_bypassSetup 1966  
                        _ADC_Read 0C64                       ?_systemInit 0029  
                     _PADCFG1bits 000F54                       _clockSwitch 188A  
                ?_serviceSwitches 0029                       _fetchPreset 13EC  
                       _parameter 00A0                         _tapOnTime 0049  
                    ??_defaultLED 00B8                    ___wmul@product 00BC  
                        _IOCFbits 000FD1                         _sendParam 107E  
                        _IOCNbits 000F55                          _IOCPbits 000F56  
                        _PIE1bits 000F9D                          _PIE2bits 000FA0  
                        _PIE5bits 000FB7    I2C1_Block_Read_EERPOM@memValue 00C1  
                        i2u310_45 0158                          i2u311_41 015C  
                        i2u226_40 153A                          i2u330_40 0250  
                        i2u322_40 01BE                          i2u314_45 0168  
                        i2u315_40 0170                          i2u316_45 0172  
                        i2u309_40 0156                          i2u262_40 0DA6  
                        i2u334_40 02C0                          i2u326_40 0204  
                        i2u263_40 0DEE                          _PIR1bits 000F9E  
                        i2u282_40 1108                          i2u338_40 0320  
                        _PIR2bits 000FA1                          i2u292_40 0AB8  
                        i2u293_40 0ABA                          i2u294_40 0ADE  
                        i2u295_40 0AE0                          i2u287_40 0A04  
                        i2u296_40 0B04                          i2u384_40 00BC  
                        i2u297_40 0B06                          i2u289_40 0A5C  
                       _setupI2C1 18CE                         _setupI2C2 1724  
                __CFG_WDTPS$32768 000000                         _presetAdd 00E5  
                       _setupTMR0 18E8                         _setupTMR1 194C  
                       _setupTMR2 192E                         _setupTMR4 1918  
                        _UCONbits 000F75                      _tapTimeCount 0005  
                 fetchPreset@test 00DE                       _bounceCount 0094  
               ___wmul@multiplier 00B8                  __CFG_SOSCSEL$DIG 000000  
     I2C1_Write_DigiPot@wrCommand 00B9                          i2_absVal 183C  
                        i2___wmul 1864                __end_of_defaultLED 1918  
            __end_of_updateParams 123E              __end_of_updatePreset 107E  
                      _CM1CONbits 000F53                _I2C1_Write_DigiPot 1768  
                      _CM2CONbits 000F38       I2C1_Block_Read_EERPOM@bytes 00BC  
                      _CM3CONbits 000F37                  __CFG_WPDIS$WPDIS 000000  
         __size_of_updateLineLEDs 0090                       _maxTapCheck 1644  
                       copy_data0 1372                         copy_data1 1392  
                       copy_data2 13B2                     ??_processTaps 0031  
       __size_of_updatePresetLEDs 0078               ?_I2C1_Write_DigiPot 0029  
        ??_I2C1_Page_Write_EEPROM 00BE                        ?_sendParam 0029  
                      _ANCON1bits 000E47                        _ANCON2bits 000E46  
                      _ANCON3bits 000E45                          __Hrparam 0000  
                        __Lrparam 0000                        ?_setupI2C1 0029  
                      ?_setupI2C2 0029               __size_of_systemInit 0046  
                      ?_setupTMR0 0029                        ?_setupTMR1 0029  
                      ?_setupTMR2 0029                        ?_setupTMR4 0029  
                   ADC_Read@value 00BA                       _bypassSetup 195A  
                __size_of___awdiv 0084             i2___wmul@multiplicand 002B  
            ??_I2C1_Write_DigiPot 00B8                  ?_startupSequence 0029  
                ?_highPriorityISR 0029                          _armFlash 0082  
                        __ptext10 123E                          __ptext11 15F0  
                        __ptext20 13EC                          __ptext12 18AE  
                        __ptext21 0FE6                          __ptext13 17E0  
                        __ptext30 0D90                          __ptext22 17AA  
                        __ptext14 0F48                          __ptext31 183C  
                        __ptext23 0B2A                          __ptext15 1900  
                        __ptext32 1644                          __ptext24 1810  
                        __ptext16 188A                          __ptext33 14F4  
                        __ptext25 1768                          __ptext17 195A  
                        __ptext34 107E                          __ptext26 0E8A  
                        __ptext18 0672                          __ptext35 09E0  
                        __ptext19 0C64                          __ptext36 1864  
                        __ptext28 1470                          __ptext37 1578  
                        __ptext29 0120                          __ptext38 12CE  
                        __ptext39 1114                          _flashLED 09E0  
                    _SSP1CON1bits 000FC6                      _SSP1CON2bits 000FC5  
                      _LCDCONbits 000ED9                      _SSP2CON1bits 000F19  
                    _SSP2CON2bits 000F18                      _SSP2CON3bits 000F39  
                        _killLEDs 18AE                       _OSCCON2bits 000F66  
                     _OSCCON3bits 000F65                       _OSCCON4bits 000F64  
                   __size_of_main 017A                          _tapAccum 0060  
                        _newTempo 006A                          _tapFlash 0086  
              __CFG_MSSPMSK1$MSK7 000000                __CFG_MSSPMSK2$MSK7 000000  
                        _savePend 008E               __end_of_processTaps 0E8A  
                        _setupADC 123E                     _setupComplete 0066  
                        int$flags 004D                          _slotUsed 008C  
                      _MEMCONbits 000EE3                          main@diff 01DC  
                    _SSP1STATbits 000FC7        I2C1_Block_Read_EERPOM@data 00BA  
      I2C1_Block_Read_EERPOM@slot 00B8                        _INTCONbits 000FF2  
        ??_I2C1_Block_Read_EERPOM 00BE                          intlevel2 0000  
                     _shiftAction 0021                       ??_sendParam 0029  
 __size_of_I2C1_Page_Write_EEPROM 00BE                      _presetParams 01AA  
                      _OSCCONbits 000FD3                       ??_setupI2C1 00B8  
                     ??_setupI2C2 00B8  I2C1_Block_Read_EERPOM@dummyWrite 00C2  
                     ??_setupTMR0 00B8                       ??_setupTMR1 00B8  
                     ??_setupTMR2 00B8                       ??_setupTMR4 00B8  
               _mapPeripheralPins 15F0             __size_of_updateParams 0094  
              ?_mapPeripheralPins 0029             __size_of_updatePreset 0098  
           __end_of_interfaceInit 0FE6                      _timeoutCount 0068  
             ??_mapPeripheralPins 00B8                      ??_systemInit 00BA  
                    fetchPreset@i 00E0                      ?_clockSwitch 0029  
                  _updateLineLEDs 12CE                      ?_fetchPreset 0029  
               fetchPreset@values 00C6                  _updatePresetLEDs 1578  
             __CFG_WPCFG$WPCFGDIS 000000                       _processTaps 0D90  
              __CFG_WINDIS$WDTSTD 000000                      _updateParams 11AA  
          __CFG_DSWDTPS$DSWDTPS1F 000000         __end_of_mapPeripheralPins 1644  
                    _updatePreset 0FE6                  updateParams@slot 00BE  
