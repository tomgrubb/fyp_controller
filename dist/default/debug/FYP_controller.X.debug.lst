

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Oct 15 11:32:33 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F85J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 1.43
    65                           ; Generated 25/07/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F85J94 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  001BF8                     __pidataCOMRAM:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _currentTapTime
   104  001BF8  01F4               	dw	500
   105                           
   106                           ;initializer for _tapOnTime
   107  001BFA  0005               	dw	5
   108                           
   109                           ;initializer for _swX
   110  001BFC  0001               	dw	1
   111                           
   112                           	psect	idataBANK0
   113  001BE0                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for _presetAdd
   117  001BE0  0000               	dw	0
   118  001BE2  0010               	dw	16
   119  001BE4  0020               	dw	32
   120  001BE6  0030               	dw	48
   121  001BE8  0040               	dw	64
   122                           
   123                           ;initializer for _bypMode
   124  001BEA  0001               	dw	1
   125                           
   126                           	psect	idataBANK1
   127  0019CE                     __pidataBANK1:
   128                           	opt stack 0
   129                           
   130                           ;initializer for _paramAddress
   131  0019CE  00A1               	dw	161
   132  0019D0  00A3               	dw	163
   133  0019D2  00A5               	dw	165
   134  0019D4  00A7               	dw	167
   135  0019D6  00A9               	dw	169
   136  0019D8  00AB               	dw	171
   137  0019DA  00AD               	dw	173
   138  0019DC  00AF               	dw	175
   139  0019DE  00B1               	dw	177
   140  0019E0  00B3               	dw	179
   141  0019E2  00B5               	dw	181
   142  0019E4  00B7               	dw	183
   143  0019E6  00B9               	dw	185
   144  0019E8  00BB               	dw	187
   145  0019EA  00BD               	dw	189
   146  0019EC  00BF               	dw	191
   147                           
   148                           ;initializer for _presetParams
   149  0019EE  0000               	dw	0
   150  0019F0  00FF               	dw	255
   151  0019F2  007F               	dw	127
   152  0019F4  007F               	dw	127
   153  0019F6  0000               	dw	0
   154  0019F8  0000               	dw	0
   155  0019FA  0000               	dw	0
   156  0019FC  0000               	dw	0
   157  0019FE  0000               	dw	0
   158  001A00  0000               	dw	0
   159  001A02  0000               	dw	0
   160  001A04  0000               	dw	0
   161  0000                     _ADCBUF9	set	3672
   162  0000                     _ADCBUF8	set	3670
   163  0000                     _ADCBUF14	set	3682
   164  0000                     _ADCBUF6	set	3666
   165  0000                     _ADCBUF5	set	3664
   166  0000                     _ADCBUF4	set	3662
   167  0000                     _ADCBUF3	set	3660
   168  0000                     _ADCBUF2	set	3658
   169  0000                     _ADCBUF1	set	3656
   170  0000                     _MEMCONbits	set	3811
   171  0000                     _LCDSE7	set	3797
   172  0000                     _LCDSE6	set	3796
   173  0000                     _LCDSE5	set	3795
   174  0000                     _LCDSE4	set	3794
   175  0000                     _LCDSE3	set	3793
   176  0000                     _LCDSE2	set	3792
   177  0000                     _LCDSE1	set	3791
   178  0000                     _LCDSE0	set	3790
   179  0000                     _LCDCONbits	set	3801
   180  0000                     _RPINR22_23bits	set	3637
   181  0000                     _RPINR18_19bits	set	3635
   182  0000                     _RPINR24_25bits	set	3638
   183  0000                     _RPINR20_21bits	set	3636
   184  0000                     _ANCON3bits	set	3653
   185  0000                     _ANCON2bits	set	3654
   186  0000                     _ANCON1bits	set	3655
   187  0000                     _ADCHS0Lbits	set	3718
   188  0000                     _ADCON5Hbits	set	3721
   189  0000                     _ADCON3Lbits	set	3722
   190  0000                     _ADCON3Hbits	set	3723
   191  0000                     _ADCON2Hbits	set	3725
   192  0000                     _IOCPbits	set	3926
   193  0000                     _IOCNbits	set	3925
   194  0000                     _PADCFG1bits	set	3924
   195  0000                     _T5CONbits	set	3860
   196  0000                     _CM3CONbits	set	3895
   197  0000                     _CM2CONbits	set	3896
   198  0000                     _CM1CONbits	set	3923
   199  0000                     _SSP2BUF	set	3843
   200  0000                     _SSP2CON3bits	set	3897
   201  0000                     _SSP2CON2bits	set	3864
   202  0000                     _SSP2MSK	set	3863
   203  0000                     _SSP2ADD	set	3842
   204  0000                     _SSP2CON1bits	set	3865
   205  0000                     _CCPR4H	set	3858
   206  0000                     _CCPTMRS1bits	set	3893
   207  0000                     _CCP4CONbits	set	3856
   208  0000                     _CCPR4L	set	3857
   209  0000                     _T4CONbits	set	3844
   210  0000                     _ADCBUF0	set	4034
   211  0000                     _SSP1STATbits	set	4039
   212  0000                     _PIR1bits	set	3998
   213  0000                     _SSP1CON2bits	set	4037
   214  0000                     _IOCFbits	set	4049
   215  0000                     _PIE5bits	set	4023
   216  0000                     _PIE2bits	set	4000
   217  0000                     _PIE1bits	set	3997
   218  0000                     _INTCONbits	set	4082
   219  0000                     _TRISBbits	set	3987
   220  0000                     _TRISJbits	set	3994
   221  0000                     _TRISEbits	set	3990
   222  0000                     _T3CONbits	set	4017
   223  0000                     _UCONbits	set	3957
   224  0000                     _OSCCON	set	4051
   225  0000                     _TRISGbits	set	3992
   226  0000                     _TRISHbits	set	3993
   227  0000                     _TRISFbits	set	3991
   228  0000                     _TRISAbits	set	3986
   229  0000                     _ADCON1Lbits	set	4032
   230  0000                     _ADCON1Hbits	set	4033
   231  0000                     _TRISDbits	set	3989
   232  0000                     _SSP1BUF	set	4041
   233  0000                     _SSP1ADD	set	4040
   234  0000                     _SSP1CON1bits	set	4038
   235  0000                     _T2CON	set	4042
   236  0000                     _TRISCbits	set	3988
   237  0000                     _PR2	set	4043
   238  0000                     _OSCCONbits	set	4051
   239  0000                     _OSCCON2bits	set	3942
   240  0000                     _OSCCON3bits	set	3941
   241  0000                     _OSCCON4bits	set	3940
   242  0000                     _T1CONbits	set	4045
   243  0000                     _T0CONbits	set	4053
   244  0000                     _T2CONbits	set	4042
   245  0000                     _PIR2bits	set	4001
   246  0000                     _RJ0	set	31808
   247  0000                     _RJ1	set	31809
   248  0000                     _RH4	set	31804
   249  0000                     _RH5	set	31805
   250  0000                     _RF3	set	31787
   251  0000                     _RC6	set	31766
   252  0000                     _RC0	set	31760
   253  0000                     _RC1	set	31761
   254  0000                     _RJ5	set	31813
   255  0000                     _RJ4	set	31812
   256  0000                     _RC7	set	31767
   257  0000                     _RG3	set	31795
   258  0000                     _RD1	set	31769
   259  0000                     _RE6	set	31782
   260  0000                     _RG2	set	31794
   261  0000                     _RG1	set	31793
   262  0000                     _RE3	set	31779
   263  0000                     _RD4	set	31772
   264  0000                     _IOCF7	set	32399
   265  0000                     _IOCF6	set	32398
   266  0000                     _IOCF5	set	32397
   267  0000                     _IOCF4	set	32396
   268  0000                     _IOCF3	set	32395
   269  0000                     _IOCF2	set	32394
   270  0000                     _IOCF1	set	32393
   271  0000                     _LATE0	set	31848
   272  0000                     _LATD2	set	31842
   273  0000                     _LATH1	set	31873
   274  0000                     _LATE1	set	31849
   275  0000                     _LATH2	set	31874
   276  0000                     _LATE4	set	31852
   277  0000                     _LATE5	set	31853
   278  0000                     _LATE7	set	31855
   279  0000                     _LATD0	set	31840
   280  0000                     _LATH0	set	31872
   281  0000                     _LATG4	set	31868
   282  0000                     _LATF6	set	31862
   283  0000                     _LATF5	set	31861
   284  0000                     _LATF2	set	31858
   285  0000                     _LATH7	set	31879
   286  0000                     _LATD3	set	31843
   287  0000                     _LATB5	set	31829
   288  0000                     _TMR2ON	set	32338
   289  0000                     _RD7	set	31775
   290  0000                     _TMR0IF	set	32658
   291  0000                     _TMR2IF	set	31985
   292  0000                     _TMR4IF	set	32192
   293  0000                     _SSP2IF	set	32014
   294                           
   295                           ; #config settings
   296  0000                     
   297                           	psect	cinit
   298  001546                     __pcinit:
   299                           	opt stack 0
   300  001546                     start_initialization:
   301                           	opt stack 0
   302  001546                     __initialization:
   303                           	opt stack 0
   304                           
   305                           ; Initialize objects allocated to BANK1 (56 bytes)
   306                           ; load TBLPTR registers with __pidataBANK1
   307  001546  0ECE               	movlw	low __pidataBANK1
   308  001548  6EF6               	movwf	tblptrl,c
   309  00154A  0E19               	movlw	high __pidataBANK1
   310  00154C  6EF7               	movwf	tblptrh,c
   311  00154E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   312  001550  6EF8               	movwf	tblptru,c
   313  001552  EE01  F090         	lfsr	0,__pdataBANK1
   314  001556  EE10 F038          	lfsr	1,56
   315  00155A                     copy_data0:
   316  00155A  0009               	tblrd		*+
   317  00155C  CFF5 FFEE          	movff	tablat,postinc0
   318  001560  50E5               	movf	postdec1,w,c
   319  001562  50E1               	movf	fsr1l,w,c
   320  001564  E1FA               	bnz	copy_data0
   321                           
   322                           ; Initialize objects allocated to BANK0 (12 bytes)
   323                           ; load TBLPTR registers with __pidataBANK0
   324  001566  0EE0               	movlw	low __pidataBANK0
   325  001568  6EF6               	movwf	tblptrl,c
   326  00156A  0E1B               	movlw	high __pidataBANK0
   327  00156C  6EF7               	movwf	tblptrh,c
   328  00156E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   329  001570  6EF8               	movwf	tblptru,c
   330  001572  EE00  F0E2         	lfsr	0,__pdataBANK0
   331  001576  EE10 F00C          	lfsr	1,12
   332  00157A                     copy_data1:
   333  00157A  0009               	tblrd		*+
   334  00157C  CFF5 FFEE          	movff	tablat,postinc0
   335  001580  50E5               	movf	postdec1,w,c
   336  001582  50E1               	movf	fsr1l,w,c
   337  001584  E1FA               	bnz	copy_data1
   338                           
   339                           ; Initialize objects allocated to COMRAM (6 bytes)
   340                           ; load TBLPTR registers with __pidataCOMRAM
   341  001586  0EF8               	movlw	low __pidataCOMRAM
   342  001588  6EF6               	movwf	tblptrl,c
   343  00158A  0E1B               	movlw	high __pidataCOMRAM
   344  00158C  6EF7               	movwf	tblptrh,c
   345  00158E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   346  001590  6EF8               	movwf	tblptru,c
   347  001592  EE00  F058         	lfsr	0,__pdataCOMRAM
   348  001596  EE10 F006          	lfsr	1,6
   349  00159A                     copy_data2:
   350  00159A  0009               	tblrd		*+
   351  00159C  CFF5 FFEE          	movff	tablat,postinc0
   352  0015A0  50E5               	movf	postdec1,w,c
   353  0015A2  50E1               	movf	fsr1l,w,c
   354  0015A4  E1FA               	bnz	copy_data2
   355                           
   356                           ; Clear objects allocated to BANK1 (144 bytes)
   357  0015A6  EE01  F000         	lfsr	0,__pbssBANK1
   358  0015AA  0E90               	movlw	144
   359  0015AC                     clear_0:
   360  0015AC  6AEE               	clrf	postinc0,c
   361  0015AE  06E8               	decf	wreg,f,c
   362  0015B0  E1FD               	bnz	clear_0
   363                           
   364                           ; Clear objects allocated to BANK0 (101 bytes)
   365  0015B2  EE00  F060         	lfsr	0,__pbssBANK0
   366  0015B6  0E65               	movlw	101
   367  0015B8                     clear_1:
   368  0015B8  6AEE               	clrf	postinc0,c
   369  0015BA  06E8               	decf	wreg,f,c
   370  0015BC  E1FD               	bnz	clear_1
   371                           
   372                           ; Clear objects allocated to COMRAM (38 bytes)
   373  0015BE  EE00  F032         	lfsr	0,__pbssCOMRAM
   374  0015C2  0E26               	movlw	38
   375  0015C4                     clear_2:
   376  0015C4  6AEE               	clrf	postinc0,c
   377  0015C6  06E8               	decf	wreg,f,c
   378  0015C8  E1FD               	bnz	clear_2
   379  0015CA                     end_of_initialization:
   380                           	opt stack 0
   381  0015CA                     __end_of__initialization:
   382                           	opt stack 0
   383  0015CA  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   384  0015CC  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   385  0015CE  0100               	movlb	0
   386  0015D0  EF80  F004         	goto	_main	;jump to C main() function
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	bssCOMRAM
   397  000032                     __pbssCOMRAM:
   398                           	opt stack 0
   399  000032                     _tap:
   400                           	opt stack 0
   401  000032                     	ds	2
   402  000034                     _tapPrev:
   403                           	opt stack 0
   404  000034                     	ds	2
   405  000036                     _tapTimeCount:
   406                           	opt stack 0
   407  000036                     	ds	2
   408  000038                     _shift:
   409                           	opt stack 0
   410  000038                     	ds	2
   411  00003A                     _tapDispCount:
   412                           	opt stack 0
   413  00003A                     	ds	2
   414  00003C                     _presetPend:
   415                           	opt stack 0
   416  00003C                     	ds	2
   417  00003E                     _targPreset:
   418                           	opt stack 0
   419  00003E                     	ds	2
   420  000040                     _bypass:
   421                           	opt stack 0
   422  000040                     	ds	2
   423  000042                     _fsw2:
   424                           	opt stack 0
   425  000042                     	ds	2
   426  000044                     _fsw1:
   427                           	opt stack 0
   428  000044                     	ds	2
   429  000046                     _switch5:
   430                           	opt stack 0
   431  000046                     	ds	2
   432  000048                     _switch4:
   433                           	opt stack 0
   434  000048                     	ds	2
   435  00004A                     _switch3:
   436                           	opt stack 0
   437  00004A                     	ds	2
   438  00004C                     _switch2:
   439                           	opt stack 0
   440  00004C                     	ds	2
   441  00004E                     _switch1:
   442                           	opt stack 0
   443  00004E                     	ds	2
   444  000050                     _shiftAction:
   445                           	opt stack 0
   446  000050                     	ds	2
   447  000052                     _intC:
   448                           	opt stack 0
   449  000052                     	ds	2
   450  000054                     _intB:
   451                           	opt stack 0
   452  000054                     	ds	2
   453  000056                     _intA:
   454                           	opt stack 0
   455  000056                     	ds	2
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	dataCOMRAM
   466  000058                     __pdataCOMRAM:
   467                           	opt stack 0
   468  000058                     _currentTapTime:
   469                           	opt stack 0
   470  000058                     	ds	2
   471  00005A                     _tapOnTime:
   472                           	opt stack 0
   473  00005A                     	ds	2
   474  00005C                     _swX:
   475                           	opt stack 0
   476  00005C                     	ds	2
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	bssBANK0
   487  000060                     __pbssBANK0:
   488                           	opt stack 0
   489  000060                     _tapAccum:
   490                           	opt stack 0
   491  000060                     	ds	4
   492  000064                     _masterTime:
   493                           	opt stack 0
   494  000064                     	ds	3
   495  000067                     _sync:
   496                           	opt stack 0
   497  000067                     	ds	2
   498  000069                     _setupComplete:
   499                           	opt stack 0
   500  000069                     	ds	2
   501  00006B                     _lock:
   502                           	opt stack 0
   503  00006B                     	ds	2
   504  00006D                     _timeoutCount:
   505                           	opt stack 0
   506  00006D                     	ds	2
   507  00006F                     _newTempo:
   508                           	opt stack 0
   509  00006F                     	ds	2
   510  000071                     _tapTime:
   511                           	opt stack 0
   512  000071                     	ds	2
   513  000073                     _timeC:
   514                           	opt stack 0
   515  000073                     	ds	2
   516  000075                     _lvlC:
   517                           	opt stack 0
   518  000075                     	ds	2
   519  000077                     _fbkC:
   520                           	opt stack 0
   521  000077                     	ds	2
   522  000079                     _timeB:
   523                           	opt stack 0
   524  000079                     	ds	2
   525  00007B                     _lvlB:
   526                           	opt stack 0
   527  00007B                     	ds	2
   528  00007D                     _fbkB:
   529                           	opt stack 0
   530  00007D                     	ds	2
   531  00007F                     _timeA:
   532                           	opt stack 0
   533  00007F                     	ds	2
   534  000081                     _lvlA:
   535                           	opt stack 0
   536  000081                     	ds	2
   537  000083                     _fbkA:
   538                           	opt stack 0
   539  000083                     	ds	2
   540  000085                     _dataPtr:
   541                           	opt stack 0
   542  000085                     	ds	2
   543  000087                     _dataTarget:
   544                           	opt stack 0
   545  000087                     	ds	2
   546  000089                     _linesArmed:
   547                           	opt stack 0
   548  000089                     	ds	2
   549  00008B                     _armC:
   550                           	opt stack 0
   551  00008B                     	ds	2
   552  00008D                     _armB:
   553                           	opt stack 0
   554  00008D                     	ds	2
   555  00008F                     _armA:
   556                           	opt stack 0
   557  00008F                     	ds	2
   558  000091                     _armFlashToggle:
   559                           	opt stack 0
   560  000091                     	ds	2
   561  000093                     _armFlash:
   562                           	opt stack 0
   563  000093                     	ds	2
   564  000095                     _armFlashCount:
   565                           	opt stack 0
   566  000095                     	ds	2
   567  000097                     _tapFlash:
   568                           	opt stack 0
   569  000097                     	ds	2
   570  000099                     _pFlash:
   571                           	opt stack 0
   572  000099                     	ds	2
   573  00009B                     _pFlashCount:
   574                           	opt stack 0
   575  00009B                     	ds	2
   576  00009D                     _slotUsed:
   577                           	opt stack 0
   578  00009D                     	ds	2
   579  00009F                     _savePend:
   580                           	opt stack 0
   581  00009F                     	ds	2
   582  0000A1                     _preset:
   583                           	opt stack 0
   584  0000A1                     	ds	2
   585  0000A3                     _muxADC:
   586                           	opt stack 0
   587  0000A3                     	ds	2
   588  0000A5                     _bounceCount:
   589                           	opt stack 0
   590  0000A5                     	ds	2
   591  0000A7                     _parameter:
   592                           	opt stack 0
   593  0000A7                     	ds	30
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK0
   604  0000E2                     __pdataBANK0:
   605                           	opt stack 0
   606  0000E2                     _presetAdd:
   607                           	opt stack 0
   608  0000E2                     	ds	10
   609  0000EC                     _bypMode:
   610                           	opt stack 0
   611  0000EC                     	ds	2
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1l	equ	0xFE1
   620                           
   621                           	psect	bssBANK1
   622  000100                     __pbssBANK1:
   623                           	opt stack 0
   624  000100                     _userParams:
   625                           	opt stack 0
   626  000100                     	ds	120
   627  000178                     _presetRead:
   628                           	opt stack 0
   629  000178                     	ds	24
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	dataBANK1
   640  000190                     __pdataBANK1:
   641                           	opt stack 0
   642  000190                     _paramAddress:
   643                           	opt stack 0
   644  000190                     	ds	32
   645  0001B0                     _presetParams:
   646                           	opt stack 0
   647  0001B0                     	ds	24
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           
   657                           	psect	cstackBANK0
   658  0000C5                     __pcstackBANK0:
   659                           	opt stack 0
   660  0000C5                     ??_startupSequence:
   661  0000C5                     ?_ADC_Read:
   662                           	opt stack 0
   663  0000C5                     ?_absVal:
   664                           	opt stack 0
   665  0000C5                     ?___wmul:
   666                           	opt stack 0
   667  0000C5                     I2C1_Write_DigiPot@value:
   668                           	opt stack 0
   669  0000C5                     absVal@val:
   670                           	opt stack 0
   671  0000C5                     ADC_Read@channel:
   672                           	opt stack 0
   673  0000C5                     I2C1_Page_Write_EEPROM@slot:
   674                           	opt stack 0
   675  0000C5                     I2C1_Block_Read_EERPOM@slot:
   676                           	opt stack 0
   677  0000C5                     ___wmul@multiplier:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x0
   681  0000C5                     	ds	1
   682  0000C6                     I2C1_Write_DigiPot@wrCommand:
   683                           	opt stack 0
   684                           
   685                           ; 1 bytes @ 0x1
   686  0000C6                     	ds	1
   687  0000C7                     ??_absVal:
   688  0000C7                     ADC_Read@value:
   689                           	opt stack 0
   690  0000C7                     I2C1_Page_Write_EEPROM@data:
   691                           	opt stack 0
   692  0000C7                     I2C1_Block_Read_EERPOM@data:
   693                           	opt stack 0
   694  0000C7                     ___wmul@multiplicand:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x2
   698  0000C7                     	ds	2
   699  0000C9                     ??_readControls:
   700  0000C9                     I2C1_Page_Write_EEPROM@bytes:
   701                           	opt stack 0
   702  0000C9                     I2C1_Block_Read_EERPOM@bytes:
   703                           	opt stack 0
   704  0000C9                     ___wmul@product:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x4
   708  0000C9                     	ds	2
   709  0000CB                     ??_I2C1_Block_Read_EERPOM:
   710  0000CB                     ??_I2C1_Page_Write_EEPROM:
   711  0000CB                     updatePreset@slot:
   712                           	opt stack 0
   713  0000CB                     updateParams@slot:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x6
   717  0000CB                     	ds	1
   718  0000CC                     I2C1_Page_Write_EEPROM@wrDevAddr:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x7
   722  0000CC                     	ds	1
   723  0000CD                     ??_updateParams:
   724  0000CD                     I2C1_Page_Write_EEPROM@memValue:
   725                           	opt stack 0
   726  0000CD                     I2C1_Block_Read_EERPOM@rdAddr:
   727                           	opt stack 0
   728  0000CD                     updatePreset@data:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x8
   732  0000CD                     	ds	1
   733  0000CE                     I2C1_Block_Read_EERPOM@memValue:
   734                           	opt stack 0
   735  0000CE                     I2C1_Page_Write_EEPROM@n:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x9
   739  0000CE                     	ds	1
   740  0000CF                     ??_updatePreset:
   741  0000CF                     I2C1_Block_Read_EERPOM@dummyWrite:
   742                           	opt stack 0
   743  0000CF                     updateParams@i:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xA
   747  0000CF                     	ds	1
   748  0000D0                     I2C1_Block_Read_EERPOM@n:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0xB
   752  0000D0                     	ds	1
   753  0000D1                     updatePreset@temp:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0xC
   757  0000D1                     	ds	2
   758  0000D3                     updatePreset@i:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0xE
   762  0000D3                     	ds	2
   763  0000D5                     fetchPreset@test:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x10
   767  0000D5                     	ds	2
   768  0000D7                     fetchPreset@i:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x12
   772  0000D7                     	ds	2
   773  0000D9                     ??_main:
   774                           
   775                           ; 1 bytes @ 0x14
   776  0000D9                     	ds	3
   777  0000DC                     main@prevDry:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x17
   781  0000DC                     	ds	2
   782  0000DE                     main@diff:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x19
   786  0000DE                     	ds	2
   787  0000E0                     main@dryLevel:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x1B
   791  0000E0                     	ds	2
   792                           tblptru	equ	0xFF8
   793                           tblptrh	equ	0xFF7
   794                           tblptrl	equ	0xFF6
   795                           tablat	equ	0xFF5
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           postdec1	equ	0xFE5
   799                           fsr1l	equ	0xFE1
   800                           
   801                           	psect	cstackCOMRAM
   802  000001                     __pcstackCOMRAM:
   803                           	opt stack 0
   804  000001                     ??_tapLED:
   805  000001                     ?___awdiv:
   806                           	opt stack 0
   807  000001                     ?i2_absVal:
   808                           	opt stack 0
   809  000001                     ?i2___wmul:
   810                           	opt stack 0
   811  000001                     ?___ftpack:
   812                           	opt stack 0
   813  000001                     checkSwitches@flag:
   814                           	opt stack 0
   815  000001                     updatePresetLEDs@psNum:
   816                           	opt stack 0
   817  000001                     ___awdiv@dividend:
   818                           	opt stack 0
   819  000001                     i2absVal@val:
   820                           	opt stack 0
   821  000001                     i2___wmul@multiplier:
   822                           	opt stack 0
   823  000001                     ___ftpack@arg:
   824                           	opt stack 0
   825                           
   826                           ; 3 bytes @ 0x0
   827  000001                     	ds	2
   828  000003                     ??i2_absVal:
   829  000003                     sendParam@n:
   830                           	opt stack 0
   831  000003                     ___awdiv@divisor:
   832                           	opt stack 0
   833  000003                     i2___wmul@multiplicand:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x2
   837  000003                     	ds	1
   838  000004                     ___ftpack@exp:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x3
   842  000004                     	ds	1
   843  000005                     ___awdiv@counter:
   844                           	opt stack 0
   845  000005                     ___ftpack@sign:
   846                           	opt stack 0
   847  000005                     i2___wmul@product:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x4
   851  000005                     	ds	1
   852  000006                     ??___ftpack:
   853  000006                     ___awdiv@sign:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x5
   857  000006                     	ds	1
   858  000007                     updateLineLEDs@lineA:
   859                           	opt stack 0
   860  000007                     ___awdiv@quotient:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x6
   864  000007                     	ds	2
   865  000009                     ?___awtoft:
   866                           	opt stack 0
   867  000009                     updateLineLEDs@lineB:
   868                           	opt stack 0
   869  000009                     ___awtoft@c:
   870                           	opt stack 0
   871                           
   872                           ; 2 bytes @ 0x8
   873  000009                     	ds	2
   874  00000B                     updateLineLEDs@lineC:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0xA
   878  00000B                     	ds	1
   879  00000C                     ___awtoft@sign:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0xB
   883  00000C                     	ds	1
   884  00000D                     ??_flashLED:
   885  00000D                     ?___ftmul:
   886                           	opt stack 0
   887  00000D                     ___ftmul@f1:
   888                           	opt stack 0
   889                           
   890                           ; 3 bytes @ 0xC
   891  00000D                     	ds	3
   892  000010                     ___ftmul@f2:
   893                           	opt stack 0
   894                           
   895                           ; 3 bytes @ 0xF
   896  000010                     	ds	3
   897  000013                     ??___ftmul:
   898                           
   899                           ; 1 bytes @ 0x12
   900  000013                     	ds	3
   901  000016                     ___ftmul@exp:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x15
   905  000016                     	ds	1
   906  000017                     ___ftmul@f3_as_product:
   907                           	opt stack 0
   908                           
   909                           ; 3 bytes @ 0x16
   910  000017                     	ds	3
   911  00001A                     ___ftmul@cntr:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x19
   915  00001A                     	ds	1
   916  00001B                     ___ftmul@sign:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x1A
   920  00001B                     	ds	1
   921  00001C                     ??_processTaps:
   922                           
   923                           ; 1 bytes @ 0x1B
   924  00001C                     	ds	2
   925  00001E                     processTaps@tapDiff:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x1D
   929  00001E                     	ds	2
   930  000020                     ??_highPriorityISR:
   931                           
   932                           ; 1 bytes @ 0x1F
   933  000020                     	ds	18
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           postinc0	equ	0xFEE
   939                           wreg	equ	0xFE8
   940                           postdec1	equ	0xFE5
   941                           fsr1l	equ	0xFE1
   942                           
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 261 in file "main.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  dryLevel        2   27[BANK0 ] int 
   953 ;;  diff            2   25[BANK0 ] int 
   954 ;;  prevDry         2   23[BANK0 ] int 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   968 ;;Total ram usage:        9 bytes
   969 ;; Hardware stack levels required when called:    8
   970 ;; This function calls:
   971 ;;		_ADC_Read
   972 ;;		_I2C1_Page_Write_EEPROM
   973 ;;		_I2C1_Write_DigiPot
   974 ;;		_absVal
   975 ;;		_fetchPreset
   976 ;;		_readControls
   977 ;;		_systemInit
   978 ;;		_updateParams
   979 ;;		_updatePreset
   980 ;; This function is called by:
   981 ;;		Startup code after reset
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text0
   986  000900                     __ptext0:
   987                           	opt stack 0
   988  000900                     _main:
   989                           	opt stack 23
   990                           
   991                           ;main.c: 264: int dryLevel = 0;
   992                           
   993                           ;incstack = 0
   994  000900  0E00               	movlw	0
   995  000902  0100               	movlb	0	; () banked
   996  000904  6FE1               	movwf	(main@dryLevel+1)& (0+255),b
   997  000906  0E00               	movlw	0
   998  000908  6FE0               	movwf	main@dryLevel& (0+255),b
   999                           
  1000                           ;main.c: 265: int prevDry = 0;
  1001  00090A  0E00               	movlw	0
  1002  00090C  0100               	movlb	0	; () banked
  1003  00090E  6FDD               	movwf	(main@prevDry+1)& (0+255),b
  1004  000910  0E00               	movlw	0
  1005  000912  6FDC               	movwf	main@prevDry& (0+255),b
  1006                           
  1007                           ;main.c: 266: int diff = 0;
  1008  000914  0E00               	movlw	0
  1009  000916  0100               	movlb	0	; () banked
  1010  000918  6FDF               	movwf	(main@diff+1)& (0+255),b
  1011  00091A  0E00               	movlw	0
  1012  00091C  6FDE               	movwf	main@diff& (0+255),b
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;main.c: 268: systemInit();
  1016  00091E  EC81  F00C         	call	_systemInit	;wreg free
  1017                           
  1018                           ;main.c: 270: fetchPreset();
  1019  000922  EC30  F00B         	call	_fetchPreset	;wreg free
  1020                           
  1021                           ;main.c: 272: T4CONbits.TMR4ON = 1;
  1022  000926  010F               	movlb	15	; () banked
  1023  000928  8504               	bsf	4,2,b	;volatile
  1024                           
  1025                           ; BSR set to: 15
  1026                           ;main.c: 274: I2C1_Write_DigiPot(0);
  1027  00092A  0E00               	movlw	0
  1028  00092C  ECC6  F00C         	call	_I2C1_Write_DigiPot
  1029  000930                     
  1030                           ;main.c: 277: {
  1031                           ;main.c: 278: if (savePend)
  1032  000930  0100               	movlb	0	; () banked
  1033  000932  519F               	movf	_savePend& (0+255),w,b
  1034  000934  0100               	movlb	0	; () banked
  1035  000936  11A0               	iorwf	(_savePend+1)& (0+255),w,b
  1036  000938  B4D8               	btfsc	status,2,c
  1037  00093A  D028               	goto	l202
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;main.c: 279: {
  1041                           ;main.c: 280: I2C1_Page_Write_EEPROM((preset-1), parameter, 12);
  1042  00093C  0EFF               	movlw	255
  1043  00093E  0100               	movlb	0	; () banked
  1044  000940  25A1               	addwf	_preset& (0+255),w,b
  1045  000942  0100               	movlb	0	; () banked
  1046  000944  6FC5               	movwf	I2C1_Page_Write_EEPROM@slot& (0+255),b
  1047  000946  0EFF               	movlw	255
  1048  000948  0100               	movlb	0	; () banked
  1049  00094A  21A2               	addwfc	(_preset+1)& (0+255),w,b
  1050  00094C  0100               	movlb	0	; () banked
  1051  00094E  6FC6               	movwf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),b
  1052  000950  0EA7               	movlw	low _parameter
  1053  000952  0100               	movlb	0	; () banked
  1054  000954  6FC7               	movwf	I2C1_Page_Write_EEPROM@data& (0+255),b
  1055  000956  0E00               	movlw	high _parameter
  1056  000958  0100               	movlb	0	; () banked
  1057  00095A  6FC8               	movwf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),b
  1058  00095C  0E00               	movlw	0
  1059  00095E  0100               	movlb	0	; () banked
  1060  000960  6FCA               	movwf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),b
  1061  000962  0E0C               	movlw	12
  1062  000964  6FC9               	movwf	I2C1_Page_Write_EEPROM@bytes& (0+255),b
  1063  000966  EC29  F008         	call	_I2C1_Page_Write_EEPROM	;wreg free
  1064                           
  1065                           ;main.c: 281: updatePreset(preset, parameter);
  1066  00096A  C0A1  F0CB         	movff	_preset,updatePreset@slot
  1067  00096E  C0A2  F0CC         	movff	_preset+1,updatePreset@slot+1
  1068  000972  0EA7               	movlw	low _parameter
  1069  000974  0100               	movlb	0	; () banked
  1070  000976  6FCD               	movwf	updatePreset@data& (0+255),b
  1071  000978  0E00               	movlw	high _parameter
  1072  00097A  0100               	movlb	0	; () banked
  1073  00097C  6FCE               	movwf	(updatePreset@data+1)& (0+255),b
  1074  00097E  ECDF  F008         	call	_updatePreset	;wreg free
  1075                           
  1076                           ;main.c: 282: savePend = 0;
  1077  000982  0E00               	movlw	0
  1078  000984  0100               	movlb	0	; () banked
  1079  000986  6FA0               	movwf	(_savePend+1)& (0+255),b
  1080  000988  0E00               	movlw	0
  1081  00098A  6F9F               	movwf	_savePend& (0+255),b
  1082  00098C                     l202:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;main.c: 283: }
  1086                           ;main.c: 285: if (preset > 0)
  1087                           
  1088                           ; BSR set to: 0
  1089  00098C  0100               	movlb	0	; () banked
  1090  00098E  BFA2               	btfsc	(_preset+1)& (0+255),7,b
  1091  000990  D00E               	goto	l203
  1092  000992  0100               	movlb	0	; () banked
  1093  000994  51A2               	movf	(_preset+1)& (0+255),w,b
  1094  000996  E104               	bnz	u4250
  1095  000998  0100               	movlb	0	; () banked
  1096  00099A  05A1               	decf	_preset& (0+255),w,b
  1097  00099C  A0D8               	btfss	status,0,c
  1098  00099E  D007               	goto	l203
  1099  0009A0                     u4250:
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;main.c: 286: {
  1103                           ;main.c: 287: updateParams(preset);
  1104  0009A0  C0A1  F0CB         	movff	_preset,updateParams@slot
  1105  0009A4  C0A2  F0CC         	movff	_preset+1,updateParams@slot+1
  1106  0009A8  ECC9  F009         	call	_updateParams	;wreg free
  1107                           
  1108                           ;main.c: 288: }
  1109  0009AC  D051               	goto	l205
  1110  0009AE                     l203:
  1111                           
  1112                           ;main.c: 289: else
  1113                           ;main.c: 290: {
  1114                           ;main.c: 291: readControls();
  1115  0009AE  EC90  F000         	call	_readControls	;wreg free
  1116                           
  1117                           ;main.c: 292: dryLevel = ADC_Read(8);
  1118  0009B2  0E00               	movlw	0
  1119  0009B4  0100               	movlb	0	; () banked
  1120  0009B6  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  1121  0009B8  0E08               	movlw	8
  1122  0009BA  6FC5               	movwf	ADC_Read@channel& (0+255),b
  1123  0009BC  EC19  F007         	call	_ADC_Read	;wreg free
  1124  0009C0  C0C5  F0E0         	movff	?_ADC_Read,main@dryLevel
  1125  0009C4  C0C6  F0E1         	movff	?_ADC_Read+1,main@dryLevel+1
  1126                           
  1127                           ;main.c: 293: dryLevel = dryLevel>>5;
  1128  0009C8  C0E0  F0D9         	movff	main@dryLevel,??_main
  1129  0009CC  C0E1  F0DA         	movff	main@dryLevel+1,??_main+1
  1130  0009D0  0E05               	movlw	5
  1131  0009D2  0100               	movlb	0	; () banked
  1132  0009D4  6FDB               	movwf	(??_main+2)& (0+255),b
  1133  0009D6                     u4265:
  1134  0009D6  0100               	movlb	0	; () banked
  1135  0009D8  35DA               	rlcf	(??_main+1)& (0+255),w,b
  1136  0009DA  33DA               	rrcf	(??_main+1)& (0+255),f,b
  1137  0009DC  33D9               	rrcf	??_main& (0+255),f,b
  1138  0009DE  0100               	movlb	0	; () banked
  1139  0009E0  2FDB               	decfsz	(??_main+2)& (0+255),f,b
  1140  0009E2  D7F9               	goto	u4265
  1141  0009E4  C0D9  F0E0         	movff	??_main,main@dryLevel
  1142  0009E8  C0DA  F0E1         	movff	??_main+1,main@dryLevel+1
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;main.c: 294: diff = dryLevel - prevDry;
  1146  0009EC  C0DC  F0D9         	movff	main@prevDry,??_main
  1147  0009F0  C0DD  F0DA         	movff	main@prevDry+1,??_main+1
  1148  0009F4  0100               	movlb	0	; () banked
  1149  0009F6  1FD9               	comf	??_main& (0+255),f,b
  1150  0009F8  1FDA               	comf	(??_main+1)& (0+255),f,b
  1151  0009FA  4BD9               	infsnz	??_main& (0+255),f,b
  1152  0009FC  2BDA               	incf	(??_main+1)& (0+255),f,b
  1153  0009FE  0100               	movlb	0	; () banked
  1154  000A00  51E0               	movf	main@dryLevel& (0+255),w,b
  1155  000A02  0100               	movlb	0	; () banked
  1156  000A04  25D9               	addwf	??_main& (0+255),w,b
  1157  000A06  0100               	movlb	0	; () banked
  1158  000A08  6FDE               	movwf	main@diff& (0+255),b
  1159  000A0A  0100               	movlb	0	; () banked
  1160  000A0C  51E1               	movf	(main@dryLevel+1)& (0+255),w,b
  1161  000A0E  0100               	movlb	0	; () banked
  1162  000A10  21DA               	addwfc	(??_main+1)& (0+255),w,b
  1163  000A12  0100               	movlb	0	; () banked
  1164  000A14  6FDF               	movwf	(main@diff+1)& (0+255),b
  1165                           
  1166                           ;main.c: 295: diff = absVal(diff);
  1167  000A16  C0DE  F0C5         	movff	main@diff,absVal@val
  1168  000A1A  C0DF  F0C6         	movff	main@diff+1,absVal@val+1
  1169  000A1E  EC52  F00D         	call	_absVal	;wreg free
  1170  000A22  C0C5  F0DE         	movff	?_absVal,main@diff
  1171  000A26  C0C6  F0DF         	movff	?_absVal+1,main@diff+1
  1172                           
  1173                           ;main.c: 297: if (diff >= 2)
  1174  000A2A  0100               	movlb	0	; () banked
  1175  000A2C  BFDF               	btfsc	(main@diff+1)& (0+255),7,b
  1176  000A2E  D010               	goto	l205
  1177  000A30  0100               	movlb	0	; () banked
  1178  000A32  51DF               	movf	(main@diff+1)& (0+255),w,b
  1179  000A34  E105               	bnz	u4270
  1180  000A36  0E02               	movlw	2
  1181  000A38  0100               	movlb	0	; () banked
  1182  000A3A  5DDE               	subwf	main@diff& (0+255),w,b
  1183  000A3C  A0D8               	btfss	status,0,c
  1184  000A3E  D008               	goto	l205
  1185  000A40                     u4270:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;main.c: 298: {
  1189                           ;main.c: 299: I2C1_Write_DigiPot(dryLevel);
  1190  000A40  0100               	movlb	0	; () banked
  1191  000A42  51E0               	movf	main@dryLevel& (0+255),w,b
  1192  000A44  ECC6  F00C         	call	_I2C1_Write_DigiPot
  1193                           
  1194                           ;main.c: 300: prevDry = dryLevel;
  1195  000A48  C0E0  F0DC         	movff	main@dryLevel,main@prevDry
  1196  000A4C  C0E1  F0DD         	movff	main@dryLevel+1,main@prevDry+1
  1197  000A50                     l205:
  1198                           
  1199                           ;main.c: 301: }
  1200                           ;main.c: 302: }
  1201                           ;main.c: 305: if (!setupComplete)
  1202  000A50  0100               	movlb	0	; () banked
  1203  000A52  5169               	movf	_setupComplete& (0+255),w,b
  1204  000A54  0100               	movlb	0	; () banked
  1205  000A56  116A               	iorwf	(_setupComplete+1)& (0+255),w,b
  1206  000A58  A4D8               	btfss	status,2,c
  1207  000A5A  D76A               	goto	l201
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 306: {
  1211                           ;main.c: 307: setupComplete = 1;
  1212  000A5C  0E00               	movlw	0
  1213  000A5E  0100               	movlb	0	; () banked
  1214  000A60  6F6A               	movwf	(_setupComplete+1)& (0+255),b
  1215  000A62  0E01               	movlw	1
  1216  000A64  6F69               	movwf	_setupComplete& (0+255),b
  1217                           
  1218                           ; BSR set to: 0
  1219                           
  1220                           ; BSR set to: 0
  1221  000A66  D764               	goto	l201
  1222  000A68                     __end_of_main:
  1223                           	opt stack 0
  1224                           tblptru	equ	0xFF8
  1225                           tblptrh	equ	0xFF7
  1226                           tblptrl	equ	0xFF6
  1227                           tablat	equ	0xFF5
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           status	equ	0xFD8
  1233                           
  1234 ;; *************** function _updateParams *****************
  1235 ;; Defined at:
  1236 ;;		line 239 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  slot            2    6[BANK0 ] int 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  i               2   10[BANK0 ] int 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;Total ram usage:        6 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    6
  1257 ;; This function calls:
  1258 ;;		___wmul
  1259 ;; This function is called by:
  1260 ;;		_main
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text1
  1265  001392                     __ptext1:
  1266                           	opt stack 0
  1267  001392                     _updateParams:
  1268                           	opt stack 24
  1269                           
  1270                           ;main.c: 241: int i;
  1271                           ;main.c: 243: for (i = 0; i < 12; i++)
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;incstack = 0
  1275  001392  0E00               	movlw	0
  1276  001394  0100               	movlb	0	; () banked
  1277  001396  6FD0               	movwf	(updateParams@i+1)& (0+255),b
  1278  001398  0E00               	movlw	0
  1279  00139A  6FCF               	movwf	updateParams@i& (0+255),b
  1280  00139C                     l3885:
  1281                           
  1282                           ; BSR set to: 0
  1283  00139C  0100               	movlb	0	; () banked
  1284  00139E  BFD0               	btfsc	(updateParams@i+1)& (0+255),7,b
  1285  0013A0  D008               	goto	l189
  1286  0013A2  0100               	movlb	0	; () banked
  1287  0013A4  51D0               	movf	(updateParams@i+1)& (0+255),w,b
  1288  0013A6  E13E               	bnz	l191
  1289  0013A8  0E0C               	movlw	12
  1290  0013AA  0100               	movlb	0	; () banked
  1291  0013AC  5DCF               	subwf	updateParams@i& (0+255),w,b
  1292  0013AE  B0D8               	btfsc	status,0,c
  1293  0013B0  0012               	return	
  1294  0013B2                     l189:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 244: {
  1298                           ;main.c: 245: parameter[i] = userParams[slot][i];
  1299                           
  1300                           ; BSR set to: 0
  1301  0013B2  C0CB  F0C5         	movff	updateParams@slot,___wmul@multiplier
  1302  0013B6  C0CC  F0C6         	movff	updateParams@slot+1,___wmul@multiplier+1
  1303  0013BA  0E00               	movlw	0
  1304  0013BC  0100               	movlb	0	; () banked
  1305  0013BE  6FC8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1306  0013C0  0E18               	movlw	24
  1307  0013C2  6FC7               	movwf	___wmul@multiplicand& (0+255),b
  1308  0013C4  EC1F  F00D         	call	___wmul	;wreg free
  1309  0013C8  0E00               	movlw	low _userParams
  1310  0013CA  0100               	movlb	0	; () banked
  1311  0013CC  6FCD               	movwf	??_updateParams& (0+255),b
  1312  0013CE  0E01               	movlw	high _userParams
  1313  0013D0  0100               	movlb	0	; () banked
  1314  0013D2  6FCE               	movwf	(??_updateParams+1)& (0+255),b
  1315  0013D4  0100               	movlb	0	; () banked
  1316  0013D6  51C5               	movf	?___wmul& (0+255),w,b
  1317  0013D8  0100               	movlb	0	; () banked
  1318  0013DA  27CD               	addwf	??_updateParams& (0+255),f,b
  1319  0013DC  0100               	movlb	0	; () banked
  1320  0013DE  51C6               	movf	(?___wmul+1)& (0+255),w,b
  1321  0013E0  0100               	movlb	0	; () banked
  1322  0013E2  23CE               	addwfc	(??_updateParams+1)& (0+255),f,b
  1323  0013E4  90D8               	bcf	status,0,c
  1324  0013E6  0100               	movlb	0	; () banked
  1325  0013E8  35CF               	rlcf	updateParams@i& (0+255),w,b
  1326  0013EA  6ED9               	movwf	fsr2l,c
  1327  0013EC  0100               	movlb	0	; () banked
  1328  0013EE  35D0               	rlcf	(updateParams@i+1)& (0+255),w,b
  1329  0013F0  6EDA               	movwf	fsr2h,c
  1330  0013F2  0100               	movlb	0	; () banked
  1331  0013F4  51CD               	movf	??_updateParams& (0+255),w,b
  1332  0013F6  26D9               	addwf	fsr2l,f,c
  1333  0013F8  0100               	movlb	0	; () banked
  1334  0013FA  51CE               	movf	(??_updateParams+1)& (0+255),w,b
  1335  0013FC  22DA               	addwfc	fsr2h,f,c
  1336  0013FE  90D8               	bcf	status,0,c
  1337  001400  0100               	movlb	0	; () banked
  1338  001402  35CF               	rlcf	updateParams@i& (0+255),w,b
  1339  001404  6EE1               	movwf	fsr1l,c
  1340  001406  0100               	movlb	0	; () banked
  1341  001408  35D0               	rlcf	(updateParams@i+1)& (0+255),w,b
  1342  00140A  6EE2               	movwf	fsr1h,c
  1343  00140C  0EA7               	movlw	low _parameter
  1344  00140E  26E1               	addwf	fsr1l,f,c
  1345  001410  0E00               	movlw	high _parameter
  1346  001412  22E2               	addwfc	fsr1h,f,c
  1347  001414  CFDE FFE6          	movff	postinc2,postinc1
  1348  001418  CFDD FFE5          	movff	postdec2,postdec1
  1349                           
  1350                           ; BSR set to: 0
  1351  00141C  0100               	movlb	0	; () banked
  1352  00141E  4BCF               	infsnz	updateParams@i& (0+255),f,b
  1353  001420  2BD0               	incf	(updateParams@i+1)& (0+255),f,b
  1354  001422  D7BC               	goto	l3885
  1355  001424                     l191:
  1356                           
  1357                           ; BSR set to: 0
  1358  001424  0012               	return		;funcret
  1359  001426                     __end_of_updateParams:
  1360                           	opt stack 0
  1361                           tblptru	equ	0xFF8
  1362                           tblptrh	equ	0xFF7
  1363                           tblptrl	equ	0xFF6
  1364                           tablat	equ	0xFF5
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postinc1	equ	0xFE6
  1368                           postdec1	equ	0xFE5
  1369                           fsr1h	equ	0xFE2
  1370                           fsr1l	equ	0xFE1
  1371                           postinc2	equ	0xFDE
  1372                           postdec2	equ	0xFDD
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _systemInit *****************
  1378 ;; Defined at:
  1379 ;;		line 338 in file "systemConfig.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    6
  1400 ;; This function calls:
  1401 ;;		_bypassSetup
  1402 ;;		_clockSwitch
  1403 ;;		_defaultLED
  1404 ;;		_interfaceInit
  1405 ;;		_interruptInit
  1406 ;;		_killLEDs
  1407 ;;		_mapPeripheralPins
  1408 ;;		_setupADC
  1409 ;;		_setupI2C1
  1410 ;;		_setupI2C2
  1411 ;;		_setupTMR0
  1412 ;;		_setupTMR1
  1413 ;;		_setupTMR2
  1414 ;;		_setupTMR4
  1415 ;;		_startupSequence
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text2
  1422  001902                     __ptext2:
  1423                           	opt stack 0
  1424  001902                     _systemInit:
  1425                           	opt stack 24
  1426                           
  1427                           ;systemConfig.c: 340: clockSwitch();
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;incstack = 0
  1431  001902  EC8F  F00D         	call	_clockSwitch	;wreg free
  1432                           
  1433                           ;systemConfig.c: 342: setupTMR0();
  1434  001906  ECBE  F00D         	call	_setupTMR0	;wreg free
  1435                           
  1436                           ;systemConfig.c: 343: setupTMR1();
  1437  00190A  ECE9  F00D         	call	_setupTMR1	;wreg free
  1438                           
  1439                           ;systemConfig.c: 344: setupTMR2();
  1440  00190E  ECE1  F00D         	call	_setupTMR2	;wreg free
  1441                           
  1442                           ;systemConfig.c: 345: setupTMR4();
  1443  001912  ECD6  F00D         	call	_setupTMR4	;wreg free
  1444                           
  1445                           ;systemConfig.c: 347: setupI2C1();
  1446  001916  ECB1  F00D         	call	_setupI2C1	;wreg free
  1447                           
  1448                           ;systemConfig.c: 348: setupI2C2();
  1449  00191A  ECA4  F00C         	call	_setupI2C2	;wreg free
  1450                           
  1451                           ;systemConfig.c: 350: setupADC();
  1452  00191E  EC13  F00A         	call	_setupADC	;wreg free
  1453                           
  1454                           ;systemConfig.c: 353: mapPeripheralPins();
  1455  001922  EC30  F00C         	call	_mapPeripheralPins	;wreg free
  1456                           
  1457                           ;systemConfig.c: 354: interfaceInit();
  1458  001926  EC2F  F009         	call	_interfaceInit	;wreg free
  1459                           
  1460                           ;systemConfig.c: 355: bypassSetup();
  1461  00192A  ECF6  F00D         	call	_bypassSetup	;wreg free
  1462                           
  1463                           ;systemConfig.c: 356: killLEDs();
  1464  00192E  ECA1  F00D         	call	_killLEDs	;wreg free
  1465                           
  1466                           ;systemConfig.c: 357: startupSequence();
  1467  001932  EC35  F003         	call	_startupSequence	;wreg free
  1468                           
  1469                           ;systemConfig.c: 358: defaultLED();
  1470  001936  ECCA  F00D         	call	_defaultLED	;wreg free
  1471                           
  1472                           ;systemConfig.c: 359: killLEDs();
  1473  00193A  ECA1  F00D         	call	_killLEDs	;wreg free
  1474                           
  1475                           ;systemConfig.c: 360: bypassSetup();
  1476  00193E  ECF6  F00D         	call	_bypassSetup	;wreg free
  1477                           
  1478                           ;systemConfig.c: 361: interruptInit();
  1479  001942  EC3A  F00D         	call	_interruptInit	;wreg free
  1480  001946  0012               	return		;funcret
  1481  001948                     __end_of_systemInit:
  1482                           	opt stack 0
  1483                           tblptru	equ	0xFF8
  1484                           tblptrh	equ	0xFF7
  1485                           tblptrl	equ	0xFF6
  1486                           tablat	equ	0xFF5
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postinc1	equ	0xFE6
  1490                           postdec1	equ	0xFE5
  1491                           fsr1h	equ	0xFE2
  1492                           fsr1l	equ	0xFE1
  1493                           postinc2	equ	0xFDE
  1494                           postdec2	equ	0xFDD
  1495                           fsr2h	equ	0xFDA
  1496                           fsr2l	equ	0xFD9
  1497                           status	equ	0xFD8
  1498                           
  1499 ;; *************** function _startupSequence *****************
  1500 ;; Defined at:
  1501 ;;		line 451 in file "hardware.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;Total ram usage:        2 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    5
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_systemInit
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text3
  1530  00066A                     __ptext3:
  1531                           	opt stack 0
  1532  00066A                     _startupSequence:
  1533                           	opt stack 24
  1534                           
  1535                           ;hardware.c: 456: LATD0 = 1;
  1536                           
  1537                           ;incstack = 0
  1538  00066A  808C               	bsf	3980,0,c	;volatile
  1539                           
  1540                           ;hardware.c: 457: _delay((unsigned long)((75)*(32000000/4000.0)));
  1541  00066C  0E04               	movlw	4
  1542  00066E  0100               	movlb	0	; () banked
  1543  000670  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1544  000672  0E0C               	movlw	12
  1545  000674  0100               	movlb	0	; () banked
  1546  000676  6FC5               	movwf	??_startupSequence& (0+255),b
  1547  000678  0E33               	movlw	51
  1548  00067A                     u4297:
  1549  00067A  2EE8               	decfsz	wreg,f,c
  1550  00067C  D7FE               	bra	u4297
  1551  00067E  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1552  000680  D7FC               	bra	u4297
  1553  000682  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1554  000684  D7FA               	bra	u4297
  1555  000686  D000               	nop2	
  1556                           
  1557                           ;hardware.c: 458: LATE7 = 1;
  1558  000688  8E8D               	bsf	3981,7,c	;volatile
  1559                           
  1560                           ;hardware.c: 459: _delay((unsigned long)((75)*(32000000/4000.0)));
  1561  00068A  0E04               	movlw	4
  1562  00068C  0100               	movlb	0	; () banked
  1563  00068E  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1564  000690  0E0C               	movlw	12
  1565  000692  0100               	movlb	0	; () banked
  1566  000694  6FC5               	movwf	??_startupSequence& (0+255),b
  1567  000696  0E33               	movlw	51
  1568  000698                     u4307:
  1569  000698  2EE8               	decfsz	wreg,f,c
  1570  00069A  D7FE               	bra	u4307
  1571  00069C  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1572  00069E  D7FC               	bra	u4307
  1573  0006A0  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1574  0006A2  D7FA               	bra	u4307
  1575  0006A4  D000               	nop2	
  1576                           
  1577                           ;hardware.c: 460: LATE5 = 1;
  1578  0006A6  8A8D               	bsf	3981,5,c	;volatile
  1579                           
  1580                           ;hardware.c: 461: _delay((unsigned long)((75)*(32000000/4000.0)));
  1581  0006A8  0E04               	movlw	4
  1582  0006AA  0100               	movlb	0	; () banked
  1583  0006AC  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1584  0006AE  0E0C               	movlw	12
  1585  0006B0  0100               	movlb	0	; () banked
  1586  0006B2  6FC5               	movwf	??_startupSequence& (0+255),b
  1587  0006B4  0E33               	movlw	51
  1588  0006B6                     u4317:
  1589  0006B6  2EE8               	decfsz	wreg,f,c
  1590  0006B8  D7FE               	bra	u4317
  1591  0006BA  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1592  0006BC  D7FC               	bra	u4317
  1593  0006BE  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1594  0006C0  D7FA               	bra	u4317
  1595  0006C2  D000               	nop2	
  1596                           
  1597                           ;hardware.c: 462: LATE4 = 1;
  1598  0006C4  888D               	bsf	3981,4,c	;volatile
  1599                           
  1600                           ;hardware.c: 463: _delay((unsigned long)((75)*(32000000/4000.0)));
  1601  0006C6  0E04               	movlw	4
  1602  0006C8  0100               	movlb	0	; () banked
  1603  0006CA  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1604  0006CC  0E0C               	movlw	12
  1605  0006CE  0100               	movlb	0	; () banked
  1606  0006D0  6FC5               	movwf	??_startupSequence& (0+255),b
  1607  0006D2  0E33               	movlw	51
  1608  0006D4                     u4327:
  1609  0006D4  2EE8               	decfsz	wreg,f,c
  1610  0006D6  D7FE               	bra	u4327
  1611  0006D8  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1612  0006DA  D7FC               	bra	u4327
  1613  0006DC  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1614  0006DE  D7FA               	bra	u4327
  1615  0006E0  D000               	nop2	
  1616                           
  1617                           ;hardware.c: 464: LATH2 = 1;
  1618  0006E2  8490               	bsf	3984,2,c	;volatile
  1619                           
  1620                           ;hardware.c: 465: _delay((unsigned long)((75)*(32000000/4000.0)));
  1621  0006E4  0E04               	movlw	4
  1622  0006E6  0100               	movlb	0	; () banked
  1623  0006E8  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1624  0006EA  0E0C               	movlw	12
  1625  0006EC  0100               	movlb	0	; () banked
  1626  0006EE  6FC5               	movwf	??_startupSequence& (0+255),b
  1627  0006F0  0E33               	movlw	51
  1628  0006F2                     u4337:
  1629  0006F2  2EE8               	decfsz	wreg,f,c
  1630  0006F4  D7FE               	bra	u4337
  1631  0006F6  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1632  0006F8  D7FC               	bra	u4337
  1633  0006FA  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1634  0006FC  D7FA               	bra	u4337
  1635  0006FE  D000               	nop2	
  1636                           
  1637                           ;hardware.c: 466: LATH2 = 0;
  1638  000700  9490               	bcf	3984,2,c	;volatile
  1639                           
  1640                           ;hardware.c: 467: _delay((unsigned long)((75)*(32000000/4000.0)));
  1641  000702  0E04               	movlw	4
  1642  000704  0100               	movlb	0	; () banked
  1643  000706  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1644  000708  0E0C               	movlw	12
  1645  00070A  0100               	movlb	0	; () banked
  1646  00070C  6FC5               	movwf	??_startupSequence& (0+255),b
  1647  00070E  0E33               	movlw	51
  1648  000710                     u4347:
  1649  000710  2EE8               	decfsz	wreg,f,c
  1650  000712  D7FE               	bra	u4347
  1651  000714  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1652  000716  D7FC               	bra	u4347
  1653  000718  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1654  00071A  D7FA               	bra	u4347
  1655  00071C  D000               	nop2	
  1656                           
  1657                           ;hardware.c: 468: LATE4 = 0;
  1658  00071E  988D               	bcf	3981,4,c	;volatile
  1659                           
  1660                           ;hardware.c: 469: _delay((unsigned long)((75)*(32000000/4000.0)));
  1661  000720  0E04               	movlw	4
  1662  000722  0100               	movlb	0	; () banked
  1663  000724  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1664  000726  0E0C               	movlw	12
  1665  000728  0100               	movlb	0	; () banked
  1666  00072A  6FC5               	movwf	??_startupSequence& (0+255),b
  1667  00072C  0E33               	movlw	51
  1668  00072E                     u4357:
  1669  00072E  2EE8               	decfsz	wreg,f,c
  1670  000730  D7FE               	bra	u4357
  1671  000732  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1672  000734  D7FC               	bra	u4357
  1673  000736  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1674  000738  D7FA               	bra	u4357
  1675  00073A  D000               	nop2	
  1676                           
  1677                           ;hardware.c: 470: LATE5 = 0;
  1678  00073C  9A8D               	bcf	3981,5,c	;volatile
  1679                           
  1680                           ;hardware.c: 471: _delay((unsigned long)((75)*(32000000/4000.0)));
  1681  00073E  0E04               	movlw	4
  1682  000740  0100               	movlb	0	; () banked
  1683  000742  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1684  000744  0E0C               	movlw	12
  1685  000746  0100               	movlb	0	; () banked
  1686  000748  6FC5               	movwf	??_startupSequence& (0+255),b
  1687  00074A  0E33               	movlw	51
  1688  00074C                     u4367:
  1689  00074C  2EE8               	decfsz	wreg,f,c
  1690  00074E  D7FE               	bra	u4367
  1691  000750  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1692  000752  D7FC               	bra	u4367
  1693  000754  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1694  000756  D7FA               	bra	u4367
  1695  000758  D000               	nop2	
  1696                           
  1697                           ;hardware.c: 472: LATE7 = 0;
  1698  00075A  9E8D               	bcf	3981,7,c	;volatile
  1699                           
  1700                           ;hardware.c: 473: _delay((unsigned long)((75)*(32000000/4000.0)));
  1701  00075C  0E04               	movlw	4
  1702  00075E  0100               	movlb	0	; () banked
  1703  000760  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1704  000762  0E0C               	movlw	12
  1705  000764  0100               	movlb	0	; () banked
  1706  000766  6FC5               	movwf	??_startupSequence& (0+255),b
  1707  000768  0E33               	movlw	51
  1708  00076A                     u4377:
  1709  00076A  2EE8               	decfsz	wreg,f,c
  1710  00076C  D7FE               	bra	u4377
  1711  00076E  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1712  000770  D7FC               	bra	u4377
  1713  000772  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1714  000774  D7FA               	bra	u4377
  1715  000776  D000               	nop2	
  1716                           
  1717                           ;hardware.c: 474: LATD0 = 0;
  1718  000778  908C               	bcf	3980,0,c	;volatile
  1719                           
  1720                           ;hardware.c: 475: _delay((unsigned long)((75)*(32000000/4000.0)));
  1721  00077A  0E04               	movlw	4
  1722  00077C  0100               	movlb	0	; () banked
  1723  00077E  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1724  000780  0E0C               	movlw	12
  1725  000782  0100               	movlb	0	; () banked
  1726  000784  6FC5               	movwf	??_startupSequence& (0+255),b
  1727  000786  0E33               	movlw	51
  1728  000788                     u4387:
  1729  000788  2EE8               	decfsz	wreg,f,c
  1730  00078A  D7FE               	bra	u4387
  1731  00078C  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1732  00078E  D7FC               	bra	u4387
  1733  000790  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1734  000792  D7FA               	bra	u4387
  1735  000794  D000               	nop2	
  1736                           
  1737                           ;hardware.c: 478: LATH7 = 1;
  1738  000796  8E90               	bsf	3984,7,c	;volatile
  1739                           
  1740                           ;hardware.c: 479: _delay((unsigned long)((75)*(32000000/4000.0)));
  1741  000798  0E04               	movlw	4
  1742  00079A  0100               	movlb	0	; () banked
  1743  00079C  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1744  00079E  0E0C               	movlw	12
  1745  0007A0  0100               	movlb	0	; () banked
  1746  0007A2  6FC5               	movwf	??_startupSequence& (0+255),b
  1747  0007A4  0E33               	movlw	51
  1748  0007A6                     u4397:
  1749  0007A6  2EE8               	decfsz	wreg,f,c
  1750  0007A8  D7FE               	bra	u4397
  1751  0007AA  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1752  0007AC  D7FC               	bra	u4397
  1753  0007AE  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1754  0007B0  D7FA               	bra	u4397
  1755  0007B2  D000               	nop2	
  1756                           
  1757                           ;hardware.c: 480: LATF2 = 1;
  1758  0007B4  848E               	bsf	3982,2,c	;volatile
  1759                           
  1760                           ;hardware.c: 481: _delay((unsigned long)((75)*(32000000/4000.0)));
  1761  0007B6  0E04               	movlw	4
  1762  0007B8  0100               	movlb	0	; () banked
  1763  0007BA  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1764  0007BC  0E0C               	movlw	12
  1765  0007BE  0100               	movlb	0	; () banked
  1766  0007C0  6FC5               	movwf	??_startupSequence& (0+255),b
  1767  0007C2  0E33               	movlw	51
  1768  0007C4                     u4407:
  1769  0007C4  2EE8               	decfsz	wreg,f,c
  1770  0007C6  D7FE               	bra	u4407
  1771  0007C8  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1772  0007CA  D7FC               	bra	u4407
  1773  0007CC  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1774  0007CE  D7FA               	bra	u4407
  1775  0007D0  D000               	nop2	
  1776                           
  1777                           ;hardware.c: 482: LATF5 = 1;
  1778  0007D2  8A8E               	bsf	3982,5,c	;volatile
  1779                           
  1780                           ;hardware.c: 483: _delay((unsigned long)((75)*(32000000/4000.0)));
  1781  0007D4  0E04               	movlw	4
  1782  0007D6  0100               	movlb	0	; () banked
  1783  0007D8  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1784  0007DA  0E0C               	movlw	12
  1785  0007DC  0100               	movlb	0	; () banked
  1786  0007DE  6FC5               	movwf	??_startupSequence& (0+255),b
  1787  0007E0  0E33               	movlw	51
  1788  0007E2                     u4417:
  1789  0007E2  2EE8               	decfsz	wreg,f,c
  1790  0007E4  D7FE               	bra	u4417
  1791  0007E6  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1792  0007E8  D7FC               	bra	u4417
  1793  0007EA  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1794  0007EC  D7FA               	bra	u4417
  1795  0007EE  D000               	nop2	
  1796                           
  1797                           ;hardware.c: 484: LATF6 = 1;
  1798  0007F0  8C8E               	bsf	3982,6,c	;volatile
  1799                           
  1800                           ;hardware.c: 485: _delay((unsigned long)((75)*(32000000/4000.0)));
  1801  0007F2  0E04               	movlw	4
  1802  0007F4  0100               	movlb	0	; () banked
  1803  0007F6  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1804  0007F8  0E0C               	movlw	12
  1805  0007FA  0100               	movlb	0	; () banked
  1806  0007FC  6FC5               	movwf	??_startupSequence& (0+255),b
  1807  0007FE  0E33               	movlw	51
  1808  000800                     u4427:
  1809  000800  2EE8               	decfsz	wreg,f,c
  1810  000802  D7FE               	bra	u4427
  1811  000804  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1812  000806  D7FC               	bra	u4427
  1813  000808  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1814  00080A  D7FA               	bra	u4427
  1815  00080C  D000               	nop2	
  1816                           
  1817                           ;hardware.c: 486: LATG4 = 1;
  1818  00080E  888F               	bsf	3983,4,c	;volatile
  1819                           
  1820                           ;hardware.c: 487: _delay((unsigned long)((75)*(32000000/4000.0)));
  1821  000810  0E04               	movlw	4
  1822  000812  0100               	movlb	0	; () banked
  1823  000814  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1824  000816  0E0C               	movlw	12
  1825  000818  0100               	movlb	0	; () banked
  1826  00081A  6FC5               	movwf	??_startupSequence& (0+255),b
  1827  00081C  0E33               	movlw	51
  1828  00081E                     u4437:
  1829  00081E  2EE8               	decfsz	wreg,f,c
  1830  000820  D7FE               	bra	u4437
  1831  000822  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1832  000824  D7FC               	bra	u4437
  1833  000826  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1834  000828  D7FA               	bra	u4437
  1835  00082A  D000               	nop2	
  1836                           
  1837                           ;hardware.c: 488: LATH0 = 1;
  1838  00082C  8090               	bsf	3984,0,c	;volatile
  1839                           
  1840                           ;hardware.c: 489: _delay((unsigned long)((75)*(32000000/4000.0)));
  1841  00082E  0E04               	movlw	4
  1842  000830  0100               	movlb	0	; () banked
  1843  000832  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1844  000834  0E0C               	movlw	12
  1845  000836  0100               	movlb	0	; () banked
  1846  000838  6FC5               	movwf	??_startupSequence& (0+255),b
  1847  00083A  0E33               	movlw	51
  1848  00083C                     u4447:
  1849  00083C  2EE8               	decfsz	wreg,f,c
  1850  00083E  D7FE               	bra	u4447
  1851  000840  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1852  000842  D7FC               	bra	u4447
  1853  000844  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1854  000846  D7FA               	bra	u4447
  1855  000848  D000               	nop2	
  1856                           
  1857                           ;hardware.c: 490: LATH7 = 0;
  1858  00084A  9E90               	bcf	3984,7,c	;volatile
  1859                           
  1860                           ;hardware.c: 491: _delay((unsigned long)((75)*(32000000/4000.0)));
  1861  00084C  0E04               	movlw	4
  1862  00084E  0100               	movlb	0	; () banked
  1863  000850  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1864  000852  0E0C               	movlw	12
  1865  000854  0100               	movlb	0	; () banked
  1866  000856  6FC5               	movwf	??_startupSequence& (0+255),b
  1867  000858  0E33               	movlw	51
  1868  00085A                     u4457:
  1869  00085A  2EE8               	decfsz	wreg,f,c
  1870  00085C  D7FE               	bra	u4457
  1871  00085E  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1872  000860  D7FC               	bra	u4457
  1873  000862  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1874  000864  D7FA               	bra	u4457
  1875  000866  D000               	nop2	
  1876                           
  1877                           ;hardware.c: 492: LATF2 = 0;
  1878  000868  948E               	bcf	3982,2,c	;volatile
  1879                           
  1880                           ;hardware.c: 493: _delay((unsigned long)((75)*(32000000/4000.0)));
  1881  00086A  0E04               	movlw	4
  1882  00086C  0100               	movlb	0	; () banked
  1883  00086E  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1884  000870  0E0C               	movlw	12
  1885  000872  0100               	movlb	0	; () banked
  1886  000874  6FC5               	movwf	??_startupSequence& (0+255),b
  1887  000876  0E33               	movlw	51
  1888  000878                     u4467:
  1889  000878  2EE8               	decfsz	wreg,f,c
  1890  00087A  D7FE               	bra	u4467
  1891  00087C  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1892  00087E  D7FC               	bra	u4467
  1893  000880  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1894  000882  D7FA               	bra	u4467
  1895  000884  D000               	nop2	
  1896                           
  1897                           ;hardware.c: 494: LATF5 = 0;
  1898  000886  9A8E               	bcf	3982,5,c	;volatile
  1899                           
  1900                           ;hardware.c: 495: _delay((unsigned long)((75)*(32000000/4000.0)));
  1901  000888  0E04               	movlw	4
  1902  00088A  0100               	movlb	0	; () banked
  1903  00088C  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1904  00088E  0E0C               	movlw	12
  1905  000890  0100               	movlb	0	; () banked
  1906  000892  6FC5               	movwf	??_startupSequence& (0+255),b
  1907  000894  0E33               	movlw	51
  1908  000896                     u4477:
  1909  000896  2EE8               	decfsz	wreg,f,c
  1910  000898  D7FE               	bra	u4477
  1911  00089A  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1912  00089C  D7FC               	bra	u4477
  1913  00089E  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1914  0008A0  D7FA               	bra	u4477
  1915  0008A2  D000               	nop2	
  1916                           
  1917                           ;hardware.c: 496: LATF6 = 0;
  1918  0008A4  9C8E               	bcf	3982,6,c	;volatile
  1919                           
  1920                           ;hardware.c: 497: _delay((unsigned long)((75)*(32000000/4000.0)));
  1921  0008A6  0E04               	movlw	4
  1922  0008A8  0100               	movlb	0	; () banked
  1923  0008AA  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1924  0008AC  0E0C               	movlw	12
  1925  0008AE  0100               	movlb	0	; () banked
  1926  0008B0  6FC5               	movwf	??_startupSequence& (0+255),b
  1927  0008B2  0E33               	movlw	51
  1928  0008B4                     u4487:
  1929  0008B4  2EE8               	decfsz	wreg,f,c
  1930  0008B6  D7FE               	bra	u4487
  1931  0008B8  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1932  0008BA  D7FC               	bra	u4487
  1933  0008BC  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1934  0008BE  D7FA               	bra	u4487
  1935  0008C0  D000               	nop2	
  1936                           
  1937                           ;hardware.c: 498: LATG4 = 0;
  1938  0008C2  988F               	bcf	3983,4,c	;volatile
  1939                           
  1940                           ;hardware.c: 499: _delay((unsigned long)((75)*(32000000/4000.0)));
  1941  0008C4  0E04               	movlw	4
  1942  0008C6  0100               	movlb	0	; () banked
  1943  0008C8  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1944  0008CA  0E0C               	movlw	12
  1945  0008CC  0100               	movlb	0	; () banked
  1946  0008CE  6FC5               	movwf	??_startupSequence& (0+255),b
  1947  0008D0  0E33               	movlw	51
  1948  0008D2                     u4497:
  1949  0008D2  2EE8               	decfsz	wreg,f,c
  1950  0008D4  D7FE               	bra	u4497
  1951  0008D6  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1952  0008D8  D7FC               	bra	u4497
  1953  0008DA  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1954  0008DC  D7FA               	bra	u4497
  1955  0008DE  D000               	nop2	
  1956                           
  1957                           ;hardware.c: 500: LATH0 = 0;
  1958  0008E0  9090               	bcf	3984,0,c	;volatile
  1959                           
  1960                           ;hardware.c: 501: _delay((unsigned long)((75)*(32000000/4000.0)));
  1961  0008E2  0E04               	movlw	4
  1962  0008E4  0100               	movlb	0	; () banked
  1963  0008E6  6FC6               	movwf	(??_startupSequence+1)& (0+255),b
  1964  0008E8  0E0C               	movlw	12
  1965  0008EA  0100               	movlb	0	; () banked
  1966  0008EC  6FC5               	movwf	??_startupSequence& (0+255),b
  1967  0008EE  0E33               	movlw	51
  1968  0008F0                     u4507:
  1969  0008F0  2EE8               	decfsz	wreg,f,c
  1970  0008F2  D7FE               	bra	u4507
  1971  0008F4  2FC5               	decfsz	??_startupSequence& (0+255),f,b
  1972  0008F6  D7FC               	bra	u4507
  1973  0008F8  2FC6               	decfsz	(??_startupSequence+1)& (0+255),f,b
  1974  0008FA  D7FA               	bra	u4507
  1975  0008FC  D000               	nop2	
  1976  0008FE  0012               	return		;funcret
  1977  000900                     __end_of_startupSequence:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           postinc0	equ	0xFEE
  1984                           wreg	equ	0xFE8
  1985                           postinc1	equ	0xFE6
  1986                           postdec1	equ	0xFE5
  1987                           fsr1h	equ	0xFE2
  1988                           fsr1l	equ	0xFE1
  1989                           postinc2	equ	0xFDE
  1990                           postdec2	equ	0xFDD
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8
  1994                           
  1995 ;; *************** function _setupTMR4 *****************
  1996 ;; Defined at:
  1997 ;;		line 43 in file "systemConfig.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    5
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_systemInit
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text4
  2026  001BAC                     __ptext4:
  2027                           	opt stack 0
  2028  001BAC                     _setupTMR4:
  2029                           	opt stack 24
  2030                           
  2031                           ;systemConfig.c: 46: T4CONbits.TMR4ON = 0x0;
  2032                           
  2033                           ;incstack = 0
  2034  001BAC  010F               	movlb	15	; () banked
  2035  001BAE  9504               	bcf	4,2,b	;volatile
  2036                           
  2037                           ; BSR set to: 15
  2038                           ;systemConfig.c: 47: T4CONbits.T4CKPS = 0x3;
  2039  001BB0  0E03               	movlw	3
  2040  001BB2  010F               	movlb	15	; () banked
  2041  001BB4  1304               	iorwf	4,f,b	;volatile
  2042                           
  2043                           ;systemConfig.c: 48: T4CONbits.T4OUTPS = 0x1;
  2044  001BB6  010F               	movlb	15	; () banked
  2045  001BB8  5104               	movf	4,w,b	;volatile
  2046  001BBA  0B87               	andlw	-121
  2047  001BBC  0908               	iorlw	8
  2048  001BBE  6F04               	movwf	4,b	;volatile
  2049                           
  2050                           ; BSR set to: 15
  2051  001BC0  0012               	return		;funcret
  2052  001BC2                     __end_of_setupTMR4:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postinc1	equ	0xFE6
  2061                           postdec1	equ	0xFE5
  2062                           fsr1h	equ	0xFE2
  2063                           fsr1l	equ	0xFE1
  2064                           postinc2	equ	0xFDE
  2065                           postdec2	equ	0xFDD
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function _setupTMR2 *****************
  2071 ;; Defined at:
  2072 ;;		line 34 in file "systemConfig.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    5
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_systemInit
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text5
  2101  001BC2                     __ptext5:
  2102                           	opt stack 0
  2103  001BC2                     _setupTMR2:
  2104                           	opt stack 24
  2105                           
  2106                           ;systemConfig.c: 37: T2CONbits.TMR2ON = 0x0;
  2107                           
  2108                           ; BSR set to: 15
  2109                           ;incstack = 0
  2110  001BC2  94CA               	bcf	4042,2,c	;volatile
  2111                           
  2112                           ;systemConfig.c: 38: T2CONbits.T2CKPS = 0x3;
  2113  001BC4  0E03               	movlw	3
  2114  001BC6  12CA               	iorwf	4042,f,c	;volatile
  2115                           
  2116                           ;systemConfig.c: 39: T2CONbits.T2OUTPS = 0x1;
  2117  001BC8  50CA               	movf	4042,w,c	;volatile
  2118  001BCA  0B87               	andlw	-121
  2119  001BCC  0908               	iorlw	8
  2120  001BCE  6ECA               	movwf	4042,c	;volatile
  2121  001BD0  0012               	return		;funcret
  2122  001BD2                     __end_of_setupTMR2:
  2123                           	opt stack 0
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           postinc1	equ	0xFE6
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           postinc2	equ	0xFDE
  2135                           postdec2	equ	0xFDD
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _setupTMR1 *****************
  2141 ;; Defined at:
  2142 ;;		line 25 in file "systemConfig.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    5
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_systemInit
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text6
  2171  001BD2                     __ptext6:
  2172                           	opt stack 0
  2173  001BD2                     _setupTMR1:
  2174                           	opt stack 24
  2175                           
  2176                           ;systemConfig.c: 27: T1CONbits.TMR1ON = 0x0;
  2177                           
  2178                           ;incstack = 0
  2179  001BD2  90CD               	bcf	4045,0,c	;volatile
  2180                           
  2181                           ;systemConfig.c: 28: T1CONbits.TMR1CS = 0x0;
  2182  001BD4  0E3F               	movlw	-193
  2183  001BD6  16CD               	andwf	4045,f,c	;volatile
  2184                           
  2185                           ;systemConfig.c: 29: T1CONbits.TCKPS = 0x3;
  2186  001BD8  0E30               	movlw	48
  2187  001BDA  12CD               	iorwf	4045,f,c	;volatile
  2188                           
  2189                           ;systemConfig.c: 30: T1CONbits.RD16 = 0x1;
  2190  001BDC  82CD               	bsf	4045,1,c	;volatile
  2191  001BDE  0012               	return		;funcret
  2192  001BE0                     __end_of_setupTMR1:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           postinc1	equ	0xFE6
  2201                           postdec1	equ	0xFE5
  2202                           fsr1h	equ	0xFE2
  2203                           fsr1l	equ	0xFE1
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _setupTMR0 *****************
  2211 ;; Defined at:
  2212 ;;		line 16 in file "systemConfig.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    5
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_systemInit
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text7
  2241  001B7C                     __ptext7:
  2242                           	opt stack 0
  2243  001B7C                     _setupTMR0:
  2244                           	opt stack 24
  2245                           
  2246                           ;systemConfig.c: 18: T0CONbits.TMR0ON = 0x0;
  2247                           
  2248                           ;incstack = 0
  2249  001B7C  9ED5               	bcf	4053,7,c	;volatile
  2250                           
  2251                           ;systemConfig.c: 19: T0CONbits.T08BIT = 0x1;
  2252  001B7E  8CD5               	bsf	4053,6,c	;volatile
  2253                           
  2254                           ;systemConfig.c: 20: T0CONbits.T0CS = 0x1;
  2255  001B80  50D5               	movf	4053,w,c	;volatile
  2256  001B82  0BCF               	andlw	-49
  2257  001B84  0910               	iorlw	16
  2258  001B86  6ED5               	movwf	4053,c	;volatile
  2259                           
  2260                           ;systemConfig.c: 21: T0CONbits.PSA = 0x0;
  2261  001B88  96D5               	bcf	4053,3,c	;volatile
  2262                           
  2263                           ;systemConfig.c: 22: T0CONbits.T0PS = 0x6;
  2264  001B8A  50D5               	movf	4053,w,c	;volatile
  2265  001B8C  0BF8               	andlw	-8
  2266  001B8E  0906               	iorlw	6
  2267  001B90  6ED5               	movwf	4053,c	;volatile
  2268  001B92  0012               	return		;funcret
  2269  001B94                     __end_of_setupTMR0:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           postinc1	equ	0xFE6
  2278                           postdec1	equ	0xFE5
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           postinc2	equ	0xFDE
  2282                           postdec2	equ	0xFDD
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function _setupI2C2 *****************
  2288 ;; Defined at:
  2289 ;;		line 92 in file "systemConfig.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;		None
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;		None
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;Total ram usage:        0 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    5
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_systemInit
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text8
  2318  001948                     __ptext8:
  2319                           	opt stack 0
  2320  001948                     _setupI2C2:
  2321                           	opt stack 24
  2322                           
  2323                           ;systemConfig.c: 94: SSP2CON1bits.SSPEN = 0x0;
  2324                           
  2325                           ;incstack = 0
  2326  001948  010F               	movlb	15	; () banked
  2327  00194A  9B19               	bcf	25,5,b	;volatile
  2328                           
  2329                           ;systemConfig.c: 96: TRISDbits.TRISD5 = 0x1;
  2330  00194C  8A95               	bsf	3989,5,c	;volatile
  2331                           
  2332                           ;systemConfig.c: 97: TRISDbits.TRISD6 = 0x1;
  2333  00194E  8C95               	bsf	3989,6,c	;volatile
  2334                           
  2335                           ; BSR set to: 15
  2336                           ;systemConfig.c: 100: SSP2CON1bits.SSPM = 0x9;
  2337  001950  010F               	movlb	15	; () banked
  2338  001952  5119               	movf	25,w,b	;volatile
  2339  001954  0BF0               	andlw	-16
  2340  001956  0909               	iorlw	9
  2341  001958  6F19               	movwf	25,b	;volatile
  2342                           
  2343                           ;systemConfig.c: 103: SSP2ADD = 0b10100000;
  2344  00195A  0EA0               	movlw	160
  2345  00195C  010F               	movlb	15	; () banked
  2346  00195E  6F02               	movwf	2,b	;volatile
  2347                           
  2348                           ;systemConfig.c: 104: SSP2MSK = 0b11000000;
  2349  001960  0EC0               	movlw	192
  2350  001962  010F               	movlb	15	; () banked
  2351  001964  6F17               	movwf	23,b	;volatile
  2352                           
  2353                           ;systemConfig.c: 105: SSP2CON1bits.SSPM = 0x6;
  2354  001966  010F               	movlb	15	; () banked
  2355  001968  5119               	movf	25,w,b	;volatile
  2356  00196A  0BF0               	andlw	-16
  2357  00196C  0906               	iorlw	6
  2358  00196E  6F19               	movwf	25,b	;volatile
  2359                           
  2360                           ; BSR set to: 15
  2361                           ;systemConfig.c: 107: SSP2CON1bits.CKP = 0x1;
  2362  001970  010F               	movlb	15	; () banked
  2363  001972  8919               	bsf	25,4,b	;volatile
  2364                           
  2365                           ; BSR set to: 15
  2366                           ;systemConfig.c: 108: SSP2CON2bits.SEN = 0x1;
  2367  001974  010F               	movlb	15	; () banked
  2368  001976  8118               	bsf	24,0,b	;volatile
  2369                           
  2370                           ; BSR set to: 15
  2371                           ;systemConfig.c: 109: SSP2CON2bits.GCEN = 0x0;
  2372  001978  010F               	movlb	15	; () banked
  2373  00197A  9F18               	bcf	24,7,b	;volatile
  2374                           
  2375                           ; BSR set to: 15
  2376                           ;systemConfig.c: 110: SSP2CON3bits.SCIE = 0x0;
  2377  00197C  010F               	movlb	15	; () banked
  2378  00197E  9B39               	bcf	57,5,b	;volatile
  2379                           
  2380                           ;systemConfig.c: 112: SSP2BUF = 0x00;
  2381  001980  0E00               	movlw	0
  2382  001982  010F               	movlb	15	; () banked
  2383  001984  6F03               	movwf	3,b	;volatile
  2384                           
  2385                           ; BSR set to: 15
  2386                           ;systemConfig.c: 113: SSP2CON1bits.SSPEN = 0x1;
  2387  001986  010F               	movlb	15	; () banked
  2388  001988  8B19               	bsf	25,5,b	;volatile
  2389                           
  2390                           ; BSR set to: 15
  2391  00198A  0012               	return		;funcret
  2392  00198C                     __end_of_setupI2C2:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           postinc0	equ	0xFEE
  2399                           wreg	equ	0xFE8
  2400                           postinc1	equ	0xFE6
  2401                           postdec1	equ	0xFE5
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           postinc2	equ	0xFDE
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _setupI2C1 *****************
  2411 ;; Defined at:
  2412 ;;		line 76 in file "systemConfig.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    5
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_systemInit
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text9
  2441  001B62                     __ptext9:
  2442                           	opt stack 0
  2443  001B62                     _setupI2C1:
  2444                           	opt stack 24
  2445                           
  2446                           ;systemConfig.c: 78: SSP1CON1bits.SSPEN = 0x0;
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;incstack = 0
  2450  001B62  9AC6               	bcf	4038,5,c	;volatile
  2451                           
  2452                           ;systemConfig.c: 80: TRISCbits.TRISC3 = 0x1;
  2453  001B64  8694               	bsf	3988,3,c	;volatile
  2454                           
  2455                           ;systemConfig.c: 81: TRISCbits.TRISC4 = 0x1;
  2456  001B66  8894               	bsf	3988,4,c	;volatile
  2457                           
  2458                           ;systemConfig.c: 84: SSP1ADD = 0x13;
  2459  001B68  0E13               	movlw	19
  2460  001B6A  6EC8               	movwf	4040,c	;volatile
  2461                           
  2462                           ;systemConfig.c: 85: SSP1CON1bits.SSPM = 0x8;
  2463  001B6C  50C6               	movf	4038,w,c	;volatile
  2464  001B6E  0BF0               	andlw	-16
  2465  001B70  0908               	iorlw	8
  2466  001B72  6EC6               	movwf	4038,c	;volatile
  2467                           
  2468                           ;systemConfig.c: 87: SSP1BUF = 0x00;
  2469  001B74  0E00               	movlw	0
  2470  001B76  6EC9               	movwf	4041,c	;volatile
  2471                           
  2472                           ;systemConfig.c: 89: SSP1CON1bits.SSPEN = 0x1;
  2473  001B78  8AC6               	bsf	4038,5,c	;volatile
  2474  001B7A  0012               	return		;funcret
  2475  001B7C                     __end_of_setupI2C1:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           postinc0	equ	0xFEE
  2482                           wreg	equ	0xFE8
  2483                           postinc1	equ	0xFE6
  2484                           postdec1	equ	0xFE5
  2485                           fsr1h	equ	0xFE2
  2486                           fsr1l	equ	0xFE1
  2487                           postinc2	equ	0xFDE
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _setupADC *****************
  2494 ;; Defined at:
  2495 ;;		line 116 in file "systemConfig.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    5
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_systemInit
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text10
  2524  001426                     __ptext10:
  2525                           	opt stack 0
  2526  001426                     _setupADC:
  2527                           	opt stack 24
  2528                           
  2529                           ;systemConfig.c: 118: ADCON1Hbits.ADON = 0;
  2530                           
  2531                           ;incstack = 0
  2532  001426  9EC1               	bcf	4033,7,c	;volatile
  2533                           
  2534                           ;systemConfig.c: 119: ADCON1Hbits.MODE12 = 1;
  2535  001428  84C1               	bsf	4033,2,c	;volatile
  2536                           
  2537                           ;systemConfig.c: 120: ADCON1Hbits.FORM = 0;
  2538  00142A  0EFC               	movlw	-4
  2539  00142C  16C1               	andwf	4033,f,c	;volatile
  2540                           
  2541                           ;systemConfig.c: 121: ADCON1Lbits.SSRC = 0;
  2542  00142E  98C0               	bcf	4032,4,c	;volatile
  2543  001430  9AC0               	bcf	4032,5,c	;volatile
  2544  001432  9CC0               	bcf	4032,6,c	;volatile
  2545  001434  9EC0               	bcf	4032,7,c	;volatile
  2546                           
  2547                           ;systemConfig.c: 122: ADCON1Lbits.ASAM = 0;
  2548  001436  94C0               	bcf	4032,2,c	;volatile
  2549                           
  2550                           ;systemConfig.c: 124: ADCON2Hbits.PVCFG = 0;
  2551  001438  0E3F               	movlw	-193
  2552  00143A  010E               	movlb	14	; () banked
  2553  00143C  178D               	andwf	141,f,b	;volatile
  2554                           
  2555                           ; BSR set to: 14
  2556                           ;systemConfig.c: 125: ADCON2Hbits.NVCFG0 = 0;
  2557  00143E  010E               	movlb	14	; () banked
  2558  001440  9B8D               	bcf	141,5,b	;volatile
  2559                           
  2560                           ; BSR set to: 14
  2561                           ;systemConfig.c: 126: ADCON2Hbits.BUFREGEN = 1;
  2562  001442  010E               	movlb	14	; () banked
  2563  001444  878D               	bsf	141,3,b	;volatile
  2564                           
  2565                           ; BSR set to: 14
  2566                           ;systemConfig.c: 128: ADCON3Hbits.ADRC = 0;
  2567  001446  010E               	movlb	14	; () banked
  2568  001448  9F8B               	bcf	139,7,b	;volatile
  2569                           
  2570                           ; BSR set to: 14
  2571                           ;systemConfig.c: 129: ADCON3Hbits.PUMPEN = 0;
  2572  00144A  010E               	movlb	14	; () banked
  2573  00144C  9B8B               	bcf	139,5,b	;volatile
  2574                           
  2575                           ;systemConfig.c: 130: ADCON3Lbits.ADCS = 0x20;
  2576  00144E  0E20               	movlw	32
  2577  001450  010E               	movlb	14	; () banked
  2578  001452  6F8A               	movwf	138,b	;volatile
  2579                           
  2580                           ; BSR set to: 14
  2581                           ;systemConfig.c: 132: ADCON5Hbits.ASENA = 0;
  2582  001454  010E               	movlb	14	; () banked
  2583  001456  9F89               	bcf	137,7,b	;volatile
  2584                           
  2585                           ; BSR set to: 14
  2586                           ;systemConfig.c: 133: ADCHS0Lbits.CH0SA = 0;
  2587  001458  010E               	movlb	14	; () banked
  2588  00145A  9186               	bcf	134,0,b	;volatile
  2589  00145C  9386               	bcf	134,1,b	;volatile
  2590  00145E  9586               	bcf	134,2,b	;volatile
  2591  001460  9786               	bcf	134,3,b	;volatile
  2592  001462  9986               	bcf	134,4,b	;volatile
  2593                           
  2594                           ; BSR set to: 14
  2595                           ;systemConfig.c: 134: ADCHS0Lbits.CH0NA = 0;
  2596  001464  010E               	movlb	14	; () banked
  2597  001466  9B86               	bcf	134,5,b	;volatile
  2598  001468  9D86               	bcf	134,6,b	;volatile
  2599  00146A  9F86               	bcf	134,7,b	;volatile
  2600                           
  2601                           ; BSR set to: 14
  2602                           ;systemConfig.c: 137: CM1CONbits.CON = 0;
  2603  00146C  010F               	movlb	15	; () banked
  2604  00146E  9F53               	bcf	83,7,b	;volatile
  2605                           
  2606                           ; BSR set to: 15
  2607                           ;systemConfig.c: 138: CM2CONbits.CON = 0;
  2608  001470  010F               	movlb	15	; () banked
  2609  001472  9F38               	bcf	56,7,b	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;systemConfig.c: 139: CM3CONbits.CON = 0;
  2613  001474  010F               	movlb	15	; () banked
  2614  001476  9F37               	bcf	55,7,b	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617                           ;systemConfig.c: 141: ANCON1bits.ANSEL0 = 1;
  2618  001478  010E               	movlb	14	; () banked
  2619  00147A  8147               	bsf	71,0,b	;volatile
  2620                           
  2621                           ; BSR set to: 14
  2622                           ;systemConfig.c: 142: ANCON1bits.ANSEL1 = 1;
  2623  00147C  010E               	movlb	14	; () banked
  2624  00147E  8347               	bsf	71,1,b	;volatile
  2625                           
  2626                           ; BSR set to: 14
  2627                           ;systemConfig.c: 143: ANCON1bits.ANSEL2 = 1;
  2628  001480  010E               	movlb	14	; () banked
  2629  001482  8547               	bsf	71,2,b	;volatile
  2630                           
  2631                           ; BSR set to: 14
  2632                           ;systemConfig.c: 144: ANCON1bits.ANSEL3 = 1;
  2633  001484  010E               	movlb	14	; () banked
  2634  001486  8747               	bsf	71,3,b	;volatile
  2635                           
  2636                           ; BSR set to: 14
  2637                           ;systemConfig.c: 145: ANCON1bits.ANSEL4 = 1;
  2638  001488  010E               	movlb	14	; () banked
  2639  00148A  8947               	bsf	71,4,b	;volatile
  2640                           
  2641                           ; BSR set to: 14
  2642                           ;systemConfig.c: 146: ANCON1bits.ANSEL5 = 1;
  2643  00148C  010E               	movlb	14	; () banked
  2644  00148E  8B47               	bsf	71,5,b	;volatile
  2645                           
  2646                           ; BSR set to: 14
  2647                           ;systemConfig.c: 147: ANCON2bits.ANSEL11 = 1;
  2648  001490  010E               	movlb	14	; () banked
  2649  001492  8746               	bsf	70,3,b	;volatile
  2650                           
  2651                           ; BSR set to: 14
  2652                           ;systemConfig.c: 148: ANCON1bits.ANSEL7 = 1;
  2653  001494  010E               	movlb	14	; () banked
  2654  001496  8F47               	bsf	71,7,b	;volatile
  2655                           
  2656                           ; BSR set to: 14
  2657                           ;systemConfig.c: 149: ANCON2bits.ANSEL8 = 1;
  2658  001498  010E               	movlb	14	; () banked
  2659  00149A  8146               	bsf	70,0,b	;volatile
  2660                           
  2661                           ; BSR set to: 14
  2662                           ;systemConfig.c: 150: ANCON3bits.ANSEL22 = 1;
  2663  00149C  010E               	movlb	14	; () banked
  2664  00149E  8D45               	bsf	69,6,b	;volatile
  2665                           
  2666                           ; BSR set to: 14
  2667                           ;systemConfig.c: 152: TRISAbits.TRISA0 = 1;
  2668  0014A0  8092               	bsf	3986,0,c	;volatile
  2669                           
  2670                           ; BSR set to: 14
  2671                           ;systemConfig.c: 153: TRISAbits.TRISA1 = 1;
  2672  0014A2  8292               	bsf	3986,1,c	;volatile
  2673                           
  2674                           ; BSR set to: 14
  2675                           ;systemConfig.c: 154: TRISAbits.TRISA2 = 1;
  2676  0014A4  8492               	bsf	3986,2,c	;volatile
  2677                           
  2678                           ; BSR set to: 14
  2679                           ;systemConfig.c: 155: TRISAbits.TRISA3 = 1;
  2680  0014A6  8692               	bsf	3986,3,c	;volatile
  2681                           
  2682                           ; BSR set to: 14
  2683                           ;systemConfig.c: 156: TRISAbits.TRISA5 = 1;
  2684  0014A8  8A92               	bsf	3986,5,c	;volatile
  2685                           
  2686                           ; BSR set to: 14
  2687                           ;systemConfig.c: 157: TRISFbits.TRISF7 = 1;
  2688  0014AA  8E97               	bsf	3991,7,c	;volatile
  2689                           
  2690                           ; BSR set to: 14
  2691                           ;systemConfig.c: 158: TRISAbits.TRISA4 = 1;
  2692  0014AC  8892               	bsf	3986,4,c	;volatile
  2693                           
  2694                           ; BSR set to: 14
  2695                           ;systemConfig.c: 159: TRISHbits.TRISH6 = 1;
  2696  0014AE  8C99               	bsf	3993,6,c	;volatile
  2697                           
  2698                           ; BSR set to: 14
  2699                           ;systemConfig.c: 160: TRISGbits.TRISG0 = 1;
  2700  0014B0  8098               	bsf	3992,0,c	;volatile
  2701                           
  2702                           ; BSR set to: 14
  2703                           ;systemConfig.c: 161: TRISCbits.TRISC2 = 1;
  2704  0014B2  8494               	bsf	3988,2,c	;volatile
  2705                           
  2706                           ; BSR set to: 14
  2707  0014B4  0012               	return		;funcret
  2708  0014B6                     __end_of_setupADC:
  2709                           	opt stack 0
  2710                           tblptru	equ	0xFF8
  2711                           tblptrh	equ	0xFF7
  2712                           tblptrl	equ	0xFF6
  2713                           tablat	equ	0xFF5
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           postinc1	equ	0xFE6
  2717                           postdec1	equ	0xFE5
  2718                           fsr1h	equ	0xFE2
  2719                           fsr1l	equ	0xFE1
  2720                           postinc2	equ	0xFDE
  2721                           postdec2	equ	0xFDD
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8
  2725                           
  2726 ;; *************** function _mapPeripheralPins *****************
  2727 ;; Defined at:
  2728 ;;		line 164 in file "systemConfig.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;		None
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;Total ram usage:        0 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    5
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_systemInit
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text11
  2757  001860                     __ptext11:
  2758                           	opt stack 0
  2759  001860                     _mapPeripheralPins:
  2760                           	opt stack 24
  2761                           
  2762                           ;systemConfig.c: 167: OSCCON = (OSCCON & 0x5F);
  2763                           
  2764                           ; BSR set to: 14
  2765                           ;incstack = 0
  2766  001860  50D3               	movf	4051,w,c	;volatile
  2767  001862  0B5F               	andlw	95
  2768  001864  6ED3               	movwf	4051,c	;volatile
  2769                           
  2770                           ;systemConfig.c: 168: RPINR20_21bits.IOC3R = 0x9;
  2771  001866  010E               	movlb	14	; () banked
  2772  001868  5134               	movf	52,w,b	;volatile
  2773  00186A  0B0F               	andlw	-241
  2774  00186C  0990               	iorlw	144
  2775  00186E  6F34               	movwf	52,b	;volatile
  2776                           
  2777                           ; BSR set to: 14
  2778                           ;systemConfig.c: 169: RPINR20_21bits.IOC2R = 0xA;
  2779  001870  010E               	movlb	14	; () banked
  2780  001872  5134               	movf	52,w,b	;volatile
  2781  001874  0BF0               	andlw	-16
  2782  001876  090A               	iorlw	10
  2783  001878  6F34               	movwf	52,b	;volatile
  2784                           
  2785                           ; BSR set to: 14
  2786                           ;systemConfig.c: 170: RPINR24_25bits.IOC6R = 0x8;
  2787  00187A  010E               	movlb	14	; () banked
  2788  00187C  5136               	movf	54,w,b	;volatile
  2789  00187E  0BF0               	andlw	-16
  2790  001880  0908               	iorlw	8
  2791  001882  6F36               	movwf	54,b	;volatile
  2792                           
  2793                           ; BSR set to: 14
  2794                           ;systemConfig.c: 171: RPINR18_19bits.IOC1R = 0x5;
  2795  001884  010E               	movlb	14	; () banked
  2796  001886  5133               	movf	51,w,b	;volatile
  2797  001888  0B0F               	andlw	-241
  2798  00188A  0950               	iorlw	80
  2799  00188C  6F33               	movwf	51,b	;volatile
  2800                           
  2801                           ; BSR set to: 14
  2802                           ;systemConfig.c: 172: RPINR24_25bits.IOC7R = 0xA;
  2803  00188E  010E               	movlb	14	; () banked
  2804  001890  5136               	movf	54,w,b	;volatile
  2805  001892  0B0F               	andlw	-241
  2806  001894  09A0               	iorlw	160
  2807  001896  6F36               	movwf	54,b	;volatile
  2808                           
  2809                           ; BSR set to: 14
  2810                           ;systemConfig.c: 173: RPINR22_23bits.IOC4R = 0x6;
  2811  001898  010E               	movlb	14	; () banked
  2812  00189A  5135               	movf	53,w,b	;volatile
  2813  00189C  0BF0               	andlw	-16
  2814  00189E  0906               	iorlw	6
  2815  0018A0  6F35               	movwf	53,b	;volatile
  2816                           
  2817                           ; BSR set to: 14
  2818                           ;systemConfig.c: 174: RPINR22_23bits.IOC5R = 0x8;
  2819  0018A2  010E               	movlb	14	; () banked
  2820  0018A4  5135               	movf	53,w,b	;volatile
  2821  0018A6  0B0F               	andlw	-241
  2822  0018A8  0980               	iorlw	128
  2823  0018AA  6F35               	movwf	53,b	;volatile
  2824                           
  2825                           ; BSR set to: 14
  2826                           ;systemConfig.c: 175: OSCCON = (OSCCON | 0x40);
  2827  0018AC  50D3               	movf	4051,w,c	;volatile
  2828  0018AE  0940               	iorlw	64
  2829  0018B0  6ED3               	movwf	4051,c	;volatile
  2830                           
  2831                           ; BSR set to: 14
  2832  0018B2  0012               	return		;funcret
  2833  0018B4                     __end_of_mapPeripheralPins:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           postinc1	equ	0xFE6
  2842                           postdec1	equ	0xFE5
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _killLEDs *****************
  2852 ;; Defined at:
  2853 ;;		line 666 in file "hardware.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		None
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    5
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_systemInit
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text12
  2882  001B42                     __ptext12:
  2883                           	opt stack 0
  2884  001B42                     _killLEDs:
  2885                           	opt stack 24
  2886                           
  2887                           ;hardware.c: 668: LATE0 = 0;
  2888                           
  2889                           ; BSR set to: 14
  2890                           ;incstack = 0
  2891  001B42  908D               	bcf	3981,0,c	;volatile
  2892                           
  2893                           ;hardware.c: 669: LATD2 = 0;
  2894  001B44  948C               	bcf	3980,2,c	;volatile
  2895                           
  2896                           ;hardware.c: 670: LATH7 = 0;
  2897  001B46  9E90               	bcf	3984,7,c	;volatile
  2898                           
  2899                           ;hardware.c: 671: LATF2 = 0;
  2900  001B48  948E               	bcf	3982,2,c	;volatile
  2901                           
  2902                           ;hardware.c: 672: LATF5 = 0;
  2903  001B4A  9A8E               	bcf	3982,5,c	;volatile
  2904                           
  2905                           ;hardware.c: 673: LATF6 = 0;
  2906  001B4C  9C8E               	bcf	3982,6,c	;volatile
  2907                           
  2908                           ;hardware.c: 674: LATG4 = 0;
  2909  001B4E  988F               	bcf	3983,4,c	;volatile
  2910                           
  2911                           ;hardware.c: 675: LATH0 = 0;
  2912  001B50  9090               	bcf	3984,0,c	;volatile
  2913                           
  2914                           ;hardware.c: 676: LATE1 = 0;
  2915  001B52  928D               	bcf	3981,1,c	;volatile
  2916                           
  2917                           ;hardware.c: 677: LATH1 = 0;
  2918  001B54  9290               	bcf	3984,1,c	;volatile
  2919                           
  2920                           ;hardware.c: 678: LATD0 = 0;
  2921  001B56  908C               	bcf	3980,0,c	;volatile
  2922                           
  2923                           ;hardware.c: 679: LATE7 = 0;
  2924  001B58  9E8D               	bcf	3981,7,c	;volatile
  2925                           
  2926                           ;hardware.c: 680: LATE5 = 0;
  2927  001B5A  9A8D               	bcf	3981,5,c	;volatile
  2928                           
  2929                           ;hardware.c: 681: LATE4 = 0;
  2930  001B5C  988D               	bcf	3981,4,c	;volatile
  2931                           
  2932                           ;hardware.c: 682: LATH2 = 0;
  2933  001B5E  9490               	bcf	3984,2,c	;volatile
  2934  001B60  0012               	return		;funcret
  2935  001B62                     __end_of_killLEDs:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           postinc1	equ	0xFE6
  2944                           postdec1	equ	0xFE5
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           postinc2	equ	0xFDE
  2948                           postdec2	equ	0xFDD
  2949                           fsr2h	equ	0xFDA
  2950                           fsr2l	equ	0xFD9
  2951                           status	equ	0xFD8
  2952                           
  2953 ;; *************** function _interruptInit *****************
  2954 ;; Defined at:
  2955 ;;		line 291 in file "systemConfig.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		None
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    5
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_systemInit
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text13
  2984  001A74                     __ptext13:
  2985                           	opt stack 0
  2986  001A74                     _interruptInit:
  2987                           	opt stack 24
  2988                           
  2989                           ;systemConfig.c: 293: INTCONbits.T0IE = 0x1;
  2990                           
  2991                           ;incstack = 0
  2992  001A74  8AF2               	bsf	intcon,5,c	;volatile
  2993                           
  2994                           ;systemConfig.c: 294: PIE1bits.TMR1IE = 0x1;
  2995  001A76  809D               	bsf	3997,0,c	;volatile
  2996                           
  2997                           ;systemConfig.c: 295: PIE1bits.TMR2IE = 0x1;
  2998  001A78  829D               	bsf	3997,1,c	;volatile
  2999                           
  3000                           ;systemConfig.c: 296: PIE2bits.TMR3IE = 0x1;
  3001  001A7A  82A0               	bsf	4000,1,c	;volatile
  3002                           
  3003                           ;systemConfig.c: 297: PIE5bits.TMR4IE = 0x1;
  3004  001A7C  80B7               	bsf	4023,0,c	;volatile
  3005                           
  3006                           ;systemConfig.c: 299: PIE2bits.SSP2IE = 0x1;
  3007  001A7E  8CA0               	bsf	4000,6,c	;volatile
  3008                           
  3009                           ;systemConfig.c: 301: INTCONbits.IOCIE = 0x1;
  3010  001A80  86F2               	bsf	intcon,3,c	;volatile
  3011                           
  3012                           ;systemConfig.c: 302: IOCNbits.IOCN1 = 0x1;
  3013  001A82  010F               	movlb	15	; () banked
  3014  001A84  8355               	bsf	85,1,b	;volatile
  3015                           
  3016                           ;systemConfig.c: 303: IOCNbits.IOCN2 = 0x1;
  3017  001A86  010F               	movlb	15	; () banked
  3018  001A88  8555               	bsf	85,2,b	;volatile
  3019                           
  3020                           ;systemConfig.c: 304: IOCNbits.IOCN3 = 0x1;
  3021  001A8A  010F               	movlb	15	; () banked
  3022  001A8C  8755               	bsf	85,3,b	;volatile
  3023                           
  3024                           ;systemConfig.c: 305: IOCNbits.IOCN4 = 0x1;
  3025  001A8E  010F               	movlb	15	; () banked
  3026  001A90  8955               	bsf	85,4,b	;volatile
  3027                           
  3028                           ;systemConfig.c: 306: IOCNbits.IOCN5 = 0x1;
  3029  001A92  010F               	movlb	15	; () banked
  3030  001A94  8B55               	bsf	85,5,b	;volatile
  3031                           
  3032                           ;systemConfig.c: 307: IOCNbits.IOCN6 = 0x1;
  3033  001A96  010F               	movlb	15	; () banked
  3034  001A98  8D55               	bsf	85,6,b	;volatile
  3035                           
  3036                           ;systemConfig.c: 308: IOCNbits.IOCN7 = 0x1;
  3037  001A9A  010F               	movlb	15	; () banked
  3038  001A9C  8F55               	bsf	85,7,b	;volatile
  3039                           
  3040                           ;systemConfig.c: 310: INTCONbits.PEIE = 0x1;
  3041  001A9E  8CF2               	bsf	intcon,6,c	;volatile
  3042                           
  3043                           ;systemConfig.c: 311: INTCONbits.GIE = 0x1;
  3044  001AA0  8EF2               	bsf	intcon,7,c	;volatile
  3045                           
  3046                           ; BSR set to: 15
  3047  001AA2  0012               	return		;funcret
  3048  001AA4                     __end_of_interruptInit:
  3049                           	opt stack 0
  3050                           tblptru	equ	0xFF8
  3051                           tblptrh	equ	0xFF7
  3052                           tblptrl	equ	0xFF6
  3053                           tablat	equ	0xFF5
  3054                           intcon	equ	0xFF2
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           postinc1	equ	0xFE6
  3058                           postdec1	equ	0xFE5
  3059                           fsr1h	equ	0xFE2
  3060                           fsr1l	equ	0xFE1
  3061                           postinc2	equ	0xFDE
  3062                           postdec2	equ	0xFDD
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _interfaceInit *****************
  3068 ;; Defined at:
  3069 ;;		line 193 in file "systemConfig.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;		None
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		None
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;Total ram usage:        0 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_systemInit
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text14
  3098  00125E                     __ptext14:
  3099                           	opt stack 0
  3100  00125E                     _interfaceInit:
  3101                           	opt stack 24
  3102                           
  3103                           ;systemConfig.c: 196: MEMCONbits.EBDIS = 1;
  3104                           
  3105                           ; BSR set to: 15
  3106                           ;incstack = 0
  3107  00125E  010E               	movlb	14	; () banked
  3108  001260  8FE3               	bsf	227,7,b	;volatile
  3109                           
  3110                           ;systemConfig.c: 197: UCONbits.USBEN = 0;
  3111  001262  9675               	bcf	3957,3,c	;volatile
  3112                           
  3113                           ;systemConfig.c: 200: OSCCON2bits.SOSCGO = 0;
  3114  001264  9266               	bcf	3942,1,c	;volatile
  3115                           
  3116                           ;systemConfig.c: 201: T1CONbits.SOSCEN = 0;
  3117  001266  96CD               	bcf	4045,3,c	;volatile
  3118                           
  3119                           ;systemConfig.c: 202: T3CONbits.SOSCEN = 0;
  3120  001268  96B1               	bcf	4017,3,c	;volatile
  3121                           
  3122                           ;systemConfig.c: 203: T5CONbits.SOSCEN = 0;
  3123  00126A  010F               	movlb	15	; () banked
  3124  00126C  9714               	bcf	20,3,b	;volatile
  3125                           
  3126                           ;systemConfig.c: 208: ANCON2bits.ANSEL12 = 0;
  3127  00126E  010E               	movlb	14	; () banked
  3128  001270  9946               	bcf	70,4,b	;volatile
  3129                           
  3130                           ;systemConfig.c: 209: TRISGbits.TRISG1 = 1;
  3131  001272  8298               	bsf	3992,1,c	;volatile
  3132                           
  3133                           ;systemConfig.c: 210: PADCFG1bits.RGPU = 1;
  3134  001274  010F               	movlb	15	; () banked
  3135  001276  8954               	bsf	84,4,b	;volatile
  3136                           
  3137                           ;systemConfig.c: 212: ANCON2bits.ANSEL13 = 0;
  3138  001278  010E               	movlb	14	; () banked
  3139  00127A  9B46               	bcf	70,5,b	;volatile
  3140                           
  3141                           ;systemConfig.c: 213: TRISGbits.TRISG2 = 1;
  3142  00127C  8498               	bsf	3992,2,c	;volatile
  3143                           
  3144                           ;systemConfig.c: 215: TRISEbits.TRISE6 = 1;
  3145  00127E  8C96               	bsf	3990,6,c	;volatile
  3146                           
  3147                           ;systemConfig.c: 217: TRISDbits.TRISD1 = 1;
  3148  001280  8295               	bsf	3989,1,c	;volatile
  3149                           
  3150                           ;systemConfig.c: 218: PADCFG1bits.RDPU = 1;
  3151  001282  010F               	movlb	15	; () banked
  3152  001284  8F54               	bsf	84,7,b	;volatile
  3153                           
  3154                           ;systemConfig.c: 220: ANCON2bits.ANSEL14 = 0;
  3155  001286  010E               	movlb	14	; () banked
  3156  001288  9D46               	bcf	70,6,b	;volatile
  3157                           
  3158                           ;systemConfig.c: 221: TRISGbits.TRISG3 = 1;
  3159  00128A  8698               	bsf	3992,3,c	;volatile
  3160                           
  3161                           ;systemConfig.c: 223: PADCFG1bits.REPU = 1;
  3162  00128C  010F               	movlb	15	; () banked
  3163  00128E  8D54               	bsf	84,6,b	;volatile
  3164                           
  3165                           ;systemConfig.c: 224: TRISDbits.TRISD4 = 1;
  3166  001290  8895               	bsf	3989,4,c	;volatile
  3167                           
  3168                           ;systemConfig.c: 225: TRISEbits.TRISE3 = 1;
  3169  001292  8696               	bsf	3990,3,c	;volatile
  3170                           
  3171                           ;systemConfig.c: 228: TRISEbits.TRISE0 = 0;
  3172  001294  9096               	bcf	3990,0,c	;volatile
  3173                           
  3174                           ;systemConfig.c: 229: TRISDbits.TRISD2 = 0;
  3175  001296  9495               	bcf	3989,2,c	;volatile
  3176                           
  3177                           ;systemConfig.c: 232: TRISEbits.TRISE1 = 0;
  3178  001298  9296               	bcf	3990,1,c	;volatile
  3179                           
  3180                           ;systemConfig.c: 233: ANCON3bits.ANSEL17 = 0;
  3181  00129A  010E               	movlb	14	; () banked
  3182  00129C  9345               	bcf	69,1,b	;volatile
  3183                           
  3184                           ;systemConfig.c: 234: TRISHbits.TRISH1 = 0;
  3185  00129E  9299               	bcf	3993,1,c	;volatile
  3186                           
  3187                           ;systemConfig.c: 237: TRISDbits.TRISD0 = 0;
  3188  0012A0  9095               	bcf	3989,0,c	;volatile
  3189                           
  3190                           ;systemConfig.c: 238: TRISEbits.TRISE7 = 0;
  3191  0012A2  9E96               	bcf	3990,7,c	;volatile
  3192                           
  3193                           ;systemConfig.c: 239: TRISEbits.TRISE5 = 0;
  3194  0012A4  9A96               	bcf	3990,5,c	;volatile
  3195                           
  3196                           ;systemConfig.c: 240: TRISEbits.TRISE4 = 0;
  3197  0012A6  9896               	bcf	3990,4,c	;volatile
  3198                           
  3199                           ;systemConfig.c: 241: ANCON3bits.ANSEL18 = 0;
  3200  0012A8  010E               	movlb	14	; () banked
  3201  0012AA  9545               	bcf	69,2,b	;volatile
  3202                           
  3203                           ;systemConfig.c: 242: TRISHbits.TRISH2 = 0;
  3204  0012AC  9499               	bcf	3993,2,c	;volatile
  3205                           
  3206                           ;systemConfig.c: 245: ANCON1bits.ANSEL6 = 0;
  3207  0012AE  010E               	movlb	14	; () banked
  3208  0012B0  9D47               	bcf	71,6,b	;volatile
  3209                           
  3210                           ;systemConfig.c: 246: TRISFbits.TRISF2 = 0;
  3211  0012B2  9497               	bcf	3991,2,c	;volatile
  3212                           
  3213                           ;systemConfig.c: 247: ANCON3bits.ANSEL23 = 0;
  3214  0012B4  010E               	movlb	14	; () banked
  3215  0012B6  9F45               	bcf	69,7,b	;volatile
  3216                           
  3217                           ;systemConfig.c: 248: TRISHbits.TRISH7 = 0;
  3218  0012B8  9E99               	bcf	3993,7,c	;volatile
  3219                           
  3220                           ;systemConfig.c: 251: ANCON2bits.ANSEL10 = 0;
  3221  0012BA  010E               	movlb	14	; () banked
  3222  0012BC  9546               	bcf	70,2,b	;volatile
  3223                           
  3224                           ;systemConfig.c: 252: TRISFbits.TRISF6 = 0;
  3225  0012BE  9C97               	bcf	3991,6,c	;volatile
  3226                           
  3227                           ;systemConfig.c: 253: ANCON2bits.ANSEL9 = 0;
  3228  0012C0  010E               	movlb	14	; () banked
  3229  0012C2  9346               	bcf	70,1,b	;volatile
  3230                           
  3231                           ;systemConfig.c: 254: TRISFbits.TRISF5 = 0;
  3232  0012C4  9A97               	bcf	3991,5,c	;volatile
  3233                           
  3234                           ;systemConfig.c: 257: ANCON3bits.ANSEL16 = 0;
  3235  0012C6  010E               	movlb	14	; () banked
  3236  0012C8  9145               	bcf	69,0,b	;volatile
  3237                           
  3238                           ;systemConfig.c: 258: TRISHbits.TRISH0 = 0;
  3239  0012CA  9099               	bcf	3993,0,c	;volatile
  3240                           
  3241                           ;systemConfig.c: 259: TRISGbits.TRISG4 = 0;
  3242  0012CC  9898               	bcf	3992,4,c	;volatile
  3243                           
  3244                           ;systemConfig.c: 260: ANCON2bits.ANSEL15 = 0;
  3245  0012CE  010E               	movlb	14	; () banked
  3246  0012D0  9F46               	bcf	70,7,b	;volatile
  3247                           
  3248                           ;systemConfig.c: 263: TRISCbits.TRISC7 = 1;
  3249  0012D2  8E94               	bsf	3988,7,c	;volatile
  3250                           
  3251                           ;systemConfig.c: 264: TRISJbits.TRISJ4 = 1;
  3252  0012D4  889A               	bsf	3994,4,c	;volatile
  3253                           
  3254                           ;systemConfig.c: 265: TRISJbits.TRISJ5 = 1;
  3255  0012D6  8A9A               	bsf	3994,5,c	;volatile
  3256                           
  3257                           ;systemConfig.c: 268: TRISCbits.TRISC1 = 1;
  3258  0012D8  8294               	bsf	3988,1,c	;volatile
  3259                           
  3260                           ;systemConfig.c: 269: TRISCbits.TRISC0 = 1;
  3261  0012DA  8094               	bsf	3988,0,c	;volatile
  3262                           
  3263                           ;systemConfig.c: 270: TRISCbits.TRISC6 = 1;
  3264  0012DC  8C94               	bsf	3988,6,c	;volatile
  3265                           
  3266                           ;systemConfig.c: 273: ANCON3bits.ANSEL21 = 0;
  3267  0012DE  010E               	movlb	14	; () banked
  3268  0012E0  9B45               	bcf	69,5,b	;volatile
  3269                           
  3270                           ;systemConfig.c: 274: ANCON3bits.ANSEL20 = 0;
  3271  0012E2  010E               	movlb	14	; () banked
  3272  0012E4  9945               	bcf	69,4,b	;volatile
  3273                           
  3274                           ;systemConfig.c: 275: TRISFbits.TRISF3 = 1;
  3275  0012E6  8697               	bsf	3991,3,c	;volatile
  3276                           
  3277                           ;systemConfig.c: 276: TRISHbits.TRISH5 = 1;
  3278  0012E8  8A99               	bsf	3993,5,c	;volatile
  3279                           
  3280                           ;systemConfig.c: 277: TRISHbits.TRISH4 = 1;
  3281  0012EA  8899               	bsf	3993,4,c	;volatile
  3282                           
  3283                           ;systemConfig.c: 280: TRISBbits.TRISB5 = 0;
  3284  0012EC  9A93               	bcf	3987,5,c	;volatile
  3285                           
  3286                           ;systemConfig.c: 281: TRISDbits.TRISD3 = 0;
  3287  0012EE  9695               	bcf	3989,3,c	;volatile
  3288                           
  3289                           ;systemConfig.c: 282: LATB5 = 1;
  3290  0012F0  8A8A               	bsf	3978,5,c	;volatile
  3291                           
  3292                           ;systemConfig.c: 283: LATD3 = 0;
  3293  0012F2  968C               	bcf	3980,3,c	;volatile
  3294                           
  3295                           ;systemConfig.c: 286: TRISJbits.TRISJ0 = 1;
  3296  0012F4  809A               	bsf	3994,0,c	;volatile
  3297                           
  3298                           ;systemConfig.c: 287: TRISJbits.TRISJ1 = 1;
  3299  0012F6  829A               	bsf	3994,1,c	;volatile
  3300                           
  3301                           ;systemConfig.c: 288: TRISDbits.TRISD7 = 1;
  3302  0012F8  8E95               	bsf	3989,7,c	;volatile
  3303                           
  3304                           ; BSR set to: 14
  3305  0012FA  0012               	return		;funcret
  3306  0012FC                     __end_of_interfaceInit:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           intcon	equ	0xFF2
  3313                           postinc0	equ	0xFEE
  3314                           wreg	equ	0xFE8
  3315                           postinc1	equ	0xFE6
  3316                           postdec1	equ	0xFE5
  3317                           fsr1h	equ	0xFE2
  3318                           fsr1l	equ	0xFE1
  3319                           postinc2	equ	0xFDE
  3320                           postdec2	equ	0xFDD
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _defaultLED *****************
  3326 ;; Defined at:
  3327 ;;		line 314 in file "systemConfig.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		None
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    5
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_systemInit
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text15
  3356  001B94                     __ptext15:
  3357                           	opt stack 0
  3358  001B94                     _defaultLED:
  3359                           	opt stack 24
  3360                           
  3361                           ;systemConfig.c: 316: LATH7 = 1;
  3362                           
  3363                           ; BSR set to: 14
  3364                           ;incstack = 0
  3365  001B94  8E90               	bsf	3984,7,c	;volatile
  3366                           
  3367                           ;systemConfig.c: 317: LATF2 = 1;
  3368  001B96  848E               	bsf	3982,2,c	;volatile
  3369                           
  3370                           ;systemConfig.c: 318: LATF5 = 1;
  3371  001B98  8A8E               	bsf	3982,5,c	;volatile
  3372                           
  3373                           ;systemConfig.c: 319: LATF6 = 1;
  3374  001B9A  8C8E               	bsf	3982,6,c	;volatile
  3375                           
  3376                           ;systemConfig.c: 320: LATG4 = 1;
  3377  001B9C  888F               	bsf	3983,4,c	;volatile
  3378                           
  3379                           ;systemConfig.c: 321: LATH0 = 1;
  3380  001B9E  8090               	bsf	3984,0,c	;volatile
  3381                           
  3382                           ;systemConfig.c: 322: LATD0 = 1;
  3383  001BA0  808C               	bsf	3980,0,c	;volatile
  3384                           
  3385                           ;systemConfig.c: 323: LATE7 = 1;
  3386  001BA2  8E8D               	bsf	3981,7,c	;volatile
  3387                           
  3388                           ;systemConfig.c: 324: LATE5 = 1;
  3389  001BA4  8A8D               	bsf	3981,5,c	;volatile
  3390                           
  3391                           ;systemConfig.c: 325: LATE4 = 1;
  3392  001BA6  888D               	bsf	3981,4,c	;volatile
  3393                           
  3394                           ;systemConfig.c: 326: LATH2 = 1;
  3395  001BA8  8490               	bsf	3984,2,c	;volatile
  3396  001BAA  0012               	return		;funcret
  3397  001BAC                     __end_of_defaultLED:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           intcon	equ	0xFF2
  3404                           postinc0	equ	0xFEE
  3405                           wreg	equ	0xFE8
  3406                           postinc1	equ	0xFE6
  3407                           postdec1	equ	0xFE5
  3408                           fsr1h	equ	0xFE2
  3409                           fsr1l	equ	0xFE1
  3410                           postinc2	equ	0xFDE
  3411                           postdec2	equ	0xFDD
  3412                           fsr2h	equ	0xFDA
  3413                           fsr2l	equ	0xFD9
  3414                           status	equ	0xFD8
  3415                           
  3416 ;; *************** function _clockSwitch *****************
  3417 ;; Defined at:
  3418 ;;		line 52 in file "systemConfig.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2, status,0
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    5
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_systemInit
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text16
  3447  001B1E                     __ptext16:
  3448                           	opt stack 0
  3449  001B1E                     _clockSwitch:
  3450                           	opt stack 24
  3451                           
  3452                           ;systemConfig.c: 54: OSCCON4bits.PLLEN = 0x1;
  3453                           
  3454                           ;incstack = 0
  3455  001B1E  8A64               	bsf	3940,5,c	;volatile
  3456                           
  3457                           ;systemConfig.c: 55: OSCCON3bits.IRCF = 0x1;
  3458  001B20  5065               	movf	3941,w,c	;volatile
  3459  001B22  0BF8               	andlw	-8
  3460  001B24  0901               	iorlw	1
  3461  001B26  6E65               	movwf	3941,c	;volatile
  3462                           
  3463                           ;systemConfig.c: 56: OSCCON2bits.CLKLOCK = 0x0;
  3464  001B28  9E66               	bcf	3942,7,c	;volatile
  3465                           
  3466                           ;systemConfig.c: 57: OSCCONbits.NOSC = 0x1;
  3467  001B2A  50D3               	movf	4051,w,c	;volatile
  3468  001B2C  0BF8               	andlw	-8
  3469  001B2E  0901               	iorlw	1
  3470  001B30  6ED3               	movwf	4051,c	;volatile
  3471  001B32  38D3               	swapf	4051,w,c	;volatile
  3472  001B34  0B07               	andlw	7
  3473  001B36  06E8               	decf	wreg,f,c
  3474  001B38  A4D8               	btfss	status,2,c
  3475  001B3A  D7FB               	goto	l519
  3476  001B3C                     u2940:
  3477                           
  3478                           ;systemConfig.c: 60: while (!OSCCON2bits.LOCK);
  3479  001B3C  BA66               	btfsc	3942,5,c	;volatile
  3480  001B3E  0012               	return	
  3481  001B40  D7FD               	goto	u2940
  3482  001B42                     __end_of_clockSwitch:
  3483                           	opt stack 0
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           intcon	equ	0xFF2
  3489                           postinc0	equ	0xFEE
  3490                           wreg	equ	0xFE8
  3491                           postinc1	equ	0xFE6
  3492                           postdec1	equ	0xFE5
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           postinc2	equ	0xFDE
  3496                           postdec2	equ	0xFDD
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function _bypassSetup *****************
  3502 ;; Defined at:
  3503 ;;		line 329 in file "systemConfig.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		None
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    5
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_systemInit
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text17
  3532  001BEC                     __ptext17:
  3533                           	opt stack 0
  3534  001BEC                     _bypassSetup:
  3535                           	opt stack 24
  3536                           
  3537                           ;systemConfig.c: 331: LATB5 = 1;
  3538                           
  3539                           ;incstack = 0
  3540  001BEC  8A8A               	bsf	3978,5,c	;volatile
  3541                           
  3542                           ;systemConfig.c: 332: LATD3 = 1;
  3543  001BEE  868C               	bsf	3980,3,c	;volatile
  3544                           
  3545                           ;systemConfig.c: 333: LATE1 = 1;
  3546  001BF0  828D               	bsf	3981,1,c	;volatile
  3547                           
  3548                           ;systemConfig.c: 334: LATH1 = 0;
  3549  001BF2  9290               	bcf	3984,1,c	;volatile
  3550                           
  3551                           ;systemConfig.c: 335: LATD2 = 0;
  3552  001BF4  948C               	bcf	3980,2,c	;volatile
  3553  001BF6  0012               	return		;funcret
  3554  001BF8                     __end_of_bypassSetup:
  3555                           	opt stack 0
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           intcon	equ	0xFF2
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           postinc1	equ	0xFE6
  3564                           postdec1	equ	0xFE5
  3565                           fsr1h	equ	0xFE2
  3566                           fsr1l	equ	0xFE1
  3567                           postinc2	equ	0xFDE
  3568                           postdec2	equ	0xFDD
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           
  3573 ;; *************** function _readControls *****************
  3574 ;; Defined at:
  3575 ;;		line 182 in file "main.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        4 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    6
  3596 ;; This function calls:
  3597 ;;		_ADC_Read
  3598 ;; This function is called by:
  3599 ;;		_main
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text18
  3604  000120                     __ptext18:
  3605                           	opt stack 0
  3606  000120                     _readControls:
  3607                           	opt stack 24
  3608                           
  3609                           ;main.c: 184: lock = RD7;
  3610                           
  3611                           ;incstack = 0
  3612  000120  AE83               	btfss	3971,7,c	;volatile
  3613  000122  D002               	goto	u3800
  3614  000124  0E01               	movlw	1
  3615  000126  D001               	goto	u3810
  3616  000128                     u3800:
  3617  000128  0E00               	movlw	0
  3618  00012A                     u3810:
  3619  00012A  0100               	movlb	0	; () banked
  3620  00012C  6F6B               	movwf	_lock& (0+255),b
  3621  00012E  6B6C               	clrf	(_lock+1)& (0+255),b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;main.c: 187: timeA = ADC_Read(14);
  3625  000130  0E00               	movlw	0
  3626  000132  0100               	movlb	0	; () banked
  3627  000134  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3628  000136  0E0E               	movlw	14
  3629  000138  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3630  00013A  EC19  F007         	call	_ADC_Read	;wreg free
  3631  00013E  C0C5  F07F         	movff	?_ADC_Read,_timeA
  3632  000142  C0C6  F080         	movff	?_ADC_Read+1,_timeA+1
  3633                           
  3634                           ;main.c: 188: parameter[0] = ((timeA >> 8) | (armA << 7));
  3635  000146  C08F  F0C9         	movff	_armA,??_readControls
  3636  00014A  C090  F0CA         	movff	_armA+1,??_readControls+1
  3637  00014E  0E07               	movlw	7
  3638  000150                     u3825:
  3639  000150  90D8               	bcf	status,0,c
  3640  000152  0100               	movlb	0	; () banked
  3641  000154  37C9               	rlcf	??_readControls& (0+255),f,b
  3642  000156  37CA               	rlcf	(??_readControls+1)& (0+255),f,b
  3643  000158  2EE8               	decfsz	wreg,f,c
  3644  00015A  D7FA               	goto	u3825
  3645  00015C  C080  F0CB         	movff	_timeA+1,??_readControls+2
  3646  000160  0100               	movlb	0	; () banked
  3647  000162  6BCC               	clrf	(??_readControls+3)& (0+255),b
  3648  000164  BFCB               	btfsc	(??_readControls+2)& (0+255),7,b
  3649  000166  69CC               	setf	(??_readControls+3)& (0+255),b
  3650  000168  0100               	movlb	0	; () banked
  3651  00016A  51C9               	movf	??_readControls& (0+255),w,b
  3652  00016C  0100               	movlb	0	; () banked
  3653  00016E  11CB               	iorwf	(??_readControls+2)& (0+255),w,b
  3654  000170  0100               	movlb	0	; () banked
  3655  000172  6FA7               	movwf	_parameter& (0+255),b
  3656  000174  0100               	movlb	0	; () banked
  3657  000176  51CA               	movf	(??_readControls+1)& (0+255),w,b
  3658  000178  0100               	movlb	0	; () banked
  3659  00017A  11CC               	iorwf	(??_readControls+3)& (0+255),w,b
  3660  00017C  0100               	movlb	0	; () banked
  3661  00017E  6FA8               	movwf	(_parameter+1)& (0+255),b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 189: parameter[1] = (timeA & 0xFF);
  3665  000180  0100               	movlb	0	; () banked
  3666  000182  517F               	movf	_timeA& (0+255),w,b
  3667  000184  0100               	movlb	0	; () banked
  3668  000186  6FA9               	movwf	(_parameter+2)& (0+255),b
  3669  000188  6BAA               	clrf	(_parameter+3)& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;main.c: 191: fbkA = ADC_Read(4);
  3673  00018A  0E00               	movlw	0
  3674  00018C  0100               	movlb	0	; () banked
  3675  00018E  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3676  000190  0E04               	movlw	4
  3677  000192  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3678  000194  EC19  F007         	call	_ADC_Read	;wreg free
  3679  000198  C0C5  F083         	movff	?_ADC_Read,_fbkA
  3680  00019C  C0C6  F084         	movff	?_ADC_Read+1,_fbkA+1
  3681                           
  3682                           ;main.c: 192: parameter[2] = fbkA>>4;
  3683  0001A0  C083  F0C9         	movff	_fbkA,??_readControls
  3684  0001A4  C084  F0CA         	movff	_fbkA+1,??_readControls+1
  3685  0001A8  0E04               	movlw	4
  3686  0001AA  0100               	movlb	0	; () banked
  3687  0001AC  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3688  0001AE                     u3835:
  3689  0001AE  0100               	movlb	0	; () banked
  3690  0001B0  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3691  0001B2  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3692  0001B4  33C9               	rrcf	??_readControls& (0+255),f,b
  3693  0001B6  0100               	movlb	0	; () banked
  3694  0001B8  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3695  0001BA  D7F9               	goto	u3835
  3696  0001BC  C0C9  F0AB         	movff	??_readControls,_parameter+4
  3697  0001C0  C0CA  F0AC         	movff	??_readControls+1,_parameter+5
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;main.c: 194: lvlA = ADC_Read(3);
  3701  0001C4  0E00               	movlw	0
  3702  0001C6  0100               	movlb	0	; () banked
  3703  0001C8  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3704  0001CA  0E03               	movlw	3
  3705  0001CC  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3706  0001CE  EC19  F007         	call	_ADC_Read	;wreg free
  3707  0001D2  C0C5  F081         	movff	?_ADC_Read,_lvlA
  3708  0001D6  C0C6  F082         	movff	?_ADC_Read+1,_lvlA+1
  3709                           
  3710                           ;main.c: 195: parameter[3] = lvlA>>4;
  3711  0001DA  C081  F0C9         	movff	_lvlA,??_readControls
  3712  0001DE  C082  F0CA         	movff	_lvlA+1,??_readControls+1
  3713  0001E2  0E04               	movlw	4
  3714  0001E4  0100               	movlb	0	; () banked
  3715  0001E6  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3716  0001E8                     u3845:
  3717  0001E8  0100               	movlb	0	; () banked
  3718  0001EA  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3719  0001EC  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3720  0001EE  33C9               	rrcf	??_readControls& (0+255),f,b
  3721  0001F0  0100               	movlb	0	; () banked
  3722  0001F2  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3723  0001F4  D7F9               	goto	u3845
  3724  0001F6  C0C9  F0AD         	movff	??_readControls,_parameter+6
  3725  0001FA  C0CA  F0AE         	movff	??_readControls+1,_parameter+7
  3726                           
  3727                           ;main.c: 198: timeB = ADC_Read(6);
  3728  0001FE  0E00               	movlw	0
  3729  000200  0100               	movlb	0	; () banked
  3730  000202  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3731  000204  0E06               	movlw	6
  3732  000206  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3733  000208  EC19  F007         	call	_ADC_Read	;wreg free
  3734  00020C  C0C5  F079         	movff	?_ADC_Read,_timeB
  3735  000210  C0C6  F07A         	movff	?_ADC_Read+1,_timeB+1
  3736                           
  3737                           ;main.c: 199: parameter[4] = ((timeB >> 8) | (armB << 7));
  3738  000214  C08D  F0C9         	movff	_armB,??_readControls
  3739  000218  C08E  F0CA         	movff	_armB+1,??_readControls+1
  3740  00021C  0E07               	movlw	7
  3741  00021E                     u3855:
  3742  00021E  90D8               	bcf	status,0,c
  3743  000220  0100               	movlb	0	; () banked
  3744  000222  37C9               	rlcf	??_readControls& (0+255),f,b
  3745  000224  37CA               	rlcf	(??_readControls+1)& (0+255),f,b
  3746  000226  2EE8               	decfsz	wreg,f,c
  3747  000228  D7FA               	goto	u3855
  3748  00022A  C07A  F0CB         	movff	_timeB+1,??_readControls+2
  3749  00022E  0100               	movlb	0	; () banked
  3750  000230  6BCC               	clrf	(??_readControls+3)& (0+255),b
  3751  000232  BFCB               	btfsc	(??_readControls+2)& (0+255),7,b
  3752  000234  69CC               	setf	(??_readControls+3)& (0+255),b
  3753  000236  0100               	movlb	0	; () banked
  3754  000238  51C9               	movf	??_readControls& (0+255),w,b
  3755  00023A  0100               	movlb	0	; () banked
  3756  00023C  11CB               	iorwf	(??_readControls+2)& (0+255),w,b
  3757  00023E  0100               	movlb	0	; () banked
  3758  000240  6FAF               	movwf	(_parameter+8)& (0+255),b
  3759  000242  0100               	movlb	0	; () banked
  3760  000244  51CA               	movf	(??_readControls+1)& (0+255),w,b
  3761  000246  0100               	movlb	0	; () banked
  3762  000248  11CC               	iorwf	(??_readControls+3)& (0+255),w,b
  3763  00024A  0100               	movlb	0	; () banked
  3764  00024C  6FB0               	movwf	(_parameter+9)& (0+255),b
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;main.c: 200: parameter[5] = (timeB & 0xFF);
  3768  00024E  0100               	movlb	0	; () banked
  3769  000250  5179               	movf	_timeB& (0+255),w,b
  3770  000252  0100               	movlb	0	; () banked
  3771  000254  6FB1               	movwf	(_parameter+10)& (0+255),b
  3772  000256  6BB2               	clrf	(_parameter+11)& (0+255),b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;main.c: 202: fbkB = ADC_Read(2);
  3776  000258  0E00               	movlw	0
  3777  00025A  0100               	movlb	0	; () banked
  3778  00025C  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3779  00025E  0E02               	movlw	2
  3780  000260  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3781  000262  EC19  F007         	call	_ADC_Read	;wreg free
  3782  000266  C0C5  F07D         	movff	?_ADC_Read,_fbkB
  3783  00026A  C0C6  F07E         	movff	?_ADC_Read+1,_fbkB+1
  3784                           
  3785                           ;main.c: 203: parameter[6] = fbkB>>4;
  3786  00026E  C07D  F0C9         	movff	_fbkB,??_readControls
  3787  000272  C07E  F0CA         	movff	_fbkB+1,??_readControls+1
  3788  000276  0E04               	movlw	4
  3789  000278  0100               	movlb	0	; () banked
  3790  00027A  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3791  00027C                     u3865:
  3792  00027C  0100               	movlb	0	; () banked
  3793  00027E  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3794  000280  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3795  000282  33C9               	rrcf	??_readControls& (0+255),f,b
  3796  000284  0100               	movlb	0	; () banked
  3797  000286  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3798  000288  D7F9               	goto	u3865
  3799  00028A  C0C9  F0B3         	movff	??_readControls,_parameter+12
  3800  00028E  C0CA  F0B4         	movff	??_readControls+1,_parameter+13
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;main.c: 205: lvlB = ADC_Read(9);
  3804  000292  0E00               	movlw	0
  3805  000294  0100               	movlb	0	; () banked
  3806  000296  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3807  000298  0E09               	movlw	9
  3808  00029A  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3809  00029C  EC19  F007         	call	_ADC_Read	;wreg free
  3810  0002A0  C0C5  F07B         	movff	?_ADC_Read,_lvlB
  3811  0002A4  C0C6  F07C         	movff	?_ADC_Read+1,_lvlB+1
  3812                           
  3813                           ;main.c: 206: parameter[7] = lvlB>>4;
  3814  0002A8  C07B  F0C9         	movff	_lvlB,??_readControls
  3815  0002AC  C07C  F0CA         	movff	_lvlB+1,??_readControls+1
  3816  0002B0  0E04               	movlw	4
  3817  0002B2  0100               	movlb	0	; () banked
  3818  0002B4  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3819  0002B6                     u3875:
  3820  0002B6  0100               	movlb	0	; () banked
  3821  0002B8  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3822  0002BA  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3823  0002BC  33C9               	rrcf	??_readControls& (0+255),f,b
  3824  0002BE  0100               	movlb	0	; () banked
  3825  0002C0  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3826  0002C2  D7F9               	goto	u3875
  3827  0002C4  C0C9  F0B5         	movff	??_readControls,_parameter+14
  3828  0002C8  C0CA  F0B6         	movff	??_readControls+1,_parameter+15
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;main.c: 209: timeC = ADC_Read(1);
  3832  0002CC  0E00               	movlw	0
  3833  0002CE  0100               	movlb	0	; () banked
  3834  0002D0  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3835  0002D2  0E01               	movlw	1
  3836  0002D4  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3837  0002D6  EC19  F007         	call	_ADC_Read	;wreg free
  3838  0002DA  C0C5  F073         	movff	?_ADC_Read,_timeC
  3839  0002DE  C0C6  F074         	movff	?_ADC_Read+1,_timeC+1
  3840                           
  3841                           ;main.c: 210: parameter[8] = ((timeC >> 8) | (armC << 7));
  3842  0002E2  C08B  F0C9         	movff	_armC,??_readControls
  3843  0002E6  C08C  F0CA         	movff	_armC+1,??_readControls+1
  3844  0002EA  0E07               	movlw	7
  3845  0002EC                     u3885:
  3846  0002EC  90D8               	bcf	status,0,c
  3847  0002EE  0100               	movlb	0	; () banked
  3848  0002F0  37C9               	rlcf	??_readControls& (0+255),f,b
  3849  0002F2  37CA               	rlcf	(??_readControls+1)& (0+255),f,b
  3850  0002F4  2EE8               	decfsz	wreg,f,c
  3851  0002F6  D7FA               	goto	u3885
  3852  0002F8  C074  F0CB         	movff	_timeC+1,??_readControls+2
  3853  0002FC  0100               	movlb	0	; () banked
  3854  0002FE  6BCC               	clrf	(??_readControls+3)& (0+255),b
  3855  000300  BFCB               	btfsc	(??_readControls+2)& (0+255),7,b
  3856  000302  69CC               	setf	(??_readControls+3)& (0+255),b
  3857  000304  0100               	movlb	0	; () banked
  3858  000306  51C9               	movf	??_readControls& (0+255),w,b
  3859  000308  0100               	movlb	0	; () banked
  3860  00030A  11CB               	iorwf	(??_readControls+2)& (0+255),w,b
  3861  00030C  0100               	movlb	0	; () banked
  3862  00030E  6FB7               	movwf	(_parameter+16)& (0+255),b
  3863  000310  0100               	movlb	0	; () banked
  3864  000312  51CA               	movf	(??_readControls+1)& (0+255),w,b
  3865  000314  0100               	movlb	0	; () banked
  3866  000316  11CC               	iorwf	(??_readControls+3)& (0+255),w,b
  3867  000318  0100               	movlb	0	; () banked
  3868  00031A  6FB8               	movwf	(_parameter+17)& (0+255),b
  3869                           
  3870                           ;main.c: 211: parameter[9] = (timeC & 0xFF);
  3871  00031C  0100               	movlb	0	; () banked
  3872  00031E  5173               	movf	_timeC& (0+255),w,b
  3873  000320  0100               	movlb	0	; () banked
  3874  000322  6FB9               	movwf	(_parameter+18)& (0+255),b
  3875  000324  6BBA               	clrf	(_parameter+19)& (0+255),b
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;main.c: 213: fbkC = ADC_Read(5);
  3879  000326  0E00               	movlw	0
  3880  000328  0100               	movlb	0	; () banked
  3881  00032A  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3882  00032C  0E05               	movlw	5
  3883  00032E  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3884  000330  EC19  F007         	call	_ADC_Read	;wreg free
  3885  000334  C0C5  F077         	movff	?_ADC_Read,_fbkC
  3886  000338  C0C6  F078         	movff	?_ADC_Read+1,_fbkC+1
  3887                           
  3888                           ;main.c: 214: parameter[10] = fbkC>>4;
  3889  00033C  C077  F0C9         	movff	_fbkC,??_readControls
  3890  000340  C078  F0CA         	movff	_fbkC+1,??_readControls+1
  3891  000344  0E04               	movlw	4
  3892  000346  0100               	movlb	0	; () banked
  3893  000348  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3894  00034A                     u3895:
  3895  00034A  0100               	movlb	0	; () banked
  3896  00034C  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3897  00034E  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3898  000350  33C9               	rrcf	??_readControls& (0+255),f,b
  3899  000352  0100               	movlb	0	; () banked
  3900  000354  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3901  000356  D7F9               	goto	u3895
  3902  000358  C0C9  F0BB         	movff	??_readControls,_parameter+20
  3903  00035C  C0CA  F0BC         	movff	??_readControls+1,_parameter+21
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;main.c: 216: lvlC = ADC_Read(0);
  3907  000360  0E00               	movlw	0
  3908  000362  0100               	movlb	0	; () banked
  3909  000364  6FC6               	movwf	(ADC_Read@channel+1)& (0+255),b
  3910  000366  0E00               	movlw	0
  3911  000368  6FC5               	movwf	ADC_Read@channel& (0+255),b
  3912  00036A  EC19  F007         	call	_ADC_Read	;wreg free
  3913  00036E  C0C5  F075         	movff	?_ADC_Read,_lvlC
  3914  000372  C0C6  F076         	movff	?_ADC_Read+1,_lvlC+1
  3915                           
  3916                           ;main.c: 217: parameter[11] = lvlC>>4;
  3917  000376  C075  F0C9         	movff	_lvlC,??_readControls
  3918  00037A  C076  F0CA         	movff	_lvlC+1,??_readControls+1
  3919  00037E  0E04               	movlw	4
  3920  000380  0100               	movlb	0	; () banked
  3921  000382  6FCB               	movwf	(??_readControls+2)& (0+255),b
  3922  000384                     u3905:
  3923  000384  0100               	movlb	0	; () banked
  3924  000386  35CA               	rlcf	(??_readControls+1)& (0+255),w,b
  3925  000388  33CA               	rrcf	(??_readControls+1)& (0+255),f,b
  3926  00038A  33C9               	rrcf	??_readControls& (0+255),f,b
  3927  00038C  0100               	movlb	0	; () banked
  3928  00038E  2FCB               	decfsz	(??_readControls+2)& (0+255),f,b
  3929  000390  D7F9               	goto	u3905
  3930  000392  C0C9  F0BD         	movff	??_readControls,_parameter+22
  3931  000396  C0CA  F0BE         	movff	??_readControls+1,_parameter+23
  3932                           
  3933                           ;main.c: 219: masterTime.f = 555.55;
  3934  00039A  0EE3               	movlw	227
  3935  00039C  0100               	movlb	0	; () banked
  3936  00039E  6F64               	movwf	_masterTime& (0+255),b
  3937  0003A0  0E0A               	movlw	10
  3938  0003A2  0100               	movlb	0	; () banked
  3939  0003A4  6F65               	movwf	(_masterTime+1)& (0+255),b
  3940  0003A6  0E44               	movlw	68
  3941  0003A8  0100               	movlb	0	; () banked
  3942  0003AA  6F66               	movwf	(_masterTime+2)& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;main.c: 222: parameter[12] = masterTime.b[0];
  3946  0003AC  C064  F0BF         	movff	_masterTime,_parameter+24
  3947  0003B0  0100               	movlb	0	; () banked
  3948  0003B2  6BC0               	clrf	(_parameter+25)& (0+255),b
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;main.c: 223: parameter[13] = masterTime.b[1];
  3952  0003B4  C065  F0C1         	movff	_masterTime+1,_parameter+26
  3953  0003B8  0100               	movlb	0	; () banked
  3954  0003BA  6BC2               	clrf	(_parameter+27)& (0+255),b
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 224: parameter[14] = masterTime.b[2];
  3958  0003BC  C066  F0C3         	movff	_masterTime+2,_parameter+28
  3959  0003C0  0100               	movlb	0	; () banked
  3960  0003C2  6BC4               	clrf	(_parameter+29)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963  0003C4  0012               	return		;funcret
  3964  0003C6                     __end_of_readControls:
  3965                           	opt stack 0
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           intcon	equ	0xFF2
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           postinc1	equ	0xFE6
  3974                           postdec1	equ	0xFE5
  3975                           fsr1h	equ	0xFE2
  3976                           fsr1l	equ	0xFE1
  3977                           postinc2	equ	0xFDE
  3978                           postdec2	equ	0xFDD
  3979                           fsr2h	equ	0xFDA
  3980                           fsr2l	equ	0xFD9
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _ADC_Read *****************
  3984 ;; Defined at:
  3985 ;;		line 394 in file "hardware.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  channel         2    0[BANK0 ] int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  value           2    2[BANK0 ] int 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  2    0[BANK0 ] int 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    5
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_readControls
  4010 ;;		_main
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text19
  4015  000E32                     __ptext19:
  4016                           	opt stack 0
  4017  000E32                     _ADC_Read:
  4018                           	opt stack 24
  4019                           
  4020                           ;hardware.c: 396: int value;
  4021                           ;hardware.c: 397: ADCHS0Lbits.CH0SA = channel;
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;incstack = 0
  4025  000E32  010E               	movlb	14	; () banked
  4026  000E34  5186               	movf	134,w,b	;volatile
  4027  000E36  0100               	movlb	0	; () banked
  4028  000E38  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4029  000E3A  0BE0               	andlw	-32
  4030  000E3C  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4031  000E3E  010E               	movlb	14	; () banked
  4032  000E40  6F86               	movwf	134,b	;volatile
  4033                           
  4034                           ; BSR set to: 14
  4035                           ;hardware.c: 398: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4036  000E42  0EA0               	movlw	160
  4037  000E44                     u4517:
  4038  000E44  D000               	nop2	
  4039  000E46  2EE8               	decfsz	wreg,f,c
  4040  000E48  D7FD               	bra	u4517
  4041                           
  4042                           ;hardware.c: 399: ADCON1Hbits.ADON = 1;
  4043  000E4A  8EC1               	bsf	4033,7,c	;volatile
  4044                           
  4045                           ;hardware.c: 400: ADCON1Lbits.SAMP = 1;
  4046  000E4C  82C0               	bsf	4032,1,c	;volatile
  4047                           
  4048                           ;hardware.c: 401: _delay((unsigned long)((100)*(32000000/4000000.0)));
  4049  000E4E  0EA0               	movlw	160
  4050  000E50                     u4527:
  4051  000E50  D000               	nop2	
  4052  000E52  2EE8               	decfsz	wreg,f,c
  4053  000E54  D7FD               	bra	u4527
  4054                           
  4055                           ;hardware.c: 402: ADCON1Lbits.SAMP = 0;
  4056  000E56  92C0               	bcf	4032,1,c	;volatile
  4057  000E58  A0C0               	btfss	4032,0,c	;volatile
  4058  000E5A  D7FE               	goto	l896
  4059                           
  4060                           ;hardware.c: 404: ADCON1Hbits.ADON = 0;
  4061  000E5C  9EC1               	bcf	4033,7,c	;volatile
  4062                           
  4063                           ;hardware.c: 407: if (channel == 0)
  4064  000E5E  0100               	movlb	0	; () banked
  4065  000E60  51C5               	movf	ADC_Read@channel& (0+255),w,b
  4066  000E62  0100               	movlb	0	; () banked
  4067  000E64  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4068  000E66  A4D8               	btfss	status,2,c
  4069  000E68  D005               	goto	l898
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;hardware.c: 408: {
  4073                           ;hardware.c: 409: value = ADCBUF0;
  4074  000E6A  CFC2 F0C7          	movff	4034,ADC_Read@value	;volatile
  4075  000E6E  CFC3 F0C8          	movff	4035,ADC_Read@value+1	;volatile
  4076                           
  4077                           ;hardware.c: 410: }
  4078  000E72  D070               	goto	l917
  4079  000E74                     l898:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;hardware.c: 411: else if (channel == 1)
  4083                           
  4084                           ; BSR set to: 0
  4085  000E74  0100               	movlb	0	; () banked
  4086  000E76  05C5               	decf	ADC_Read@channel& (0+255),w,b
  4087  000E78  0100               	movlb	0	; () banked
  4088  000E7A  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4089  000E7C  A4D8               	btfss	status,2,c
  4090  000E7E  D005               	goto	l900
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;hardware.c: 412: {
  4094                           ;hardware.c: 413: value = ADCBUF1;
  4095  000E80  CE48 F0C7          	movff	3656,ADC_Read@value	;volatile
  4096  000E84  CE49 F0C8          	movff	3657,ADC_Read@value+1	;volatile
  4097                           
  4098                           ;hardware.c: 414: }
  4099  000E88  D065               	goto	l917
  4100  000E8A                     l900:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;hardware.c: 415: else if (channel == 2)
  4104                           
  4105                           ; BSR set to: 0
  4106  000E8A  0E02               	movlw	2
  4107  000E8C  0100               	movlb	0	; () banked
  4108  000E8E  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4109  000E90  0100               	movlb	0	; () banked
  4110  000E92  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4111  000E94  A4D8               	btfss	status,2,c
  4112  000E96  D005               	goto	l902
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;hardware.c: 416: {
  4116                           ;hardware.c: 417: value = ADCBUF2;
  4117  000E98  CE4A F0C7          	movff	3658,ADC_Read@value	;volatile
  4118  000E9C  CE4B F0C8          	movff	3659,ADC_Read@value+1	;volatile
  4119                           
  4120                           ;hardware.c: 418: }
  4121  000EA0  D059               	goto	l917
  4122  000EA2                     l902:
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;hardware.c: 419: else if (channel == 3)
  4126                           
  4127                           ; BSR set to: 0
  4128  000EA2  0E03               	movlw	3
  4129  000EA4  0100               	movlb	0	; () banked
  4130  000EA6  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4131  000EA8  0100               	movlb	0	; () banked
  4132  000EAA  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4133  000EAC  A4D8               	btfss	status,2,c
  4134  000EAE  D005               	goto	l904
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;hardware.c: 420: {
  4138                           ;hardware.c: 421: value = ADCBUF3;
  4139  000EB0  CE4C F0C7          	movff	3660,ADC_Read@value	;volatile
  4140  000EB4  CE4D F0C8          	movff	3661,ADC_Read@value+1	;volatile
  4141                           
  4142                           ;hardware.c: 422: }
  4143  000EB8  D04D               	goto	l917
  4144  000EBA                     l904:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;hardware.c: 423: else if (channel == 4)
  4148                           
  4149                           ; BSR set to: 0
  4150  000EBA  0E04               	movlw	4
  4151  000EBC  0100               	movlb	0	; () banked
  4152  000EBE  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4153  000EC0  0100               	movlb	0	; () banked
  4154  000EC2  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4155  000EC4  A4D8               	btfss	status,2,c
  4156  000EC6  D005               	goto	l906
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;hardware.c: 424: {
  4160                           ;hardware.c: 425: value = ADCBUF4;
  4161  000EC8  CE4E F0C7          	movff	3662,ADC_Read@value	;volatile
  4162  000ECC  CE4F F0C8          	movff	3663,ADC_Read@value+1	;volatile
  4163                           
  4164                           ;hardware.c: 426: }
  4165  000ED0  D041               	goto	l917
  4166  000ED2                     l906:
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;hardware.c: 427: else if (channel == 5)
  4170                           
  4171                           ; BSR set to: 0
  4172  000ED2  0E05               	movlw	5
  4173  000ED4  0100               	movlb	0	; () banked
  4174  000ED6  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4175  000ED8  0100               	movlb	0	; () banked
  4176  000EDA  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4177  000EDC  A4D8               	btfss	status,2,c
  4178  000EDE  D005               	goto	l908
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;hardware.c: 428: {
  4182                           ;hardware.c: 429: value = ADCBUF5;
  4183  000EE0  CE50 F0C7          	movff	3664,ADC_Read@value	;volatile
  4184  000EE4  CE51 F0C8          	movff	3665,ADC_Read@value+1	;volatile
  4185                           
  4186                           ;hardware.c: 430: }
  4187  000EE8  D035               	goto	l917
  4188  000EEA                     l908:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;hardware.c: 431: else if (channel == 6)
  4192                           
  4193                           ; BSR set to: 0
  4194  000EEA  0E06               	movlw	6
  4195  000EEC  0100               	movlb	0	; () banked
  4196  000EEE  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4197  000EF0  0100               	movlb	0	; () banked
  4198  000EF2  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4199  000EF4  A4D8               	btfss	status,2,c
  4200  000EF6  D005               	goto	l910
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;hardware.c: 432: {
  4204                           ;hardware.c: 433: value = ADCBUF6;
  4205  000EF8  CE52 F0C7          	movff	3666,ADC_Read@value	;volatile
  4206  000EFC  CE53 F0C8          	movff	3667,ADC_Read@value+1	;volatile
  4207                           
  4208                           ;hardware.c: 434: }
  4209  000F00  D029               	goto	l917
  4210  000F02                     l910:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;hardware.c: 435: else if (channel == 14)
  4214                           
  4215                           ; BSR set to: 0
  4216  000F02  0E0E               	movlw	14
  4217  000F04  0100               	movlb	0	; () banked
  4218  000F06  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4219  000F08  0100               	movlb	0	; () banked
  4220  000F0A  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4221  000F0C  A4D8               	btfss	status,2,c
  4222  000F0E  D005               	goto	l912
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;hardware.c: 436: {
  4226                           ;hardware.c: 437: value = ADCBUF14;
  4227  000F10  CE62 F0C7          	movff	3682,ADC_Read@value	;volatile
  4228  000F14  CE63 F0C8          	movff	3683,ADC_Read@value+1	;volatile
  4229                           
  4230                           ;hardware.c: 438: }
  4231  000F18  D01D               	goto	l917
  4232  000F1A                     l912:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;hardware.c: 439: else if (channel == 8)
  4236                           
  4237                           ; BSR set to: 0
  4238  000F1A  0E08               	movlw	8
  4239  000F1C  0100               	movlb	0	; () banked
  4240  000F1E  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4241  000F20  0100               	movlb	0	; () banked
  4242  000F22  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4243  000F24  A4D8               	btfss	status,2,c
  4244  000F26  D005               	goto	l914
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;hardware.c: 440: {
  4248                           ;hardware.c: 441: value = ADCBUF8;
  4249  000F28  CE56 F0C7          	movff	3670,ADC_Read@value	;volatile
  4250  000F2C  CE57 F0C8          	movff	3671,ADC_Read@value+1	;volatile
  4251                           
  4252                           ;hardware.c: 442: }
  4253  000F30  D011               	goto	l917
  4254  000F32                     l914:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;hardware.c: 443: else if (channel == 9)
  4258                           
  4259                           ; BSR set to: 0
  4260  000F32  0E09               	movlw	9
  4261  000F34  0100               	movlb	0	; () banked
  4262  000F36  19C5               	xorwf	ADC_Read@channel& (0+255),w,b
  4263  000F38  0100               	movlb	0	; () banked
  4264  000F3A  11C6               	iorwf	(ADC_Read@channel+1)& (0+255),w,b
  4265  000F3C  A4D8               	btfss	status,2,c
  4266  000F3E  D005               	goto	l916
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;hardware.c: 444: {
  4270                           ;hardware.c: 445: value = ADCBUF9;
  4271  000F40  CE58 F0C7          	movff	3672,ADC_Read@value	;volatile
  4272  000F44  CE59 F0C8          	movff	3673,ADC_Read@value+1	;volatile
  4273                           
  4274                           ;hardware.c: 446: }
  4275  000F48  D005               	goto	l917
  4276  000F4A                     l916:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;hardware.c: 447: else value = 0;
  4280                           
  4281                           ; BSR set to: 0
  4282  000F4A  0E00               	movlw	0
  4283  000F4C  0100               	movlb	0	; () banked
  4284  000F4E  6FC8               	movwf	(ADC_Read@value+1)& (0+255),b
  4285  000F50  0E00               	movlw	0
  4286  000F52  6FC7               	movwf	ADC_Read@value& (0+255),b
  4287  000F54                     l917:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;hardware.c: 448: return (value);
  4291                           
  4292                           ; BSR set to: 0
  4293                           
  4294                           ; BSR set to: 0
  4295                           
  4296                           ; BSR set to: 0
  4297                           
  4298                           ; BSR set to: 0
  4299                           
  4300                           ; BSR set to: 0
  4301                           
  4302                           ; BSR set to: 0
  4303                           
  4304                           ; BSR set to: 0
  4305                           
  4306                           ; BSR set to: 0
  4307                           
  4308                           ; BSR set to: 0
  4309                           
  4310                           ; BSR set to: 0
  4311  000F54  C0C7  F0C5         	movff	ADC_Read@value,?_ADC_Read
  4312  000F58  C0C8  F0C6         	movff	ADC_Read@value+1,?_ADC_Read+1
  4313  000F5C  0012               	return	
  4314  000F5E                     __end_of_ADC_Read:
  4315                           	opt stack 0
  4316                           tblptru	equ	0xFF8
  4317                           tblptrh	equ	0xFF7
  4318                           tblptrl	equ	0xFF6
  4319                           tablat	equ	0xFF5
  4320                           intcon	equ	0xFF2
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           postinc1	equ	0xFE6
  4324                           postdec1	equ	0xFE5
  4325                           fsr1h	equ	0xFE2
  4326                           fsr1l	equ	0xFE1
  4327                           postinc2	equ	0xFDE
  4328                           postdec2	equ	0xFDD
  4329                           fsr2h	equ	0xFDA
  4330                           fsr2l	equ	0xFD9
  4331                           status	equ	0xFD8
  4332                           
  4333 ;; *************** function _fetchPreset *****************
  4334 ;; Defined at:
  4335 ;;		line 249 in file "main.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  i               2   18[BANK0 ] int 
  4340 ;;  test            2   16[BANK0 ] int 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4353 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    7
  4357 ;; This function calls:
  4358 ;;		_I2C1_Block_Read_EERPOM
  4359 ;;		_updatePreset
  4360 ;; This function is called by:
  4361 ;;		_main
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text20
  4366  001660                     __ptext20:
  4367                           	opt stack 0
  4368  001660                     _fetchPreset:
  4369                           	opt stack 23
  4370                           
  4371                           ;main.c: 251: int test = 0;
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;incstack = 0
  4375  001660  0E00               	movlw	0
  4376  001662  0100               	movlb	0	; () banked
  4377  001664  6FD6               	movwf	(fetchPreset@test+1)& (0+255),b
  4378  001666  0E00               	movlw	0
  4379  001668  6FD5               	movwf	fetchPreset@test& (0+255),b
  4380                           
  4381                           ;main.c: 252: int i = 0;
  4382  00166A  0E00               	movlw	0
  4383  00166C  0100               	movlb	0	; () banked
  4384  00166E  6FD8               	movwf	(fetchPreset@i+1)& (0+255),b
  4385  001670  0E00               	movlw	0
  4386  001672  6FD7               	movwf	fetchPreset@i& (0+255),b
  4387                           
  4388                           ;main.c: 254: for (i = 0; i < 5; i++)
  4389  001674  0E00               	movlw	0
  4390  001676  0100               	movlb	0	; () banked
  4391  001678  6FD8               	movwf	(fetchPreset@i+1)& (0+255),b
  4392  00167A  0E00               	movlw	0
  4393  00167C  6FD7               	movwf	fetchPreset@i& (0+255),b
  4394  00167E                     l3897:
  4395                           
  4396                           ; BSR set to: 0
  4397  00167E  0100               	movlb	0	; () banked
  4398  001680  BFD8               	btfsc	(fetchPreset@i+1)& (0+255),7,b
  4399  001682  D008               	goto	l194
  4400  001684  0100               	movlb	0	; () banked
  4401  001686  51D8               	movf	(fetchPreset@i+1)& (0+255),w,b
  4402  001688  E12C               	bnz	l196
  4403  00168A  0E05               	movlw	5
  4404  00168C  0100               	movlb	0	; () banked
  4405  00168E  5DD7               	subwf	fetchPreset@i& (0+255),w,b
  4406  001690  B0D8               	btfsc	status,0,c
  4407  001692  0012               	return	
  4408  001694                     l194:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;main.c: 255: {
  4412                           ;main.c: 256: I2C1_Block_Read_EERPOM(i, presetRead, 12);
  4413                           
  4414                           ; BSR set to: 0
  4415  001694  C0D7  F0C5         	movff	fetchPreset@i,I2C1_Block_Read_EERPOM@slot
  4416  001698  C0D8  F0C6         	movff	fetchPreset@i+1,I2C1_Block_Read_EERPOM@slot+1
  4417  00169C  0E78               	movlw	low _presetRead
  4418  00169E  0100               	movlb	0	; () banked
  4419  0016A0  6FC7               	movwf	I2C1_Block_Read_EERPOM@data& (0+255),b
  4420  0016A2  0E01               	movlw	high _presetRead
  4421  0016A4  0100               	movlb	0	; () banked
  4422  0016A6  6FC8               	movwf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),b
  4423  0016A8  0E00               	movlw	0
  4424  0016AA  0100               	movlb	0	; () banked
  4425  0016AC  6FCA               	movwf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),b
  4426  0016AE  0E0C               	movlw	12
  4427  0016B0  6FC9               	movwf	I2C1_Block_Read_EERPOM@bytes& (0+255),b
  4428  0016B2  ECE5  F005         	call	_I2C1_Block_Read_EERPOM	;wreg free
  4429                           
  4430                           ;main.c: 257: updatePreset(i+1, presetRead);
  4431  0016B6  0E01               	movlw	1
  4432  0016B8  0100               	movlb	0	; () banked
  4433  0016BA  25D7               	addwf	fetchPreset@i& (0+255),w,b
  4434  0016BC  0100               	movlb	0	; () banked
  4435  0016BE  6FCB               	movwf	updatePreset@slot& (0+255),b
  4436  0016C0  0E00               	movlw	0
  4437  0016C2  0100               	movlb	0	; () banked
  4438  0016C4  21D8               	addwfc	(fetchPreset@i+1)& (0+255),w,b
  4439  0016C6  0100               	movlb	0	; () banked
  4440  0016C8  6FCC               	movwf	(updatePreset@slot+1)& (0+255),b
  4441  0016CA  0E78               	movlw	low _presetRead
  4442  0016CC  0100               	movlb	0	; () banked
  4443  0016CE  6FCD               	movwf	updatePreset@data& (0+255),b
  4444  0016D0  0E01               	movlw	high _presetRead
  4445  0016D2  0100               	movlb	0	; () banked
  4446  0016D4  6FCE               	movwf	(updatePreset@data+1)& (0+255),b
  4447  0016D6  ECDF  F008         	call	_updatePreset	;wreg free
  4448  0016DA  0100               	movlb	0	; () banked
  4449  0016DC  4BD7               	infsnz	fetchPreset@i& (0+255),f,b
  4450  0016DE  2BD8               	incf	(fetchPreset@i+1)& (0+255),f,b
  4451  0016E0  D7CE               	goto	l3897
  4452  0016E2                     l196:
  4453                           
  4454                           ; BSR set to: 0
  4455  0016E2  0012               	return		;funcret
  4456  0016E4                     __end_of_fetchPreset:
  4457                           	opt stack 0
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           intcon	equ	0xFF2
  4463                           postinc0	equ	0xFEE
  4464                           wreg	equ	0xFE8
  4465                           postinc1	equ	0xFE6
  4466                           postdec1	equ	0xFE5
  4467                           fsr1h	equ	0xFE2
  4468                           fsr1l	equ	0xFE1
  4469                           postinc2	equ	0xFDE
  4470                           postdec2	equ	0xFDD
  4471                           fsr2h	equ	0xFDA
  4472                           fsr2l	equ	0xFD9
  4473                           status	equ	0xFD8
  4474                           
  4475 ;; *************** function _updatePreset *****************
  4476 ;; Defined at:
  4477 ;;		line 227 in file "main.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;  slot            2    6[BANK0 ] int 
  4480 ;;  data            2    8[BANK0 ] PTR int 
  4481 ;;		 -> presetRead(24), parameter(30), 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  i               2   14[BANK0 ] int 
  4484 ;;  temp            2   12[BANK0 ] int 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4495 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;Total ram usage:       10 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    6
  4501 ;; This function calls:
  4502 ;;		___wmul
  4503 ;; This function is called by:
  4504 ;;		_fetchPreset
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text21
  4510  0011BE                     __ptext21:
  4511                           	opt stack 0
  4512  0011BE                     _updatePreset:
  4513                           	opt stack 24
  4514                           
  4515                           ;main.c: 229: int i;
  4516                           ;main.c: 230: int temp;
  4517                           ;main.c: 232: for (i = 0; i < 12; i++)
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;incstack = 0
  4521  0011BE  0E00               	movlw	0
  4522  0011C0  0100               	movlb	0	; () banked
  4523  0011C2  6FD4               	movwf	(updatePreset@i+1)& (0+255),b
  4524  0011C4  0E00               	movlw	0
  4525  0011C6  6FD3               	movwf	updatePreset@i& (0+255),b
  4526  0011C8                     l3243:
  4527                           
  4528                           ; BSR set to: 0
  4529  0011C8  0100               	movlb	0	; () banked
  4530  0011CA  BFD4               	btfsc	(updatePreset@i+1)& (0+255),7,b
  4531  0011CC  D008               	goto	l184
  4532  0011CE  0100               	movlb	0	; () banked
  4533  0011D0  51D4               	movf	(updatePreset@i+1)& (0+255),w,b
  4534  0011D2  E144               	bnz	l186
  4535  0011D4  0E0C               	movlw	12
  4536  0011D6  0100               	movlb	0	; () banked
  4537  0011D8  5DD3               	subwf	updatePreset@i& (0+255),w,b
  4538  0011DA  B0D8               	btfsc	status,0,c
  4539  0011DC  0012               	return	
  4540  0011DE                     l184:
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;main.c: 233: {
  4544                           ;main.c: 234: temp = data[i];
  4545                           
  4546                           ; BSR set to: 0
  4547  0011DE  90D8               	bcf	status,0,c
  4548  0011E0  0100               	movlb	0	; () banked
  4549  0011E2  35D3               	rlcf	updatePreset@i& (0+255),w,b
  4550  0011E4  6ED9               	movwf	fsr2l,c
  4551  0011E6  0100               	movlb	0	; () banked
  4552  0011E8  35D4               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4553  0011EA  6EDA               	movwf	fsr2h,c
  4554  0011EC  0100               	movlb	0	; () banked
  4555  0011EE  51CD               	movf	updatePreset@data& (0+255),w,b
  4556  0011F0  26D9               	addwf	fsr2l,f,c
  4557  0011F2  0100               	movlb	0	; () banked
  4558  0011F4  51CE               	movf	(updatePreset@data+1)& (0+255),w,b
  4559  0011F6  22DA               	addwfc	fsr2h,f,c
  4560  0011F8  CFDE F0D1          	movff	postinc2,updatePreset@temp
  4561  0011FC  CFDD F0D2          	movff	postdec2,updatePreset@temp+1
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;main.c: 235: userParams[slot][i] = temp;
  4565  001200  C0CB  F0C5         	movff	updatePreset@slot,___wmul@multiplier
  4566  001204  C0CC  F0C6         	movff	updatePreset@slot+1,___wmul@multiplier+1
  4567  001208  0E00               	movlw	0
  4568  00120A  0100               	movlb	0	; () banked
  4569  00120C  6FC8               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4570  00120E  0E18               	movlw	24
  4571  001210  6FC7               	movwf	___wmul@multiplicand& (0+255),b
  4572  001212  EC1F  F00D         	call	___wmul	;wreg free
  4573  001216  0E00               	movlw	low _userParams
  4574  001218  0100               	movlb	0	; () banked
  4575  00121A  6FCF               	movwf	??_updatePreset& (0+255),b
  4576  00121C  0E01               	movlw	high _userParams
  4577  00121E  0100               	movlb	0	; () banked
  4578  001220  6FD0               	movwf	(??_updatePreset+1)& (0+255),b
  4579  001222  0100               	movlb	0	; () banked
  4580  001224  51C5               	movf	?___wmul& (0+255),w,b
  4581  001226  0100               	movlb	0	; () banked
  4582  001228  27CF               	addwf	??_updatePreset& (0+255),f,b
  4583  00122A  0100               	movlb	0	; () banked
  4584  00122C  51C6               	movf	(?___wmul+1)& (0+255),w,b
  4585  00122E  0100               	movlb	0	; () banked
  4586  001230  23D0               	addwfc	(??_updatePreset+1)& (0+255),f,b
  4587  001232  90D8               	bcf	status,0,c
  4588  001234  0100               	movlb	0	; () banked
  4589  001236  35D3               	rlcf	updatePreset@i& (0+255),w,b
  4590  001238  6ED9               	movwf	fsr2l,c
  4591  00123A  0100               	movlb	0	; () banked
  4592  00123C  35D4               	rlcf	(updatePreset@i+1)& (0+255),w,b
  4593  00123E  6EDA               	movwf	fsr2h,c
  4594  001240  0100               	movlb	0	; () banked
  4595  001242  51CF               	movf	??_updatePreset& (0+255),w,b
  4596  001244  26D9               	addwf	fsr2l,f,c
  4597  001246  0100               	movlb	0	; () banked
  4598  001248  51D0               	movf	(??_updatePreset+1)& (0+255),w,b
  4599  00124A  22DA               	addwfc	fsr2h,f,c
  4600  00124C  C0D1  FFDE         	movff	updatePreset@temp,postinc2
  4601  001250  C0D2  FFDD         	movff	updatePreset@temp+1,postdec2
  4602                           
  4603                           ; BSR set to: 0
  4604  001254  0100               	movlb	0	; () banked
  4605  001256  4BD3               	infsnz	updatePreset@i& (0+255),f,b
  4606  001258  2BD4               	incf	(updatePreset@i+1)& (0+255),f,b
  4607  00125A  D7B6               	goto	l3243
  4608  00125C                     l186:
  4609                           
  4610                           ; BSR set to: 0
  4611  00125C  0012               	return		;funcret
  4612  00125E                     __end_of_updatePreset:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           intcon	equ	0xFF2
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postinc1	equ	0xFE6
  4622                           postdec1	equ	0xFE5
  4623                           fsr1h	equ	0xFE2
  4624                           fsr1l	equ	0xFE1
  4625                           postinc2	equ	0xFDE
  4626                           postdec2	equ	0xFDD
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function ___wmul *****************
  4632 ;; Defined at:
  4633 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4636 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  product         2    4[BANK0 ] unsigned int 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[BANK0 ] unsigned int 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0, prodl, prodh
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:        6 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    5
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_updatePreset
  4659 ;;		_updateParams
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text22
  4664  001A3E                     __ptext22:
  4665                           	opt stack 0
  4666  001A3E                     ___wmul:
  4667                           	opt stack 24
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;incstack = 0
  4671  001A3E  0100               	movlb	0	; () banked
  4672  001A40  51C5               	movf	___wmul@multiplier& (0+255),w,b
  4673  001A42  0100               	movlb	0	; () banked
  4674  001A44  03C7               	mulwf	___wmul@multiplicand& (0+255),b
  4675  001A46  CFF3 F0C9          	movff	prodl,___wmul@product
  4676  001A4A  CFF4 F0CA          	movff	prodh,___wmul@product+1
  4677  001A4E  0100               	movlb	0	; () banked
  4678  001A50  51C5               	movf	___wmul@multiplier& (0+255),w,b
  4679  001A52  0100               	movlb	0	; () banked
  4680  001A54  03C8               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4681  001A56  50F3               	movf	prodl,w,c
  4682  001A58  0100               	movlb	0	; () banked
  4683  001A5A  27CA               	addwf	(___wmul@product+1)& (0+255),f,b
  4684  001A5C  0100               	movlb	0	; () banked
  4685  001A5E  51C6               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4686  001A60  0100               	movlb	0	; () banked
  4687  001A62  03C7               	mulwf	___wmul@multiplicand& (0+255),b
  4688  001A64  50F3               	movf	prodl,w,c
  4689  001A66  0100               	movlb	0	; () banked
  4690  001A68  27CA               	addwf	(___wmul@product+1)& (0+255),f,b
  4691                           
  4692                           ; BSR set to: 0
  4693  001A6A  C0C9  F0C5         	movff	___wmul@product,?___wmul
  4694  001A6E  C0CA  F0C6         	movff	___wmul@product+1,?___wmul+1
  4695  001A72  0012               	return	
  4696  001A74                     __end_of___wmul:
  4697                           	opt stack 0
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           wreg	equ	0xFE8
  4707                           postinc1	equ	0xFE6
  4708                           postdec1	equ	0xFE5
  4709                           fsr1h	equ	0xFE2
  4710                           fsr1l	equ	0xFE1
  4711                           postinc2	equ	0xFDE
  4712                           postdec2	equ	0xFDD
  4713                           fsr2h	equ	0xFDA
  4714                           fsr2l	equ	0xFD9
  4715                           status	equ	0xFD8
  4716                           
  4717 ;; *************** function _I2C1_Block_Read_EERPOM *****************
  4718 ;; Defined at:
  4719 ;;		line 102 in file "serial.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  slot            2    0[BANK0 ] int 
  4722 ;;  data            2    2[BANK0 ] PTR PTR int 
  4723 ;;		 -> presetRead(24), 
  4724 ;;  bytes           2    4[BANK0 ] int 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  n               2   11[BANK0 ] int 
  4727 ;;  dummyWrite      1   10[BANK0 ] unsigned char 
  4728 ;;  memValue        1    9[BANK0 ] unsigned char 
  4729 ;;  rdAddr          1    8[BANK0 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4739 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;Total ram usage:       13 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    5
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_fetchPreset
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text23
  4754  000BCA                     __ptext23:
  4755                           	opt stack 0
  4756  000BCA                     _I2C1_Block_Read_EERPOM:
  4757                           	opt stack 24
  4758                           
  4759                           ;serial.c: 104: char dummyWrite = 0b10100000;
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;incstack = 0
  4763  000BCA  0EA0               	movlw	160
  4764  000BCC  0100               	movlb	0	; () banked
  4765  000BCE  6FCF               	movwf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),b
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;serial.c: 105: char rdAddr = (dummyWrite|0x01);
  4769  000BD0  0100               	movlb	0	; () banked
  4770  000BD2  51CF               	movf	I2C1_Block_Read_EERPOM@dummyWrite& (0+255),w,b
  4771  000BD4  0901               	iorlw	1
  4772  000BD6  0100               	movlb	0	; () banked
  4773  000BD8  6FCD               	movwf	I2C1_Block_Read_EERPOM@rdAddr& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;serial.c: 106: char memValue = presetAdd[slot];
  4777  000BDA  90D8               	bcf	status,0,c
  4778  000BDC  0100               	movlb	0	; () banked
  4779  000BDE  35C5               	rlcf	I2C1_Block_Read_EERPOM@slot& (0+255),w,b
  4780  000BE0  6ED9               	movwf	fsr2l,c
  4781  000BE2  0100               	movlb	0	; () banked
  4782  000BE4  35C6               	rlcf	(I2C1_Block_Read_EERPOM@slot+1)& (0+255),w,b
  4783  000BE6  6EDA               	movwf	fsr2h,c
  4784  000BE8  0EE2               	movlw	low _presetAdd
  4785  000BEA  26D9               	addwf	fsr2l,f,c
  4786  000BEC  0E00               	movlw	high _presetAdd
  4787  000BEE  22DA               	addwfc	fsr2h,f,c
  4788  000BF0  50DF               	movf	indf2,w,c
  4789  000BF2  0100               	movlb	0	; () banked
  4790  000BF4  6FCE               	movwf	I2C1_Block_Read_EERPOM@memValue& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;serial.c: 107: int n = 0;
  4794  000BF6  0E00               	movlw	0
  4795  000BF8  0100               	movlb	0	; () banked
  4796  000BFA  6FD1               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4797  000BFC  0E00               	movlw	0
  4798  000BFE  6FD0               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;serial.c: 109: SSP1CON1bits.SSPEN = 0x1;
  4802  000C00  8AC6               	bsf	4038,5,c	;volatile
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;serial.c: 110: _delay((unsigned long)((5)*(32000000/4000000.0)));
  4806  000C02  0E0D               	movlw	13
  4807  000C04                     u4537:
  4808  000C04  2EE8               	decfsz	wreg,f,c
  4809  000C06  D7FE               	bra	u4537
  4810  000C08  F000               	nop	
  4811                           
  4812                           ;serial.c: 112: SSP1CON2bits.SEN = 0x1;
  4813  000C0A  80C5               	bsf	4037,0,c	;volatile
  4814  000C0C  B0C5               	btfsc	4037,0,c	;volatile
  4815  000C0E  D7FE               	goto	l1171
  4816  000C10                     u2770:
  4817                           
  4818                           ;serial.c: 114: while(!PIR1bits.SSP1IF);
  4819  000C10  A69E               	btfss	3998,3,c	;volatile
  4820  000C12  D7FE               	goto	u2770
  4821                           
  4822                           ;serial.c: 115: PIR1bits.SSP1IF = 0x0;
  4823  000C14  969E               	bcf	3998,3,c	;volatile
  4824                           
  4825                           ;serial.c: 116: SSP1BUF = dummyWrite;
  4826  000C16  C0CF  FFC9         	movff	I2C1_Block_Read_EERPOM@dummyWrite,4041	;volatile
  4827                           
  4828                           ;serial.c: 118: if(SSP1CON2bits.ACKSTAT);
  4829  000C1A  50C5               	movf	4037,w,c	;volatile
  4830  000C1C                     
  4831                           ;serial.c: 119: while(!PIR1bits.SSP1IF);
  4832  000C1C  A69E               	btfss	3998,3,c	;volatile
  4833  000C1E  D7FE               	goto	l1176
  4834                           
  4835                           ;serial.c: 120: PIR1bits.SSP1IF = 0x0;
  4836  000C20  969E               	bcf	3998,3,c	;volatile
  4837                           
  4838                           ;serial.c: 121: SSP1BUF = memValue;
  4839  000C22  C0CE  FFC9         	movff	I2C1_Block_Read_EERPOM@memValue,4041	;volatile
  4840  000C26  BCC5               	btfsc	4037,6,c	;volatile
  4841  000C28  D7FE               	goto	l1181
  4842  000C2A                     u2800:
  4843                           
  4844                           ;serial.c: 124: while(!PIR1bits.SSP1IF);
  4845  000C2A  A69E               	btfss	3998,3,c	;volatile
  4846  000C2C  D7FE               	goto	u2800
  4847                           
  4848                           ;serial.c: 125: PIR1bits.SSP1IF = 0x0;
  4849  000C2E  969E               	bcf	3998,3,c	;volatile
  4850                           
  4851                           ;serial.c: 126: SSP1CON2bits.RSEN = 0x1;
  4852  000C30  82C5               	bsf	4037,1,c	;volatile
  4853  000C32  B2C5               	btfsc	4037,1,c	;volatile
  4854  000C34  D7FE               	goto	l1187
  4855  000C36                     u2820:
  4856                           
  4857                           ;serial.c: 129: while(!PIR1bits.SSP1IF);
  4858  000C36  A69E               	btfss	3998,3,c	;volatile
  4859  000C38  D7FE               	goto	u2820
  4860                           
  4861                           ;serial.c: 130: PIR1bits.SSP1IF = 0x0;
  4862  000C3A  969E               	bcf	3998,3,c	;volatile
  4863                           
  4864                           ;serial.c: 131: SSP1BUF = rdAddr;
  4865  000C3C  C0CD  FFC9         	movff	I2C1_Block_Read_EERPOM@rdAddr,4041	;volatile
  4866  000C40  BCC5               	btfsc	4037,6,c	;volatile
  4867  000C42  D7FE               	goto	l1193
  4868  000C44                     u2840:
  4869                           
  4870                           ;serial.c: 134: while(!PIR1bits.SSP1IF);
  4871  000C44  A69E               	btfss	3998,3,c	;volatile
  4872  000C46  D7FE               	goto	u2840
  4873                           
  4874                           ;serial.c: 135: PIR1bits.SSP1IF = 0x0;
  4875  000C48  969E               	bcf	3998,3,c	;volatile
  4876                           
  4877                           ;serial.c: 137: SSP1CON2bits.RCEN = 0x1;
  4878  000C4A  86C5               	bsf	4037,3,c	;volatile
  4879  000C4C  A0C7               	btfss	4039,0,c	;volatile
  4880  000C4E  D7FE               	goto	l1199
  4881  000C50                     u2860:
  4882                           
  4883                           ;serial.c: 140: while (!PIR1bits.SSP1IF);
  4884  000C50  A69E               	btfss	3998,3,c	;volatile
  4885  000C52  D7FE               	goto	u2860
  4886                           
  4887                           ;serial.c: 141: data[n] = SSP1BUF;
  4888  000C54  50C9               	movf	4041,w,c	;volatile
  4889  000C56  0100               	movlb	0	; () banked
  4890  000C58  6FCB               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4891  000C5A  6BCC               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4892  000C5C  90D8               	bcf	status,0,c
  4893  000C5E  0100               	movlb	0	; () banked
  4894  000C60  35D0               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4895  000C62  6ED9               	movwf	fsr2l,c
  4896  000C64  0100               	movlb	0	; () banked
  4897  000C66  35D1               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4898  000C68  6EDA               	movwf	fsr2h,c
  4899  000C6A  0100               	movlb	0	; () banked
  4900  000C6C  51C7               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4901  000C6E  26D9               	addwf	fsr2l,f,c
  4902  000C70  0100               	movlb	0	; () banked
  4903  000C72  51C8               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4904  000C74  22DA               	addwfc	fsr2h,f,c
  4905  000C76  C0CB  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4906  000C7A  C0CC  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;serial.c: 143: for (n = 1; n < bytes; n++)
  4910  000C7E  0E00               	movlw	0
  4911  000C80  0100               	movlb	0	; () banked
  4912  000C82  6FD1               	movwf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),b
  4913  000C84  0E01               	movlw	1
  4914  000C86  6FD0               	movwf	I2C1_Block_Read_EERPOM@n& (0+255),b
  4915  000C88  D022               	goto	l1204
  4916  000C8A                     l1205:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;serial.c: 144: {
  4920                           ;serial.c: 145: SSP1CON2bits.ACKDT = 0x0;
  4921  000C8A  9AC5               	bcf	4037,5,c	;volatile
  4922                           
  4923                           ;serial.c: 146: SSP1CON2bits.ACKEN = 0x1;
  4924  000C8C  88C5               	bsf	4037,4,c	;volatile
  4925  000C8E                     
  4926                           ; BSR set to: 0
  4927  000C8E  B8C5               	btfsc	4037,4,c	;volatile
  4928  000C90  D7FE               	goto	l1207
  4929                           
  4930                           ;serial.c: 148: PIR1bits.SSP1IF = 0x0;
  4931  000C92  969E               	bcf	3998,3,c	;volatile
  4932                           
  4933                           ;serial.c: 149: SSP1CON2bits.RCEN = 0x1;
  4934  000C94  86C5               	bsf	4037,3,c	;volatile
  4935  000C96  A0C7               	btfss	4039,0,c	;volatile
  4936  000C98  D7FE               	goto	l1210
  4937  000C9A                     u2890:
  4938                           
  4939                           ;serial.c: 152: while (!PIR1bits.SSP1IF);
  4940  000C9A  A69E               	btfss	3998,3,c	;volatile
  4941  000C9C  D7FE               	goto	u2890
  4942                           
  4943                           ;serial.c: 153: data[n] = SSP1BUF;
  4944  000C9E  50C9               	movf	4041,w,c	;volatile
  4945  000CA0  0100               	movlb	0	; () banked
  4946  000CA2  6FCB               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4947  000CA4  6BCC               	clrf	(??_I2C1_Block_Read_EERPOM+1)& (0+255),b
  4948  000CA6  90D8               	bcf	status,0,c
  4949  000CA8  0100               	movlb	0	; () banked
  4950  000CAA  35D0               	rlcf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4951  000CAC  6ED9               	movwf	fsr2l,c
  4952  000CAE  0100               	movlb	0	; () banked
  4953  000CB0  35D1               	rlcf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4954  000CB2  6EDA               	movwf	fsr2h,c
  4955  000CB4  0100               	movlb	0	; () banked
  4956  000CB6  51C7               	movf	I2C1_Block_Read_EERPOM@data& (0+255),w,b
  4957  000CB8  26D9               	addwf	fsr2l,f,c
  4958  000CBA  0100               	movlb	0	; () banked
  4959  000CBC  51C8               	movf	(I2C1_Block_Read_EERPOM@data+1)& (0+255),w,b
  4960  000CBE  22DA               	addwfc	fsr2h,f,c
  4961  000CC0  C0CB  FFDE         	movff	??_I2C1_Block_Read_EERPOM,postinc2
  4962  000CC4  C0CC  FFDD         	movff	??_I2C1_Block_Read_EERPOM+1,postdec2
  4963                           
  4964                           ; BSR set to: 0
  4965  000CC8  0100               	movlb	0	; () banked
  4966  000CCA  4BD0               	infsnz	I2C1_Block_Read_EERPOM@n& (0+255),f,b
  4967  000CCC  2BD1               	incf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),f,b
  4968  000CCE                     l1204:
  4969                           
  4970                           ; BSR set to: 0
  4971                           
  4972                           ; BSR set to: 0
  4973  000CCE  0100               	movlb	0	; () banked
  4974  000CD0  51C9               	movf	I2C1_Block_Read_EERPOM@bytes& (0+255),w,b
  4975  000CD2  0100               	movlb	0	; () banked
  4976  000CD4  5DD0               	subwf	I2C1_Block_Read_EERPOM@n& (0+255),w,b
  4977  000CD6  0100               	movlb	0	; () banked
  4978  000CD8  51D1               	movf	(I2C1_Block_Read_EERPOM@n+1)& (0+255),w,b
  4979  000CDA  0A80               	xorlw	128
  4980  000CDC  0100               	movlb	0	; () banked
  4981  000CDE  6FCB               	movwf	??_I2C1_Block_Read_EERPOM& (0+255),b
  4982  000CE0  0100               	movlb	0	; () banked
  4983  000CE2  51CA               	movf	(I2C1_Block_Read_EERPOM@bytes+1)& (0+255),w,b
  4984  000CE4  0A80               	xorlw	128
  4985  000CE6  0100               	movlb	0	; () banked
  4986  000CE8  59CB               	subwfb	??_I2C1_Block_Read_EERPOM& (0+255),w,b
  4987  000CEA  A0D8               	btfss	status,0,c
  4988  000CEC  D7CE               	goto	l1205
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;serial.c: 154: }
  4992                           ;serial.c: 156: SSP1CON2bits.ACKDT = 0x1;
  4993  000CEE  8AC5               	bsf	4037,5,c	;volatile
  4994                           
  4995                           ;serial.c: 157: SSP1CON2bits.ACKEN = 0x1;
  4996  000CF0  88C5               	bsf	4037,4,c	;volatile
  4997  000CF2                     
  4998                           ; BSR set to: 0
  4999  000CF2  B8C5               	btfsc	4037,4,c	;volatile
  5000  000CF4  D7FE               	goto	l1217
  5001                           
  5002                           ;serial.c: 160: PIR1bits.SSP1IF = 0x0;
  5003  000CF6  969E               	bcf	3998,3,c	;volatile
  5004                           
  5005                           ;serial.c: 161: SSP1CON2bits.PEN = 0x1;
  5006  000CF8  84C5               	bsf	4037,2,c	;volatile
  5007  000CFA  B4C5               	btfsc	4037,2,c	;volatile
  5008  000CFC  D7FE               	goto	l1220
  5009                           
  5010                           ;serial.c: 165: PIR1bits.SSP1IF = 0x0;
  5011  000CFE  969E               	bcf	3998,3,c	;volatile
  5012                           
  5013                           ;serial.c: 166: SSP1CON1bits.SSPEN = 0x1;
  5014  000D00  8AC6               	bsf	4038,5,c	;volatile
  5015  000D02  0012               	return		;funcret
  5016  000D04                     __end_of_I2C1_Block_Read_EERPOM:
  5017                           	opt stack 0
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           postinc1	equ	0xFE6
  5028                           postdec1	equ	0xFE5
  5029                           fsr1h	equ	0xFE2
  5030                           fsr1l	equ	0xFE1
  5031                           indf2	equ	0xFDF
  5032                           postinc2	equ	0xFDE
  5033                           postdec2	equ	0xFDD
  5034                           fsr2h	equ	0xFDA
  5035                           fsr2l	equ	0xFD9
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _absVal *****************
  5039 ;; Defined at:
  5040 ;;		line 175 in file "main.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  val             2    0[BANK0 ] int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  2    0[BANK0 ] int 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;Total ram usage:        4 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    5
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text24
  5069  001AA4                     __ptext24:
  5070                           	opt stack 0
  5071  001AA4                     _absVal:
  5072                           	opt stack 25
  5073                           
  5074                           ;main.c: 177: if (val < 0)
  5075                           
  5076                           ;incstack = 0
  5077  001AA4  0100               	movlb	0	; () banked
  5078  001AA6  AFC6               	btfss	(absVal@val+1)& (0+255),7,b
  5079  001AA8  D00E               	goto	l176
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;main.c: 178: return -val;
  5083  001AAA  C0C5  F0C7         	movff	absVal@val,??_absVal
  5084  001AAE  C0C6  F0C8         	movff	absVal@val+1,??_absVal+1
  5085  001AB2  0100               	movlb	0	; () banked
  5086  001AB4  1FC7               	comf	??_absVal& (0+255),f,b
  5087  001AB6  1FC8               	comf	(??_absVal+1)& (0+255),f,b
  5088  001AB8  4BC7               	infsnz	??_absVal& (0+255),f,b
  5089  001ABA  2BC8               	incf	(??_absVal+1)& (0+255),f,b
  5090  001ABC  C0C7  F0C5         	movff	??_absVal,?_absVal
  5091  001AC0  C0C8  F0C6         	movff	??_absVal+1,?_absVal+1
  5092                           
  5093                           ; BSR set to: 0
  5094  001AC4  0012               	return	
  5095  001AC6                     l176:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;main.c: 179: else return val;
  5099  001AC6  C0C5  F0C5         	movff	absVal@val,?_absVal
  5100  001ACA  C0C6  F0C6         	movff	absVal@val+1,?_absVal+1
  5101  001ACE  0012               	return	
  5102  001AD0                     __end_of_absVal:
  5103                           	opt stack 0
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           postinc1	equ	0xFE6
  5114                           postdec1	equ	0xFE5
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _I2C1_Write_DigiPot *****************
  5125 ;; Defined at:
  5126 ;;		line 235 in file "serial.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  value           1    wreg     unsigned char 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  value           1    0[BANK0 ] unsigned char 
  5131 ;;  wrCommand       1    1[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5145 ;;Total ram usage:        2 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    5
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text25
  5156  00198C                     __ptext25:
  5157                           	opt stack 0
  5158  00198C                     _I2C1_Write_DigiPot:
  5159                           	opt stack 25
  5160                           
  5161                           ; BSR set to: 0
  5162                           ;incstack = 0
  5163                           ;I2C1_Write_DigiPot@value stored from wreg
  5164  00198C  0100               	movlb	0	; () banked
  5165  00198E  6FC5               	movwf	I2C1_Write_DigiPot@value& (0+255),b
  5166                           
  5167                           ;serial.c: 237: char wrCommand = (0b00101111 << 1);
  5168  001990  0E5E               	movlw	94
  5169  001992  0100               	movlb	0	; () banked
  5170  001994  6FC6               	movwf	I2C1_Write_DigiPot@wrCommand& (0+255),b
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;serial.c: 239: SSP1CON1bits.SSPEN = 0x1;
  5174  001996  8AC6               	bsf	4038,5,c	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;serial.c: 240: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5178  001998  0E0D               	movlw	13
  5179  00199A                     u4547:
  5180  00199A  2EE8               	decfsz	wreg,f,c
  5181  00199C  D7FE               	bra	u4547
  5182  00199E  F000               	nop	
  5183                           
  5184                           ;serial.c: 242: SSP1CON2bits.SEN = 0x1;
  5185  0019A0  80C5               	bsf	4037,0,c	;volatile
  5186  0019A2  B0C5               	btfsc	4037,0,c	;volatile
  5187  0019A4  D7FE               	goto	l1272
  5188                           
  5189                           ;serial.c: 244: PIR1bits.SSP1IF = 0x0;
  5190  0019A6  969E               	bcf	3998,3,c	;volatile
  5191                           
  5192                           ;serial.c: 245: SSP1BUF = wrCommand;
  5193  0019A8  C0C6  FFC9         	movff	I2C1_Write_DigiPot@wrCommand,4041	;volatile
  5194  0019AC  BCC5               	btfsc	4037,6,c	;volatile
  5195  0019AE  D7FE               	goto	l1275
  5196  0019B0                     u3960:
  5197                           
  5198                           ;serial.c: 248: while(!PIR1bits.SSP1IF);
  5199  0019B0  A69E               	btfss	3998,3,c	;volatile
  5200  0019B2  D7FE               	goto	u3960
  5201                           
  5202                           ;serial.c: 249: PIR1bits.SSP1IF = 0x0;
  5203  0019B4  969E               	bcf	3998,3,c	;volatile
  5204                           
  5205                           ;serial.c: 250: SSP1BUF = value;
  5206  0019B6  C0C5  FFC9         	movff	I2C1_Write_DigiPot@value,4041	;volatile
  5207  0019BA  BCC5               	btfsc	4037,6,c	;volatile
  5208  0019BC  D7FE               	goto	l1281
  5209  0019BE                     u3980:
  5210                           
  5211                           ;serial.c: 253: while(!PIR1bits.SSP1IF);
  5212  0019BE  A69E               	btfss	3998,3,c	;volatile
  5213  0019C0  D7FE               	goto	u3980
  5214                           
  5215                           ;serial.c: 254: SSP1CON2bits.PEN = 0x1;
  5216  0019C2  84C5               	bsf	4037,2,c	;volatile
  5217  0019C4  B4C5               	btfsc	4037,2,c	;volatile
  5218  0019C6  D7FE               	goto	l1287
  5219                           
  5220                           ;serial.c: 257: PIR1bits.SSP1IF = 0x0;
  5221  0019C8  969E               	bcf	3998,3,c	;volatile
  5222                           
  5223                           ;serial.c: 258: SSP1CON1bits.SSPEN = 0x1;
  5224  0019CA  8AC6               	bsf	4038,5,c	;volatile
  5225  0019CC  0012               	return		;funcret
  5226  0019CE                     __end_of_I2C1_Write_DigiPot:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           postinc0	equ	0xFEE
  5236                           wreg	equ	0xFE8
  5237                           postinc1	equ	0xFE6
  5238                           postdec1	equ	0xFE5
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           postdec2	equ	0xFDD
  5244                           fsr2h	equ	0xFDA
  5245                           fsr2l	equ	0xFD9
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function _I2C1_Page_Write_EEPROM *****************
  5249 ;; Defined at:
  5250 ;;		line 66 in file "serial.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  slot            2    0[BANK0 ] int 
  5253 ;;  data            2    2[BANK0 ] PTR PTR int 
  5254 ;;		 -> parameter(30), 
  5255 ;;  bytes           2    4[BANK0 ] int 
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  n               2    9[BANK0 ] int 
  5258 ;;  memValue        1    8[BANK0 ] unsigned char 
  5259 ;;  wrDevAddr       1    7[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;Total ram usage:       11 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    5
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_main
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text26
  5284  001052                     __ptext26:
  5285                           	opt stack 0
  5286  001052                     _I2C1_Page_Write_EEPROM:
  5287                           	opt stack 25
  5288                           
  5289                           ;serial.c: 68: char wrDevAddr = 0b10100000;
  5290                           
  5291                           ;incstack = 0
  5292  001052  0EA0               	movlw	160
  5293  001054  0100               	movlb	0	; () banked
  5294  001056  6FCC               	movwf	I2C1_Page_Write_EEPROM@wrDevAddr& (0+255),b
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;serial.c: 69: char memValue = presetAdd[slot];
  5298  001058  90D8               	bcf	status,0,c
  5299  00105A  0100               	movlb	0	; () banked
  5300  00105C  35C5               	rlcf	I2C1_Page_Write_EEPROM@slot& (0+255),w,b
  5301  00105E  6ED9               	movwf	fsr2l,c
  5302  001060  0100               	movlb	0	; () banked
  5303  001062  35C6               	rlcf	(I2C1_Page_Write_EEPROM@slot+1)& (0+255),w,b
  5304  001064  6EDA               	movwf	fsr2h,c
  5305  001066  0EE2               	movlw	low _presetAdd
  5306  001068  26D9               	addwf	fsr2l,f,c
  5307  00106A  0E00               	movlw	high _presetAdd
  5308  00106C  22DA               	addwfc	fsr2h,f,c
  5309  00106E  50DF               	movf	indf2,w,c
  5310  001070  0100               	movlb	0	; () banked
  5311  001072  6FCD               	movwf	I2C1_Page_Write_EEPROM@memValue& (0+255),b
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;serial.c: 70: int n = 0;
  5315  001074  0E00               	movlw	0
  5316  001076  0100               	movlb	0	; () banked
  5317  001078  6FCF               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5318  00107A  0E00               	movlw	0
  5319  00107C  6FCE               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;serial.c: 72: SSP1CON1bits.SSPEN = 0x1;
  5323  00107E  8AC6               	bsf	4038,5,c	;volatile
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;serial.c: 73: _delay((unsigned long)((5)*(32000000/4000000.0)));
  5327  001080  0E0D               	movlw	13
  5328  001082                     u4557:
  5329  001082  2EE8               	decfsz	wreg,f,c
  5330  001084  D7FE               	bra	u4557
  5331  001086  F000               	nop	
  5332                           
  5333                           ;serial.c: 75: SSP1CON2bits.SEN = 0x1;
  5334  001088  80C5               	bsf	4037,0,c	;volatile
  5335  00108A  B0C5               	btfsc	4037,0,c	;volatile
  5336  00108C  D7FE               	goto	l1141
  5337                           
  5338                           ;serial.c: 77: PIR1bits.SSP1IF = 0x0;
  5339  00108E  969E               	bcf	3998,3,c	;volatile
  5340                           
  5341                           ;serial.c: 78: SSP1BUF = wrDevAddr;
  5342  001090  C0CC  FFC9         	movff	I2C1_Page_Write_EEPROM@wrDevAddr,4041	;volatile
  5343  001094  BCC5               	btfsc	4037,6,c	;volatile
  5344  001096  D7FE               	goto	l1144
  5345  001098                     u4020:
  5346                           
  5347                           ;serial.c: 81: while(!PIR1bits.SSP1IF);
  5348  001098  A69E               	btfss	3998,3,c	;volatile
  5349  00109A  D7FE               	goto	u4020
  5350                           
  5351                           ;serial.c: 82: PIR1bits.SSP1IF = 0x0;
  5352  00109C  969E               	bcf	3998,3,c	;volatile
  5353                           
  5354                           ;serial.c: 83: SSP1BUF = memValue;
  5355  00109E  C0CD  FFC9         	movff	I2C1_Page_Write_EEPROM@memValue,4041	;volatile
  5356                           
  5357                           ;serial.c: 85: for (n = 0; n < bytes; n++)
  5358  0010A2  0E00               	movlw	0
  5359  0010A4  0100               	movlb	0	; () banked
  5360  0010A6  6FCF               	movwf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),b
  5361  0010A8  0E00               	movlw	0
  5362  0010AA  6FCE               	movwf	I2C1_Page_Write_EEPROM@n& (0+255),b
  5363  0010AC  D017               	goto	l1149
  5364  0010AE                     
  5365                           ; BSR set to: 0
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;serial.c: 86: {
  5369                           ;serial.c: 87: while (SSP1CON2bits.ACKSTAT);
  5370  0010AE  BCC5               	btfsc	4037,6,c	;volatile
  5371  0010B0  D7FE               	goto	l1150
  5372  0010B2                     u4040:
  5373                           
  5374                           ;serial.c: 88: while(!PIR1bits.SSP1IF);
  5375  0010B2  A69E               	btfss	3998,3,c	;volatile
  5376  0010B4  D7FE               	goto	u4040
  5377                           
  5378                           ;serial.c: 89: PIR1bits.SSP1IF = 0x0;
  5379  0010B6  969E               	bcf	3998,3,c	;volatile
  5380                           
  5381                           ;serial.c: 90: SSP1BUF = data[n];
  5382  0010B8  90D8               	bcf	status,0,c
  5383  0010BA  0100               	movlb	0	; () banked
  5384  0010BC  35CE               	rlcf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5385  0010BE  6ED9               	movwf	fsr2l,c
  5386  0010C0  0100               	movlb	0	; () banked
  5387  0010C2  35CF               	rlcf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5388  0010C4  6EDA               	movwf	fsr2h,c
  5389  0010C6  0100               	movlb	0	; () banked
  5390  0010C8  51C7               	movf	I2C1_Page_Write_EEPROM@data& (0+255),w,b
  5391  0010CA  26D9               	addwf	fsr2l,f,c
  5392  0010CC  0100               	movlb	0	; () banked
  5393  0010CE  51C8               	movf	(I2C1_Page_Write_EEPROM@data+1)& (0+255),w,b
  5394  0010D0  22DA               	addwfc	fsr2h,f,c
  5395  0010D2  50DF               	movf	indf2,w,c
  5396  0010D4  6EC9               	movwf	4041,c	;volatile
  5397                           
  5398                           ; BSR set to: 0
  5399  0010D6  0100               	movlb	0	; () banked
  5400  0010D8  4BCE               	infsnz	I2C1_Page_Write_EEPROM@n& (0+255),f,b
  5401  0010DA  2BCF               	incf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),f,b
  5402  0010DC                     l1149:
  5403                           
  5404                           ; BSR set to: 0
  5405                           
  5406                           ; BSR set to: 0
  5407  0010DC  0100               	movlb	0	; () banked
  5408  0010DE  51C9               	movf	I2C1_Page_Write_EEPROM@bytes& (0+255),w,b
  5409  0010E0  0100               	movlb	0	; () banked
  5410  0010E2  5DCE               	subwf	I2C1_Page_Write_EEPROM@n& (0+255),w,b
  5411  0010E4  0100               	movlb	0	; () banked
  5412  0010E6  51CF               	movf	(I2C1_Page_Write_EEPROM@n+1)& (0+255),w,b
  5413  0010E8  0A80               	xorlw	128
  5414  0010EA  0100               	movlb	0	; () banked
  5415  0010EC  6FCB               	movwf	??_I2C1_Page_Write_EEPROM& (0+255),b
  5416  0010EE  0100               	movlb	0	; () banked
  5417  0010F0  51CA               	movf	(I2C1_Page_Write_EEPROM@bytes+1)& (0+255),w,b
  5418  0010F2  0A80               	xorlw	128
  5419  0010F4  0100               	movlb	0	; () banked
  5420  0010F6  59CB               	subwfb	??_I2C1_Page_Write_EEPROM& (0+255),w,b
  5421  0010F8  A0D8               	btfss	status,0,c
  5422  0010FA  D7D9               	goto	l1150
  5423  0010FC                     u4060:
  5424                           
  5425                           ; BSR set to: 0
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;serial.c: 91: }
  5429                           ;serial.c: 93: while (SSP1CON2bits.ACKSTAT);
  5430  0010FC  BCC5               	btfsc	4037,6,c	;volatile
  5431  0010FE  D7FE               	goto	u4060
  5432  001100                     u4070:
  5433                           
  5434                           ;serial.c: 94: while(!PIR1bits.SSP1IF);
  5435  001100  A69E               	btfss	3998,3,c	;volatile
  5436  001102  D7FE               	goto	u4070
  5437                           
  5438                           ;serial.c: 95: SSP1CON2bits.PEN = 0x1;
  5439  001104  84C5               	bsf	4037,2,c	;volatile
  5440  001106  B4C5               	btfsc	4037,2,c	;volatile
  5441  001108  D7FE               	goto	l1165
  5442                           
  5443                           ;serial.c: 98: PIR1bits.SSP1IF = 0x0;
  5444  00110A  969E               	bcf	3998,3,c	;volatile
  5445                           
  5446                           ;serial.c: 99: SSP1CON1bits.SSPEN = 0x1;
  5447  00110C  8AC6               	bsf	4038,5,c	;volatile
  5448  00110E  0012               	return		;funcret
  5449  001110                     __end_of_I2C1_Page_Write_EEPROM:
  5450                           	opt stack 0
  5451                           tblptru	equ	0xFF8
  5452                           tblptrh	equ	0xFF7
  5453                           tblptrl	equ	0xFF6
  5454                           tablat	equ	0xFF5
  5455                           prodh	equ	0xFF4
  5456                           prodl	equ	0xFF3
  5457                           intcon	equ	0xFF2
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           postinc1	equ	0xFE6
  5461                           postdec1	equ	0xFE5
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           indf2	equ	0xFDF
  5465                           postinc2	equ	0xFDE
  5466                           postdec2	equ	0xFDD
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _highPriorityISR *****************
  5472 ;; Defined at:
  5473 ;;		line 127 in file "main.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;Total ram usage:       18 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    4
  5494 ;; This function calls:
  5495 ;;		_checkSwitches
  5496 ;;		_flashLED
  5497 ;;		_sendParam
  5498 ;;		_serviceSwitches
  5499 ;;		_tapLED
  5500 ;; This function is called by:
  5501 ;;		Interrupt level 2
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	intcode
  5506  000008                     __pintcode:
  5507                           	opt stack 0
  5508  000008                     _highPriorityISR:
  5509                           	opt stack 23
  5510                           
  5511                           ;incstack = 0
  5512  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5513  00000A  CFFA F020          	movff	pclath,??_highPriorityISR
  5514  00000E  CFFB F021          	movff	pclatu,??_highPriorityISR+1
  5515  000012  CFE9 F022          	movff	fsr0l,??_highPriorityISR+2
  5516  000016  CFEA F023          	movff	fsr0h,??_highPriorityISR+3
  5517  00001A  CFE1 F024          	movff	fsr1l,??_highPriorityISR+4
  5518  00001E  CFE2 F025          	movff	fsr1h,??_highPriorityISR+5
  5519  000022  CFD9 F026          	movff	fsr2l,??_highPriorityISR+6
  5520  000026  CFDA F027          	movff	fsr2h,??_highPriorityISR+7
  5521  00002A  CFF3 F028          	movff	prodl,??_highPriorityISR+8
  5522  00002E  CFF4 F029          	movff	prodh,??_highPriorityISR+9
  5523  000032  CFF6 F02A          	movff	tblptrl,??_highPriorityISR+10
  5524  000036  CFF7 F02B          	movff	tblptrh,??_highPriorityISR+11
  5525  00003A  CFF8 F02C          	movff	tblptru,??_highPriorityISR+12
  5526  00003E  CFF5 F02D          	movff	tablat,??_highPriorityISR+13
  5527  000042  C05E  F02E         	movff	btemp,??_highPriorityISR+14
  5528  000046  C05F  F02F         	movff	btemp+1,??_highPriorityISR+15
  5529  00004A  C060  F030         	movff	btemp+2,??_highPriorityISR+16
  5530  00004E  C061  F031         	movff	btemp+3,??_highPriorityISR+17
  5531                           
  5532                           ;main.c: 130: if(SSP2IF)
  5533  000052  ACA1               	btfss	4001,6,c	;volatile
  5534  000054  D003               	goto	i2l165
  5535                           
  5536                           ;main.c: 131: {
  5537                           ;main.c: 132: PIR2bits.SSP2IF = 0x0;
  5538  000056  9CA1               	bcf	4001,6,c	;volatile
  5539                           
  5540                           ;main.c: 133: sendParam();
  5541  000058  EC7E  F009         	call	_sendParam	;wreg free
  5542  00005C                     i2l165:
  5543                           
  5544                           ;main.c: 134: }
  5545                           ;main.c: 136: if (TMR4IF)
  5546  00005C  A0B8               	btfss	4024,0,c	;volatile
  5547  00005E  D007               	goto	i2l166
  5548                           
  5549                           ;main.c: 137: {
  5550                           ;main.c: 138: TMR4IF = 0;
  5551  000060  90B8               	bcf	4024,0,c	;volatile
  5552                           
  5553                           ;main.c: 139: tapLED();
  5554  000062  ECB4  F00B         	call	_tapLED	;wreg free
  5555                           
  5556                           ;main.c: 140: flashLED();
  5557  000066  EC34  F005         	call	_flashLED	;wreg free
  5558                           
  5559                           ;main.c: 141: T4CONbits.TMR4ON = 1;
  5560  00006A  010F               	movlb	15	; () banked
  5561  00006C  8504               	bsf	4,2,b	;volatile
  5562  00006E                     i2l166:
  5563                           
  5564                           ;main.c: 142: }
  5565                           ;main.c: 144: if (TMR2IF)
  5566                           
  5567                           ; BSR set to: 15
  5568  00006E  A29E               	btfss	3998,1,c	;volatile
  5569  000070  D012               	goto	i2l169
  5570                           
  5571                           ;main.c: 145: {
  5572                           ;main.c: 146: TMR2IF = 0;
  5573  000072  929E               	bcf	3998,1,c	;volatile
  5574                           
  5575                           ;main.c: 147: tapTimeCount++;
  5576  000074  4A36               	infsnz	_tapTimeCount,f,c
  5577  000076  2A37               	incf	_tapTimeCount+1,f,c
  5578                           
  5579                           ;main.c: 148: if (tapTimeCount >= 3000)
  5580  000078  BE37               	btfsc	_tapTimeCount+1,7,c
  5581  00007A  D00C               	goto	i2l168
  5582  00007C  0EB8               	movlw	184
  5583  00007E  5C36               	subwf	_tapTimeCount,w,c
  5584  000080  0E0B               	movlw	11
  5585  000082  5837               	subwfb	_tapTimeCount+1,w,c
  5586  000084  A0D8               	btfss	status,0,c
  5587  000086  D006               	goto	i2l168
  5588                           
  5589                           ;main.c: 149: {
  5590                           ;main.c: 150: tapTimeCount = 3000;
  5591  000088  0E0B               	movlw	11
  5592  00008A  6E37               	movwf	_tapTimeCount+1,c
  5593  00008C  0EB8               	movlw	184
  5594  00008E  6E36               	movwf	_tapTimeCount,c
  5595                           
  5596                           ;main.c: 151: T2CONbits.TMR2ON = 0;
  5597  000090  94CA               	bcf	4042,2,c	;volatile
  5598                           
  5599                           ;main.c: 152: }
  5600  000092  D001               	goto	i2l169
  5601  000094                     i2l168:
  5602                           
  5603                           ;main.c: 153: else T2CONbits.TMR2ON = 1;
  5604  000094  84CA               	bsf	4042,2,c	;volatile
  5605  000096                     i2l169:
  5606                           
  5607                           ;main.c: 154: }
  5608                           ;main.c: 156: checkSwitches();
  5609  000096  ECEA  F00A         	call	_checkSwitches	;wreg free
  5610                           
  5611                           ;main.c: 158: if (TMR0IF)
  5612  00009A  A4F2               	btfss	intcon,2,c	;volatile
  5613  00009C  D019               	goto	i2l172
  5614                           
  5615                           ;main.c: 159: {
  5616                           ;main.c: 160: TMR0IF = 0;
  5617  00009E  94F2               	bcf	intcon,2,c	;volatile
  5618                           
  5619                           ;main.c: 161: bounceCount++;
  5620  0000A0  0100               	movlb	0	; () banked
  5621  0000A2  4BA5               	infsnz	_bounceCount& (0+255),f,b
  5622  0000A4  2BA6               	incf	(_bounceCount+1)& (0+255),f,b
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;main.c: 162: if (bounceCount < 2)
  5626  0000A6  0100               	movlb	0	; () banked
  5627  0000A8  BFA6               	btfsc	(_bounceCount+1)& (0+255),7,b
  5628  0000AA  D008               	goto	i2u423_40
  5629  0000AC  0100               	movlb	0	; () banked
  5630  0000AE  51A6               	movf	(_bounceCount+1)& (0+255),w,b
  5631  0000B0  E107               	bnz	i2l4023
  5632  0000B2  0E02               	movlw	2
  5633  0000B4  0100               	movlb	0	; () banked
  5634  0000B6  5DA5               	subwf	_bounceCount& (0+255),w,b
  5635  0000B8  B0D8               	btfsc	status,0,c
  5636  0000BA  D002               	goto	i2l171
  5637  0000BC                     i2u423_40:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;main.c: 163: {
  5641                           ;main.c: 164: T0CONbits.TMR0ON = 0x1;
  5642  0000BC  8ED5               	bsf	4053,7,c	;volatile
  5643                           
  5644                           ;main.c: 165: }
  5645  0000BE  D008               	goto	i2l172
  5646  0000C0                     i2l171:
  5647  0000C0                     i2l4023:
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;main.c: 166: else
  5651                           ;main.c: 167: {
  5652                           ;main.c: 168: bounceCount = 0;
  5653  0000C0  0E00               	movlw	0
  5654  0000C2  0100               	movlb	0	; () banked
  5655  0000C4  6FA6               	movwf	(_bounceCount+1)& (0+255),b
  5656  0000C6  0E00               	movlw	0
  5657  0000C8  6FA5               	movwf	_bounceCount& (0+255),b
  5658                           
  5659                           ; BSR set to: 0
  5660                           ;main.c: 169: serviceSwitches();
  5661  0000CA  ECE3  F001         	call	_serviceSwitches	;wreg free
  5662                           
  5663                           ;main.c: 170: T0CONbits.TMR0ON = 0x0;
  5664  0000CE  9ED5               	bcf	4053,7,c	;volatile
  5665  0000D0                     i2l172:
  5666  0000D0  C031  F061         	movff	??_highPriorityISR+17,btemp+3
  5667  0000D4  C030  F060         	movff	??_highPriorityISR+16,btemp+2
  5668  0000D8  C02F  F05F         	movff	??_highPriorityISR+15,btemp+1
  5669  0000DC  C02E  F05E         	movff	??_highPriorityISR+14,btemp
  5670  0000E0  C02D  FFF5         	movff	??_highPriorityISR+13,tablat
  5671  0000E4  C02C  FFF8         	movff	??_highPriorityISR+12,tblptru
  5672  0000E8  C02B  FFF7         	movff	??_highPriorityISR+11,tblptrh
  5673  0000EC  C02A  FFF6         	movff	??_highPriorityISR+10,tblptrl
  5674  0000F0  C029  FFF4         	movff	??_highPriorityISR+9,prodh
  5675  0000F4  C028  FFF3         	movff	??_highPriorityISR+8,prodl
  5676  0000F8  C027  FFDA         	movff	??_highPriorityISR+7,fsr2h
  5677  0000FC  C026  FFD9         	movff	??_highPriorityISR+6,fsr2l
  5678  000100  C025  FFE2         	movff	??_highPriorityISR+5,fsr1h
  5679  000104  C024  FFE1         	movff	??_highPriorityISR+4,fsr1l
  5680  000108  C023  FFEA         	movff	??_highPriorityISR+3,fsr0h
  5681  00010C  C022  FFE9         	movff	??_highPriorityISR+2,fsr0l
  5682  000110  C021  FFFB         	movff	??_highPriorityISR+1,pclatu
  5683  000114  C020  FFFA         	movff	??_highPriorityISR,pclath
  5684  000118  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5685  00011A  0011               	retfie		f
  5686  00011C                     __end_of_highPriorityISR:
  5687                           	opt stack 0
  5688                           pclatu	equ	0xFFB
  5689                           pclath	equ	0xFFA
  5690                           tblptru	equ	0xFF8
  5691                           tblptrh	equ	0xFF7
  5692                           tblptrl	equ	0xFF6
  5693                           tablat	equ	0xFF5
  5694                           prodh	equ	0xFF4
  5695                           prodl	equ	0xFF3
  5696                           intcon	equ	0xFF2
  5697                           postinc0	equ	0xFEE
  5698                           fsr0h	equ	0xFEA
  5699                           fsr0l	equ	0xFE9
  5700                           wreg	equ	0xFE8
  5701                           postinc1	equ	0xFE6
  5702                           postdec1	equ	0xFE5
  5703                           fsr1h	equ	0xFE2
  5704                           fsr1l	equ	0xFE1
  5705                           indf2	equ	0xFDF
  5706                           postinc2	equ	0xFDE
  5707                           postdec2	equ	0xFDD
  5708                           fsr2h	equ	0xFDA
  5709                           fsr2l	equ	0xFD9
  5710                           status	equ	0xFD8
  5711                           
  5712 ;; *************** function _tapLED *****************
  5713 ;; Defined at:
  5714 ;;		line 76 in file "hardware.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;		None
  5717 ;; Auto vars:     Size  Location     Type
  5718 ;;		None
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, status,2, status,0
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;Total ram usage:        3 bytes
  5733 ;; Hardware stack levels used:    1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_highPriorityISR
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text28
  5742  001768                     __ptext28:
  5743                           	opt stack 0
  5744  001768                     _tapLED:
  5745                           	opt stack 26
  5746                           
  5747                           ;hardware.c: 85: if(tapFlash)
  5748                           
  5749                           ;incstack = 0
  5750  001768  0100               	movlb	0	; () banked
  5751  00176A  5197               	movf	_tapFlash& (0+255),w,b
  5752  00176C  0100               	movlb	0	; () banked
  5753  00176E  1198               	iorwf	(_tapFlash+1)& (0+255),w,b
  5754  001770  B4D8               	btfsc	status,2,c
  5755  001772  D017               	goto	i2l823
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;hardware.c: 86: {
  5759                           ;hardware.c: 87: tapDispCount++;
  5760  001774  4A3A               	infsnz	_tapDispCount,f,c
  5761  001776  2A3B               	incf	_tapDispCount+1,f,c
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;hardware.c: 88: if (tapDispCount >= tapOnTime)
  5765  001778  505A               	movf	_tapOnTime,w,c
  5766  00177A  5C3A               	subwf	_tapDispCount,w,c
  5767  00177C  503B               	movf	_tapDispCount+1,w,c
  5768  00177E  0A80               	xorlw	128
  5769  001780  6E01               	movwf	??_tapLED& (0+255),c
  5770  001782  505B               	movf	_tapOnTime+1,w,c
  5771  001784  0A80               	xorlw	128
  5772  001786  5801               	subwfb	??_tapLED& (0+255),w,c
  5773  001788  A0D8               	btfss	status,0,c
  5774  00178A  0012               	return	
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;hardware.c: 89: {
  5778                           ;hardware.c: 90: tapDispCount = 0;
  5779  00178C  0E00               	movlw	0
  5780  00178E  6E3B               	movwf	_tapDispCount+1,c
  5781  001790  0E00               	movlw	0
  5782  001792  6E3A               	movwf	_tapDispCount,c
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;hardware.c: 91: LATE0 = 0;
  5786  001794  908D               	bcf	3981,0,c	;volatile
  5787                           
  5788                           ;hardware.c: 92: tapFlash = 0;
  5789  001796  0E00               	movlw	0
  5790  001798  0100               	movlb	0	; () banked
  5791  00179A  6F98               	movwf	(_tapFlash+1)& (0+255),b
  5792  00179C  0E00               	movlw	0
  5793  00179E  6F97               	movwf	_tapFlash& (0+255),b
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;hardware.c: 93: }
  5797                           ;hardware.c: 94: }
  5798  0017A0  0012               	return	
  5799  0017A2                     i2l823:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;hardware.c: 95: else
  5803                           ;hardware.c: 96: {
  5804                           ;hardware.c: 97: tapDispCount++;
  5805                           
  5806                           ; BSR set to: 0
  5807  0017A2  4A3A               	infsnz	_tapDispCount,f,c
  5808  0017A4  2A3B               	incf	_tapDispCount+1,f,c
  5809                           
  5810                           ; BSR set to: 0
  5811                           ;hardware.c: 98: if (tapDispCount >= (currentTapTime-tapOnTime))
  5812  0017A6  C05A  F001         	movff	_tapOnTime,??_tapLED
  5813  0017AA  C05B  F002         	movff	_tapOnTime+1,??_tapLED+1
  5814  0017AE  1E01               	comf	??_tapLED,f,c
  5815  0017B0  1E02               	comf	??_tapLED+1,f,c
  5816  0017B2  4A01               	infsnz	??_tapLED,f,c
  5817  0017B4  2A02               	incf	??_tapLED+1,f,c
  5818  0017B6  5058               	movf	_currentTapTime,w,c
  5819  0017B8  2601               	addwf	??_tapLED,f,c
  5820  0017BA  5059               	movf	_currentTapTime+1,w,c
  5821  0017BC  2202               	addwfc	??_tapLED+1,f,c
  5822  0017BE  5001               	movf	??_tapLED,w,c
  5823  0017C0  5C3A               	subwf	_tapDispCount,w,c
  5824  0017C2  503B               	movf	_tapDispCount+1,w,c
  5825  0017C4  0A80               	xorlw	128
  5826  0017C6  6E03               	movwf	(??_tapLED+2)& (0+255),c
  5827  0017C8  5002               	movf	??_tapLED+1,w,c
  5828  0017CA  0A80               	xorlw	128
  5829  0017CC  5803               	subwfb	(??_tapLED+2)& (0+255),w,c
  5830  0017CE  A0D8               	btfss	status,0,c
  5831  0017D0  0012               	return	
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;hardware.c: 99: {
  5835                           ;hardware.c: 100: tapDispCount = 0;
  5836  0017D2  0E00               	movlw	0
  5837  0017D4  6E3B               	movwf	_tapDispCount+1,c
  5838  0017D6  0E00               	movlw	0
  5839  0017D8  6E3A               	movwf	_tapDispCount,c
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;hardware.c: 101: LATE0 = 1;
  5843  0017DA  808D               	bsf	3981,0,c	;volatile
  5844                           
  5845                           ;hardware.c: 102: tapFlash = 1;
  5846  0017DC  0E00               	movlw	0
  5847  0017DE  0100               	movlb	0	; () banked
  5848  0017E0  6F98               	movwf	(_tapFlash+1)& (0+255),b
  5849  0017E2  0E01               	movlw	1
  5850  0017E4  6F97               	movwf	_tapFlash& (0+255),b
  5851                           
  5852                           ; BSR set to: 0
  5853  0017E6  0012               	return	
  5854  0017E8                     __end_of_tapLED:
  5855                           	opt stack 0
  5856                           pclatu	equ	0xFFB
  5857                           pclath	equ	0xFFA
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           fsr0h	equ	0xFEA
  5867                           fsr0l	equ	0xFE9
  5868                           wreg	equ	0xFE8
  5869                           postinc1	equ	0xFE6
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           indf2	equ	0xFDF
  5874                           postinc2	equ	0xFDE
  5875                           postdec2	equ	0xFDD
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8
  5879                           
  5880 ;; *************** function _serviceSwitches *****************
  5881 ;; Defined at:
  5882 ;;		line 201 in file "hardware.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    3
  5903 ;; This function calls:
  5904 ;;		_processTaps
  5905 ;;		_updateLineLEDs
  5906 ;;		_updatePresetLEDs
  5907 ;; This function is called by:
  5908 ;;		_highPriorityISR
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text29
  5913  0003C6                     __ptext29:
  5914                           	opt stack 0
  5915  0003C6                     _serviceSwitches:
  5916                           	opt stack 23
  5917                           
  5918                           ;hardware.c: 203: if (fsw1)
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;incstack = 0
  5922  0003C6  5044               	movf	_fsw1,w,c
  5923  0003C8  1045               	iorwf	_fsw1+1,w,c
  5924  0003CA  B4D8               	btfsc	status,2,c
  5925  0003CC  D022               	goto	i2u350_45
  5926                           
  5927                           ;hardware.c: 204: {
  5928                           ;hardware.c: 205: fsw1 = 0;
  5929  0003CE  0E00               	movlw	0
  5930  0003D0  6E45               	movwf	_fsw1+1,c
  5931  0003D2  0E00               	movlw	0
  5932  0003D4  6E44               	movwf	_fsw1,c
  5933                           
  5934                           ;hardware.c: 206: if (!RD4)
  5935  0003D6  B883               	btfsc	3971,4,c	;volatile
  5936  0003D8  D01C               	goto	i2u350_45
  5937                           
  5938                           ;hardware.c: 207: {
  5939                           ;hardware.c: 208: bypass ^= 1;
  5940  0003DA  0E01               	movlw	1
  5941  0003DC  1A40               	xorwf	_bypass,f,c
  5942                           
  5943                           ;hardware.c: 209: if (bypMode)
  5944  0003DE  0100               	movlb	0	; () banked
  5945  0003E0  51EC               	movf	_bypMode& (0+255),w,b
  5946  0003E2  0100               	movlb	0	; () banked
  5947  0003E4  11ED               	iorwf	(_bypMode+1)& (0+255),w,b
  5948  0003E6  B4D8               	btfsc	status,2,c
  5949  0003E8  D00B               	goto	i2l854
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;hardware.c: 210: {
  5953                           ;hardware.c: 211: LATD3 = !bypass;
  5954  0003EA  5040               	movf	_bypass,w,c
  5955  0003EC  1041               	iorwf	_bypass+1,w,c
  5956  0003EE  A4D8               	btfss	status,2,c
  5957  0003F0  D002               	goto	i2u343_40
  5958  0003F2  868C               	bsf	3980,3,c	;volatile
  5959  0003F4  D001               	goto	i2u344_45
  5960  0003F6                     i2u343_40:
  5961  0003F6  968C               	bcf	3980,3,c	;volatile
  5962  0003F8                     i2u344_45:
  5963                           
  5964                           ;hardware.c: 212: LATB5 = bypass;
  5965  0003F8  A040               	btfss	_bypass,0,c
  5966  0003FA  D005               	goto	L6
  5967  0003FC                     i2u345_41:
  5968  0003FC  8A8A               	bsf	3978,5,c	;volatile
  5969  0003FE  D004               	goto	i2u348_45
  5970  000400                     i2l854:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;hardware.c: 214: else
  5974                           ;hardware.c: 215: {
  5975                           ;hardware.c: 216: LATD3 = 0;
  5976  000400  968C               	bcf	3980,3,c	;volatile
  5977                           
  5978                           ;hardware.c: 217: LATB5 = bypass;
  5979  000402  B040               	btfsc	_bypass,0,c
  5980  000404  D7FB               	goto	i2u345_41
  5981  000406                     L6:
  5982  000406  9A8A               	bcf	3978,5,c	;volatile
  5983  000408                     i2u348_45:
  5984                           
  5985                           ;hardware.c: 218: }
  5986                           ;hardware.c: 219: LATD2 = bypass;
  5987  000408  A040               	btfss	_bypass,0,c
  5988  00040A  D002               	goto	i2u349_40
  5989  00040C  848C               	bsf	3980,2,c	;volatile
  5990  00040E  D001               	goto	i2u350_45
  5991  000410                     i2u349_40:
  5992  000410  948C               	bcf	3980,2,c	;volatile
  5993  000412                     i2u350_45:
  5994                           
  5995                           ;hardware.c: 220: }
  5996                           ;hardware.c: 221: }
  5997                           ;hardware.c: 223: if (fsw2)
  5998  000412  5042               	movf	_fsw2,w,c
  5999  000414  1043               	iorwf	_fsw2+1,w,c
  6000  000416  B4D8               	btfsc	status,2,c
  6001  000418  D007               	goto	i2l857
  6002                           
  6003                           ;hardware.c: 224: {
  6004                           ;hardware.c: 225: fsw2 = 0;
  6005  00041A  0E00               	movlw	0
  6006  00041C  6E43               	movwf	_fsw2+1,c
  6007  00041E  0E00               	movlw	0
  6008  000420  6E42               	movwf	_fsw2,c
  6009                           
  6010                           ;hardware.c: 226: if (!RE3)
  6011  000422  A684               	btfss	3972,3,c	;volatile
  6012                           
  6013                           ;hardware.c: 227: {
  6014                           ;hardware.c: 228: processTaps();
  6015  000424  EC82  F006         	call	_processTaps	;wreg free
  6016  000428                     i2l857:
  6017                           
  6018                           ;hardware.c: 229: }
  6019                           ;hardware.c: 230: }
  6020                           ;hardware.c: 232: if (switch1)
  6021  000428  504E               	movf	_switch1,w,c
  6022  00042A  104F               	iorwf	_switch1+1,w,c
  6023  00042C  B4D8               	btfsc	status,2,c
  6024  00042E  D020               	goto	i2l862
  6025                           
  6026                           ;hardware.c: 233: {
  6027                           ;hardware.c: 234: switch1 = 0;
  6028  000430  0E00               	movlw	0
  6029  000432  6E4F               	movwf	_switch1+1,c
  6030  000434  0E00               	movlw	0
  6031  000436  6E4E               	movwf	_switch1,c
  6032                           
  6033                           ;hardware.c: 235: if (!RG1)
  6034  000438  B286               	btfsc	3974,1,c	;volatile
  6035  00043A  D01A               	goto	i2l862
  6036                           
  6037                           ;hardware.c: 236: {
  6038                           ;hardware.c: 237: if (!shift)
  6039  00043C  5038               	movf	_shift,w,c
  6040  00043E  1039               	iorwf	_shift+1,w,c
  6041  000440  A4D8               	btfss	status,2,c
  6042  000442  D00F               	goto	i2l860
  6043                           
  6044                           ;hardware.c: 238: {
  6045                           ;hardware.c: 239: intA++;
  6046  000444  4A56               	infsnz	_intA,f,c
  6047  000446  2A57               	incf	_intA+1,f,c
  6048                           
  6049                           ;hardware.c: 240: if (intA > 3)
  6050  000448  BE57               	btfsc	_intA+1,7,c
  6051  00044A  D012               	goto	i2l862
  6052  00044C  5057               	movf	_intA+1,w,c
  6053  00044E  E104               	bnz	i2u356_40
  6054  000450  0E04               	movlw	4
  6055  000452  5C56               	subwf	_intA,w,c
  6056  000454  A0D8               	btfss	status,0,c
  6057  000456  D00C               	goto	i2l862
  6058  000458                     i2u356_40:
  6059                           
  6060                           ;hardware.c: 241: {
  6061                           ;hardware.c: 242: intA = 0;
  6062  000458  0E00               	movlw	0
  6063  00045A  6E57               	movwf	_intA+1,c
  6064  00045C  0E00               	movlw	0
  6065  00045E  6E56               	movwf	_intA,c
  6066                           
  6067                           ;hardware.c: 243: }
  6068                           ;hardware.c: 244: }
  6069  000460  D007               	goto	i2l862
  6070  000462                     i2l860:
  6071                           
  6072                           ;hardware.c: 245: else
  6073                           ;hardware.c: 246: {
  6074                           ;hardware.c: 247: armA ^= 1;
  6075  000462  0E01               	movlw	1
  6076  000464  0100               	movlb	0	; () banked
  6077  000466  1B8F               	xorwf	_armA& (0+255),f,b
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;hardware.c: 248: shiftAction = 1;
  6081  000468  0E00               	movlw	0
  6082  00046A  6E51               	movwf	_shiftAction+1,c
  6083  00046C  0E01               	movlw	1
  6084  00046E  6E50               	movwf	_shiftAction,c
  6085  000470                     i2l862:
  6086                           
  6087                           ;hardware.c: 249: }
  6088                           ;hardware.c: 250: }
  6089                           ;hardware.c: 251: }
  6090                           ;hardware.c: 253: if (switch2)
  6091                           
  6092                           ; BSR set to: 0
  6093                           
  6094                           ; BSR set to: 0
  6095                           
  6096                           ; BSR set to: 0
  6097  000470  504C               	movf	_switch2,w,c
  6098  000472  104D               	iorwf	_switch2+1,w,c
  6099  000474  B4D8               	btfsc	status,2,c
  6100  000476  D020               	goto	i2l867
  6101                           
  6102                           ;hardware.c: 254: {
  6103                           ;hardware.c: 255: switch2 = 0;
  6104  000478  0E00               	movlw	0
  6105  00047A  6E4D               	movwf	_switch2+1,c
  6106  00047C  0E00               	movlw	0
  6107  00047E  6E4C               	movwf	_switch2,c
  6108                           
  6109                           ;hardware.c: 256: if (!RG2)
  6110  000480  B486               	btfsc	3974,2,c	;volatile
  6111  000482  D01A               	goto	i2l867
  6112                           
  6113                           ;hardware.c: 257: {
  6114                           ;hardware.c: 258: if (!shift)
  6115  000484  5038               	movf	_shift,w,c
  6116  000486  1039               	iorwf	_shift+1,w,c
  6117  000488  A4D8               	btfss	status,2,c
  6118  00048A  D00F               	goto	i2l865
  6119                           
  6120                           ;hardware.c: 259: {
  6121                           ;hardware.c: 260: intB++;
  6122  00048C  4A54               	infsnz	_intB,f,c
  6123  00048E  2A55               	incf	_intB+1,f,c
  6124                           
  6125                           ;hardware.c: 261: if (intB > 3)
  6126  000490  BE55               	btfsc	_intB+1,7,c
  6127  000492  D012               	goto	i2l867
  6128  000494  5055               	movf	_intB+1,w,c
  6129  000496  E104               	bnz	i2u360_40
  6130  000498  0E04               	movlw	4
  6131  00049A  5C54               	subwf	_intB,w,c
  6132  00049C  A0D8               	btfss	status,0,c
  6133  00049E  D00C               	goto	i2l867
  6134  0004A0                     i2u360_40:
  6135                           
  6136                           ;hardware.c: 262: {
  6137                           ;hardware.c: 263: intB = 0;
  6138  0004A0  0E00               	movlw	0
  6139  0004A2  6E55               	movwf	_intB+1,c
  6140  0004A4  0E00               	movlw	0
  6141  0004A6  6E54               	movwf	_intB,c
  6142                           
  6143                           ;hardware.c: 264: }
  6144                           ;hardware.c: 265: }
  6145  0004A8  D007               	goto	i2l867
  6146  0004AA                     i2l865:
  6147                           
  6148                           ;hardware.c: 266: else
  6149                           ;hardware.c: 267: {
  6150                           ;hardware.c: 268: armB ^= 1;
  6151  0004AA  0E01               	movlw	1
  6152  0004AC  0100               	movlb	0	; () banked
  6153  0004AE  1B8D               	xorwf	_armB& (0+255),f,b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;hardware.c: 269: shiftAction = 1;
  6157  0004B0  0E00               	movlw	0
  6158  0004B2  6E51               	movwf	_shiftAction+1,c
  6159  0004B4  0E01               	movlw	1
  6160  0004B6  6E50               	movwf	_shiftAction,c
  6161  0004B8                     i2l867:
  6162                           
  6163                           ;hardware.c: 270: }
  6164                           ;hardware.c: 271: }
  6165                           ;hardware.c: 272: }
  6166                           ;hardware.c: 274: if (switch3)
  6167                           
  6168                           ; BSR set to: 0
  6169                           
  6170                           ; BSR set to: 0
  6171                           
  6172                           ; BSR set to: 0
  6173  0004B8  504A               	movf	_switch3,w,c
  6174  0004BA  104B               	iorwf	_switch3+1,w,c
  6175  0004BC  B4D8               	btfsc	status,2,c
  6176  0004BE  D020               	goto	i2l872
  6177                           
  6178                           ;hardware.c: 275: {
  6179                           ;hardware.c: 276: switch3 = 0;
  6180  0004C0  0E00               	movlw	0
  6181  0004C2  6E4B               	movwf	_switch3+1,c
  6182  0004C4  0E00               	movlw	0
  6183  0004C6  6E4A               	movwf	_switch3,c
  6184                           
  6185                           ;hardware.c: 277: if (!RE6)
  6186  0004C8  BC84               	btfsc	3972,6,c	;volatile
  6187  0004CA  D01A               	goto	i2l872
  6188                           
  6189                           ;hardware.c: 278: {
  6190                           ;hardware.c: 279: if (!shift)
  6191  0004CC  5038               	movf	_shift,w,c
  6192  0004CE  1039               	iorwf	_shift+1,w,c
  6193  0004D0  A4D8               	btfss	status,2,c
  6194  0004D2  D00F               	goto	i2l870
  6195                           
  6196                           ;hardware.c: 280: {
  6197                           ;hardware.c: 281: intC++;
  6198  0004D4  4A52               	infsnz	_intC,f,c
  6199  0004D6  2A53               	incf	_intC+1,f,c
  6200                           
  6201                           ;hardware.c: 282: if (intC > 3)
  6202  0004D8  BE53               	btfsc	_intC+1,7,c
  6203  0004DA  D012               	goto	i2l872
  6204  0004DC  5053               	movf	_intC+1,w,c
  6205  0004DE  E104               	bnz	i2u364_40
  6206  0004E0  0E04               	movlw	4
  6207  0004E2  5C52               	subwf	_intC,w,c
  6208  0004E4  A0D8               	btfss	status,0,c
  6209  0004E6  D00C               	goto	i2l872
  6210  0004E8                     i2u364_40:
  6211                           
  6212                           ;hardware.c: 283: {
  6213                           ;hardware.c: 284: intC = 0;
  6214  0004E8  0E00               	movlw	0
  6215  0004EA  6E53               	movwf	_intC+1,c
  6216  0004EC  0E00               	movlw	0
  6217  0004EE  6E52               	movwf	_intC,c
  6218                           
  6219                           ;hardware.c: 285: }
  6220                           ;hardware.c: 286: }
  6221  0004F0  D007               	goto	i2l872
  6222  0004F2                     i2l870:
  6223                           
  6224                           ;hardware.c: 287: else
  6225                           ;hardware.c: 288: {
  6226                           ;hardware.c: 289: armC ^= 1;
  6227  0004F2  0E01               	movlw	1
  6228  0004F4  0100               	movlb	0	; () banked
  6229  0004F6  1B8B               	xorwf	_armC& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;hardware.c: 290: shiftAction = 1;
  6233  0004F8  0E00               	movlw	0
  6234  0004FA  6E51               	movwf	_shiftAction+1,c
  6235  0004FC  0E01               	movlw	1
  6236  0004FE  6E50               	movwf	_shiftAction,c
  6237  000500                     i2l872:
  6238                           
  6239                           ;hardware.c: 291: }
  6240                           ;hardware.c: 292: }
  6241                           ;hardware.c: 293: }
  6242                           ;hardware.c: 298: updateLineLEDs(intA, intB, intC);
  6243                           
  6244                           ; BSR set to: 0
  6245                           
  6246                           ; BSR set to: 0
  6247                           
  6248                           ; BSR set to: 0
  6249  000500  C056  F007         	movff	_intA,updateLineLEDs@lineA
  6250  000504  C057  F008         	movff	_intA+1,updateLineLEDs@lineA+1
  6251  000508  C054  F009         	movff	_intB,updateLineLEDs@lineB
  6252  00050C  C055  F00A         	movff	_intB+1,updateLineLEDs@lineB+1
  6253  000510  C052  F00B         	movff	_intC,updateLineLEDs@lineC
  6254  000514  C053  F00C         	movff	_intC+1,updateLineLEDs@lineC+1
  6255  000518  EC5B  F00A         	call	_updateLineLEDs	;wreg free
  6256                           
  6257                           ;hardware.c: 300: if (switch4)
  6258  00051C  5048               	movf	_switch4,w,c
  6259  00051E  1049               	iorwf	_switch4+1,w,c
  6260  000520  B4D8               	btfsc	status,2,c
  6261  000522  D04C               	goto	i2l882
  6262                           
  6263                           ;hardware.c: 301: {
  6264                           ;hardware.c: 302: switch4 = 0;
  6265  000524  0E00               	movlw	0
  6266  000526  6E49               	movwf	_switch4+1,c
  6267  000528  0E00               	movlw	0
  6268  00052A  6E48               	movwf	_switch4,c
  6269                           
  6270                           ;hardware.c: 303: if (!RD1)
  6271  00052C  B283               	btfsc	3971,1,c	;volatile
  6272  00052E  D046               	goto	i2l882
  6273                           
  6274                           ;hardware.c: 304: {
  6275                           ;hardware.c: 305: if (!shift)
  6276  000530  5038               	movf	_shift,w,c
  6277  000532  1039               	iorwf	_shift+1,w,c
  6278  000534  A4D8               	btfss	status,2,c
  6279  000536  D01A               	goto	i2l875
  6280                           
  6281                           ;hardware.c: 306: {
  6282                           ;hardware.c: 307: preset++;
  6283  000538  0100               	movlb	0	; () banked
  6284  00053A  4BA1               	infsnz	_preset& (0+255),f,b
  6285  00053C  2BA2               	incf	(_preset+1)& (0+255),f,b
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;hardware.c: 308: if (preset >= 6)
  6289  00053E  0100               	movlb	0	; () banked
  6290  000540  BFA2               	btfsc	(_preset+1)& (0+255),7,b
  6291  000542  D00D               	goto	i2l876
  6292  000544  0100               	movlb	0	; () banked
  6293  000546  51A2               	movf	(_preset+1)& (0+255),w,b
  6294  000548  E105               	bnz	i2u368_40
  6295  00054A  0E06               	movlw	6
  6296  00054C  0100               	movlb	0	; () banked
  6297  00054E  5DA1               	subwf	_preset& (0+255),w,b
  6298  000550  A0D8               	btfss	status,0,c
  6299  000552  D005               	goto	i2l876
  6300  000554                     i2u368_40:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;hardware.c: 309: {
  6304                           ;hardware.c: 310: preset = 0;
  6305  000554  0E00               	movlw	0
  6306  000556  0100               	movlb	0	; () banked
  6307  000558  6FA2               	movwf	(_preset+1)& (0+255),b
  6308  00055A  0E00               	movlw	0
  6309  00055C  6FA1               	movwf	_preset& (0+255),b
  6310  00055E                     i2l876:
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;hardware.c: 311: }
  6314                           ;hardware.c: 312: updatePresetLEDs(preset);
  6315                           
  6316                           ; BSR set to: 0
  6317  00055E  C0A1  F001         	movff	_preset,updatePresetLEDs@psNum
  6318  000562  C0A2  F002         	movff	_preset+1,updatePresetLEDs@psNum+1
  6319  000566  ECF4  F00B         	call	_updatePresetLEDs	;wreg free
  6320                           
  6321                           ;hardware.c: 313: }
  6322  00056A  D028               	goto	i2l882
  6323  00056C                     i2l875:
  6324                           
  6325                           ;hardware.c: 314: else
  6326                           ;hardware.c: 315: {
  6327                           ;hardware.c: 316: if (!presetPend)
  6328  00056C  503C               	movf	_presetPend,w,c
  6329  00056E  103D               	iorwf	_presetPend+1,w,c
  6330  000570  A4D8               	btfss	status,2,c
  6331  000572  D016               	goto	i2l878
  6332                           
  6333                           ;hardware.c: 317: {
  6334                           ;hardware.c: 319: targPreset = preset;
  6335  000574  C0A1  F03E         	movff	_preset,_targPreset
  6336  000578  C0A2  F03F         	movff	_preset+1,_targPreset+1
  6337                           
  6338                           ;hardware.c: 320: if (!targPreset)
  6339  00057C  503E               	movf	_targPreset,w,c
  6340  00057E  103F               	iorwf	_targPreset+1,w,c
  6341  000580  A4D8               	btfss	status,2,c
  6342  000582  D004               	goto	i2l879
  6343                           
  6344                           ;hardware.c: 321: {
  6345                           ;hardware.c: 322: targPreset = 1;
  6346  000584  0E00               	movlw	0
  6347  000586  6E3F               	movwf	_targPreset+1,c
  6348  000588  0E01               	movlw	1
  6349  00058A  6E3E               	movwf	_targPreset,c
  6350  00058C                     i2l879:
  6351                           
  6352                           ;hardware.c: 323: }
  6353                           ;hardware.c: 324: presetPend = 1;
  6354  00058C  0E00               	movlw	0
  6355  00058E  6E3D               	movwf	_presetPend+1,c
  6356  000590  0E01               	movlw	1
  6357  000592  6E3C               	movwf	_presetPend,c
  6358                           
  6359                           ;hardware.c: 325: if (targPreset > 1)
  6360  000594  BE3F               	btfsc	_targPreset+1,7,c
  6361  000596  D012               	goto	i2l882
  6362  000598  503F               	movf	_targPreset+1,w,c
  6363  00059A  E10C               	bnz	i2u372_40
  6364  00059C  0E02               	movlw	2
  6365  00059E  D007               	goto	L7
  6366  0005A0                     i2l878:
  6367                           
  6368                           ;hardware.c: 330: else
  6369                           ;hardware.c: 331: {
  6370                           ;hardware.c: 332: targPreset++;
  6371  0005A0  4A3E               	infsnz	_targPreset,f,c
  6372  0005A2  2A3F               	incf	_targPreset+1,f,c
  6373                           
  6374                           ;hardware.c: 333: if (targPreset > 5)
  6375  0005A4  BE3F               	btfsc	_targPreset+1,7,c
  6376  0005A6  D00A               	goto	i2l882
  6377  0005A8  503F               	movf	_targPreset+1,w,c
  6378  0005AA  E104               	bnz	i2u372_40
  6379  0005AC  0E06               	movlw	6
  6380  0005AE                     L7:
  6381  0005AE  5C3E               	subwf	_targPreset,w,c
  6382  0005B0  A0D8               	btfss	status,0,c
  6383  0005B2  D004               	goto	i2l882
  6384  0005B4                     i2u372_40:
  6385                           
  6386                           ;hardware.c: 334: {
  6387                           ;hardware.c: 335: targPreset = 1;
  6388  0005B4  0E00               	movlw	0
  6389  0005B6  6E3F               	movwf	_targPreset+1,c
  6390  0005B8  0E01               	movlw	1
  6391  0005BA  6E3E               	movwf	_targPreset,c
  6392  0005BC                     i2l882:
  6393                           
  6394                           ;hardware.c: 336: }
  6395                           ;hardware.c: 337: }
  6396                           ;hardware.c: 338: }
  6397                           ;hardware.c: 339: }
  6398                           ;hardware.c: 340: }
  6399                           ;hardware.c: 342: if (switch5)
  6400  0005BC  5046               	movf	_switch5,w,c
  6401  0005BE  1047               	iorwf	_switch5+1,w,c
  6402  0005C0  B4D8               	btfsc	status,2,c
  6403  0005C2  0012               	return	
  6404                           
  6405                           ;hardware.c: 343: {
  6406                           ;hardware.c: 344: switch5 = 0;
  6407  0005C4  0E00               	movlw	0
  6408  0005C6  6E47               	movwf	_switch5+1,c
  6409  0005C8  0E00               	movlw	0
  6410  0005CA  6E46               	movwf	_switch5,c
  6411                           
  6412                           ;hardware.c: 345: if (!shift)
  6413  0005CC  5038               	movf	_shift,w,c
  6414  0005CE  1039               	iorwf	_shift+1,w,c
  6415  0005D0  A4D8               	btfss	status,2,c
  6416  0005D2  D00B               	goto	i2l884
  6417                           
  6418                           ;hardware.c: 346: {
  6419                           ;hardware.c: 347: if (!RG3)
  6420  0005D4  B686               	btfsc	3974,3,c	;volatile
  6421  0005D6  0012               	return	
  6422                           
  6423                           ;hardware.c: 348: {
  6424                           ;hardware.c: 349: shift = 1;
  6425  0005D8  0E00               	movlw	0
  6426  0005DA  6E39               	movwf	_shift+1,c
  6427  0005DC  0E01               	movlw	1
  6428  0005DE  6E38               	movwf	_shift,c
  6429                           
  6430                           ;hardware.c: 351: IOCNbits.IOCN7 = 0x0;
  6431  0005E0  010F               	movlb	15	; () banked
  6432  0005E2  9F55               	bcf	85,7,b	;volatile
  6433                           
  6434                           ; BSR set to: 15
  6435                           ;hardware.c: 352: IOCPbits.IOCP7 = 0x1;
  6436  0005E4  010F               	movlb	15	; () banked
  6437  0005E6  8F56               	bsf	86,7,b	;volatile
  6438                           
  6439                           ; BSR set to: 15
  6440                           ;hardware.c: 353: }
  6441                           ;hardware.c: 354: }
  6442  0005E8  0012               	return	
  6443  0005EA                     i2l884:
  6444                           
  6445                           ;hardware.c: 355: else
  6446                           ;hardware.c: 356: {
  6447                           ;hardware.c: 357: if (RG3)
  6448  0005EA  A686               	btfss	3974,3,c	;volatile
  6449  0005EC  0012               	return	
  6450                           
  6451                           ;hardware.c: 358: {
  6452                           ;hardware.c: 359: shift = 0;
  6453  0005EE  0E00               	movlw	0
  6454  0005F0  6E39               	movwf	_shift+1,c
  6455  0005F2  0E00               	movlw	0
  6456  0005F4  6E38               	movwf	_shift,c
  6457                           
  6458                           ;hardware.c: 361: IOCNbits.IOCN7 = 0x1;
  6459  0005F6  010F               	movlb	15	; () banked
  6460  0005F8  8F55               	bsf	85,7,b	;volatile
  6461                           
  6462                           ; BSR set to: 15
  6463                           ;hardware.c: 362: IOCPbits.IOCP7 = 0x0;
  6464  0005FA  010F               	movlb	15	; () banked
  6465  0005FC  9F56               	bcf	86,7,b	;volatile
  6466                           
  6467                           ; BSR set to: 15
  6468                           ;hardware.c: 364: if (!shiftAction)
  6469  0005FE  5050               	movf	_shiftAction,w,c
  6470  000600  1051               	iorwf	_shiftAction+1,w,c
  6471  000602  A4D8               	btfss	status,2,c
  6472  000604  D010               	goto	i2l888
  6473                           
  6474                           ; BSR set to: 15
  6475                           ;hardware.c: 365: {
  6476                           ;hardware.c: 366: swX ^= 1;
  6477  000606  0E01               	movlw	1
  6478  000608  1A5C               	xorwf	_swX,f,c
  6479                           
  6480                           ; BSR set to: 15
  6481                           ;hardware.c: 367: bypMode = swX;
  6482  00060A  C05C  F0EC         	movff	_swX,_bypMode
  6483  00060E  C05D  F0ED         	movff	_swX+1,_bypMode+1
  6484                           
  6485                           ;hardware.c: 368: if (swX)
  6486  000612  505C               	movf	_swX,w,c
  6487  000614  105D               	iorwf	_swX+1,w,c
  6488  000616  B4D8               	btfsc	status,2,c
  6489  000618  D003               	goto	i2l889
  6490                           
  6491                           ; BSR set to: 15
  6492                           ;hardware.c: 369: {
  6493                           ;hardware.c: 370: LATE1 = 1;
  6494  00061A  828D               	bsf	3981,1,c	;volatile
  6495                           
  6496                           ;hardware.c: 371: LATH1 = 0;
  6497  00061C  9290               	bcf	3984,1,c	;volatile
  6498                           
  6499                           ;hardware.c: 372: }
  6500  00061E  0012               	return	
  6501  000620                     i2l889:
  6502                           
  6503                           ; BSR set to: 15
  6504                           ;hardware.c: 373: else
  6505                           ;hardware.c: 374: {
  6506                           ;hardware.c: 375: LATE1 = 0;
  6507  000620  928D               	bcf	3981,1,c	;volatile
  6508                           
  6509                           ;hardware.c: 376: LATH1 = 1;
  6510  000622  8290               	bsf	3984,1,c	;volatile
  6511                           
  6512                           ; BSR set to: 15
  6513                           ;hardware.c: 377: }
  6514                           ;hardware.c: 378: }
  6515  000624  0012               	return	
  6516  000626                     i2l888:
  6517                           
  6518                           ; BSR set to: 15
  6519                           ;hardware.c: 379: else
  6520                           ;hardware.c: 380: {
  6521                           ;hardware.c: 381: presetPend = 0;
  6522                           
  6523                           ; BSR set to: 15
  6524  000626  0E00               	movlw	0
  6525  000628  6E3D               	movwf	_presetPend+1,c
  6526  00062A  0E00               	movlw	0
  6527  00062C  6E3C               	movwf	_presetPend,c
  6528                           
  6529                           ;hardware.c: 382: shiftAction = 0;
  6530  00062E  0E00               	movlw	0
  6531  000630  6E51               	movwf	_shiftAction+1,c
  6532  000632  0E00               	movlw	0
  6533  000634  6E50               	movwf	_shiftAction,c
  6534                           
  6535                           ; BSR set to: 15
  6536                           ;hardware.c: 383: preset = targPreset;
  6537  000636  C03E  F0A1         	movff	_targPreset,_preset
  6538  00063A  C03F  F0A2         	movff	_targPreset+1,_preset+1
  6539                           
  6540                           ;hardware.c: 384: pFlash = 0;
  6541  00063E  0E00               	movlw	0
  6542  000640  0100               	movlb	0	; () banked
  6543  000642  6F9A               	movwf	(_pFlash+1)& (0+255),b
  6544  000644  0E00               	movlw	0
  6545  000646  6F99               	movwf	_pFlash& (0+255),b
  6546                           
  6547                           ;hardware.c: 385: pFlashCount = 0;
  6548  000648  0E00               	movlw	0
  6549  00064A  0100               	movlb	0	; () banked
  6550  00064C  6F9C               	movwf	(_pFlashCount+1)& (0+255),b
  6551  00064E  0E00               	movlw	0
  6552  000650  6F9B               	movwf	_pFlashCount& (0+255),b
  6553                           
  6554                           ;hardware.c: 386: savePend = 1;
  6555  000652  0E00               	movlw	0
  6556  000654  0100               	movlb	0	; () banked
  6557  000656  6FA0               	movwf	(_savePend+1)& (0+255),b
  6558  000658  0E01               	movlw	1
  6559  00065A  6F9F               	movwf	_savePend& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;hardware.c: 387: updatePresetLEDs(preset);
  6563  00065C  C0A1  F001         	movff	_preset,updatePresetLEDs@psNum
  6564  000660  C0A2  F002         	movff	_preset+1,updatePresetLEDs@psNum+1
  6565  000664  ECF4  F00B         	call	_updatePresetLEDs	;wreg free
  6566  000668  0012               	return	
  6567  00066A                     __end_of_serviceSwitches:
  6568                           	opt stack 0
  6569                           pclatu	equ	0xFFB
  6570                           pclath	equ	0xFFA
  6571                           tblptru	equ	0xFF8
  6572                           tblptrh	equ	0xFF7
  6573                           tblptrl	equ	0xFF6
  6574                           tablat	equ	0xFF5
  6575                           prodh	equ	0xFF4
  6576                           prodl	equ	0xFF3
  6577                           intcon	equ	0xFF2
  6578                           postinc0	equ	0xFEE
  6579                           fsr0h	equ	0xFEA
  6580                           fsr0l	equ	0xFE9
  6581                           wreg	equ	0xFE8
  6582                           postinc1	equ	0xFE6
  6583                           postdec1	equ	0xFE5
  6584                           fsr1h	equ	0xFE2
  6585                           fsr1l	equ	0xFE1
  6586                           indf2	equ	0xFDF
  6587                           postinc2	equ	0xFDE
  6588                           postdec2	equ	0xFDD
  6589                           fsr2h	equ	0xFDA
  6590                           fsr2l	equ	0xFD9
  6591                           status	equ	0xFD8
  6592                           
  6593 ;; *************** function _processTaps *****************
  6594 ;; Defined at:
  6595 ;;		line 30 in file "hardware.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  tapDiff         2   29[COMRAM] int 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;Total ram usage:        4 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    2
  6616 ;; This function calls:
  6617 ;;		___awdiv
  6618 ;;		___awtoft
  6619 ;;		___ftmul
  6620 ;;		_maxTapCheck
  6621 ;;		i2_absVal
  6622 ;; This function is called by:
  6623 ;;		_serviceSwitches
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text30
  6628  000D04                     __ptext30:
  6629                           	opt stack 0
  6630  000D04                     _processTaps:
  6631                           	opt stack 23
  6632                           
  6633                           ;hardware.c: 32: int tapDiff = 0;
  6634                           
  6635                           ;incstack = 0
  6636  000D04  0E00               	movlw	0
  6637  000D06  6E1F               	movwf	processTaps@tapDiff+1,c
  6638  000D08  0E00               	movlw	0
  6639  000D0A  6E1E               	movwf	processTaps@tapDiff,c
  6640                           
  6641                           ;hardware.c: 34: if (tap < 1)
  6642  000D0C  BE33               	btfsc	_tap+1,7,c
  6643  000D0E  D005               	goto	i2u296_40
  6644  000D10  5033               	movf	_tap+1,w,c
  6645  000D12  E114               	bnz	i2l814
  6646  000D14  0432               	decf	_tap,w,c
  6647  000D16  B0D8               	btfsc	status,0,c
  6648  000D18  D011               	goto	i2l814
  6649  000D1A                     i2u296_40:
  6650                           
  6651                           ;hardware.c: 35: {
  6652                           ;hardware.c: 36: T2CONbits.TMR2ON = 0x1;
  6653  000D1A  84CA               	bsf	4042,2,c	;volatile
  6654                           
  6655                           ;hardware.c: 37: tapAccum = 0;
  6656  000D1C  0E00               	movlw	0
  6657  000D1E  0100               	movlb	0	; () banked
  6658  000D20  6F60               	movwf	_tapAccum& (0+255),b
  6659  000D22  0E00               	movlw	0
  6660  000D24  6F61               	movwf	(_tapAccum+1)& (0+255),b
  6661  000D26  0E00               	movlw	0
  6662  000D28  6F62               	movwf	(_tapAccum+2)& (0+255),b
  6663  000D2A  0E00               	movlw	0
  6664  000D2C  6F63               	movwf	(_tapAccum+3)& (0+255),b
  6665                           
  6666                           ;hardware.c: 38: tapPrev = 0;
  6667  000D2E  0E00               	movlw	0
  6668  000D30  6E35               	movwf	_tapPrev+1,c
  6669  000D32  0E00               	movlw	0
  6670  000D34  6E34               	movwf	_tapPrev,c
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;hardware.c: 39: tap++;
  6674  000D36  4A32               	infsnz	_tap,f,c
  6675  000D38  2A33               	incf	_tap+1,f,c
  6676                           
  6677                           ;hardware.c: 40: }
  6678  000D3A  D076               	goto	i2l815
  6679  000D3C                     i2l814:
  6680                           
  6681                           ;hardware.c: 41: else
  6682                           ;hardware.c: 42: {
  6683                           ;hardware.c: 43: T2CONbits.TMR2ON = 0;
  6684  000D3C  94CA               	bcf	4042,2,c	;volatile
  6685                           
  6686                           ;hardware.c: 44: tapFlash = 1;
  6687  000D3E  0E00               	movlw	0
  6688  000D40  0100               	movlb	0	; () banked
  6689  000D42  6F98               	movwf	(_tapFlash+1)& (0+255),b
  6690  000D44  0E01               	movlw	1
  6691  000D46  6F97               	movwf	_tapFlash& (0+255),b
  6692                           
  6693                           ;hardware.c: 45: tapDispCount = 0;
  6694  000D48  0E00               	movlw	0
  6695  000D4A  6E3B               	movwf	_tapDispCount+1,c
  6696  000D4C  0E00               	movlw	0
  6697  000D4E  6E3A               	movwf	_tapDispCount,c
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;hardware.c: 46: LATE0 = 0x1;
  6701  000D50  808D               	bsf	3981,0,c	;volatile
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;hardware.c: 48: if (tap < 2)
  6705  000D52  BE33               	btfsc	_tap+1,7,c
  6706  000D54  D006               	goto	i2u297_40
  6707  000D56  5033               	movf	_tap+1,w,c
  6708  000D58  E111               	bnz	i2l3491
  6709  000D5A  0E02               	movlw	2
  6710  000D5C  5C32               	subwf	_tap,w,c
  6711  000D5E  B0D8               	btfsc	status,0,c
  6712  000D60  D00D               	goto	i2l816
  6713  000D62                     i2u297_40:
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;hardware.c: 49: {
  6717                           ;hardware.c: 50: currentTapTime = tapTimeCount;
  6718  000D62  C036  F058         	movff	_tapTimeCount,_currentTapTime
  6719  000D66  C037  F059         	movff	_tapTimeCount+1,_currentTapTime+1
  6720                           
  6721                           ;hardware.c: 51: tapPrev = tapTimeCount;
  6722  000D6A  C036  F034         	movff	_tapTimeCount,_tapPrev
  6723  000D6E  C037  F035         	movff	_tapTimeCount+1,_tapPrev+1
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;hardware.c: 52: tap++;
  6727  000D72  4A32               	infsnz	_tap,f,c
  6728  000D74  2A33               	incf	_tap+1,f,c
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;hardware.c: 53: maxTapCheck();
  6732  000D76  EC5A  F00C         	call	_maxTapCheck	;wreg free
  6733                           
  6734                           ;hardware.c: 54: }
  6735  000D7A  D03B               	goto	i2l819
  6736  000D7C                     i2l816:
  6737  000D7C                     i2l3491:
  6738                           
  6739                           ;hardware.c: 55: else
  6740                           ;hardware.c: 56: {
  6741                           ;hardware.c: 57: tapDiff = tapTimeCount - tapPrev;
  6742  000D7C  C034  F01C         	movff	_tapPrev,??_processTaps
  6743  000D80  C035  F01D         	movff	_tapPrev+1,??_processTaps+1
  6744  000D84  1E1C               	comf	??_processTaps,f,c
  6745  000D86  1E1D               	comf	??_processTaps+1,f,c
  6746  000D88  4A1C               	infsnz	??_processTaps,f,c
  6747  000D8A  2A1D               	incf	??_processTaps+1,f,c
  6748  000D8C  5036               	movf	_tapTimeCount,w,c
  6749  000D8E  241C               	addwf	??_processTaps,w,c
  6750  000D90  6E1E               	movwf	processTaps@tapDiff,c
  6751  000D92  5037               	movf	_tapTimeCount+1,w,c
  6752  000D94  201D               	addwfc	??_processTaps+1,w,c
  6753  000D96  6E1F               	movwf	processTaps@tapDiff+1,c
  6754                           
  6755                           ;hardware.c: 58: tapDiff = absVal(tapDiff);
  6756  000D98  C01E  F001         	movff	processTaps@tapDiff,i2absVal@val
  6757  000D9C  C01F  F002         	movff	processTaps@tapDiff+1,i2absVal@val+1
  6758  000DA0  EC68  F00D         	call	i2_absVal	;wreg free
  6759  000DA4  C001  F01E         	movff	?i2_absVal,processTaps@tapDiff
  6760  000DA8  C002  F01F         	movff	?i2_absVal+1,processTaps@tapDiff+1
  6761                           
  6762                           ;hardware.c: 59: if (tapDiff >= 500)
  6763  000DAC  BE1F               	btfsc	processTaps@tapDiff+1,7,c
  6764  000DAE  D00B               	goto	i2l818
  6765  000DB0  0EF4               	movlw	244
  6766  000DB2  5C1E               	subwf	processTaps@tapDiff,w,c
  6767  000DB4  0E01               	movlw	1
  6768  000DB6  581F               	subwfb	processTaps@tapDiff+1,w,c
  6769  000DB8  A0D8               	btfss	status,0,c
  6770  000DBA  D005               	goto	i2l818
  6771                           
  6772                           ;hardware.c: 60: {
  6773                           ;hardware.c: 61: tap = 1;
  6774  000DBC  0E00               	movlw	0
  6775  000DBE  6E33               	movwf	_tap+1,c
  6776  000DC0  0E01               	movlw	1
  6777  000DC2  6E32               	movwf	_tap,c
  6778                           
  6779                           ;hardware.c: 62: }
  6780  000DC4  D016               	goto	i2l819
  6781  000DC6                     i2l818:
  6782                           
  6783                           ;hardware.c: 63: else
  6784                           ;hardware.c: 64: {
  6785                           ;hardware.c: 65: currentTapTime = (tapTimeCount + tapPrev)/2;
  6786  000DC6  5034               	movf	_tapPrev,w,c
  6787  000DC8  2436               	addwf	_tapTimeCount,w,c
  6788  000DCA  6E01               	movwf	___awdiv@dividend,c
  6789  000DCC  5035               	movf	_tapPrev+1,w,c
  6790  000DCE  2037               	addwfc	_tapTimeCount+1,w,c
  6791  000DD0  6E02               	movwf	___awdiv@dividend+1,c
  6792  000DD2  0E00               	movlw	0
  6793  000DD4  6E04               	movwf	___awdiv@divisor+1,c
  6794  000DD6  0E02               	movlw	2
  6795  000DD8  6E03               	movwf	___awdiv@divisor,c
  6796  000DDA  EC72  F00B         	call	___awdiv	;wreg free
  6797  000DDE  C001  F058         	movff	?___awdiv,_currentTapTime
  6798  000DE2  C002  F059         	movff	?___awdiv+1,_currentTapTime+1
  6799                           
  6800                           ;hardware.c: 66: tapPrev = tapTimeCount;
  6801  000DE6  C036  F034         	movff	_tapTimeCount,_tapPrev
  6802  000DEA  C037  F035         	movff	_tapTimeCount+1,_tapPrev+1
  6803                           
  6804                           ;hardware.c: 67: tap++;
  6805  000DEE  4A32               	infsnz	_tap,f,c
  6806  000DF0  2A33               	incf	_tap+1,f,c
  6807  000DF2                     i2l819:
  6808                           
  6809                           ;hardware.c: 68: }
  6810                           ;hardware.c: 69: }
  6811                           ;hardware.c: 70: masterTime.f = currentTapTime*1.024;
  6812  000DF2  C058  F009         	movff	_currentTapTime,___awtoft@c
  6813  000DF6  C059  F00A         	movff	_currentTapTime+1,___awtoft@c+1
  6814  000DFA  EC03  F00D         	call	___awtoft	;wreg free
  6815  000DFE  C009  F00D         	movff	?___awtoft,___ftmul@f1
  6816  000E02  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  6817  000E06  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  6818  000E0A  0E12               	movlw	18
  6819  000E0C  6E10               	movwf	___ftmul@f2,c
  6820  000E0E  0E83               	movlw	131
  6821  000E10  6E11               	movwf	___ftmul@f2+1,c
  6822  000E12  0E3F               	movlw	63
  6823  000E14  6E12               	movwf	___ftmul@f2+2,c
  6824  000E16  ECAF  F007         	call	___ftmul	;wreg free
  6825  000E1A  C00D  F064         	movff	?___ftmul,_masterTime
  6826  000E1E  C00E  F065         	movff	?___ftmul+1,_masterTime+1
  6827  000E22  C00F  F066         	movff	?___ftmul+2,_masterTime+2
  6828                           
  6829                           ;hardware.c: 71: T2CONbits.TMR2ON = 1;
  6830  000E26  84CA               	bsf	4042,2,c	;volatile
  6831  000E28                     i2l815:
  6832                           
  6833                           ;hardware.c: 72: }
  6834                           ;hardware.c: 73: tapTimeCount = 0;
  6835  000E28  0E00               	movlw	0
  6836  000E2A  6E37               	movwf	_tapTimeCount+1,c
  6837  000E2C  0E00               	movlw	0
  6838  000E2E  6E36               	movwf	_tapTimeCount,c
  6839  000E30  0012               	return		;funcret
  6840  000E32                     __end_of_processTaps:
  6841                           	opt stack 0
  6842                           pclatu	equ	0xFFB
  6843                           pclath	equ	0xFFA
  6844                           tblptru	equ	0xFF8
  6845                           tblptrh	equ	0xFF7
  6846                           tblptrl	equ	0xFF6
  6847                           tablat	equ	0xFF5
  6848                           prodh	equ	0xFF4
  6849                           prodl	equ	0xFF3
  6850                           intcon	equ	0xFF2
  6851                           postinc0	equ	0xFEE
  6852                           fsr0h	equ	0xFEA
  6853                           fsr0l	equ	0xFE9
  6854                           wreg	equ	0xFE8
  6855                           postinc1	equ	0xFE6
  6856                           postdec1	equ	0xFE5
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           indf2	equ	0xFDF
  6860                           postinc2	equ	0xFDE
  6861                           postdec2	equ	0xFDD
  6862                           fsr2h	equ	0xFDA
  6863                           fsr2l	equ	0xFD9
  6864                           status	equ	0xFD8
  6865                           
  6866 ;; *************** function i2_absVal *****************
  6867 ;; Defined at:
  6868 ;;		line 175 in file "main.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  val             2    0[COMRAM] int 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  2    0[COMRAM] int 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;Total ram usage:        4 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_processTaps
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text31
  6896  001AD0                     __ptext31:
  6897                           	opt stack 0
  6898  001AD0                     i2_absVal:
  6899                           	opt stack 24
  6900                           
  6901                           ;main.c: 177: if (val < 0)
  6902                           
  6903                           ;incstack = 0
  6904  001AD0  AE02               	btfss	i2absVal@val+1,7,c
  6905  001AD2  D00D               	goto	i2l176
  6906                           
  6907                           ;main.c: 178: return -val;
  6908  001AD4  C001  F003         	movff	i2absVal@val,??i2_absVal
  6909  001AD8  C002  F004         	movff	i2absVal@val+1,??i2_absVal+1
  6910  001ADC  1E03               	comf	??i2_absVal,f,c
  6911  001ADE  1E04               	comf	??i2_absVal+1,f,c
  6912  001AE0  4A03               	infsnz	??i2_absVal,f,c
  6913  001AE2  2A04               	incf	??i2_absVal+1,f,c
  6914  001AE4  C003  F001         	movff	??i2_absVal,?i2_absVal
  6915  001AE8  C004  F002         	movff	??i2_absVal+1,?i2_absVal+1
  6916  001AEC  0012               	return	
  6917  001AEE                     i2l176:
  6918                           
  6919                           ;main.c: 179: else return val;
  6920  001AEE  C001  F001         	movff	i2absVal@val,?i2_absVal
  6921  001AF2  C002  F002         	movff	i2absVal@val+1,?i2_absVal+1
  6922  001AF6  0012               	return	
  6923  001AF8                     __end_ofi2_absVal:
  6924                           	opt stack 0
  6925                           pclatu	equ	0xFFB
  6926                           pclath	equ	0xFFA
  6927                           tblptru	equ	0xFF8
  6928                           tblptrh	equ	0xFF7
  6929                           tblptrl	equ	0xFF6
  6930                           tablat	equ	0xFF5
  6931                           prodh	equ	0xFF4
  6932                           prodl	equ	0xFF3
  6933                           intcon	equ	0xFF2
  6934                           postinc0	equ	0xFEE
  6935                           fsr0h	equ	0xFEA
  6936                           fsr0l	equ	0xFE9
  6937                           wreg	equ	0xFE8
  6938                           postinc1	equ	0xFE6
  6939                           postdec1	equ	0xFE5
  6940                           fsr1h	equ	0xFE2
  6941                           fsr1l	equ	0xFE1
  6942                           indf2	equ	0xFDF
  6943                           postinc2	equ	0xFDE
  6944                           postdec2	equ	0xFDD
  6945                           fsr2h	equ	0xFDA
  6946                           fsr2l	equ	0xFD9
  6947                           status	equ	0xFD8
  6948                           
  6949 ;; *************** function _maxTapCheck *****************
  6950 ;; Defined at:
  6951 ;;		line 15 in file "hardware.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;		None
  6954 ;; Auto vars:     Size  Location     Type
  6955 ;;		None
  6956 ;; Return value:  Size  Location     Type
  6957 ;;                  1    wreg      void 
  6958 ;; Registers used:
  6959 ;;		wreg, status,2, status,0
  6960 ;; Tracked objects:
  6961 ;;		On entry : 0/0
  6962 ;;		On exit  : 0/0
  6963 ;;		Unchanged: 0/0
  6964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;Total ram usage:        0 bytes
  6970 ;; Hardware stack levels used:    1
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_processTaps
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text32
  6979  0018B4                     __ptext32:
  6980                           	opt stack 0
  6981  0018B4                     _maxTapCheck:
  6982                           	opt stack 24
  6983                           
  6984                           ;hardware.c: 17: if (tapTimeCount > 3000)
  6985                           
  6986                           ;incstack = 0
  6987  0018B4  BE37               	btfsc	_tapTimeCount+1,7,c
  6988  0018B6  D00F               	goto	i2l808
  6989  0018B8  0EB9               	movlw	185
  6990  0018BA  5C36               	subwf	_tapTimeCount,w,c
  6991  0018BC  0E0B               	movlw	11
  6992  0018BE  5837               	subwfb	_tapTimeCount+1,w,c
  6993  0018C0  A0D8               	btfss	status,0,c
  6994  0018C2  D009               	goto	i2l808
  6995                           
  6996                           ;hardware.c: 18: {
  6997                           ;hardware.c: 19: tapTimeCount = 0;
  6998  0018C4  0E00               	movlw	0
  6999  0018C6  6E37               	movwf	_tapTimeCount+1,c
  7000  0018C8  0E00               	movlw	0
  7001  0018CA  6E36               	movwf	_tapTimeCount,c
  7002                           
  7003                           ;hardware.c: 20: tap = 0;
  7004  0018CC  0E00               	movlw	0
  7005  0018CE  6E33               	movwf	_tap+1,c
  7006  0018D0  0E00               	movlw	0
  7007  0018D2  6E32               	movwf	_tap,c
  7008                           
  7009                           ;hardware.c: 21: }
  7010  0018D4  0012               	return	
  7011  0018D6                     i2l808:
  7012                           
  7013                           ;hardware.c: 22: else if (tapTimeCount >= 1500)
  7014  0018D6  BE37               	btfsc	_tapTimeCount+1,7,c
  7015  0018D8  0012               	return	
  7016  0018DA  0EDC               	movlw	220
  7017  0018DC  5C36               	subwf	_tapTimeCount,w,c
  7018  0018DE  0E05               	movlw	5
  7019  0018E0  5837               	subwfb	_tapTimeCount+1,w,c
  7020  0018E2  A0D8               	btfss	status,0,c
  7021  0018E4  0012               	return	
  7022                           
  7023                           ;hardware.c: 23: {
  7024                           ;hardware.c: 24: newTempo = 1;
  7025  0018E6  0E00               	movlw	0
  7026  0018E8  0100               	movlb	0	; () banked
  7027  0018EA  6F70               	movwf	(_newTempo+1)& (0+255),b
  7028  0018EC  0E01               	movlw	1
  7029  0018EE  6F6F               	movwf	_newTempo& (0+255),b
  7030                           
  7031                           ;hardware.c: 25: tap = 0;
  7032  0018F0  0E00               	movlw	0
  7033  0018F2  6E33               	movwf	_tap+1,c
  7034  0018F4  0E00               	movlw	0
  7035  0018F6  6E32               	movwf	_tap,c
  7036                           
  7037                           ;hardware.c: 26: currentTapTime = 1500;
  7038  0018F8  0E05               	movlw	5
  7039  0018FA  6E59               	movwf	_currentTapTime+1,c
  7040  0018FC  0EDC               	movlw	220
  7041  0018FE  6E58               	movwf	_currentTapTime,c
  7042                           
  7043                           ; BSR set to: 0
  7044  001900  0012               	return	
  7045  001902                     __end_of_maxTapCheck:
  7046                           	opt stack 0
  7047                           pclatu	equ	0xFFB
  7048                           pclath	equ	0xFFA
  7049                           tblptru	equ	0xFF8
  7050                           tblptrh	equ	0xFF7
  7051                           tblptrl	equ	0xFF6
  7052                           tablat	equ	0xFF5
  7053                           prodh	equ	0xFF4
  7054                           prodl	equ	0xFF3
  7055                           intcon	equ	0xFF2
  7056                           postinc0	equ	0xFEE
  7057                           fsr0h	equ	0xFEA
  7058                           fsr0l	equ	0xFE9
  7059                           wreg	equ	0xFE8
  7060                           postinc1	equ	0xFE6
  7061                           postdec1	equ	0xFE5
  7062                           fsr1h	equ	0xFE2
  7063                           fsr1l	equ	0xFE1
  7064                           indf2	equ	0xFDF
  7065                           postinc2	equ	0xFDE
  7066                           postdec2	equ	0xFDD
  7067                           fsr2h	equ	0xFDA
  7068                           fsr2l	equ	0xFD9
  7069                           status	equ	0xFD8
  7070                           
  7071 ;; *************** function ___ftmul *****************
  7072 ;; Defined at:
  7073 ;;		line 62 in file "/Applications/microchip/xc8/v1.43/sources/common/ftmul.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  f1              3   12[COMRAM] float 
  7076 ;;  f2              3   15[COMRAM] float 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  7079 ;;  sign            1   26[COMRAM] unsigned char 
  7080 ;;  cntr            1   25[COMRAM] unsigned char 
  7081 ;;  exp             1   21[COMRAM] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  3   12[COMRAM] float 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2, status,0, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7091 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7092 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7094 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;Total ram usage:       15 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    1
  7098 ;; This function calls:
  7099 ;;		___ftpack
  7100 ;; This function is called by:
  7101 ;;		_processTaps
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text33
  7106  000F5E                     __ptext33:
  7107                           	opt stack 0
  7108  000F5E                     ___ftmul:
  7109                           	opt stack 23
  7110                           
  7111                           ;incstack = 0
  7112  000F5E  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  7113  000F62  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7114  000F64  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7115  000F66  340E               	rlcf	___ftmul@f1+1,w,c
  7116  000F68  3613               	rlcf	??___ftmul& (0+255),f,c
  7117  000F6A  E301               	bnc	u250_41
  7118  000F6C  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7119  000F6E                     u250_41:
  7120  000F6E  5013               	movf	??___ftmul,w,c
  7121  000F70  6E16               	movwf	___ftmul@exp,c
  7122  000F72  5016               	movf	___ftmul@exp,w,c
  7123  000F74  A4D8               	btfss	status,2,c
  7124  000F76  D007               	goto	i2l1591
  7125  000F78  0E00               	movlw	0
  7126  000F7A  6E0D               	movwf	?___ftmul,c
  7127  000F7C  0E00               	movlw	0
  7128  000F7E  6E0E               	movwf	?___ftmul+1,c
  7129  000F80  0E00               	movlw	0
  7130  000F82  6E0F               	movwf	?___ftmul+2,c
  7131  000F84  0012               	return	
  7132  000F86                     i2l1591:
  7133  000F86  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  7134  000F8A  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7135  000F8C  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7136  000F8E  3411               	rlcf	___ftmul@f2+1,w,c
  7137  000F90  3613               	rlcf	??___ftmul& (0+255),f,c
  7138  000F92  E301               	bnc	u252_41
  7139  000F94  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7140  000F96                     u252_41:
  7141  000F96  5013               	movf	??___ftmul,w,c
  7142  000F98  6E1B               	movwf	___ftmul@sign,c
  7143  000F9A  501B               	movf	___ftmul@sign,w,c
  7144  000F9C  A4D8               	btfss	status,2,c
  7145  000F9E  D007               	goto	i2l1593
  7146  000FA0  0E00               	movlw	0
  7147  000FA2  6E0D               	movwf	?___ftmul,c
  7148  000FA4  0E00               	movlw	0
  7149  000FA6  6E0E               	movwf	?___ftmul+1,c
  7150  000FA8  0E00               	movlw	0
  7151  000FAA  6E0F               	movwf	?___ftmul+2,c
  7152  000FAC  0012               	return	
  7153  000FAE                     i2l1593:
  7154  000FAE  501B               	movf	___ftmul@sign,w,c
  7155  000FB0  0F7B               	addlw	123
  7156  000FB2  2616               	addwf	___ftmul@exp,f,c
  7157  000FB4  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  7158  000FB8  5012               	movf	___ftmul@f2+2,w,c
  7159  000FBA  1A1B               	xorwf	___ftmul@sign,f,c
  7160  000FBC  0E80               	movlw	128
  7161  000FBE  161B               	andwf	___ftmul@sign,f,c
  7162  000FC0  8E0E               	bsf	___ftmul@f1+1,7,c
  7163  000FC2  8E11               	bsf	___ftmul@f2+1,7,c
  7164  000FC4  0EFF               	movlw	255
  7165  000FC6  1610               	andwf	___ftmul@f2,f,c
  7166  000FC8  0EFF               	movlw	255
  7167  000FCA  1611               	andwf	___ftmul@f2+1,f,c
  7168  000FCC  0E00               	movlw	0
  7169  000FCE  1612               	andwf	___ftmul@f2+2,f,c
  7170  000FD0  0E00               	movlw	0
  7171  000FD2  6E17               	movwf	___ftmul@f3_as_product,c
  7172  000FD4  0E00               	movlw	0
  7173  000FD6  6E18               	movwf	___ftmul@f3_as_product+1,c
  7174  000FD8  0E00               	movlw	0
  7175  000FDA  6E19               	movwf	___ftmul@f3_as_product+2,c
  7176  000FDC  0E07               	movlw	7
  7177  000FDE  6E1A               	movwf	___ftmul@cntr,c
  7178  000FE0  A00D               	btfss	___ftmul@f1,0,c
  7179  000FE2  D006               	goto	i2l1595
  7180  000FE4  5010               	movf	___ftmul@f2,w,c
  7181  000FE6  2617               	addwf	___ftmul@f3_as_product,f,c
  7182  000FE8  5011               	movf	___ftmul@f2+1,w,c
  7183  000FEA  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7184  000FEC  5012               	movf	___ftmul@f2+2,w,c
  7185  000FEE  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7186  000FF0                     i2l1595:
  7187  000FF0  90D8               	bcf	status,0,c
  7188  000FF2  320F               	rrcf	___ftmul@f1+2,f,c
  7189  000FF4  320E               	rrcf	___ftmul@f1+1,f,c
  7190  000FF6  320D               	rrcf	___ftmul@f1,f,c
  7191  000FF8  90D8               	bcf	status,0,c
  7192  000FFA  3610               	rlcf	___ftmul@f2,f,c
  7193  000FFC  3611               	rlcf	___ftmul@f2+1,f,c
  7194  000FFE  3612               	rlcf	___ftmul@f2+2,f,c
  7195  001000  2E1A               	decfsz	___ftmul@cntr,f,c
  7196  001002  D7EE               	goto	i2l1594
  7197  001004  0E09               	movlw	9
  7198  001006  6E1A               	movwf	___ftmul@cntr,c
  7199  001008  A00D               	btfss	___ftmul@f1,0,c
  7200  00100A  D006               	goto	i2l1598
  7201  00100C  5010               	movf	___ftmul@f2,w,c
  7202  00100E  2617               	addwf	___ftmul@f3_as_product,f,c
  7203  001010  5011               	movf	___ftmul@f2+1,w,c
  7204  001012  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7205  001014  5012               	movf	___ftmul@f2+2,w,c
  7206  001016  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7207  001018                     i2l1598:
  7208  001018  90D8               	bcf	status,0,c
  7209  00101A  320F               	rrcf	___ftmul@f1+2,f,c
  7210  00101C  320E               	rrcf	___ftmul@f1+1,f,c
  7211  00101E  320D               	rrcf	___ftmul@f1,f,c
  7212  001020  90D8               	bcf	status,0,c
  7213  001022  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  7214  001024  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  7215  001026  3217               	rrcf	___ftmul@f3_as_product,f,c
  7216  001028  2E1A               	decfsz	___ftmul@cntr,f,c
  7217  00102A  D7EE               	goto	i2l1597
  7218  00102C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7219  001030  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7220  001034  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7221  001038  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  7222  00103C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  7223  001040  EC88  F008         	call	___ftpack	;wreg free
  7224  001044  C001  F00D         	movff	?___ftpack,?___ftmul
  7225  001048  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  7226  00104C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  7227  001050  0012               	return	
  7228  001052                     __end_of___ftmul:
  7229                           	opt stack 0
  7230                           pclatu	equ	0xFFB
  7231                           pclath	equ	0xFFA
  7232                           tblptru	equ	0xFF8
  7233                           tblptrh	equ	0xFF7
  7234                           tblptrl	equ	0xFF6
  7235                           tablat	equ	0xFF5
  7236                           prodh	equ	0xFF4
  7237                           prodl	equ	0xFF3
  7238                           intcon	equ	0xFF2
  7239                           postinc0	equ	0xFEE
  7240                           fsr0h	equ	0xFEA
  7241                           fsr0l	equ	0xFE9
  7242                           wreg	equ	0xFE8
  7243                           postinc1	equ	0xFE6
  7244                           postdec1	equ	0xFE5
  7245                           fsr1h	equ	0xFE2
  7246                           fsr1l	equ	0xFE1
  7247                           indf2	equ	0xFDF
  7248                           postinc2	equ	0xFDE
  7249                           postdec2	equ	0xFDD
  7250                           fsr2h	equ	0xFDA
  7251                           fsr2l	equ	0xFD9
  7252                           status	equ	0xFD8
  7253                           
  7254 ;; *************** function ___awtoft *****************
  7255 ;; Defined at:
  7256 ;;		line 32 in file "/Applications/microchip/xc8/v1.43/sources/common/awtoft.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  c               2    8[COMRAM] int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  sign            1   11[COMRAM] unsigned char 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  3    8[COMRAM] float 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;Total ram usage:        4 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    1
  7277 ;; This function calls:
  7278 ;;		___ftpack
  7279 ;; This function is called by:
  7280 ;;		_processTaps
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text34
  7285  001A06                     __ptext34:
  7286                           	opt stack 0
  7287  001A06                     ___awtoft:
  7288                           	opt stack 23
  7289                           
  7290                           ;incstack = 0
  7291  001A06  0E00               	movlw	0
  7292  001A08  6E0C               	movwf	___awtoft@sign,c
  7293  001A0A  AE0A               	btfss	___awtoft@c+1,7,c
  7294  001A0C  D006               	goto	i2l1493
  7295  001A0E  6C09               	negf	___awtoft@c,c
  7296  001A10  1E0A               	comf	___awtoft@c+1,f,c
  7297  001A12  B0D8               	btfsc	status,0,c
  7298  001A14  2A0A               	incf	___awtoft@c+1,f,c
  7299  001A16  0E01               	movlw	1
  7300  001A18  6E0C               	movwf	___awtoft@sign,c
  7301  001A1A                     i2l1493:
  7302  001A1A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  7303  001A1E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  7304  001A22  6A03               	clrf	___ftpack@arg+2,c
  7305  001A24  0E8E               	movlw	142
  7306  001A26  6E04               	movwf	___ftpack@exp,c
  7307  001A28  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  7308  001A2C  EC88  F008         	call	___ftpack	;wreg free
  7309  001A30  C001  F009         	movff	?___ftpack,?___awtoft
  7310  001A34  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  7311  001A38  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  7312  001A3C  0012               	return	
  7313  001A3E                     __end_of___awtoft:
  7314                           	opt stack 0
  7315                           pclatu	equ	0xFFB
  7316                           pclath	equ	0xFFA
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           postinc0	equ	0xFEE
  7325                           fsr0h	equ	0xFEA
  7326                           fsr0l	equ	0xFE9
  7327                           wreg	equ	0xFE8
  7328                           postinc1	equ	0xFE6
  7329                           postdec1	equ	0xFE5
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           postdec2	equ	0xFDD
  7335                           fsr2h	equ	0xFDA
  7336                           fsr2l	equ	0xFD9
  7337                           status	equ	0xFD8
  7338                           
  7339 ;; *************** function ___ftpack *****************
  7340 ;; Defined at:
  7341 ;;		line 62 in file "/Applications/microchip/xc8/v1.43/sources/common/float.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  arg             3    0[COMRAM] unsigned um
  7344 ;;  exp             1    3[COMRAM] unsigned char 
  7345 ;;  sign            1    4[COMRAM] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  3    0[COMRAM] float 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7357 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;Total ram usage:        8 bytes
  7362 ;; Hardware stack levels used:    1
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		___awtoft
  7367 ;;		___ftmul
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text35
  7372  001110                     __ptext35:
  7373                           	opt stack 0
  7374  001110                     ___ftpack:
  7375                           	opt stack 23
  7376                           
  7377                           ;incstack = 0
  7378  001110  5004               	movf	___ftpack@exp,w,c
  7379  001112  B4D8               	btfsc	status,2,c
  7380  001114  D005               	goto	i2u241_40
  7381  001116  5001               	movf	___ftpack@arg,w,c
  7382  001118  1002               	iorwf	___ftpack@arg+1,w,c
  7383  00111A  1003               	iorwf	___ftpack@arg+2,w,c
  7384  00111C  A4D8               	btfss	status,2,c
  7385  00111E  D00C               	goto	i2l1512
  7386  001120                     i2u241_40:
  7387  001120  0E00               	movlw	0
  7388  001122  6E01               	movwf	?___ftpack,c
  7389  001124  0E00               	movlw	0
  7390  001126  6E02               	movwf	?___ftpack+1,c
  7391  001128  0E00               	movlw	0
  7392  00112A  6E03               	movwf	?___ftpack+2,c
  7393  00112C  0012               	return	
  7394  00112E  2A04               	incf	___ftpack@exp,f,c
  7395  001130  90D8               	bcf	status,0,c
  7396  001132  3203               	rrcf	___ftpack@arg+2,f,c
  7397  001134  3202               	rrcf	___ftpack@arg+1,f,c
  7398  001136  3201               	rrcf	___ftpack@arg,f,c
  7399  001138                     i2l1512:
  7400  001138  0E00               	movlw	0
  7401  00113A  1401               	andwf	___ftpack@arg,w,c
  7402  00113C  6E06               	movwf	??___ftpack& (0+255),c
  7403  00113E  0E00               	movlw	0
  7404  001140  1402               	andwf	___ftpack@arg+1,w,c
  7405  001142  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7406  001144  0EFE               	movlw	254
  7407  001146  1403               	andwf	___ftpack@arg+2,w,c
  7408  001148  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7409  00114A  5006               	movf	??___ftpack,w,c
  7410  00114C  1007               	iorwf	??___ftpack+1,w,c
  7411  00114E  1008               	iorwf	??___ftpack+2,w,c
  7412  001150  B4D8               	btfsc	status,2,c
  7413  001152  D00C               	goto	i2l1515
  7414  001154  D7EC               	goto	i2l1513
  7415  001156  2A04               	incf	___ftpack@exp,f,c
  7416  001158  0E01               	movlw	1
  7417  00115A  2601               	addwf	___ftpack@arg,f,c
  7418  00115C  0E00               	movlw	0
  7419  00115E  2202               	addwfc	___ftpack@arg+1,f,c
  7420  001160  0E00               	movlw	0
  7421  001162  2203               	addwfc	___ftpack@arg+2,f,c
  7422  001164  90D8               	bcf	status,0,c
  7423  001166  3203               	rrcf	___ftpack@arg+2,f,c
  7424  001168  3202               	rrcf	___ftpack@arg+1,f,c
  7425  00116A  3201               	rrcf	___ftpack@arg,f,c
  7426  00116C                     i2l1515:
  7427  00116C  0E00               	movlw	0
  7428  00116E  1401               	andwf	___ftpack@arg,w,c
  7429  001170  6E06               	movwf	??___ftpack& (0+255),c
  7430  001172  0E00               	movlw	0
  7431  001174  1402               	andwf	___ftpack@arg+1,w,c
  7432  001176  6E07               	movwf	(??___ftpack+1)& (0+255),c
  7433  001178  0EFF               	movlw	255
  7434  00117A  1403               	andwf	___ftpack@arg+2,w,c
  7435  00117C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  7436  00117E  5006               	movf	??___ftpack,w,c
  7437  001180  1007               	iorwf	??___ftpack+1,w,c
  7438  001182  1008               	iorwf	??___ftpack+2,w,c
  7439  001184  B4D8               	btfsc	status,2,c
  7440  001186  D006               	goto	i2l1518
  7441  001188  D7E6               	goto	i2l1516
  7442  00118A  0604               	decf	___ftpack@exp,f,c
  7443  00118C  90D8               	bcf	status,0,c
  7444  00118E  3601               	rlcf	___ftpack@arg,f,c
  7445  001190  3602               	rlcf	___ftpack@arg+1,f,c
  7446  001192  3603               	rlcf	___ftpack@arg+2,f,c
  7447  001194                     i2l1518:
  7448  001194  BE02               	btfsc	___ftpack@arg+1,7,c
  7449  001196  D003               	goto	i2u245_40
  7450  001198  0E02               	movlw	2
  7451  00119A  6004               	cpfslt	___ftpack@exp,c
  7452  00119C  D7F6               	goto	i2l1519
  7453  00119E                     i2u245_40:
  7454  00119E  A004               	btfss	___ftpack@exp,0,c
  7455  0011A0  9E02               	bcf	___ftpack@arg+1,7,c
  7456  0011A2  90D8               	bcf	status,0,c
  7457  0011A4  3204               	rrcf	___ftpack@exp,f,c
  7458  0011A6  5004               	movf	___ftpack@exp,w,c
  7459  0011A8  1203               	iorwf	___ftpack@arg+2,f,c
  7460  0011AA  5005               	movf	___ftpack@sign,w,c
  7461  0011AC  A4D8               	btfss	status,2,c
  7462  0011AE  8E03               	bsf	___ftpack@arg+2,7,c
  7463  0011B0  C001  F001         	movff	___ftpack@arg,?___ftpack
  7464  0011B4  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  7465  0011B8  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  7466  0011BC  0012               	return	
  7467  0011BE                     __end_of___ftpack:
  7468                           	opt stack 0
  7469                           pclatu	equ	0xFFB
  7470                           pclath	equ	0xFFA
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           intcon	equ	0xFF2
  7478                           postinc0	equ	0xFEE
  7479                           fsr0h	equ	0xFEA
  7480                           fsr0l	equ	0xFE9
  7481                           wreg	equ	0xFE8
  7482                           postinc1	equ	0xFE6
  7483                           postdec1	equ	0xFE5
  7484                           fsr1h	equ	0xFE2
  7485                           fsr1l	equ	0xFE1
  7486                           indf2	equ	0xFDF
  7487                           postinc2	equ	0xFDE
  7488                           postdec2	equ	0xFDD
  7489                           fsr2h	equ	0xFDA
  7490                           fsr2l	equ	0xFD9
  7491                           status	equ	0xFD8
  7492                           
  7493 ;; *************** function ___awdiv *****************
  7494 ;; Defined at:
  7495 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/awdiv.c"
  7496 ;; Parameters:    Size  Location     Type
  7497 ;;  dividend        2    0[COMRAM] int 
  7498 ;;  divisor         2    2[COMRAM] int 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  quotient        2    6[COMRAM] int 
  7501 ;;  sign            1    5[COMRAM] unsigned char 
  7502 ;;  counter         1    4[COMRAM] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  2    0[COMRAM] int 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;Total ram usage:        8 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; This function calls:
  7519 ;;		Nothing
  7520 ;; This function is called by:
  7521 ;;		_processTaps
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text36
  7526  0016E4                     __ptext36:
  7527                           	opt stack 0
  7528  0016E4                     ___awdiv:
  7529                           	opt stack 24
  7530                           
  7531                           ;incstack = 0
  7532  0016E4  0E00               	movlw	0
  7533  0016E6  6E06               	movwf	___awdiv@sign,c
  7534  0016E8  AE04               	btfss	___awdiv@divisor+1,7,c
  7535  0016EA  D006               	goto	i2l1465
  7536  0016EC  6C03               	negf	___awdiv@divisor,c
  7537  0016EE  1E04               	comf	___awdiv@divisor+1,f,c
  7538  0016F0  B0D8               	btfsc	status,0,c
  7539  0016F2  2A04               	incf	___awdiv@divisor+1,f,c
  7540  0016F4  0E01               	movlw	1
  7541  0016F6  6E06               	movwf	___awdiv@sign,c
  7542  0016F8                     i2l1465:
  7543  0016F8  AE02               	btfss	___awdiv@dividend+1,7,c
  7544  0016FA  D006               	goto	i2l1466
  7545  0016FC  6C01               	negf	___awdiv@dividend,c
  7546  0016FE  1E02               	comf	___awdiv@dividend+1,f,c
  7547  001700  B0D8               	btfsc	status,0,c
  7548  001702  2A02               	incf	___awdiv@dividend+1,f,c
  7549  001704  0E01               	movlw	1
  7550  001706  1A06               	xorwf	___awdiv@sign,f,c
  7551  001708                     i2l1466:
  7552  001708  0E00               	movlw	0
  7553  00170A  6E08               	movwf	___awdiv@quotient+1,c
  7554  00170C  0E00               	movlw	0
  7555  00170E  6E07               	movwf	___awdiv@quotient,c
  7556  001710  5003               	movf	___awdiv@divisor,w,c
  7557  001712  1004               	iorwf	___awdiv@divisor+1,w,c
  7558  001714  B4D8               	btfsc	status,2,c
  7559  001716  D01C               	goto	i2l1473
  7560  001718  0E01               	movlw	1
  7561  00171A  6E05               	movwf	___awdiv@counter,c
  7562  00171C  D004               	goto	i2l1468
  7563  00171E  90D8               	bcf	status,0,c
  7564  001720  3603               	rlcf	___awdiv@divisor,f,c
  7565  001722  3604               	rlcf	___awdiv@divisor+1,f,c
  7566  001724  2A05               	incf	___awdiv@counter,f,c
  7567  001726                     i2l1468:
  7568  001726  AE04               	btfss	___awdiv@divisor+1,7,c
  7569  001728  D7FA               	goto	i2l1469
  7570  00172A                     i2u259_40:
  7571  00172A  90D8               	bcf	status,0,c
  7572  00172C  3607               	rlcf	___awdiv@quotient,f,c
  7573  00172E  3608               	rlcf	___awdiv@quotient+1,f,c
  7574  001730  5003               	movf	___awdiv@divisor,w,c
  7575  001732  5C01               	subwf	___awdiv@dividend,w,c
  7576  001734  5004               	movf	___awdiv@divisor+1,w,c
  7577  001736  5802               	subwfb	___awdiv@dividend+1,w,c
  7578  001738  A0D8               	btfss	status,0,c
  7579  00173A  D005               	goto	i2l1472
  7580  00173C  5003               	movf	___awdiv@divisor,w,c
  7581  00173E  5E01               	subwf	___awdiv@dividend,f,c
  7582  001740  5004               	movf	___awdiv@divisor+1,w,c
  7583  001742  5A02               	subwfb	___awdiv@dividend+1,f,c
  7584  001744  8007               	bsf	___awdiv@quotient,0,c
  7585  001746                     i2l1472:
  7586  001746  90D8               	bcf	status,0,c
  7587  001748  3204               	rrcf	___awdiv@divisor+1,f,c
  7588  00174A  3203               	rrcf	___awdiv@divisor,f,c
  7589  00174C  2E05               	decfsz	___awdiv@counter,f,c
  7590  00174E  D7ED               	goto	i2u259_40
  7591  001750                     i2l1473:
  7592  001750  5006               	movf	___awdiv@sign,w,c
  7593  001752  B4D8               	btfsc	status,2,c
  7594  001754  D004               	goto	i2l1474
  7595  001756  6C07               	negf	___awdiv@quotient,c
  7596  001758  1E08               	comf	___awdiv@quotient+1,f,c
  7597  00175A  B0D8               	btfsc	status,0,c
  7598  00175C  2A08               	incf	___awdiv@quotient+1,f,c
  7599  00175E                     i2l1474:
  7600  00175E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7601  001762  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7602  001766  0012               	return	
  7603  001768                     __end_of___awdiv:
  7604                           	opt stack 0
  7605                           pclatu	equ	0xFFB
  7606                           pclath	equ	0xFFA
  7607                           tblptru	equ	0xFF8
  7608                           tblptrh	equ	0xFF7
  7609                           tblptrl	equ	0xFF6
  7610                           tablat	equ	0xFF5
  7611                           prodh	equ	0xFF4
  7612                           prodl	equ	0xFF3
  7613                           intcon	equ	0xFF2
  7614                           postinc0	equ	0xFEE
  7615                           fsr0h	equ	0xFEA
  7616                           fsr0l	equ	0xFE9
  7617                           wreg	equ	0xFE8
  7618                           postinc1	equ	0xFE6
  7619                           postdec1	equ	0xFE5
  7620                           fsr1h	equ	0xFE2
  7621                           fsr1l	equ	0xFE1
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _sendParam *****************
  7630 ;; Defined at:
  7631 ;;		line 261 in file "serial.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  n               2    2[COMRAM] int 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;Total ram usage:        4 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_highPriorityISR
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text37
  7659  0012FC                     __ptext37:
  7660                           	opt stack 0
  7661  0012FC                     _sendParam:
  7662                           	opt stack 26
  7663                           
  7664                           ;serial.c: 263: int n = 0;
  7665                           
  7666                           ;incstack = 0
  7667  0012FC  0E00               	movlw	0
  7668  0012FE  6E04               	movwf	sendParam@n+1,c
  7669  001300  0E00               	movlw	0
  7670  001302  6E03               	movwf	sendParam@n,c
  7671                           
  7672                           ;serial.c: 265: dataTarget = SSP2BUF;
  7673  001304  CF03 F087          	movff	3843,_dataTarget	;volatile
  7674  001308  0100               	movlb	0	; () banked
  7675  00130A  6B88               	clrf	(_dataTarget+1)& (0+255),b
  7676                           
  7677                           ;serial.c: 267: for (n = 0; n < 15; n++)
  7678  00130C  0E00               	movlw	0
  7679  00130E  6E04               	movwf	sendParam@n+1,c
  7680  001310  0E00               	movlw	0
  7681  001312  6E03               	movwf	sendParam@n,c
  7682                           
  7683                           ; BSR set to: 0
  7684  001314  BE04               	btfsc	sendParam@n+1,7,c
  7685  001316  D003               	goto	i2l1292
  7686  001318  5004               	movf	sendParam@n+1,w,c
  7687  00131A  E135               	bnz	i2l1293
  7688  00131C  D030               	goto	L1
  7689  00131E                     i2l1292:
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;serial.c: 268: {
  7693                           ;serial.c: 269: if (dataTarget == paramAddress[n])
  7694                           
  7695                           ; BSR set to: 0
  7696  00131E  90D8               	bcf	status,0,c
  7697  001320  3403               	rlcf	sendParam@n,w,c
  7698  001322  6ED9               	movwf	fsr2l,c
  7699  001324  3404               	rlcf	sendParam@n+1,w,c
  7700  001326  6EDA               	movwf	fsr2h,c
  7701  001328  0E90               	movlw	low _paramAddress
  7702  00132A  26D9               	addwf	fsr2l,f,c
  7703  00132C  0E01               	movlw	high _paramAddress
  7704  00132E  22DA               	addwfc	fsr2h,f,c
  7705  001330  0100               	movlb	0	; () banked
  7706  001332  5187               	movf	_dataTarget& (0+255),w,b
  7707  001334  18DE               	xorwf	postinc2,w,c
  7708  001336  E11D               	bnz	i2l3589
  7709  001338  0100               	movlb	0	; () banked
  7710  00133A  5188               	movf	(_dataTarget+1)& (0+255),w,b
  7711  00133C  18DE               	xorwf	postinc2,w,c
  7712  00133E  A4D8               	btfss	status,2,c
  7713  001340  D018               	goto	i2l1294
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;serial.c: 270: {
  7717                           ;serial.c: 271: if (n == 15)
  7718  001342  0E0F               	movlw	15
  7719  001344  1803               	xorwf	sendParam@n,w,c
  7720  001346  1004               	iorwf	sendParam@n+1,w,c
  7721  001348  A4D8               	btfss	status,2,c
  7722  00134A  D005               	goto	i2l1295
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;serial.c: 272: {
  7726                           ;serial.c: 273: dataPtr = setupComplete;
  7727  00134C  C069  F085         	movff	_setupComplete,_dataPtr
  7728  001350  C06A  F086         	movff	_setupComplete+1,_dataPtr+1
  7729                           
  7730                           ;serial.c: 274: }
  7731  001354  D018               	goto	i2u316_40
  7732  001356                     i2l1295:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;serial.c: 275: else dataPtr = parameter[n];
  7736                           
  7737                           ; BSR set to: 0
  7738  001356  90D8               	bcf	status,0,c
  7739  001358  3403               	rlcf	sendParam@n,w,c
  7740  00135A  6ED9               	movwf	fsr2l,c
  7741  00135C  3404               	rlcf	sendParam@n+1,w,c
  7742  00135E  6EDA               	movwf	fsr2h,c
  7743  001360  0EA7               	movlw	low _parameter
  7744  001362  26D9               	addwf	fsr2l,f,c
  7745  001364  0E00               	movlw	high _parameter
  7746  001366  22DA               	addwfc	fsr2h,f,c
  7747  001368  CFDE F085          	movff	postinc2,_dataPtr
  7748  00136C  CFDD F086          	movff	postdec2,_dataPtr+1
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;serial.c: 276: break;
  7752  001370  D00A               	goto	i2u316_40
  7753  001372                     i2l1294:
  7754  001372                     i2l3589:
  7755                           
  7756                           ; BSR set to: 0
  7757  001372  4A03               	infsnz	sendParam@n,f,c
  7758  001374  2A04               	incf	sendParam@n+1,f,c
  7759                           
  7760                           ; BSR set to: 0
  7761  001376  BE04               	btfsc	sendParam@n+1,7,c
  7762  001378  D7D2               	goto	i2l1292
  7763  00137A  5004               	movf	sendParam@n+1,w,c
  7764  00137C  E104               	bnz	i2u316_40
  7765  00137E                     L1:
  7766  00137E  0E0F               	movlw	15
  7767  001380  5C03               	subwf	sendParam@n,w,c
  7768  001382  A0D8               	btfss	status,0,c
  7769  001384  D7CC               	goto	i2l1292
  7770  001386                     i2u316_40:
  7771  001386                     i2l1293:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;serial.c: 277: }
  7775                           ;serial.c: 278: }
  7776                           ;serial.c: 280: SSP2BUF = dataPtr;
  7777  001386  C085  FF03         	movff	_dataPtr,3843	;volatile
  7778                           
  7779                           ;serial.c: 281: SSP2CON1bits.CKP = 0x1;
  7780  00138A  010F               	movlb	15	; () banked
  7781  00138C  8919               	bsf	25,4,b	;volatile
  7782                           
  7783                           ;serial.c: 282: PIR2bits.SSP2IF = 0x0;
  7784  00138E  9CA1               	bcf	4001,6,c	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787  001390  0012               	return		;funcret
  7788  001392                     __end_of_sendParam:
  7789                           	opt stack 0
  7790                           pclatu	equ	0xFFB
  7791                           pclath	equ	0xFFA
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           postinc0	equ	0xFEE
  7800                           fsr0h	equ	0xFEA
  7801                           fsr0l	equ	0xFE9
  7802                           wreg	equ	0xFE8
  7803                           postinc1	equ	0xFE6
  7804                           postdec1	equ	0xFE5
  7805                           fsr1h	equ	0xFE2
  7806                           fsr1l	equ	0xFE1
  7807                           indf2	equ	0xFDF
  7808                           postinc2	equ	0xFDE
  7809                           postdec2	equ	0xFDD
  7810                           fsr2h	equ	0xFDA
  7811                           fsr2l	equ	0xFD9
  7812                           status	equ	0xFD8
  7813                           
  7814 ;; *************** function _flashLED *****************
  7815 ;; Defined at:
  7816 ;;		line 107 in file "hardware.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;Total ram usage:        2 bytes
  7835 ;; Hardware stack levels used:    1
  7836 ;; Hardware stack levels required when called:    1
  7837 ;; This function calls:
  7838 ;;		_updateLineLEDs
  7839 ;;		_updatePresetLEDs
  7840 ;;		i2___wmul
  7841 ;; This function is called by:
  7842 ;;		_highPriorityISR
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           	psect	text38
  7847  000A68                     __ptext38:
  7848                           	opt stack 0
  7849  000A68                     _flashLED:
  7850                           	opt stack 25
  7851                           
  7852                           ;hardware.c: 109: if (presetPend)
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;incstack = 0
  7856  000A68  503C               	movf	_presetPend,w,c
  7857  000A6A  103D               	iorwf	_presetPend+1,w,c
  7858  000A6C  B4D8               	btfsc	status,2,c
  7859  000A6E  D029               	goto	i2l831
  7860                           
  7861                           ;hardware.c: 110: {
  7862                           ;hardware.c: 111: pFlashCount++;
  7863  000A70  0100               	movlb	0	; () banked
  7864  000A72  4B9B               	infsnz	_pFlashCount& (0+255),f,b
  7865  000A74  2B9C               	incf	(_pFlashCount+1)& (0+255),f,b
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;hardware.c: 112: if (pFlashCount > 150)
  7869  000A76  0100               	movlb	0	; () banked
  7870  000A78  BF9C               	btfsc	(_pFlashCount+1)& (0+255),7,b
  7871  000A7A  D023               	goto	i2l831
  7872  000A7C  0100               	movlb	0	; () banked
  7873  000A7E  519C               	movf	(_pFlashCount+1)& (0+255),w,b
  7874  000A80  E105               	bnz	i2u321_40
  7875  000A82  0E97               	movlw	151
  7876  000A84  0100               	movlb	0	; () banked
  7877  000A86  5D9B               	subwf	_pFlashCount& (0+255),w,b
  7878  000A88  A0D8               	btfss	status,0,c
  7879  000A8A  D01B               	goto	i2l831
  7880  000A8C                     i2u321_40:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;hardware.c: 113: {
  7884                           ;hardware.c: 114: if (pFlash)
  7885  000A8C  0100               	movlb	0	; () banked
  7886  000A8E  5199               	movf	_pFlash& (0+255),w,b
  7887  000A90  0100               	movlb	0	; () banked
  7888  000A92  119A               	iorwf	(_pFlash+1)& (0+255),w,b
  7889  000A94  B4D8               	btfsc	status,2,c
  7890  000A96  D007               	goto	i2l832
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;hardware.c: 115: {
  7894                           ;hardware.c: 116: updatePresetLEDs(targPreset);
  7895  000A98  C03E  F001         	movff	_targPreset,updatePresetLEDs@psNum
  7896  000A9C  C03F  F002         	movff	_targPreset+1,updatePresetLEDs@psNum+1
  7897  000AA0  ECF4  F00B         	call	_updatePresetLEDs	;wreg free
  7898                           
  7899                           ;hardware.c: 117: }
  7900  000AA4  D006               	goto	i2l833
  7901  000AA6                     i2l832:
  7902                           
  7903                           ;hardware.c: 118: else
  7904                           ;hardware.c: 119: {
  7905                           ;hardware.c: 120: updatePresetLEDs(0);
  7906  000AA6  0E00               	movlw	0
  7907  000AA8  6E02               	movwf	updatePresetLEDs@psNum+1,c
  7908  000AAA  0E00               	movlw	0
  7909  000AAC  6E01               	movwf	updatePresetLEDs@psNum,c
  7910  000AAE  ECF4  F00B         	call	_updatePresetLEDs	;wreg free
  7911  000AB2                     i2l833:
  7912                           
  7913                           ;hardware.c: 121: }
  7914                           ;hardware.c: 122: pFlash ^= 1;
  7915  000AB2  0E01               	movlw	1
  7916  000AB4  0100               	movlb	0	; () banked
  7917  000AB6  1B99               	xorwf	_pFlash& (0+255),f,b
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;hardware.c: 123: pFlashCount = 0;
  7921  000AB8  0E00               	movlw	0
  7922  000ABA  0100               	movlb	0	; () banked
  7923  000ABC  6F9C               	movwf	(_pFlashCount+1)& (0+255),b
  7924  000ABE  0E00               	movlw	0
  7925  000AC0  6F9B               	movwf	_pFlashCount& (0+255),b
  7926  000AC2                     i2l831:
  7927                           
  7928                           ;hardware.c: 124: }
  7929                           ;hardware.c: 125: }
  7930                           ;hardware.c: 126: if ((armA + armB + armC) > 0)
  7931                           
  7932                           ; BSR set to: 0
  7933                           
  7934                           ; BSR set to: 0
  7935  000AC2  0100               	movlb	0	; () banked
  7936  000AC4  518D               	movf	_armB& (0+255),w,b
  7937  000AC6  0100               	movlb	0	; () banked
  7938  000AC8  258F               	addwf	_armA& (0+255),w,b
  7939  000ACA  6E0D               	movwf	??_flashLED& (0+255),c
  7940  000ACC  0100               	movlb	0	; () banked
  7941  000ACE  518E               	movf	(_armB+1)& (0+255),w,b
  7942  000AD0  0100               	movlb	0	; () banked
  7943  000AD2  2190               	addwfc	(_armA+1)& (0+255),w,b
  7944  000AD4  6E0E               	movwf	(??_flashLED+1)& (0+255),c
  7945  000AD6  0100               	movlb	0	; () banked
  7946  000AD8  518B               	movf	_armC& (0+255),w,b
  7947  000ADA  260D               	addwf	??_flashLED,f,c
  7948  000ADC  0100               	movlb	0	; () banked
  7949  000ADE  518C               	movf	(_armC+1)& (0+255),w,b
  7950  000AE0  220E               	addwfc	??_flashLED+1,f,c
  7951  000AE2  BE0E               	btfsc	??_flashLED+1,7,c
  7952  000AE4  0012               	return	
  7953  000AE6  500E               	movf	??_flashLED+1,w,c
  7954  000AE8  E103               	bnz	i2u323_40
  7955  000AEA  040D               	decf	??_flashLED,w,c
  7956  000AEC  A0D8               	btfss	status,0,c
  7957  000AEE  0012               	return	
  7958  000AF0                     i2u323_40:
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;hardware.c: 127: {
  7962                           ;hardware.c: 128: armFlashCount++;
  7963  000AF0  0100               	movlb	0	; () banked
  7964  000AF2  4B95               	infsnz	_armFlashCount& (0+255),f,b
  7965  000AF4  2B96               	incf	(_armFlashCount+1)& (0+255),f,b
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;hardware.c: 129: if (armFlashCount > 500)
  7969  000AF6  0100               	movlb	0	; () banked
  7970  000AF8  BF96               	btfsc	(_armFlashCount+1)& (0+255),7,b
  7971  000AFA  0012               	return	
  7972  000AFC  0EF5               	movlw	245
  7973  000AFE  0100               	movlb	0	; () banked
  7974  000B00  5D95               	subwf	_armFlashCount& (0+255),w,b
  7975  000B02  0E01               	movlw	1
  7976  000B04  0100               	movlb	0	; () banked
  7977  000B06  5996               	subwfb	(_armFlashCount+1)& (0+255),w,b
  7978  000B08  A0D8               	btfss	status,0,c
  7979  000B0A  0012               	return	
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;hardware.c: 130: {
  7983                           ;hardware.c: 131: armFlashCount = 0;
  7984  000B0C  0E00               	movlw	0
  7985  000B0E  0100               	movlb	0	; () banked
  7986  000B10  6F96               	movwf	(_armFlashCount+1)& (0+255),b
  7987  000B12  0E00               	movlw	0
  7988  000B14  6F95               	movwf	_armFlashCount& (0+255),b
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;hardware.c: 132: if (armFlashToggle)
  7992  000B16  0100               	movlb	0	; () banked
  7993  000B18  5191               	movf	_armFlashToggle& (0+255),w,b
  7994  000B1A  0100               	movlb	0	; () banked
  7995  000B1C  1192               	iorwf	(_armFlashToggle+1)& (0+255),w,b
  7996  000B1E  B4D8               	btfsc	status,2,c
  7997  000B20  D00F               	goto	i2l836
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;hardware.c: 133: {
  8001                           ;hardware.c: 134: updateLineLEDs(intA, intB, intC);
  8002  000B22  C056  F007         	movff	_intA,updateLineLEDs@lineA
  8003  000B26  C057  F008         	movff	_intA+1,updateLineLEDs@lineA+1
  8004  000B2A  C054  F009         	movff	_intB,updateLineLEDs@lineB
  8005  000B2E  C055  F00A         	movff	_intB+1,updateLineLEDs@lineB+1
  8006  000B32  C052  F00B         	movff	_intC,updateLineLEDs@lineC
  8007  000B36  C053  F00C         	movff	_intC+1,updateLineLEDs@lineC+1
  8008  000B3A  EC5B  F00A         	call	_updateLineLEDs	;wreg free
  8009                           
  8010                           ;hardware.c: 135: }
  8011  000B3E  D041               	goto	i2l837
  8012  000B40                     i2l836:
  8013                           
  8014                           ;hardware.c: 136: else updateLineLEDs((!armA*intA), (!armB*intB), (!armC*intC));
  8015  000B40  0100               	movlb	0	; () banked
  8016  000B42  518F               	movf	_armA& (0+255),w,b
  8017  000B44  0100               	movlb	0	; () banked
  8018  000B46  1190               	iorwf	(_armA+1)& (0+255),w,b
  8019  000B48  A4D8               	btfss	status,2,c
  8020  000B4A  D002               	goto	i2u326_40
  8021  000B4C  0E01               	movlw	1
  8022  000B4E  D001               	goto	i2u327_40
  8023  000B50                     i2u326_40:
  8024  000B50  0E00               	movlw	0
  8025  000B52                     i2u327_40:
  8026  000B52  6E01               	movwf	i2___wmul@multiplier,c
  8027  000B54  6A02               	clrf	i2___wmul@multiplier+1,c
  8028  000B56  C056  F003         	movff	_intA,i2___wmul@multiplicand
  8029  000B5A  C057  F004         	movff	_intA+1,i2___wmul@multiplicand+1
  8030  000B5E  EC7C  F00D         	call	i2___wmul	;wreg free
  8031  000B62  C001  F007         	movff	?i2___wmul,updateLineLEDs@lineA
  8032  000B66  C002  F008         	movff	?i2___wmul+1,updateLineLEDs@lineA+1
  8033  000B6A  0100               	movlb	0	; () banked
  8034  000B6C  518D               	movf	_armB& (0+255),w,b
  8035  000B6E  0100               	movlb	0	; () banked
  8036  000B70  118E               	iorwf	(_armB+1)& (0+255),w,b
  8037  000B72  A4D8               	btfss	status,2,c
  8038  000B74  D002               	goto	i2u328_40
  8039  000B76  0E01               	movlw	1
  8040  000B78  D001               	goto	i2u329_40
  8041  000B7A                     i2u328_40:
  8042  000B7A  0E00               	movlw	0
  8043  000B7C                     i2u329_40:
  8044  000B7C  6E01               	movwf	i2___wmul@multiplier,c
  8045  000B7E  6A02               	clrf	i2___wmul@multiplier+1,c
  8046  000B80  C054  F003         	movff	_intB,i2___wmul@multiplicand
  8047  000B84  C055  F004         	movff	_intB+1,i2___wmul@multiplicand+1
  8048  000B88  EC7C  F00D         	call	i2___wmul	;wreg free
  8049  000B8C  C001  F009         	movff	?i2___wmul,updateLineLEDs@lineB
  8050  000B90  C002  F00A         	movff	?i2___wmul+1,updateLineLEDs@lineB+1
  8051  000B94  0100               	movlb	0	; () banked
  8052  000B96  518B               	movf	_armC& (0+255),w,b
  8053  000B98  0100               	movlb	0	; () banked
  8054  000B9A  118C               	iorwf	(_armC+1)& (0+255),w,b
  8055  000B9C  A4D8               	btfss	status,2,c
  8056  000B9E  D002               	goto	i2u330_40
  8057  000BA0  0E01               	movlw	1
  8058  000BA2  D001               	goto	i2u331_40
  8059  000BA4                     i2u330_40:
  8060  000BA4  0E00               	movlw	0
  8061  000BA6                     i2u331_40:
  8062  000BA6  6E01               	movwf	i2___wmul@multiplier,c
  8063  000BA8  6A02               	clrf	i2___wmul@multiplier+1,c
  8064  000BAA  C052  F003         	movff	_intC,i2___wmul@multiplicand
  8065  000BAE  C053  F004         	movff	_intC+1,i2___wmul@multiplicand+1
  8066  000BB2  EC7C  F00D         	call	i2___wmul	;wreg free
  8067  000BB6  C001  F00B         	movff	?i2___wmul,updateLineLEDs@lineC
  8068  000BBA  C002  F00C         	movff	?i2___wmul+1,updateLineLEDs@lineC+1
  8069  000BBE  EC5B  F00A         	call	_updateLineLEDs	;wreg free
  8070  000BC2                     i2l837:
  8071                           
  8072                           ;hardware.c: 137: armFlashToggle ^= 1;
  8073  000BC2  0E01               	movlw	1
  8074  000BC4  0100               	movlb	0	; () banked
  8075  000BC6  1B91               	xorwf	_armFlashToggle& (0+255),f,b
  8076                           
  8077                           ; BSR set to: 0
  8078  000BC8  0012               	return	
  8079  000BCA                     __end_of_flashLED:
  8080                           	opt stack 0
  8081                           pclatu	equ	0xFFB
  8082                           pclath	equ	0xFFA
  8083                           tblptru	equ	0xFF8
  8084                           tblptrh	equ	0xFF7
  8085                           tblptrl	equ	0xFF6
  8086                           tablat	equ	0xFF5
  8087                           prodh	equ	0xFF4
  8088                           prodl	equ	0xFF3
  8089                           intcon	equ	0xFF2
  8090                           postinc0	equ	0xFEE
  8091                           fsr0h	equ	0xFEA
  8092                           fsr0l	equ	0xFE9
  8093                           wreg	equ	0xFE8
  8094                           postinc1	equ	0xFE6
  8095                           postdec1	equ	0xFE5
  8096                           fsr1h	equ	0xFE2
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           postinc2	equ	0xFDE
  8100                           postdec2	equ	0xFDD
  8101                           fsr2h	equ	0xFDA
  8102                           fsr2l	equ	0xFD9
  8103                           status	equ	0xFD8
  8104                           
  8105 ;; *************** function i2___wmul *****************
  8106 ;; Defined at:
  8107 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  multiplier      2    0[COMRAM] unsigned int 
  8110 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  __wmul          2    4[COMRAM] unsigned int 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  2    0[COMRAM] unsigned int 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0, prodl, prodh
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;Total ram usage:        6 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_flashLED
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text39
  8136  001AF8                     __ptext39:
  8137                           	opt stack 0
  8138  001AF8                     i2___wmul:
  8139                           	opt stack 25
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;incstack = 0
  8143  001AF8  5001               	movf	i2___wmul@multiplier,w,c
  8144  001AFA  0203               	mulwf	i2___wmul@multiplicand,c
  8145  001AFC  CFF3 F005          	movff	prodl,i2___wmul@product
  8146  001B00  CFF4 F006          	movff	prodh,i2___wmul@product+1
  8147  001B04  5001               	movf	i2___wmul@multiplier,w,c
  8148  001B06  0204               	mulwf	i2___wmul@multiplicand+1,c
  8149  001B08  50F3               	movf	prodl,w,c
  8150  001B0A  2606               	addwf	i2___wmul@product+1,f,c
  8151  001B0C  5002               	movf	i2___wmul@multiplier+1,w,c
  8152  001B0E  0203               	mulwf	i2___wmul@multiplicand,c
  8153  001B10  50F3               	movf	prodl,w,c
  8154  001B12  2606               	addwf	i2___wmul@product+1,f,c
  8155  001B14  C005  F001         	movff	i2___wmul@product,?i2___wmul
  8156  001B18  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  8157  001B1C  0012               	return	
  8158  001B1E                     __end_ofi2___wmul:
  8159                           	opt stack 0
  8160                           pclatu	equ	0xFFB
  8161                           pclath	equ	0xFFA
  8162                           tblptru	equ	0xFF8
  8163                           tblptrh	equ	0xFF7
  8164                           tblptrl	equ	0xFF6
  8165                           tablat	equ	0xFF5
  8166                           prodh	equ	0xFF4
  8167                           prodl	equ	0xFF3
  8168                           intcon	equ	0xFF2
  8169                           postinc0	equ	0xFEE
  8170                           fsr0h	equ	0xFEA
  8171                           fsr0l	equ	0xFE9
  8172                           wreg	equ	0xFE8
  8173                           postinc1	equ	0xFE6
  8174                           postdec1	equ	0xFE5
  8175                           fsr1h	equ	0xFE2
  8176                           fsr1l	equ	0xFE1
  8177                           indf2	equ	0xFDF
  8178                           postinc2	equ	0xFDE
  8179                           postdec2	equ	0xFDD
  8180                           fsr2h	equ	0xFDA
  8181                           fsr2l	equ	0xFD9
  8182                           status	equ	0xFD8
  8183                           
  8184 ;; *************** function _updatePresetLEDs *****************
  8185 ;; Defined at:
  8186 ;;		line 599 in file "hardware.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  psNum           2    0[COMRAM] int 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;Total ram usage:        2 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; This function calls:
  8207 ;;		Nothing
  8208 ;; This function is called by:
  8209 ;;		_flashLED
  8210 ;;		_serviceSwitches
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text40
  8215  0017E8                     __ptext40:
  8216                           	opt stack 0
  8217  0017E8                     _updatePresetLEDs:
  8218                           	opt stack 25
  8219                           
  8220                           ;hardware.c: 601: if (psNum == 1)
  8221                           
  8222                           ;incstack = 0
  8223  0017E8  0401               	decf	updatePresetLEDs@psNum,w,c
  8224  0017EA  1002               	iorwf	updatePresetLEDs@psNum+1,w,c
  8225  0017EC  A4D8               	btfss	status,2,c
  8226  0017EE  D006               	goto	i2l952
  8227                           
  8228                           ;hardware.c: 602: {
  8229                           ;hardware.c: 603: LATD0 = 1;
  8230  0017F0  808C               	bsf	3980,0,c	;volatile
  8231                           
  8232                           ;hardware.c: 604: LATE7 = 0;
  8233  0017F2  9E8D               	bcf	3981,7,c	;volatile
  8234                           
  8235                           ;hardware.c: 605: LATE5 = 0;
  8236  0017F4  9A8D               	bcf	3981,5,c	;volatile
  8237                           
  8238                           ;hardware.c: 606: LATE4 = 0;
  8239  0017F6  988D               	bcf	3981,4,c	;volatile
  8240                           
  8241                           ;hardware.c: 607: LATH2 = 0;
  8242  0017F8  9490               	bcf	3984,2,c	;volatile
  8243                           
  8244                           ;hardware.c: 608: }
  8245  0017FA  0012               	return	
  8246  0017FC                     i2l952:
  8247                           
  8248                           ;hardware.c: 609: else if (psNum == 2)
  8249  0017FC  0E02               	movlw	2
  8250  0017FE  1801               	xorwf	updatePresetLEDs@psNum,w,c
  8251  001800  1002               	iorwf	updatePresetLEDs@psNum+1,w,c
  8252  001802  A4D8               	btfss	status,2,c
  8253  001804  D006               	goto	i2l954
  8254                           
  8255                           ;hardware.c: 610: {
  8256                           ;hardware.c: 611: LATD0 = 0;
  8257  001806  908C               	bcf	3980,0,c	;volatile
  8258                           
  8259                           ;hardware.c: 612: LATE7 = 1;
  8260  001808  8E8D               	bsf	3981,7,c	;volatile
  8261                           
  8262                           ;hardware.c: 613: LATE5 = 0;
  8263  00180A  9A8D               	bcf	3981,5,c	;volatile
  8264                           
  8265                           ;hardware.c: 614: LATE4 = 0;
  8266  00180C  988D               	bcf	3981,4,c	;volatile
  8267                           
  8268                           ;hardware.c: 615: LATH2 = 0;
  8269  00180E  9490               	bcf	3984,2,c	;volatile
  8270                           
  8271                           ;hardware.c: 616: }
  8272  001810  0012               	return	
  8273  001812                     i2l954:
  8274                           
  8275                           ;hardware.c: 617: else if (psNum == 3)
  8276  001812  0E03               	movlw	3
  8277  001814  1801               	xorwf	updatePresetLEDs@psNum,w,c
  8278  001816  1002               	iorwf	updatePresetLEDs@psNum+1,w,c
  8279  001818  A4D8               	btfss	status,2,c
  8280  00181A  D006               	goto	i2l956
  8281                           
  8282                           ;hardware.c: 618: {
  8283                           ;hardware.c: 619: LATD0 = 0;
  8284  00181C  908C               	bcf	3980,0,c	;volatile
  8285                           
  8286                           ;hardware.c: 620: LATE7 = 0;
  8287  00181E  9E8D               	bcf	3981,7,c	;volatile
  8288                           
  8289                           ;hardware.c: 621: LATE5 = 1;
  8290  001820  8A8D               	bsf	3981,5,c	;volatile
  8291                           
  8292                           ;hardware.c: 622: LATE4 = 0;
  8293  001822  988D               	bcf	3981,4,c	;volatile
  8294                           
  8295                           ;hardware.c: 623: LATH2 = 0;
  8296  001824  9490               	bcf	3984,2,c	;volatile
  8297                           
  8298                           ;hardware.c: 624: }
  8299  001826  0012               	return	
  8300  001828                     i2l956:
  8301                           
  8302                           ;hardware.c: 625: else if (psNum == 4)
  8303  001828  0E04               	movlw	4
  8304  00182A  1801               	xorwf	updatePresetLEDs@psNum,w,c
  8305  00182C  1002               	iorwf	updatePresetLEDs@psNum+1,w,c
  8306  00182E  A4D8               	btfss	status,2,c
  8307  001830  D006               	goto	i2l958
  8308                           
  8309                           ;hardware.c: 626: {
  8310                           ;hardware.c: 627: LATD0 = 0;
  8311  001832  908C               	bcf	3980,0,c	;volatile
  8312                           
  8313                           ;hardware.c: 628: LATE7 = 0;
  8314  001834  9E8D               	bcf	3981,7,c	;volatile
  8315                           
  8316                           ;hardware.c: 629: LATE5 = 0;
  8317  001836  9A8D               	bcf	3981,5,c	;volatile
  8318                           
  8319                           ;hardware.c: 630: LATE4 = 1;
  8320  001838  888D               	bsf	3981,4,c	;volatile
  8321                           
  8322                           ;hardware.c: 631: LATH2 = 0;
  8323  00183A  9490               	bcf	3984,2,c	;volatile
  8324                           
  8325                           ;hardware.c: 632: }
  8326  00183C  0012               	return	
  8327  00183E                     i2l958:
  8328                           
  8329                           ;hardware.c: 633: else if (psNum == 5)
  8330  00183E  0E05               	movlw	5
  8331  001840  1801               	xorwf	updatePresetLEDs@psNum,w,c
  8332  001842  1002               	iorwf	updatePresetLEDs@psNum+1,w,c
  8333  001844  A4D8               	btfss	status,2,c
  8334  001846  D006               	goto	i2l960
  8335                           
  8336                           ;hardware.c: 634: {
  8337                           ;hardware.c: 635: LATD0 = 0;
  8338  001848  908C               	bcf	3980,0,c	;volatile
  8339                           
  8340                           ;hardware.c: 636: LATE7 = 0;
  8341  00184A  9E8D               	bcf	3981,7,c	;volatile
  8342                           
  8343                           ;hardware.c: 637: LATE5 = 0;
  8344  00184C  9A8D               	bcf	3981,5,c	;volatile
  8345                           
  8346                           ;hardware.c: 638: LATE4 = 0;
  8347  00184E  988D               	bcf	3981,4,c	;volatile
  8348                           
  8349                           ;hardware.c: 639: LATH2 = 1;
  8350  001850  8490               	bsf	3984,2,c	;volatile
  8351                           
  8352                           ;hardware.c: 640: }
  8353  001852  0012               	return	
  8354  001854                     i2l960:
  8355                           
  8356                           ;hardware.c: 641: else
  8357                           ;hardware.c: 642: {
  8358                           ;hardware.c: 643: LATD0 = 0;
  8359  001854  908C               	bcf	3980,0,c	;volatile
  8360                           
  8361                           ;hardware.c: 644: LATE7 = 0;
  8362  001856  9E8D               	bcf	3981,7,c	;volatile
  8363                           
  8364                           ;hardware.c: 645: LATE5 = 0;
  8365  001858  9A8D               	bcf	3981,5,c	;volatile
  8366                           
  8367                           ;hardware.c: 646: LATE4 = 0;
  8368  00185A  988D               	bcf	3981,4,c	;volatile
  8369                           
  8370                           ;hardware.c: 647: LATH2 = 0;
  8371  00185C  9490               	bcf	3984,2,c	;volatile
  8372  00185E  0012               	return	
  8373  001860                     __end_of_updatePresetLEDs:
  8374                           	opt stack 0
  8375                           pclatu	equ	0xFFB
  8376                           pclath	equ	0xFFA
  8377                           tblptru	equ	0xFF8
  8378                           tblptrh	equ	0xFF7
  8379                           tblptrl	equ	0xFF6
  8380                           tablat	equ	0xFF5
  8381                           prodh	equ	0xFF4
  8382                           prodl	equ	0xFF3
  8383                           intcon	equ	0xFF2
  8384                           postinc0	equ	0xFEE
  8385                           fsr0h	equ	0xFEA
  8386                           fsr0l	equ	0xFE9
  8387                           wreg	equ	0xFE8
  8388                           postinc1	equ	0xFE6
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           postdec2	equ	0xFDD
  8395                           fsr2h	equ	0xFDA
  8396                           fsr2l	equ	0xFD9
  8397                           status	equ	0xFD8
  8398                           
  8399 ;; *************** function _updateLineLEDs *****************
  8400 ;; Defined at:
  8401 ;;		line 533 in file "hardware.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  lineA           2    6[COMRAM] int 
  8404 ;;  lineB           2    8[COMRAM] int 
  8405 ;;  lineC           2   10[COMRAM] int 
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8417 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;Total ram usage:        6 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_flashLED
  8427 ;;		_serviceSwitches
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text41
  8432  0014B6                     __ptext41:
  8433                           	opt stack 0
  8434  0014B6                     _updateLineLEDs:
  8435                           	opt stack 25
  8436                           
  8437                           ;hardware.c: 535: if (lineA == 1)
  8438                           
  8439                           ;incstack = 0
  8440  0014B6  0407               	decf	updateLineLEDs@lineA,w,c
  8441  0014B8  1008               	iorwf	updateLineLEDs@lineA+1,w,c
  8442  0014BA  A4D8               	btfss	status,2,c
  8443  0014BC  D002               	goto	i2l931
  8444                           
  8445                           ;hardware.c: 536: {
  8446                           ;hardware.c: 537: LATH7 = 1;
  8447  0014BE  8E90               	bsf	3984,7,c	;volatile
  8448  0014C0  D010               	goto	L2
  8449  0014C2                     i2l931:
  8450                           
  8451                           ;hardware.c: 540: else if (lineA == 2)
  8452  0014C2  0E02               	movlw	2
  8453  0014C4  1807               	xorwf	updateLineLEDs@lineA,w,c
  8454  0014C6  1008               	iorwf	updateLineLEDs@lineA+1,w,c
  8455  0014C8  A4D8               	btfss	status,2,c
  8456  0014CA  D002               	goto	i2l933
  8457                           
  8458                           ;hardware.c: 541: {
  8459                           ;hardware.c: 542: LATH7 = 0;
  8460  0014CC  9E90               	bcf	3984,7,c	;volatile
  8461  0014CE  D006               	goto	L3
  8462  0014D0                     i2l933:
  8463                           
  8464                           ;hardware.c: 545: else if (lineA == 3)
  8465  0014D0  0E03               	movlw	3
  8466  0014D2  1807               	xorwf	updateLineLEDs@lineA,w,c
  8467  0014D4  1008               	iorwf	updateLineLEDs@lineA+1,w,c
  8468  0014D6  A4D8               	btfss	status,2,c
  8469  0014D8  D003               	goto	i2l935
  8470                           
  8471                           ;hardware.c: 546: {
  8472                           ;hardware.c: 547: LATH7 = 1;
  8473  0014DA  8E90               	bsf	3984,7,c	;volatile
  8474  0014DC                     L3:
  8475                           
  8476                           ;hardware.c: 548: LATF2 = 1;
  8477  0014DC  848E               	bsf	3982,2,c	;volatile
  8478                           
  8479                           ;hardware.c: 549: }
  8480  0014DE  D002               	goto	i2l936
  8481  0014E0                     i2l935:
  8482                           
  8483                           ;hardware.c: 550: else
  8484                           ;hardware.c: 551: {
  8485                           ;hardware.c: 552: LATH7 = 0;
  8486  0014E0  9E90               	bcf	3984,7,c	;volatile
  8487  0014E2                     L2:
  8488                           
  8489                           ;hardware.c: 553: LATF2 = 0;
  8490  0014E2  948E               	bcf	3982,2,c	;volatile
  8491  0014E4                     i2l936:
  8492                           
  8493                           ;hardware.c: 554: }
  8494                           ;hardware.c: 556: if (lineB == 1)
  8495  0014E4  0409               	decf	updateLineLEDs@lineB,w,c
  8496  0014E6  100A               	iorwf	updateLineLEDs@lineB+1,w,c
  8497  0014E8  A4D8               	btfss	status,2,c
  8498  0014EA  D002               	goto	i2l937
  8499                           
  8500                           ;hardware.c: 557: {
  8501                           ;hardware.c: 558: LATF5 = 1;
  8502  0014EC  8A8E               	bsf	3982,5,c	;volatile
  8503  0014EE  D010               	goto	L4
  8504  0014F0                     i2l937:
  8505                           
  8506                           ;hardware.c: 561: else if (lineB == 2)
  8507  0014F0  0E02               	movlw	2
  8508  0014F2  1809               	xorwf	updateLineLEDs@lineB,w,c
  8509  0014F4  100A               	iorwf	updateLineLEDs@lineB+1,w,c
  8510  0014F6  A4D8               	btfss	status,2,c
  8511  0014F8  D002               	goto	i2l939
  8512                           
  8513                           ;hardware.c: 562: {
  8514                           ;hardware.c: 563: LATF5 = 0;
  8515  0014FA  9A8E               	bcf	3982,5,c	;volatile
  8516  0014FC  D006               	goto	L5
  8517  0014FE                     i2l939:
  8518                           
  8519                           ;hardware.c: 566: else if (lineB == 3)
  8520  0014FE  0E03               	movlw	3
  8521  001500  1809               	xorwf	updateLineLEDs@lineB,w,c
  8522  001502  100A               	iorwf	updateLineLEDs@lineB+1,w,c
  8523  001504  A4D8               	btfss	status,2,c
  8524  001506  D003               	goto	i2l941
  8525                           
  8526                           ;hardware.c: 567: {
  8527                           ;hardware.c: 568: LATF5 = 1;
  8528  001508  8A8E               	bsf	3982,5,c	;volatile
  8529  00150A                     L5:
  8530                           
  8531                           ;hardware.c: 569: LATF6 = 1;
  8532  00150A  8C8E               	bsf	3982,6,c	;volatile
  8533                           
  8534                           ;hardware.c: 570: }
  8535  00150C  D002               	goto	i2l942
  8536  00150E                     i2l941:
  8537                           
  8538                           ;hardware.c: 571: else
  8539                           ;hardware.c: 572: {
  8540                           ;hardware.c: 573: LATF5 = 0;
  8541  00150E  9A8E               	bcf	3982,5,c	;volatile
  8542  001510                     L4:
  8543                           
  8544                           ;hardware.c: 574: LATF6 = 0;
  8545  001510  9C8E               	bcf	3982,6,c	;volatile
  8546  001512                     i2l942:
  8547                           
  8548                           ;hardware.c: 575: }
  8549                           ;hardware.c: 577: if (lineC == 1)
  8550  001512  040B               	decf	updateLineLEDs@lineC,w,c
  8551  001514  100C               	iorwf	updateLineLEDs@lineC+1,w,c
  8552  001516  A4D8               	btfss	status,2,c
  8553  001518  D003               	goto	i2l943
  8554                           
  8555                           ;hardware.c: 578: {
  8556                           ;hardware.c: 579: LATG4 = 1;
  8557  00151A  888F               	bsf	3983,4,c	;volatile
  8558                           
  8559                           ;hardware.c: 580: LATH0 = 0;
  8560  00151C  9090               	bcf	3984,0,c	;volatile
  8561                           
  8562                           ;hardware.c: 581: }
  8563  00151E  0012               	return	
  8564  001520                     i2l943:
  8565                           
  8566                           ;hardware.c: 582: else if (lineC == 2)
  8567  001520  0E02               	movlw	2
  8568  001522  180B               	xorwf	updateLineLEDs@lineC,w,c
  8569  001524  100C               	iorwf	updateLineLEDs@lineC+1,w,c
  8570  001526  A4D8               	btfss	status,2,c
  8571  001528  D003               	goto	i2l945
  8572                           
  8573                           ;hardware.c: 583: {
  8574                           ;hardware.c: 584: LATG4 = 0;
  8575  00152A  988F               	bcf	3983,4,c	;volatile
  8576                           
  8577                           ;hardware.c: 585: LATH0 = 1;
  8578  00152C  8090               	bsf	3984,0,c	;volatile
  8579                           
  8580                           ;hardware.c: 586: }
  8581  00152E  0012               	return	
  8582  001530                     i2l945:
  8583                           
  8584                           ;hardware.c: 587: else if (lineC == 3)
  8585  001530  0E03               	movlw	3
  8586  001532  180B               	xorwf	updateLineLEDs@lineC,w,c
  8587  001534  100C               	iorwf	updateLineLEDs@lineC+1,w,c
  8588  001536  A4D8               	btfss	status,2,c
  8589  001538  D003               	goto	i2l947
  8590                           
  8591                           ;hardware.c: 588: {
  8592                           ;hardware.c: 589: LATG4 = 1;
  8593  00153A  888F               	bsf	3983,4,c	;volatile
  8594                           
  8595                           ;hardware.c: 590: LATH0 = 1;
  8596  00153C  8090               	bsf	3984,0,c	;volatile
  8597                           
  8598                           ;hardware.c: 591: }
  8599  00153E  0012               	return	
  8600  001540                     i2l947:
  8601                           
  8602                           ;hardware.c: 592: else
  8603                           ;hardware.c: 593: {
  8604                           ;hardware.c: 594: LATG4 = 0;
  8605  001540  988F               	bcf	3983,4,c	;volatile
  8606                           
  8607                           ;hardware.c: 595: LATH0 = 0;
  8608  001542  9090               	bcf	3984,0,c	;volatile
  8609  001544  0012               	return	
  8610  001546                     __end_of_updateLineLEDs:
  8611                           	opt stack 0
  8612                           pclatu	equ	0xFFB
  8613                           pclath	equ	0xFFA
  8614                           tblptru	equ	0xFF8
  8615                           tblptrh	equ	0xFF7
  8616                           tblptrl	equ	0xFF6
  8617                           tablat	equ	0xFF5
  8618                           prodh	equ	0xFF4
  8619                           prodl	equ	0xFF3
  8620                           intcon	equ	0xFF2
  8621                           postinc0	equ	0xFEE
  8622                           fsr0h	equ	0xFEA
  8623                           fsr0l	equ	0xFE9
  8624                           wreg	equ	0xFE8
  8625                           postinc1	equ	0xFE6
  8626                           postdec1	equ	0xFE5
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           postdec2	equ	0xFDD
  8632                           fsr2h	equ	0xFDA
  8633                           fsr2l	equ	0xFD9
  8634                           status	equ	0xFD8
  8635                           
  8636 ;; *************** function _checkSwitches *****************
  8637 ;; Defined at:
  8638 ;;		line 142 in file "hardware.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  flag            1    0[COMRAM] unsigned char 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, status,2
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;Total ram usage:        1 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_highPriorityISR
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text42
  8666  0015D4                     __ptext42:
  8667                           	opt stack 0
  8668  0015D4                     _checkSwitches:
  8669                           	opt stack 26
  8670                           
  8671                           ;hardware.c: 144: char flag = 0;
  8672                           
  8673                           ;incstack = 0
  8674  0015D4  0E00               	movlw	0
  8675  0015D6  6E01               	movwf	checkSwitches@flag,c
  8676                           
  8677                           ;hardware.c: 146: if(IOCF1)
  8678  0015D8  A2D1               	btfss	4049,1,c	;volatile
  8679  0015DA  D007               	goto	i2l841
  8680                           
  8681                           ;hardware.c: 147: {
  8682                           ;hardware.c: 148: switch4 = 1;
  8683  0015DC  0E00               	movlw	0
  8684  0015DE  6E49               	movwf	_switch4+1,c
  8685  0015E0  0E01               	movlw	1
  8686  0015E2  6E48               	movwf	_switch4,c
  8687                           
  8688                           ;hardware.c: 149: flag = 1;
  8689  0015E4  0E01               	movlw	1
  8690  0015E6  6E01               	movwf	checkSwitches@flag,c
  8691                           
  8692                           ;hardware.c: 150: IOCFbits.IOCF1 = 0;
  8693  0015E8  92D1               	bcf	4049,1,c	;volatile
  8694  0015EA                     i2l841:
  8695                           
  8696                           ;hardware.c: 151: }
  8697                           ;hardware.c: 153: if (IOCF2)
  8698  0015EA  A4D1               	btfss	4049,2,c	;volatile
  8699  0015EC  D007               	goto	i2l842
  8700                           
  8701                           ;hardware.c: 154: {
  8702                           ;hardware.c: 155: switch2 = 1;
  8703  0015EE  0E00               	movlw	0
  8704  0015F0  6E4D               	movwf	_switch2+1,c
  8705  0015F2  0E01               	movlw	1
  8706  0015F4  6E4C               	movwf	_switch2,c
  8707                           
  8708                           ;hardware.c: 156: flag = 1;
  8709  0015F6  0E01               	movlw	1
  8710  0015F8  6E01               	movwf	checkSwitches@flag,c
  8711                           
  8712                           ;hardware.c: 157: IOCFbits.IOCF2 = 0;
  8713  0015FA  94D1               	bcf	4049,2,c	;volatile
  8714  0015FC                     i2l842:
  8715                           
  8716                           ;hardware.c: 158: }
  8717                           ;hardware.c: 160: if (IOCF3)
  8718  0015FC  A6D1               	btfss	4049,3,c	;volatile
  8719  0015FE  D007               	goto	i2l843
  8720                           
  8721                           ;hardware.c: 161: {
  8722                           ;hardware.c: 162: switch1 = 1;
  8723  001600  0E00               	movlw	0
  8724  001602  6E4F               	movwf	_switch1+1,c
  8725  001604  0E01               	movlw	1
  8726  001606  6E4E               	movwf	_switch1,c
  8727                           
  8728                           ;hardware.c: 163: flag = 1;
  8729  001608  0E01               	movlw	1
  8730  00160A  6E01               	movwf	checkSwitches@flag,c
  8731                           
  8732                           ;hardware.c: 164: IOCFbits.IOCF3 = 0;
  8733  00160C  96D1               	bcf	4049,3,c	;volatile
  8734  00160E                     i2l843:
  8735                           
  8736                           ;hardware.c: 165: }
  8737                           ;hardware.c: 167: if (IOCF4)
  8738  00160E  A8D1               	btfss	4049,4,c	;volatile
  8739  001610  D007               	goto	i2l844
  8740                           
  8741                           ;hardware.c: 168: {
  8742                           ;hardware.c: 169: fsw1 = 1;
  8743  001612  0E00               	movlw	0
  8744  001614  6E45               	movwf	_fsw1+1,c
  8745  001616  0E01               	movlw	1
  8746  001618  6E44               	movwf	_fsw1,c
  8747                           
  8748                           ;hardware.c: 170: flag = 1;
  8749  00161A  0E01               	movlw	1
  8750  00161C  6E01               	movwf	checkSwitches@flag,c
  8751                           
  8752                           ;hardware.c: 171: IOCFbits.IOCF4 = 0;
  8753  00161E  98D1               	bcf	4049,4,c	;volatile
  8754  001620                     i2l844:
  8755                           
  8756                           ;hardware.c: 172: }
  8757                           ;hardware.c: 174: if (IOCF5)
  8758  001620  AAD1               	btfss	4049,5,c	;volatile
  8759  001622  D007               	goto	i2l845
  8760                           
  8761                           ;hardware.c: 175: {
  8762                           ;hardware.c: 176: fsw2 = 1;
  8763  001624  0E00               	movlw	0
  8764  001626  6E43               	movwf	_fsw2+1,c
  8765  001628  0E01               	movlw	1
  8766  00162A  6E42               	movwf	_fsw2,c
  8767                           
  8768                           ;hardware.c: 177: flag = 1;
  8769  00162C  0E01               	movlw	1
  8770  00162E  6E01               	movwf	checkSwitches@flag,c
  8771                           
  8772                           ;hardware.c: 178: IOCFbits.IOCF5 = 0;
  8773  001630  9AD1               	bcf	4049,5,c	;volatile
  8774  001632                     i2l845:
  8775                           
  8776                           ;hardware.c: 179: }
  8777                           ;hardware.c: 181: if (IOCF6)
  8778  001632  ACD1               	btfss	4049,6,c	;volatile
  8779  001634  D007               	goto	i2l846
  8780                           
  8781                           ;hardware.c: 182: {
  8782                           ;hardware.c: 183: switch3 = 1;
  8783  001636  0E00               	movlw	0
  8784  001638  6E4B               	movwf	_switch3+1,c
  8785  00163A  0E01               	movlw	1
  8786  00163C  6E4A               	movwf	_switch3,c
  8787                           
  8788                           ;hardware.c: 184: flag = 1;
  8789  00163E  0E01               	movlw	1
  8790  001640  6E01               	movwf	checkSwitches@flag,c
  8791                           
  8792                           ;hardware.c: 185: IOCFbits.IOCF6 = 0;
  8793  001642  9CD1               	bcf	4049,6,c	;volatile
  8794  001644                     i2l846:
  8795                           
  8796                           ;hardware.c: 186: }
  8797                           ;hardware.c: 188: if (IOCF7)
  8798  001644  AED1               	btfss	4049,7,c	;volatile
  8799  001646  D007               	goto	i2l847
  8800                           
  8801                           ;hardware.c: 189: {
  8802                           ;hardware.c: 190: switch5 = 1;
  8803  001648  0E00               	movlw	0
  8804  00164A  6E47               	movwf	_switch5+1,c
  8805  00164C  0E01               	movlw	1
  8806  00164E  6E46               	movwf	_switch5,c
  8807                           
  8808                           ;hardware.c: 191: flag = 1;
  8809  001650  0E01               	movlw	1
  8810  001652  6E01               	movwf	checkSwitches@flag,c
  8811                           
  8812                           ;hardware.c: 192: IOCFbits.IOCF7 = 0;
  8813  001654  9ED1               	bcf	4049,7,c	;volatile
  8814  001656                     i2l847:
  8815                           
  8816                           ;hardware.c: 193: }
  8817                           ;hardware.c: 195: if (flag)
  8818  001656  5001               	movf	checkSwitches@flag,w,c
  8819  001658  B4D8               	btfsc	status,2,c
  8820  00165A  0012               	return	
  8821                           
  8822                           ;hardware.c: 196: {
  8823                           ;hardware.c: 197: T0CONbits.TMR0ON = 0x1;
  8824  00165C  8ED5               	bsf	4053,7,c	;volatile
  8825  00165E  0012               	return	
  8826  001660                     __end_of_checkSwitches:
  8827                           	opt stack 0
  8828  0000                     pclatu	equ	0xFFB
  8829                           pclath	equ	0xFFA
  8830                           tblptru	equ	0xFF8
  8831                           tblptrh	equ	0xFF7
  8832                           tblptrl	equ	0xFF6
  8833                           tablat	equ	0xFF5
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           intcon	equ	0xFF2
  8837                           postinc0	equ	0xFEE
  8838                           fsr0h	equ	0xFEA
  8839                           fsr0l	equ	0xFE9
  8840                           wreg	equ	0xFE8
  8841                           postinc1	equ	0xFE6
  8842                           postdec1	equ	0xFE5
  8843                           fsr1h	equ	0xFE2
  8844                           fsr1l	equ	0xFE1
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8
  8851                           pclatu	equ	0xFFB
  8852                           pclath	equ	0xFFA
  8853                           tblptru	equ	0xFF8
  8854                           tblptrh	equ	0xFF7
  8855                           tblptrl	equ	0xFF6
  8856                           tablat	equ	0xFF5
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           intcon	equ	0xFF2
  8860                           postinc0	equ	0xFEE
  8861                           fsr0h	equ	0xFEA
  8862                           fsr0l	equ	0xFE9
  8863                           wreg	equ	0xFE8
  8864                           postinc1	equ	0xFE6
  8865                           postdec1	equ	0xFE5
  8866                           fsr1h	equ	0xFE2
  8867                           fsr1l	equ	0xFE1
  8868                           indf2	equ	0xFDF
  8869                           postinc2	equ	0xFDE
  8870                           postdec2	equ	0xFDD
  8871                           fsr2h	equ	0xFDA
  8872                           fsr2l	equ	0xFD9
  8873                           status	equ	0xFD8
  8874                           
  8875                           	psect	rparam
  8876  0000                     pclatu	equ	0xFFB
  8877                           pclath	equ	0xFFA
  8878                           tblptru	equ	0xFF8
  8879                           tblptrh	equ	0xFF7
  8880                           tblptrl	equ	0xFF6
  8881                           tablat	equ	0xFF5
  8882                           prodh	equ	0xFF4
  8883                           prodl	equ	0xFF3
  8884                           intcon	equ	0xFF2
  8885                           postinc0	equ	0xFEE
  8886                           fsr0h	equ	0xFEA
  8887                           fsr0l	equ	0xFE9
  8888                           wreg	equ	0xFE8
  8889                           postinc1	equ	0xFE6
  8890                           postdec1	equ	0xFE5
  8891                           fsr1h	equ	0xFE2
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           postinc2	equ	0xFDE
  8895                           postdec2	equ	0xFDD
  8896                           fsr2h	equ	0xFDA
  8897                           fsr2l	equ	0xFD9
  8898                           status	equ	0xFD8
  8899                           
  8900                           	psect	temp
  8901  00005E                     btemp:
  8902                           	opt stack 0
  8903  00005E                     	ds	1
  8904  0000                     int$flags	set	btemp
  8905  0000                     wtemp6	set	btemp+1
  8906                           pclatu	equ	0xFFB
  8907                           pclath	equ	0xFFA
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           postinc0	equ	0xFEE
  8916                           fsr0h	equ	0xFEA
  8917                           fsr0l	equ	0xFE9
  8918                           wreg	equ	0xFE8
  8919                           postinc1	equ	0xFE6
  8920                           postdec1	equ	0xFE5
  8921                           fsr1h	equ	0xFE2
  8922                           fsr1l	equ	0xFE1
  8923                           indf2	equ	0xFDF
  8924                           postinc2	equ	0xFDE
  8925                           postdec2	equ	0xFDD
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        74
    BSS         283
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      93
    BANK0           160     29     142
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    dataPtr	PTR int  size(2) Largest target is 3577
		 -> NULL(NULL[0]), RAM(DATA[3577]), 

    I2C1_Block_Read_EERPOM@data	PTR PTR int  size(2) Largest target is 24
		 -> presetRead(BANK1[24]), 

    I2C1_Page_Write_EEPROM@data	PTR PTR int  size(2) Largest target is 30
		 -> parameter(BANK0[30]), 

    updatePreset@data	PTR int  size(2) Largest target is 30
		 -> presetRead(BANK1[24]), parameter(BANK0[30]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _serviceSwitches->_processTaps
    _processTaps->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _flashLED->_updateLineLEDs
    _updateLineLEDs->i2___wmul

Critical Paths under _main in BANK0

    _main->_fetchPreset
    _updateParams->___wmul
    _systemInit->_startupSequence
    _readControls->_ADC_Read
    _fetchPreset->_updatePreset
    _updatePreset->___wmul

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    7729
                                             20 BANK0      9     9      0
                           _ADC_Read
             _I2C1_Page_Write_EEPROM
                 _I2C1_Write_DigiPot
                             _absVal
                        _fetchPreset
                       _readControls
                         _systemInit
                       _updateParams
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updateParams                                         6     4      2    1253
                                              6 BANK0      6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _systemInit                                           0     0      0       0
                        _bypassSetup
                        _clockSwitch
                         _defaultLED
                      _interfaceInit
                      _interruptInit
                           _killLEDs
                  _mapPeripheralPins
                           _setupADC
                          _setupI2C1
                          _setupI2C2
                          _setupTMR0
                          _setupTMR1
                          _setupTMR2
                          _setupTMR4
                    _startupSequence
 ---------------------------------------------------------------------------------
 (2) _startupSequence                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _setupTMR4                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTMR0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupI2C1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mapPeripheralPins                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _killLEDs                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interruptInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interfaceInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _defaultLED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clockSwitch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bypassSetup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readControls                                         4     4      0    1035
                                              4 BANK0      4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             4     2      2    1035
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _fetchPreset                                          4     4      0    2094
                                             16 BANK0      4     4      0
             _I2C1_Block_Read_EERPOM
                       _updatePreset
 ---------------------------------------------------------------------------------
 (1) _updatePreset                                        10     6      4    1526
                                              6 BANK0     10     6      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1065
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _I2C1_Block_Read_EERPOM                              13     7      6     476
                                              0 BANK0     13     7      6
 ---------------------------------------------------------------------------------
 (1) _absVal                                               4     2      2     192
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_DigiPot                                   2     2      0      45
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C1_Page_Write_EEPROM                              11     5      6     387
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _highPriorityISR                                     18    18      0    9186
                                             31 COMRAM    18    18      0
                      _checkSwitches
                           _flashLED
                          _sendParam
                    _serviceSwitches
                             _tapLED
 ---------------------------------------------------------------------------------
 (5) _tapLED                                               3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _serviceSwitches                                      0     0      0    7434
                        _processTaps
                     _updateLineLEDs
                   _updatePresetLEDs
 ---------------------------------------------------------------------------------
 (6) _processTaps                                          4     4      0    6138
                                             27 COMRAM     4     4      0
                            ___awdiv
                           ___awtoft
                            ___ftmul
                        _maxTapCheck
                           i2_absVal
 ---------------------------------------------------------------------------------
 (7) i2_absVal                                             4     2      2      92
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _maxTapCheck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___ftmul                                             15     9      6    2992
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3    2555
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftpack                                             8     3      5    2388
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _sendParam                                            4     4      0     113
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) _flashLED                                             2     2      0    1609
                                             12 COMRAM     2     2      0
                     _updateLineLEDs
                   _updatePresetLEDs
                           i2___wmul
 ---------------------------------------------------------------------------------
 (6) i2___wmul                                             6     2      4     313
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _updatePresetLEDs                                     2     0      2     414
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _updateLineLEDs                                       6     0      6     882
                                              6 COMRAM     6     0      6
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _checkSwitches                                        1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _I2C1_Page_Write_EEPROM
   _I2C1_Write_DigiPot
   _absVal
   _fetchPreset
     _I2C1_Block_Read_EERPOM
     _updatePreset
       ___wmul
   _readControls
     _ADC_Read
   _systemInit
     _bypassSetup
     _clockSwitch
     _defaultLED
     _interfaceInit
     _interruptInit
     _killLEDs
     _mapPeripheralPins
     _setupADC
     _setupI2C1
     _setupI2C2
     _setupTMR0
     _setupTMR1
     _setupTMR2
     _setupTMR4
     _startupSequence
   _updateParams
     ___wmul
   _updatePreset
     ___wmul

 _highPriorityISR (ROOT)
   _checkSwitches
   _flashLED
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
     i2___wmul
   _sendParam
   _serviceSwitches
     _processTaps
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _maxTapCheck
       i2_absVal
     _updateLineLEDs
       i2___wmul (ARG)
     _updatePresetLEDs
   _tapLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3       8        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Oct 15 11:32:33 2018

                      __CFG_BW$16 000000                __end_of_systemInit 1948  
           __end_of_interruptInit 1AA4                      ___awdiv@sign 0006  
  I2C1_Page_Write_EEPROM@memValue 00CD               ___wmul@multiplicand 00C7  
                     __CFG_BORV$1 000000                      __CFG_CP0$OFF 000000  
          _I2C1_Page_Write_EEPROM 1052                               l201 0930  
                             l202 098C                               l203 09AE  
                             l205 0A50                               l191 1424  
                             l176 1AC6                               l184 11DE  
                             l186 125C                               l194 1694  
                             l196 16E2                               l189 13B2  
                             l519 1B32                               l900 0E8A  
                             l910 0F02                               l902 0EA2  
                             l912 0F1A                               l904 0EBA  
                             l914 0F32                               l906 0ED2  
                             l916 0F4A                               l908 0EEA  
                             l917 0F54                               l896 0E58  
                             l898 0E74                               _RC0 007C10  
                             _RC1 007C11                               _RD1 007C19  
                             _RD4 007C1C                               _RC6 007C16  
                             _RE3 007C23                               _RC7 007C17  
                             _RD7 007C1F                               _RG1 007C31  
                             _RF3 007C2B                               _RG2 007C32  
                             _RE6 007C26                               _RG3 007C33  
                             _RH4 007C3C                               _RJ0 007C40  
                             _RH5 007C3D                               _RJ1 007C41  
                             _RJ4 007C44                               _RJ5 007C45  
                             _PR2 000FCB                               _tap 0032  
                             _swX 005C                               wreg 000FE8  
          __end_of_updateLineLEDs 1546             __end_of_checkSwitches 1660  
 __size_of_I2C1_Block_Read_EERPOM 013A                     __CFG_ABW$XM16 000000  
                    ?_maxTapCheck 0001                              l1210 0C96  
                            l1220 0CFA                              l1204 0CCE  
                            l1141 108A                              l1205 0C8A  
                            l1150 10AE                              l1207 0C8E  
                            l1144 1094                              l1217 0CF2  
                            l1171 0C0C                              l1165 1106  
                            l1149 10DC                              l1181 0C26  
                            l1272 19A2                              l1176 0C1C  
                            l1281 19BA                              l1193 0C40  
                            l1275 19AC                              l1187 0C32  
                            l1287 19C4                              l1199 0C4C  
                            l3243 11C8                              l3885 139C  
                            l3897 167E                              u4020 1098  
                            u4040 10B2                              u4060 10FC  
                            u4070 1100                              u2800 0C2A  
                            u4250 09A0                              u4307 0698  
                            u2820 0C36                              u4317 06B6  
                            u4270 0A40                              u4407 07C4  
                            u4327 06D4                              u2840 0C44  
                            u3800 0128                              u4417 07E2  
                            u4337 06F2                              u4265 09D6  
                            u2770 0C10                              u3810 012A  
                            u4507 08F0                              u4427 0800  
                            u4347 0710                              u2860 0C50  
                            u2940 1B3C                              u4517 0E44  
                            u4437 081E                              u4357 072E  
                            u4527 0E50                              u4447 083C  
                            u4367 074C                              u4537 0C04  
                            u3905 0384                              u3825 0150  
                            u4457 085A                              u4377 076A  
                            u4297 067A                              u2890 0C9A  
                            u4547 199A                              u3835 01AE  
                            u4467 0878                              u4387 0788  
                            u4557 1082                              u3845 01E8  
                            u4477 0896                              u4397 07A6  
                            u3855 021E                              u4487 08B4  
                            u3960 19B0                              u3865 027C  
                            u4497 08D2                              u3875 02B6  
                            u3980 19BE                              u3885 02EC  
                            u3895 034A                              _fbkA 0083  
                            _fbkB 007D                              _fbkC 0077  
                            _armA 008F                              _armB 008D  
                            _armC 008B                              _fsw1 0044  
                            _fsw2 0042                              _intA 0056  
                            _intB 0054                              _intC 0052  
                            _main 0900                      ___ftpack@arg 0001  
                            _lock 006B                              _lvlA 0081  
                            _lvlB 007B                              _lvlC 0075  
                    ___ftpack@exp 0004                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            fsr0l 000FE9                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                     main@prevDry 00DC                              btemp 005E  
                            _sync 0067                  __end_of_ADC_Read 0F5E  
                            prodh 000FF4                              prodl 000FF3  
              __CFG_WDTWIN$PS25_0 000000                              start 011C  
        __size_of_serviceSwitches 02A4   I2C1_Page_Write_EEPROM@wrDevAddr 00CC  
                   __CFG_IESO$OFF 000000                __CFG_LS48MHZ$SYSX2 000000  
                    ___ftmul@cntr 001A                      ___param_bank 000000  
                    ___ftmul@sign 001B                       i2absVal@val 0001  
                    ?_bypassSetup 0001                     __CFG_WAIT$OFF 000000  
                           ?_main 0001                   __end_of___awdiv 1768  
                    main@dryLevel 00E0           I2C1_Block_Read_EERPOM@n 00D0  
                 __end_of___ftmul 1052                   ___awdiv@divisor 0003  
                           _T2CON 000FCA                             _LATD0 007C60  
                           _LATB5 007C55                             _IOCF1 007E89  
                           _LATD2 007C62                             _LATE0 007C68  
                           _IOCF2 007E8A                             _LATD3 007C63  
                           _LATE1 007C69                             _IOCF3 007E8B  
                           _IOCF4 007E8C                             _IOCF5 007E8D  
                           _LATF2 007C72                             _LATE4 007C6C  
                           _IOCF6 007E8E                             _LATE5 007C6D  
                           _IOCF7 007E8F                             _LATH0 007C80  
                           _LATF5 007C75                             _LATE7 007C6F  
                           _LATH1 007C81                             _LATF6 007C76  
                           _LATG4 007C7C                             _LATH2 007C82  
                           _LATH7 007C87                             i2l171 00C0  
                           i2l172 00D0                             i2l165 005C  
                           i2l166 006E                             i2l176 1AEE  
                           i2l168 0094                             i2l169 0096  
                           i2l814 0D3C                             i2l831 0AC2  
                           i2l815 0E28                             i2l823 17A2  
                           i2l832 0AA6                             i2l808 18D6  
                           i2l816 0D7C                             i2l841 15EA  
                           i2l833 0AB2                             i2l842 15FC  
                           i2l818 0DC6                             i2l843 160E  
                           i2l931 14C2                             i2l819 0DF2  
                           i2l844 1620                             i2l836 0B40  
                           i2l860 0462                             i2l845 1632  
                           i2l941 150E                             i2l933 14D0  
                           i2l837 0BC2                             i2l846 1644  
                           i2l942 1512                             i2l870 04F2  
                           i2l862 0470                             i2l854 0400  
                           i2l847 1656                             i2l943 1520  
                           i2l935 14E0                             i2l936 14E4  
                           i2l960 1854                             i2l952 17FC  
                           i2l872 0500                             i2l945 1530  
                           i2l937 14F0                             i2l865 04AA  
                           i2l857 0428                             i2l954 1812  
                           i2l882 05BC                             i2l947 1540  
                           i2l939 14FE                             i2l875 056C  
                           i2l867 04B8                             i2l956 1828  
                           i2l884 05EA                             i2l876 055E  
                 ___awdiv@counter 0005                             i2l958 183E  
                           i2l878 05A0                             i2l879 058C  
                           i2l888 0626                             i2l889 0620  
                   __CFG_WPSA$128 000000                   ?_updateLineLEDs 0007  
                  __CFG_EASHFT$ON 000000                     ___awtoft@sign 000C  
                           _timeA 007F                             _timeB 0079  
                           _timeC 0073                             _shift 0038  
                   ___ftpack@sign 0005                    __CFG_BOREN$OFF 000000  
                           pclath 000FFA                             tablat 000FF5  
                __end_ofi2_absVal 1AF8                  __end_ofi2___wmul 1B1E  
                updatePreset@data 00CD                             status 000FD8  
                updatePreset@temp 00D1                  updatePreset@slot 00CB  
                           wtemp6 005F        __size_of_mapPeripheralPins 0054  
          _I2C1_Block_Read_EERPOM 0BCA                   __initialization 1546  
                    __end_of_main 0A68       __size_of_I2C1_Write_DigiPot 0042  
                          ??_main 00D9                     ?_readControls 0001  
                   __activetblptr 000000               __CFG_WPEND$WPENDMEM 000000  
                  __CFG_RETEN$OFF 000000                            _CCPR4H 000F12  
                          _CCPR4L 000F11                  ___awdiv@dividend 0001  
                __end_of___awtoft 1A3E          __size_of_startupSequence 0296  
                __end_of___ftpack 11BE              __size_of_clockSwitch 0024  
                          _LCDSE0 000ECE                            _LCDSE1 000ECF  
                          _LCDSE2 000ED0                            _LCDSE3 000ED1  
                          _LCDSE4 000ED2                            _LCDSE5 000ED3  
                          _LCDSE6 000ED4                            _LCDSE7 000ED5  
        __size_of_highPriorityISR 0114                            i2l1512 1138  
                          i2l1513 112E                            i2l1515 116C  
                          i2l1292 131E                            i2l1516 1156  
                          i2l1293 1386                            i2l1294 1372  
                          i2l1518 1194                            i2l1295 1356  
                          i2l1519 118A                            i2l4023 00C0  
                          i2l1472 1746                            i2l1473 1750  
                          i2l1465 16F8                            i2l1474 175E  
                          i2l1466 1708                            i2l1468 1726  
                          i2l1469 171E                            i2l1493 1A1A  
                  __CFG_WDTEN$OFF 000000                            i2l1591 0F86  
                          i2l1593 0FAE                            i2l1594 0FE0  
                          i2l1595 0FF0                            i2l1597 1008  
                          i2l1598 1018                            i2l3491 0D7C  
                          i2l3589 1372                            u250_41 0F6E  
                          u252_41 0F96                            _OSCCON 000FD3  
            __size_of_fetchPreset 0084                            _TMR0IF 007F92  
                          _TMR2IF 007CF1                            _TMR4IF 007DC0  
                          _TMR2ON 007E52                            _SSP2IF 007D0E  
                  __CFG_XINST$OFF 000000                  __end_of_flashLED 0BCA  
                    _CCPTMRS1bits 000F35                            _absVal 1AA4  
                __end_of_killLEDs 1B62                            _pFlash 0099  
                          ___wmul 1A3E                         ??___awdiv 0005  
                       ??___ftmul 0013          __end_of_updatePresetLEDs 1860  
               ??_serviceSwitches 0020                   ADC_Read@channel 00C5  
                          _tapLED 1768                            _bypass 0040  
                          _muxADC 00A3                            clear_0 15AC  
                          clear_1 15B8                            clear_2 15C4  
                ___awdiv@quotient 0007                    _RPINR20_21bits 000E34  
                 __CFG_CLKOEN$OFF 000000                            _preset 00A1  
                  ??_readControls 00C9                    _RPINR22_23bits 000E35  
           ___ftmul@f3_as_product 0017                      __pdataCOMRAM 0058  
                  _RPINR24_25bits 000E36                  __end_of_setupADC 14B6  
                       ?_ADC_Read 00C5                    _RPINR18_19bits 000E33  
              processTaps@tapDiff 001E                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                  _armFlashToggle 0091                      ?_processTaps 0001  
                   updateParams@i 00CF              __size_of_maxTapCheck 004E  
                      __accesstop 0060           __end_of__initialization 15CA  
              __CFG_DSWDTOSC$LPRC 000000                     ___rparam_used 000001  
                 __CFG_T5GSEL$T5G 000000                   __CFG_IOL1WAY$ON 000000  
                      ___awtoft@c 0009                     updatePreset@i 00D3  
                      ___ftmul@f1 000D                        ___ftmul@f2 0010  
                  __pcstackCOMRAM 0001                      __pidataBANK0 1BE0  
                    __pidataBANK1 19CE           ?_I2C1_Page_Write_EEPROM 00C5  
      I2C1_Page_Write_EEPROM@data 00C7        I2C1_Page_Write_EEPROM@slot 00C5  
            __size_of_bypassSetup 000C                         ?i2_absVal 0001  
                       ?i2___wmul 0001                 __CFG_PLLDIV$PLL8X 000000  
                      ??_ADC_Read 00C7                        _dataTarget 0087  
                      __pbssBANK0 0060                        __pbssBANK1 0100  
                      _defaultLED 1B94            __size_of_interfaceInit 009E  
               ??_startupSequence 00C5                 ??_highPriorityISR 0020  
  __end_of_I2C1_Page_Write_EEPROM 1110                           ?_absVal 00C5  
                         ?___wmul 00C5                __size_of_sendParam 0096  
                         _ADCBUF0 000FC2                           _ADCBUF1 000E48  
                         _ADCBUF2 000E4A                           _ADCBUF3 000E4C  
                         _ADCBUF4 000E4E                           _ADCBUF5 000E50  
                         _ADCBUF6 000E52                           _ADCBUF8 000E56  
                         _ADCBUF9 000E58                           ?_tapLED 0001  
                 __CFG_VBTBOR$OFF 000000                         ?___awtoft 0009  
                       ?___ftpack 0001                  ??_updateLineLEDs 000D  
                      ??i2_absVal 0003                __size_of_setupI2C1 001A  
              __size_of_setupI2C2 0044                        ??i2___wmul 0005  
              __size_of_setupTMR0 0018                __size_of_setupTMR1 000E  
              __size_of_setupTMR2 0010                __size_of_setupTMR4 0016  
                 __CFG_WDTCLK$FRC 000000                           _SSP1ADD 000FC8  
                         _SSP2ADD 000F02                           _SSP1BUF 000FC9  
                         _SSP2BUF 000F03                         ?_flashLED 0001  
                         _SSP2MSK 000F17                         ?_killLEDs 0001  
          __size_of_interruptInit 0030           ?_I2C1_Block_Read_EERPOM 00C5  
            __end_of_readControls 03C6                           __Hparam 0000  
                         __Lparam 0000                         ?_setupADC 0001  
          __size_of_checkSwitches 008C                           ___awdiv 16E4  
                 __size_of_absVal 002C                   __size_of___wmul 0036  
                         ___ftmul 0F5E                        _linesArmed 0089  
                 __CFG_STVREN$OFF 000000                           _dataPtr 0085  
                 __size_of_tapLED 0080                           __pcinit 1546  
                      ??___awtoft 000C                        ??___ftpack 0006  
                      _masterTime 0064                           __ramtop 0E00  
                         __ptext0 0900                           __ptext1 1392  
                         __ptext2 1902                           __ptext3 066A  
                         __ptext4 1BAC                           __ptext5 1BC2  
                         __ptext6 1BD2                           __ptext7 1B7C  
                         __ptext8 1948                           __ptext9 1B62  
                   _interfaceInit 125E                         _T0CONbits 000FD5  
                         _bypMode 00EC                         _T1CONbits 000FCD  
                       _T2CONbits 000FCA                         _T3CONbits 000FB1  
                         _tapTime 0071                           _tapPrev 0034  
                       _T4CONbits 000F04                         _T5CONbits 000F14  
                      ??_flashLED 000D                           _switch1 004E  
                         _switch2 004C                           _switch3 004A  
                         _switch4 0048                           _switch5 0046  
               __end_of_sendParam 1392              end_of_initialization 15CA  
                      ??_killLEDs 00C5    __end_of_I2C1_Block_Read_EERPOM 0D04  
               checkSwitches@flag 0001                       ?_defaultLED 0001  
                      _targPreset 003E               updateLineLEDs@lineA 0007  
             updateLineLEDs@lineB 0009               updateLineLEDs@lineC 000B  
             i2___wmul@multiplier 0001              __size_of_processTaps 012E  
                 _serviceSwitches 03C6                 __end_of_setupI2C1 1B7C  
               __end_of_setupI2C2 198C                 __end_of_setupTMR0 1B94  
               __end_of_setupTMR1 1BE0                 __end_of_setupTMR2 1BD2  
               __end_of_setupTMR4 1BC2                        ??_setupADC 00C5  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE        __end_of_I2C1_Write_DigiPot 19CE  
                __CFG_FSCM$CSECMD 000000                  __CFG_DSBITEN$OFF 000000  
                   _interruptInit 1A74                 ?_updatePresetLEDs 0001  
                      _presetRead 0178                        _presetPend 003C  
                  ?_interfaceInit 0001                  __CFG_DSBOREN$OFF 000000  
                     _ADCHS0Lbits 000E86                ??_updatePresetLEDs 0003  
                __CFG_FOSC$FRCDIV 000000                       _ADCON1Hbits 000FC1  
                     _ADCON2Hbits 000E8D                       _ADCON1Lbits 000FC0  
                     _ADCON3Hbits 000E8B                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                   ??_clockSwitch 00C5                         _TRISDbits 000F95  
                     _ADCON3Lbits 000E8A                       _ADCON5Hbits 000E89  
                       _TRISEbits 000F96                         _TRISFbits 000F97  
                       _TRISGbits 000F98                         _TRISHbits 000F99  
                       _TRISJbits 000F9A                     _checkSwitches 15D4  
               __size_of_ADC_Read 012C                     ??_fetchPreset 00D5  
            __CFG_CINASEL$DEFAULT 000000                        _userParams 0100  
                     _CCP4CONbits 000F10                     ?_updateParams 00CB  
                   ?_updatePreset 00CB      I2C1_Block_Read_EERPOM@rdAddr 00CD  
                     ___ftmul@exp 0016                 __CFG_WPFP$WPFP255 000000  
                  ?_interruptInit 0001                    __end_of_absVal 1AD0  
                  __end_of___wmul 1A74                     __pidataCOMRAM 1BF8  
                  __end_of_tapLED 17E8       I2C1_Page_Write_EEPROM@bytes 00C9  
             __size_of_defaultLED 0018                  __CFG_DSWDTEN$OFF 000000  
                i2___wmul@product 0005               start_initialization 1546  
               __size_ofi2_absVal 0028                 __size_ofi2___wmul 0026  
                      _systemInit 1902                    ?_checkSwitches 0001  
                 _startupSequence 066A                     ??_maxTapCheck 0001  
         __end_of_serviceSwitches 066A                   _highPriorityISR 0008  
           __size_of_readControls 02A6               __end_of_clockSwitch 1B42  
         I2C1_Write_DigiPot@value 00C5                    ??_updateParams 00CD  
             __end_of_fetchPreset 16E4                       _pFlashCount 009B  
                  ??_updatePreset 00CF                          ??_absVal 00C7  
                        ??___wmul 00C9                    _currentTapTime 0058  
                   ??_bypassSetup 00C5                   ??_interfaceInit 00C5  
                     __pdataBANK0 00E2                       __pdataBANK1 0190  
                        ??_tapLED 0001                     _armFlashCount 0095  
                    _readControls 0120                 __size_of___awtoft 0038  
               __size_of___ftpack 00AE                       __pbssCOMRAM 0032  
                   __pcstackBANK0 00C5           I2C1_Page_Write_EEPROM@n 00CE  
               __size_of_flashLED 0162                      _paramAddress 0190  
               __size_of_killLEDs 0020             updatePresetLEDs@psNum 0001  
             __end_of_maxTapCheck 1902                   ??_interruptInit 00C5  
                       __pintcode 0008                        sendParam@n 0003  
                       absVal@val 00C5                          ?___awdiv 0001  
                        ?___ftmul 000D                 __size_of_setupADC 0090  
                        _ADCBUF14 000E62                      _tapDispCount 003A  
         __end_of_startupSequence 0900           __end_of_highPriorityISR 011C  
                __CFG_POSCMD$NONE 000000                   ??_checkSwitches 0001  
             __end_of_bypassSetup 1BF8                          _ADC_Read 0E32  
                     ?_systemInit 0001                       _PADCFG1bits 000F54  
                     _clockSwitch 1B1E                  ?_serviceSwitches 0001  
                     _fetchPreset 1660                         _parameter 00A7  
                       _tapOnTime 005A                      ??_defaultLED 00C5  
                  ___wmul@product 00C9                          _IOCFbits 000FD1  
                       _sendParam 12FC                          _IOCNbits 000F55  
                        _IOCPbits 000F56                          _PIE1bits 000F9D  
                        _PIE2bits 000FA0                          _PIE5bits 000FB7  
  I2C1_Block_Read_EERPOM@memValue 00CE                          i2u321_40 0A8C  
                        i2u241_40 1120                          i2u330_40 0BA4  
                        i2u331_40 0BA6                          i2u323_40 0AF0  
                        i2u316_40 1386                          i2u245_40 119E  
                        i2u326_40 0B50                          i2u350_45 0412  
                        i2u327_40 0B52                          i2u343_40 03F6  
                        i2u423_40 00BC                          i2u328_40 0B7A  
                        i2u360_40 04A0                          i2u344_45 03F8  
                        i2u329_40 0B7C                          i2u345_41 03FC  
                        _PIR1bits 000F9E                          i2u259_40 172A  
                        _PIR2bits 000FA1                          i2u372_40 05B4  
                        i2u364_40 04E8                          i2u356_40 0458  
                        i2u348_45 0408                          i2u349_40 0410  
                        i2u296_40 0D1A                          i2u368_40 0554  
                        i2u297_40 0D62                         _setupI2C1 1B62  
                       _setupI2C2 1948                  __CFG_WDTPS$32768 000000  
                       _presetAdd 00E2                         _setupTMR0 1B7C  
                       _setupTMR1 1BD2                         _setupTMR2 1BC2  
                       _setupTMR4 1BAC                          _UCONbits 000F75  
                    _tapTimeCount 0036                   fetchPreset@test 00D5  
                     _bounceCount 00A5                 ___wmul@multiplier 00C5  
                __CFG_SOSCSEL$DIG 000000       I2C1_Write_DigiPot@wrCommand 00C6  
                        i2_absVal 1AD0                          i2___wmul 1AF8  
              __end_of_defaultLED 1BAC              __end_of_updateParams 1426  
            __end_of_updatePreset 125E                        _CM1CONbits 000F53  
              _I2C1_Write_DigiPot 198C                        _CM2CONbits 000F38  
     I2C1_Block_Read_EERPOM@bytes 00C9                        _CM3CONbits 000F37  
                __CFG_WPDIS$WPDIS 000000           __size_of_updateLineLEDs 0090  
                     _maxTapCheck 18B4                         copy_data0 155A  
                       copy_data1 157A                         copy_data2 159A  
                   ??_processTaps 001C         __size_of_updatePresetLEDs 0078  
             ?_I2C1_Write_DigiPot 0001          ??_I2C1_Page_Write_EEPROM 00CB  
                      ?_sendParam 0001                        _ANCON1bits 000E47  
                      _ANCON2bits 000E46                        _ANCON3bits 000E45  
                        __Hrparam 0000                          __Lrparam 0000  
                      ?_setupI2C1 0001                        ?_setupI2C2 0001  
             __size_of_systemInit 0046                        ?_setupTMR0 0001  
                      ?_setupTMR1 0001                        ?_setupTMR2 0001  
                      ?_setupTMR4 0001                     ADC_Read@value 00C7  
                     _bypassSetup 1BEC                  __size_of___awdiv 0084  
           i2___wmul@multiplicand 0003                  __size_of___ftmul 00F4  
            ??_I2C1_Write_DigiPot 00C5                          ___awtoft 1A06  
                        ___ftpack 1110                  ?_startupSequence 0001  
                ?_highPriorityISR 0001                          _armFlash 0093  
                        __ptext10 1426                          __ptext11 1860  
                        __ptext20 1660                          __ptext12 1B42  
                        __ptext21 11BE                          __ptext13 1A74  
                        __ptext30 0D04                          __ptext22 1A3E  
                        __ptext14 125E                          __ptext31 1AD0  
                        __ptext23 0BCA                          __ptext15 1B94  
                        __ptext40 17E8                          __ptext32 18B4  
                        __ptext24 1AA4                          __ptext16 1B1E  
                        __ptext41 14B6                          __ptext33 0F5E  
                        __ptext25 198C                          __ptext17 1BEC  
                        __ptext42 15D4                          __ptext34 1A06  
                        __ptext26 1052                          __ptext18 0120  
                        __ptext35 1110                          __ptext19 0E32  
                        __ptext36 16E4                          __ptext28 1768  
                        __ptext37 12FC                          __ptext29 03C6  
                        __ptext38 0A68                          __ptext39 1AF8  
                        _flashLED 0A68                      _SSP1CON1bits 000FC6  
                    _SSP1CON2bits 000FC5                        _LCDCONbits 000ED9  
                    _SSP2CON1bits 000F19                      _SSP2CON2bits 000F18  
                    _SSP2CON3bits 000F39                          _killLEDs 1B42  
                     _OSCCON2bits 000F66                       _OSCCON3bits 000F65  
                     _OSCCON4bits 000F64                     __size_of_main 0168  
                        _tapAccum 0060                          _newTempo 006F  
                        _tapFlash 0097                __CFG_MSSPMSK1$MSK7 000000  
              __CFG_MSSPMSK2$MSK7 000000                          _savePend 009F  
             __end_of_processTaps 0E32                          _setupADC 1426  
                   _setupComplete 0069                          int$flags 005E  
                        _slotUsed 009D                        _MEMCONbits 000EE3  
                        main@diff 00DE                      _SSP1STATbits 000FC7  
      I2C1_Block_Read_EERPOM@data 00C7        I2C1_Block_Read_EERPOM@slot 00C5  
                      _INTCONbits 000FF2          ??_I2C1_Block_Read_EERPOM 00CB  
                        intlevel2 0000                       _shiftAction 0050  
                     ??_sendParam 0001   __size_of_I2C1_Page_Write_EEPROM 00BE  
                    _presetParams 01B0                        _OSCCONbits 000FD3  
                     ??_setupI2C1 00C5                       ??_setupI2C2 00C5  
I2C1_Block_Read_EERPOM@dummyWrite 00CF                       ??_setupTMR0 00C5  
                     ??_setupTMR1 00C5                       ??_setupTMR2 00C5  
                     ??_setupTMR4 00C5                 _mapPeripheralPins 1860  
           __size_of_updateParams 0094                ?_mapPeripheralPins 0001  
           __size_of_updatePreset 00A0             __end_of_interfaceInit 12FC  
                    _timeoutCount 006D               ??_mapPeripheralPins 00C5  
                    ??_systemInit 00C7                      fetchPreset@i 00D7  
                    ?_clockSwitch 0001                    _updateLineLEDs 14B6  
                    ?_fetchPreset 0001                  _updatePresetLEDs 17E8  
             __CFG_WPCFG$WPCFGDIS 000000                       _processTaps 0D04  
              __CFG_WINDIS$WDTSTD 000000                      _updateParams 1392  
          __CFG_DSWDTPS$DSWDTPS1F 000000         __end_of_mapPeripheralPins 18B4  
                    _updatePreset 11BE                  updateParams@slot 00CB  
